From ddd395ca74590a335de3e004660a42c279303920 Mon Sep 17 00:00:00 2001
From: Jarod Wilson <jarod@redhat.com>
Date: Thu, 22 Sep 2016 17:04:15 -0400
Subject: [netdrv] sfc: check async completer is !NULL before calling

Message-id: <20160922170415.3045-1-jarod@redhat.com>
Patchwork-id: 158323
O-Subject: [RHEL7 PATCH] sfc: check async completer is !NULL before calling
Bugzilla: 1368201
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Jeremy McNicoll <jmcnicol@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1368201
Brew: built locally, simple fix, don't want to tie up brew resources
Testing: verified by solarflare themselves

Patch is upstream on netdev:

commit 429baa6f0e1b9237a3667c3a5e8ca76051e6d0b7
Author: Bert Kenward <bkenward@solarflare.com>
Date:   Thu Sep 22 15:47:45 2016 +0100

    sfc: check async completer is !NULL before calling

    Add a NULL check before calling asynchronous MCDI completion functions
    during device removal.

    Fixes: 7014d7f6 ("sfc: allow asynchronous MCDI without completion function")
    Signed-off-by: Bert Kenward <bkenward@solarflare.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

This fixes a panic seen in RHEL7's kernel-3.10.0-506.el7, and was requested
explicitly by Solarflare as a result of their testing.

Signed-off-by: Jarod Wilson <jarod@redhat.com>
Signed-off-by: Rafael Aquini <aquini@redhat.com>

diff --git a/drivers/net/ethernet/sfc/mcdi.c b/drivers/net/ethernet/sfc/mcdi.c
index 57a4270..fa0011b 100644
--- a/drivers/net/ethernet/sfc/mcdi.c
+++ b/drivers/net/ethernet/sfc/mcdi.c
@@ -1156,7 +1156,8 @@ void efx_mcdi_flush_async(struct efx_nic *efx)
   * acquired locks in the wrong order.
   */
  list_for_each_entry_safe(async, next, &mcdi->async_list, list) {
-  async->complete(efx, async->cookie, -ENETDOWN, NULL, 0);
+  if (async->complete)
+   async->complete(efx, async->cookie, -ENETDOWN, NULL, 0);
   list_del(&async->list);
   kfree(async);
  }
-- 
1.7.1