From 4fd8f8c4fc8bce4586ceaf8c193757d0b69706ca Mon Sep 17 00:00:00 2001
From: David Gibson <dgibson@redhat.com>
Date: Wed, 14 Sep 2016 06:19:26 -0400
Subject: [powerpc] kvm: Implement kvm_arch_intc_initialized() for PPC

Message-id: <1473833966-25009-3-git-send-email-dgibson@redhat.com>
Patchwork-id: 157812
O-Subject: [RHEL-7.3 kernel PATCH 2/2] KVM: PPC: Implement kvm_arch_intc_initialized() for PPC
Bugzilla: 1375778
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Laurent Vivier <lvivier@redhat.com>
RH-Acked-by: Thomas Huth <thuth@redhat.com>

From: David Gibson <david@gibson.dropbear.id.au>

It doesn't make sense to create irqfds for a VM that doesn't have
in-kernel interrupt controller emulation.  There is an existing
interface for architecture code to tell the irqfd code whether or
not any interrupt controller has been initialized, called
kvm_arch_intc_initialized(), so let's implement that for powerpc.

Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
(cherry picked from commit 34a75b0f63356097ae9f706d64a793934891002f)
Signed-off-by: Rafael Aquini <aquini@redhat.com>

Conflicts:
 arch/powerpc/include/asm/kvm_host.h

Contextual conflict resolved for downstream.

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1375778

Signed-off-by: David Gibson <dgibson@redhat.com>

diff --git a/arch/powerpc/include/asm/kvm_host.h b/arch/powerpc/include/asm/kvm_host.h
index 0a6d1c7..8841a03 100644
--- a/arch/powerpc/include/asm/kvm_host.h
+++ b/arch/powerpc/include/asm/kvm_host.h
@@ -40,6 +40,8 @@
 #define KVM_MAX_VCORES  NR_CPUS
 #define KVM_USER_MEM_SLOTS 512
 
+#define __KVM_HAVE_ARCH_INTC_INITIALIZED
+
 #ifdef CONFIG_KVM_MMIO
 #define KVM_COALESCED_MMIO_PAGE_OFFSET 1
 #endif
diff --git a/arch/powerpc/kvm/powerpc.c b/arch/powerpc/kvm/powerpc.c
index 0fc79a4..64a0fde 100644
--- a/arch/powerpc/kvm/powerpc.c
+++ b/arch/powerpc/kvm/powerpc.c
@@ -1080,6 +1080,19 @@ static int kvm_vcpu_ioctl_enable_cap(struct kvm_vcpu *vcpu,
  return r;
 }
 
+bool kvm_arch_intc_initialized(struct kvm *kvm)
+{
+#ifdef CONFIG_KVM_MPIC
+ if (kvm->arch.mpic)
+  return true;
+#endif
+#ifdef CONFIG_KVM_XICS
+ if (kvm->arch.xics)
+  return true;
+#endif
+ return false;
+}
+
 int kvm_arch_vcpu_ioctl_get_mpstate(struct kvm_vcpu *vcpu,
                                     struct kvm_mp_state *mp_state)
 {
-- 
1.7.1