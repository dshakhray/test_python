From 169a4f1d4a6aca2dd549d4990e56bd8aba6a84bf Mon Sep 17 00:00:00 2001
From: Lyude Paul <cpaul@redhat.com>
Date: Thu, 15 Sep 2016 17:56:43 -0400
Subject: [drm] i915/gen6+: Interpret mailbox error flags

Message-id: <1473962216-29060-3-git-send-email-cpaul@redhat.com>
Patchwork-id: 157887
O-Subject: [RHEL7.3][RESEND PATCH v2 02/15] drm/i915/gen6+: Interpret mailbox error flags
Bugzilla: 1341633 1355776
RH-Acked-by: Adam Jackson <ajax@redhat.com>
RH-Acked-by: Rob Clark <rclark@redhat.com>

From: Lyude Paul <cpaul@redhat.com>

Upstream: since v4.8

commit 5bc6abe7674d9cf41dbcdaaf98a19184da181439

Author: Lyude <cpaul@redhat.com>
Date:   Wed Aug 17 15:55:53 2016 -0400

    drm/i915/gen6+: Interpret mailbox error flags

    In order to add proper support for the SAGV, we need to be able to know
    what the cause of a failure to change the SAGV through the pcode mailbox
    was. The reasoning for this is that some very early pre-release Skylake
    machines don't actually allow you to control the SAGV on them, and
    indicate an invalid mailbox command was sent.

    This also might come in handy in the future for debugging.

    Changes since v1:
     - Add functions for interpreting gen6 mailbox error codes along with
       gen7+ error codes, and actually interpret those codes properly
     - Renamed patch to reflect new behavior

    Signed-off-by: Lyude <cpaul@redhat.com>
    Cc: Matt Roper <matthew.d.roper@intel.com>
    Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Ville Syrjl <ville.syrjala@linux.intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1471463761-26796-2-git-send-email-cpaul@redhat.com
    [mlankhorst: -ENOSYS -> -ENXIO for checkpatch]

    (cherry picked from commit 87660502f1a4d51fb043e89a45d30c9917787c22)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>

RHBZ: 1341633
RHBZ: 1355776
Signed-off-by: Lyude Paul <cpaul@redhat.com>
Signed-off-by: Lyude <cpaul@redhat.com>
Signed-off-by: Rafael Aquini <aquini@redhat.com>

diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index 8d01caf..edfa10d 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -7030,6 +7030,15 @@ enum skl_disp_power_wells {
 
 #define GEN6_PCODE_MAILBOX   _MMIO(0x138124)
 #define   GEN6_PCODE_READY   (1<<31)
+#define   GEN6_PCODE_ERROR_MASK   0xFF
+#define     GEN6_PCODE_SUCCESS   0x0
+#define     GEN6_PCODE_ILLEGAL_CMD  0x1
+#define     GEN6_PCODE_MIN_FREQ_TABLE_GT_RATIO_OUT_OF_RANGE 0x2
+#define     GEN6_PCODE_TIMEOUT   0x3
+#define     GEN6_PCODE_UNIMPLEMENTED_CMD 0xFF
+#define     GEN7_PCODE_TIMEOUT   0x2
+#define     GEN7_PCODE_ILLEGAL_DATA  0x3
+#define     GEN7_PCODE_MIN_FREQ_TABLE_GT_RATIO_OUT_OF_RANGE 0x10
 #define   GEN6_PCODE_WRITE_RC6VIDS  0x4
 #define   GEN6_PCODE_READ_RC6VIDS  0x5
 #define     GEN6_ENCODE_RC6_VID(mv)  (((mv) - 245) / 5)
diff --git a/drivers/gpu/drm/i915/intel_pm.c b/drivers/gpu/drm/i915/intel_pm.c
index 8c706a7..56e5482 100644
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@ -7373,8 +7373,53 @@ void intel_init_pm(struct drm_device *dev)
  }
 }
 
+static inline int gen6_check_mailbox_status(struct drm_i915_private *dev_priv)
+{
+ uint32_t flags =
+  I915_READ_FW(GEN6_PCODE_MAILBOX) & GEN6_PCODE_ERROR_MASK;
+
+ switch (flags) {
+ case GEN6_PCODE_SUCCESS:
+  return 0;
+ case GEN6_PCODE_UNIMPLEMENTED_CMD:
+ case GEN6_PCODE_ILLEGAL_CMD:
+  return -ENXIO;
+ case GEN6_PCODE_MIN_FREQ_TABLE_GT_RATIO_OUT_OF_RANGE:
+  return -EOVERFLOW;
+ case GEN6_PCODE_TIMEOUT:
+  return -ETIMEDOUT;
+ default:
+  MISSING_CASE(flags)
+  return 0;
+ }
+}
+
+static inline int gen7_check_mailbox_status(struct drm_i915_private *dev_priv)
+{
+ uint32_t flags =
+  I915_READ_FW(GEN6_PCODE_MAILBOX) & GEN6_PCODE_ERROR_MASK;
+
+ switch (flags) {
+ case GEN6_PCODE_SUCCESS:
+  return 0;
+ case GEN6_PCODE_ILLEGAL_CMD:
+  return -ENXIO;
+ case GEN7_PCODE_TIMEOUT:
+  return -ETIMEDOUT;
+ case GEN7_PCODE_ILLEGAL_DATA:
+  return -EINVAL;
+ case GEN7_PCODE_MIN_FREQ_TABLE_GT_RATIO_OUT_OF_RANGE:
+  return -EOVERFLOW;
+ default:
+  MISSING_CASE(flags);
+  return 0;
+ }
+}
+
 int sandybridge_pcode_read(struct drm_i915_private *dev_priv, u32 mbox, u32 *val)
 {
+ int status;
+
  WARN_ON(!mutex_is_locked(&dev_priv->rps.hw_lock));
 
  if (I915_READ(GEN6_PCODE_MAILBOX) & GEN6_PCODE_READY) {
@@ -7395,11 +7440,25 @@ int sandybridge_pcode_read(struct drm_i915_private *dev_priv, u32 mbox, u32 *val
  *val = I915_READ(GEN6_PCODE_DATA);
  I915_WRITE(GEN6_PCODE_DATA, 0);
 
+ if (dev_priv->info.gen > 6)
+  status = gen7_check_mailbox_status(dev_priv);
+ else
+  status = gen6_check_mailbox_status(dev_priv);
+
+ if (status) {
+  DRM_DEBUG_DRIVER("warning: pcode (read) mailbox access failed: %d\n",
+     status);
+  return status;
+ }
+
  return 0;
 }
 
-int sandybridge_pcode_write(struct drm_i915_private *dev_priv, u32 mbox, u32 val)
+int sandybridge_pcode_write(struct drm_i915_private *dev_priv,
+       u32 mbox, u32 val)
 {
+ int status;
+
  WARN_ON(!mutex_is_locked(&dev_priv->rps.hw_lock));
 
  if (I915_READ(GEN6_PCODE_MAILBOX) & GEN6_PCODE_READY) {
@@ -7418,6 +7477,17 @@ int sandybridge_pcode_write(struct drm_i915_private *dev_priv, u32 mbox, u32 val
 
  I915_WRITE(GEN6_PCODE_DATA, 0);
 
+ if (dev_priv->info.gen > 6)
+  status = gen7_check_mailbox_status(dev_priv);
+ else
+  status = gen6_check_mailbox_status(dev_priv);
+
+ if (status) {
+  DRM_DEBUG_DRIVER("warning: pcode (write) mailbox access failed: %d\n",
+     status);
+  return status;
+ }
+
  return 0;
 }
 
-- 
1.7.1