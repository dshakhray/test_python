From 2167b605c6257827c1233de415fc0aa4b9dfb9a9 Mon Sep 17 00:00:00 2001
From: Lyude Paul <cpaul@redhat.com>
Date: Tue, 30 Aug 2016 16:58:15 -0400
Subject: [drm] i915/vlv: Disable HPD in valleyview_crt_detect_hotplug()

Message-id: <1472576296-10515-4-git-send-email-cpaul@redhat.com>
Patchwork-id: 157468
O-Subject: [PATCH 3/4] drm/i915/vlv: Disable HPD in valleyview_crt_detect_hotplug()
Bugzilla: 1277863
RH-Acked-by: Dave Airlie <airlied@redhat.com>
RH-Acked-by: Adam Jackson <ajax@redhat.com>
RH-Acked-by: Rob Clark <rclark@redhat.com>

From: Lyude Paul <cpaul@redhat.com>

Upstream: since v4.8

commit 21842ea84f161ae37ba25f0250c377fd19c5b307

Author:     Lyude <cpaul@redhat.com>
AuthorDate: Tue Jun 21 17:03:43 2016 -0400
Commit:     Daniel Vetter <daniel.vetter@ffwll.ch>
CommitDate: Tue Jul 19 09:17:09 2016 +0200

    drm/i915/vlv: Disable HPD in valleyview_crt_detect_hotplug()

    One of the things preventing us from using polling is the fact that
    calling valleyview_crt_detect_hotplug() when there's a VGA cable
    connected results in sending another hotplug. With polling enabled when
    HPD is disabled, this results in a scenario like this:

    - We enable power wells and reset the ADPA
    - output_poll_exec does force probe on VGA, triggering a hpd
    - HPD handler waits for poll to unlock dev->mode_config.mutex
    - output_poll_exec shuts off the ADPA, unlocks dev->mode_config.mutex
    - HPD handler runs, resets ADPA and brings us back to the start

    This results in an endless irq storm getting sent from the ADPA
    whenever a VGA connector gets detected in the middle of polling.

    Somewhat based off of the "drm/i915: Disable CRT HPD around force
    trigger" patch Ville Syrjaelae sent a while back

    Cc: stable@vger.kernel.org
    Cc: Ville Syrjaelae <ville.syrjala@linux.intel.com>
    Signed-off-by: Lyude <cpaul@redhat.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    (cherry picked from commit b236d7c8421969ac0693fc571e47ee5c2a62fb90)

RHBZ: 1277863
Signed-off-by: Lyude Paul <cpaul@redhat.com>
Signed-off-by: Lyude <cpaul@redhat.com>
Signed-off-by: Rafael Aquini <aquini@redhat.com>

diff --git a/drivers/gpu/drm/i915/i915_drv.h b/drivers/gpu/drm/i915/i915_drv.h
index aa9dc59..f398096 100644
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@ -2781,6 +2781,8 @@ void intel_hpd_init(struct drm_i915_private *dev_priv);
 void intel_hpd_init_work(struct drm_i915_private *dev_priv);
 void intel_hpd_cancel_work(struct drm_i915_private *dev_priv);
 bool intel_hpd_pin_to_port(enum hpd_pin pin, enum port *port);
+bool intel_hpd_disable(struct drm_i915_private *dev_priv, enum hpd_pin pin);
+void intel_hpd_enable(struct drm_i915_private *dev_priv, enum hpd_pin pin);
 
 /* i915_irq.c */
 void i915_queue_hangcheck(struct drm_device *dev);
diff --git a/drivers/gpu/drm/i915/intel_crt.c b/drivers/gpu/drm/i915/intel_crt.c
index a556094..6443c79 100644
--- a/drivers/gpu/drm/i915/intel_crt.c
+++ b/drivers/gpu/drm/i915/intel_crt.c
@@ -329,10 +329,25 @@ static bool valleyview_crt_detect_hotplug(struct drm_connector *connector)
  struct drm_device *dev = connector->dev;
  struct intel_crt *crt = intel_attached_crt(connector);
  struct drm_i915_private *dev_priv = dev->dev_private;
+ bool reenable_hpd;
  u32 adpa;
  bool ret;
  u32 save_adpa;
 
+ /*
+  * Doing a force trigger causes a hpd interrupt to get sent, which can
+  * get us stuck in a loop if we're polling:
+  *  - We enable power wells and reset the ADPA
+  *  - output_poll_exec does force probe on VGA, triggering a hpd
+  *  - HPD handler waits for poll to unlock dev->mode_config.mutex
+  *  - output_poll_exec shuts off the ADPA, unlocks
+  *    dev->mode_config.mutex
+  *  - HPD handler runs, resets ADPA and brings us back to the start
+  *
+  * Just disable HPD interrupts here to prevent this
+  */
+ reenable_hpd = intel_hpd_disable(dev_priv, crt->base.hpd_pin);
+
  save_adpa = adpa = I915_READ(crt->adpa_reg);
  DRM_DEBUG_KMS("trigger hotplug detect cycle: adpa=0x%x\n", adpa);
 
@@ -355,6 +370,9 @@ static bool valleyview_crt_detect_hotplug(struct drm_connector *connector)
 
  DRM_DEBUG_KMS("valleyview hotplug adpa=0x%x, result %d\n", adpa, ret);
 
+ if (reenable_hpd)
+  intel_hpd_enable(dev_priv, crt->base.hpd_pin);
+
  return ret;
 }
 
diff --git a/drivers/gpu/drm/i915/intel_hotplug.c b/drivers/gpu/drm/i915/intel_hotplug.c
index bee6730..0c9ee3f 100644
--- a/drivers/gpu/drm/i915/intel_hotplug.c
+++ b/drivers/gpu/drm/i915/intel_hotplug.c
@@ -511,3 +511,30 @@ void intel_hpd_cancel_work(struct drm_i915_private *dev_priv)
  cancel_work_sync(&dev_priv->hotplug.hotplug_work);
  cancel_delayed_work_sync(&dev_priv->hotplug.reenable_work);
 }
+
+bool intel_hpd_disable(struct drm_i915_private *dev_priv, enum hpd_pin pin)
+{
+ bool ret = false;
+
+ if (pin == HPD_NONE)
+  return false;
+
+ spin_lock_irq(&dev_priv->irq_lock);
+ if (dev_priv->hotplug.stats[pin].state == HPD_ENABLED) {
+  dev_priv->hotplug.stats[pin].state = HPD_DISABLED;
+  ret = true;
+ }
+ spin_unlock_irq(&dev_priv->irq_lock);
+
+ return ret;
+}
+
+void intel_hpd_enable(struct drm_i915_private *dev_priv, enum hpd_pin pin)
+{
+ if (pin == HPD_NONE)
+  return;
+
+ spin_lock_irq(&dev_priv->irq_lock);
+ dev_priv->hotplug.stats[pin].state = HPD_ENABLED;
+ spin_unlock_irq(&dev_priv->irq_lock);
+}
-- 
1.7.1