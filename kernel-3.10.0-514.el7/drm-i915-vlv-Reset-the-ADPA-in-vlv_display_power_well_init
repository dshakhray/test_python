From df584b14dbb13c70532f7946a1e07a7837b5236d Mon Sep 17 00:00:00 2001
From: Lyude Paul <cpaul@redhat.com>
Date: Tue, 30 Aug 2016 16:58:14 -0400
Subject: [drm] i915/vlv: Reset the ADPA in vlv_display_power_well_init()

Message-id: <1472576296-10515-3-git-send-email-cpaul@redhat.com>
Patchwork-id: 157467
O-Subject: [PATCH 2/4] drm/i915/vlv: Reset the ADPA in vlv_display_power_well_init()
Bugzilla: 1277863
RH-Acked-by: Dave Airlie <airlied@redhat.com>
RH-Acked-by: Adam Jackson <ajax@redhat.com>
RH-Acked-by: Rob Clark <rclark@redhat.com>

From: Lyude Paul <cpaul@redhat.com>

Upstream: since v4.8

commit 4c732e6ee9e71903934d75b12a021eb3520b6197

Author:     Lyude <cpaul@redhat.com>
AuthorDate: Tue Jun 21 17:03:42 2016 -0400
Commit:     Daniel Vetter <daniel.vetter@ffwll.ch>
CommitDate: Tue Jul 19 09:16:56 2016 +0200

    drm/i915/vlv: Reset the ADPA in vlv_display_power_well_init()

    While VGA hotplugging worked(ish) before, it looks like that was mainly
    because we'd unintentionally enable it in
    valleyview_crt_detect_hotplug() when we did a force trigger. This
    doesn't work reliably enough because whenever the display powerwell on
    vlv gets disabled, the values set in VLV_ADPA get cleared and
    consequently VGA hotplugging gets disabled. This causes bugs such as one
    we found on an Intel NUC, where doing the following sequence of
    hotplugs:

          - Disconnect all monitors
          - Connect VGA
          - Disconnect VGA
          - Connect HDMI

    Would result in VGA hotplugging becoming disabled, due to the powerwells
    getting toggled in the process of connecting HDMI.

    Changes since v3:
     - Expose intel_crt_reset() through intel_drv.h and call that in
       vlv_display_power_well_init() instead of
       encoder->base.funcs->reset(&encoder->base);

    Changes since v2:
     - Use intel_encoder structs instead of drm_encoder structs

    Changes since v1:
     - Instead of handling the register writes ourself, we just reuse
       intel_crt_detect()
     - Instead of resetting the ADPA during display IRQ installation, we now
       reset them in vlv_display_power_well_init()

    Cc: stable@vger.kernel.org
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Lyude <cpaul@redhat.com>
    Reviewed-by: Ville Syrjaelae <ville.syrjala@linux.intel.com>
    [danvet: Rebase over dev_priv/drm_device embedding.]
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    (cherry picked from commit 9504a89247595b6c066c68aea0c34af1fc78d021)

RHBZ: 1277863
Signed-off-by: Lyude Paul <cpaul@redhat.com>
Signed-off-by: Lyude <cpaul@redhat.com>
Signed-off-by: Rafael Aquini <aquini@redhat.com>

diff --git a/drivers/gpu/drm/i915/intel_crt.c b/drivers/gpu/drm/i915/intel_crt.c
index 89dd0e0..a556094 100644
--- a/drivers/gpu/drm/i915/intel_crt.c
+++ b/drivers/gpu/drm/i915/intel_crt.c
@@ -713,7 +713,7 @@ static int intel_crt_set_property(struct drm_connector *connector,
  return 0;
 }
 
-static void intel_crt_reset(struct drm_encoder *encoder)
+void intel_crt_reset(struct drm_encoder *encoder)
 {
  struct drm_device *dev = encoder->dev;
  struct drm_i915_private *dev_priv = dev->dev_private;
diff --git a/drivers/gpu/drm/i915/intel_drv.h b/drivers/gpu/drm/i915/intel_drv.h
index 3242d9a..5923f8e 100644
--- a/drivers/gpu/drm/i915/intel_drv.h
+++ b/drivers/gpu/drm/i915/intel_drv.h
@@ -1048,7 +1048,7 @@ void gen8_irq_power_well_pre_disable(struct drm_i915_private *dev_priv,
 
 /* intel_crt.c */
 void intel_crt_init(struct drm_device *dev);
-
+void intel_crt_reset(struct drm_encoder *encoder);
 
 /* intel_ddi.c */
 void intel_ddi_clk_select(struct intel_encoder *encoder,
diff --git a/drivers/gpu/drm/i915/intel_runtime_pm.c b/drivers/gpu/drm/i915/intel_runtime_pm.c
index 6e54d97..c6f129b 100644
--- a/drivers/gpu/drm/i915/intel_runtime_pm.c
+++ b/drivers/gpu/drm/i915/intel_runtime_pm.c
@@ -964,6 +964,7 @@ static bool vlv_power_well_enabled(struct drm_i915_private *dev_priv,
 
 static void vlv_display_power_well_init(struct drm_i915_private *dev_priv)
 {
+ struct intel_encoder *encoder;
  enum pipe pipe;
 
  /*
@@ -997,6 +998,12 @@ static void vlv_display_power_well_init(struct drm_i915_private *dev_priv)
 
  intel_hpd_init(dev_priv);
 
+ /* Re-enable the ADPA, if we have one */
+ for_each_intel_encoder(dev_priv->dev, encoder) {
+  if (encoder->type == INTEL_OUTPUT_ANALOG)
+   intel_crt_reset(&encoder->base);
+ }
+
  i915_redisable_vga_power_on(dev_priv->dev);
 }
 
-- 
1.7.1