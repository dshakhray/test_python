From 85268dd30e49f840db72b5279f015f9774aa0d43 Mon Sep 17 00:00:00 2001
From: Andreas Grunbacher <agruenba@redhat.com>
Date: Mon, 26 Sep 2016 20:00:26 -0400
Subject: [fs] gfs2: Update file times after grabbing glock

Message-id: <1474920027-7362-1-git-send-email-agruenba@redhat.com>
Patchwork-id: 158375
O-Subject: [RHEL7.3 fs PATCH] gfs2: Update file times after grabbing glock
Bugzilla: 1379447
RH-Acked-by: Steven Whitehouse <swhiteho@redhat.com>
RH-Acked-by: Robert S Peterson <rpeterso@redhat.com>

Bugzilla: 1379447
Upstream Status: Backport of commit in gfs2 for-next
Build Info: https://brewweb.engineering.redhat.com/brew/taskinfo?taskID=11813597

https://git.kernel.org/cgit/linux/kernel/git/gfs2/linux-gfs2.git/commit/?h=for-next&id=d7c436cd605eb203ecf64c40f9b18aa610ac0248

In gfs2_page_mkwrite, grab the inode glock in EX mode before calling
file_update_time: grabbing the lock may result in a call to
gfs2_dinode_in, which will reset the file times to their on-disk state.

Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
Signed-off-by: Rafael Aquini <aquini@redhat.com>

diff --git a/fs/gfs2/file.c b/fs/gfs2/file.c
index 23cb325..af0d418 100644
--- a/fs/gfs2/file.c
+++ b/fs/gfs2/file.c
@@ -402,9 +402,6 @@ static int gfs2_page_mkwrite(struct vm_area_struct *vma, struct vm_fault *vmf)
 
  sb_start_pagefault(inode->i_sb);
 
- /* Update file times before taking page lock */
- file_update_time(vma->vm_file);
-
  ret = gfs2_rsqa_alloc(ip);
  if (ret)
   goto out;
@@ -416,6 +413,9 @@ static int gfs2_page_mkwrite(struct vm_area_struct *vma, struct vm_fault *vmf)
  if (ret)
   goto out_uninit;
 
+ /* Update file times before taking page lock */
+ file_update_time(vma->vm_file);
+
  set_bit(GLF_DIRTY, &ip->i_gl->gl_flags);
  set_bit(GIF_SW_PAGED, &ip->i_flags);
 
-- 
1.7.1