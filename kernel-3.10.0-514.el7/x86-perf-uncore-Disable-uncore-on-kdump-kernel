From d7aa19f928ad6e65d7bbf537d9ca34140dc13739 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Thu, 29 Sep 2016 17:32:15 -0400
Subject: [x86] perf/uncore: Disable uncore on kdump kernel

Message-id: <1475170335-22762-1-git-send-email-jolsa@redhat.com>
Patchwork-id: 158445
O-Subject: [PATCH RHEL7.3 BZ1379569] perf/x86/intel/uncore: Disable uncore on kdump kernel
Bugzilla: 1379569
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Pratyush Anand <panand@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1379569
https://bugzilla.redhat.com/show_bug.cgi?id=1379569

upstream
========
RHEL7.3 specific

description
===========
We've got a report of kdump kernel panic in perf uncore
code. The reason is that current code depends on properly
updated ACPI tables, which is not the case if the CPU is
hot plugged.

Following sequence of actions will make the kdump kernel
to panic:

  - hotplug CPU
  - taskset -c {hot-added-cpu-number} echo c > /proc/sysrq-trigger

The smpboot code will not initialize cpu's logical_proc_id
and the uncore code will crash as it depends on it.

  RIP: 0010:[<ffffffff81012ab2>]  [<ffffffff81012ab2>] uncore_change_context+0xe2/0x190
  ...
  Call Trace:
   [<ffffffff8116f410>] ? perf_pmu_register+0x260/0x390
   [<ffffffff81013356>] uncore_event_init_cpu+0x56/0x70
   [<ffffffff81b0f51e>] intel_uncore_init+0x2d0/0x40d
   [<ffffffff81b0f24e>] ? uncore_cpu_setup+0x18/0x18
   [<ffffffff810020e8>] do_one_initcall+0xb8/0x230
   [<ffffffff81b0a1f8>] kernel_init_freeable+0x17d/0x21c
   [<ffffffff81b099db>] ? initcall_blacklist+0xb0/0xb0
   [<ffffffff816742d0>] ? rest_init+0x80/0x80
   [<ffffffff816742de>] kernel_init+0xe/0xf0
   [<ffffffff81696398>] ret_from_fork+0x58/0x90

This is also an issue in upstream code. While working on fix
we need RHEL7 workaround at this point and it's been tested
that disabling perf uncore code works for partner. The kdump
system does not need perf uncore at all.

Signed-off-by: Rafael Aquini <aquini@redhat.com>

diff --git a/arch/x86/events/intel/uncore.c b/arch/x86/events/intel/uncore.c
index be4bd84..77ec6c0 100644
--- a/arch/x86/events/intel/uncore.c
+++ b/arch/x86/events/intel/uncore.c
@@ -1,3 +1,4 @@
+#include <linux/crash_dump.h>
 #include "uncore.h"
 
 static struct intel_uncore_type *empty_uncore[] = { NULL, };
@@ -1390,6 +1391,9 @@ static int __init intel_uncore_init(void)
  if (cpu_has_hypervisor)
   return -ENODEV;
 
+ if (is_kdump_kernel())
+  return -ENODEV;
+
  max_packages = topology_max_packages();
 
  pret = uncore_pci_init();
-- 
1.7.1