From b09143c270539b143794b2d6faaef2f2488ab7c1 Mon Sep 17 00:00:00 2001
From: Jerome Marchand <jmarchan@redhat.com>
Date: Fri, 23 Sep 2016 14:14:32 -0400
Subject: [mm] cgroup: fix hugetlb_cgroup_read()

Message-id: <1474640072-23386-1-git-send-email-jmarchan@redhat.com>
Patchwork-id: 158334
O-Subject: [RHEL7.3 PATCH] mm: cgroup: fix hugetlb_cgroup_read()
Bugzilla: 1378236
RH-Acked-by: Larry Woodman <lwoodman@redhat.com>
RH-Acked-by: Lauro Ramos Venancio <lvenanci@redhat.com>
RH-Acked-by: Rafael Aquini <aquini@redhat.com>

Bugzilla:
https://bugzilla.redhat.com/show_bug.cgi?id=1378236

Brew build:
https://brewweb.engineering.redhat.com/brew/taskinfo?taskID=11804850

Upstream status:
Upstream is unaffected.

commit 733066bc7d ("[mm] hugetlb_cgroup: convert to lockless page
counters") broke the switch statement in hugetlb_cgroup_read(): break
instruction are missing. Because of that, sysfs value from hugetlb
cgroup can't be read. This patch fix the broken statement.

Test status:
I can read the sysfs value now and I made a quick hugetlb cgroup test:
create a cgroup, set a a limit and verify that the limit is indeed
enforced. I don't know if any test suite provides testing of hugetlb
cgroups. LTP doesn't.

Signed-off-by: Jerome Marchand <jmarchan@redhat.com>
Signed-off-by: Rafael Aquini <aquini@redhat.com>

diff --git a/mm/hugetlb_cgroup.c b/mm/hugetlb_cgroup.c
index 2f8770f..42e59aa 100644
--- a/mm/hugetlb_cgroup.c
+++ b/mm/hugetlb_cgroup.c
@@ -271,12 +271,16 @@ static ssize_t hugetlb_cgroup_read(struct cgroup *cgroup, struct cftype *cft,
  switch (MEMFILE_ATTR(cft->private)) {
  case RES_USAGE:
   val = (u64)page_counter_read(counter) * PAGE_SIZE;
+  break;
  case RES_LIMIT:
   val = (u64)counter->limit * PAGE_SIZE;
+  break;
  case RES_MAX_USAGE:
   val = (u64)counter->watermark * PAGE_SIZE;
+  break;
  case RES_FAILCNT:
-  return counter->failcnt;
+  val = counter->failcnt;
+  break;
  default:
   BUG();
  }
-- 
1.7.1