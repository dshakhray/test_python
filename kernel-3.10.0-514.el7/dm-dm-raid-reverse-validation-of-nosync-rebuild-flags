From 55ea8c34637bf862b924cab8ad238b536eb8ef12 Mon Sep 17 00:00:00 2001
From: Heinz Mauelshagen <heinzm@redhat.com>
Date: Tue, 20 Sep 2016 17:14:05 -0400
Subject: [dm] dm-raid: reverse validation of nosync+rebuild flags

Message-id: <1474391645-21118-1-git-send-email-heinzm@redhat.com>
Patchwork-id: 157945
O-Subject: [RHEL 7.3 PATCH] dm raid: reverse validation of nosync+rebuild flags
Bugzilla: 1371717
RH-Acked-by: David Teigland <teigland@redhat.com>
RH-Acked-by: Jonathan E Brassow <jbrassow@redhat.com>
RH-Acked-by: Mike Snitzer <snitzer@redhat.com>

From: Heinz Mauelshagen <heinzm@redhat.com>

The dm-raid target rejects passing in the nosync flag together
with any rebuild flag tuppels in the constructor because that
combination can leave partially uninitialized raid legs behind,
thus causing reduced resilience and potential data loss.

This behavioural change got introduced with commit
2120162bd361524cf4ead839cd9acc4dee051164 and is in
since kernel-3.10.0-480.el7.

It leads to a regression in QE testing though which we are unlikely
to be able to address in lvm2 because of testing constraints.

Thus this patch reverses the rejection of aforementioned flag
combination, reintroducing the longstanding old behaviour which
we'll be fixing in RHEL 7.4.

BZ: 1371717

Signed-off-by: Heinz Mauelshagen <heinzm@redhat.com>
Signed-off-by: Rafael Aquini <aquini@redhat.com>

diff --git a/drivers/md/dm-raid.c b/drivers/md/dm-raid.c
index 05a1df9..21a0c95 100644
--- a/drivers/md/dm-raid.c
+++ b/drivers/md/dm-raid.c
@@ -1316,10 +1316,10 @@ static int parse_raid_params(struct raid_set *rs, struct dm_arg_set *as,
   return -EINVAL;
  }
 
+ /* HM FIXME: reject nosync again once userspace copes with it (rhbz1371717) */
  if (test_bit(__CTR_FLAG_REBUILD, &rs->ctr_flags) &&
-     (test_bit(__CTR_FLAG_SYNC, &rs->ctr_flags) ||
-      test_bit(__CTR_FLAG_NOSYNC, &rs->ctr_flags))) {
-  rs->ti->error = "sync/nosync and rebuild are mutually exclusive";
+     test_bit(__CTR_FLAG_SYNC, &rs->ctr_flags)) {
+  rs->ti->error = "sync and rebuild are mutually exclusive";
   return -EINVAL;
  }
 
-- 
1.7.1