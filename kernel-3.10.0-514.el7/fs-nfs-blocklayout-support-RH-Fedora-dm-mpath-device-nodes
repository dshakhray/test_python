From b09e0c7976b5530eb363611572c7874dde7e9a6a Mon Sep 17 00:00:00 2001
From: Benjamin Coddington <bcodding@redhat.com>
Date: Wed, 31 Aug 2016 15:20:24 -0400
Subject: [fs] nfs/blocklayout: support RH/Fedora dm-mpath device nodes

Message-id: <2e4cfb8e4e11cc53a62a0293d05f2e36dfc726f8.1472656591.git.bcodding@redhat.com>
Patchwork-id: 157492
O-Subject: [RHEL7 PATCH fs 3/4] nfs/blocklayout: support RH/Fedora dm-mpath device nodes
Bugzilla: 1356796
RH-Acked-by: Jeff Layton <jlayton@redhat.com>
RH-Acked-by: Steve Dickson <SteveD@redhat.com>
RH-Acked-by: J. Bruce Fields <bfields@redhat.com>

From: Christoph Hellwig <hch@lst.de>

Instead of reusing the wwn-* names for multipath devices nodes RHEL and
Fedora introduce new dm-mpath-uuid-* nodes with a slightly different
naming scheme.  Try these names first to ensure we always get a
multipath-capable device if it exists.

Signed-off-by: Christoph Hellwig <hch@lst.de>
Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
Upstream-id: 11487ddbdb12c36e094bedcc5c906ff219905a03
Brew: https://brewweb.engineering.redhat.com/brew/taskinfo?taskID=11677078
Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1356796
Signed-off-by: Benjamin Coddington <bcodding@redhat.com>
Signed-off-by: Rafael Aquini <aquini@redhat.com>

diff --git a/fs/nfs/blocklayout/dev.c b/fs/nfs/blocklayout/dev.c
index ea70883..436bb30 100644
--- a/fs/nfs/blocklayout/dev.c
+++ b/fs/nfs/blocklayout/dev.c
@@ -312,6 +312,28 @@ bl_open_udev_path(struct pnfs_block_volume *v)
  return bdev;
 }
 
+/*
+ * Try to open the RH/Fedora specific dm-mpath udev path for this WWN, as the
+ * wwn- links will only point to the first discovered SCSI device there.
+ */
+static struct block_device *
+bl_open_dm_mpath_udev_path(struct pnfs_block_volume *v)
+{
+ struct block_device *bdev;
+ const char *devname;
+
+ devname = kasprintf(GFP_KERNEL,
+   "/dev/disk/by-id/dm-uuid-mpath-%d%*phN",
+   v->scsi.designator_type,
+   v->scsi.designator_len, v->scsi.designator);
+ if (!devname)
+  return ERR_PTR(-ENOMEM);
+
+ bdev = blkdev_get_by_path(devname, FMODE_READ | FMODE_WRITE, NULL);
+ kfree(devname);
+ return bdev;
+}
+
 static int
 bl_parse_scsi(struct nfs_server *server, struct pnfs_block_dev *d,
   struct pnfs_block_volume *volumes, int idx, gfp_t gfp_mask)
@@ -323,7 +345,9 @@ bl_parse_scsi(struct nfs_server *server, struct pnfs_block_dev *d,
  if (!bl_validate_designator(v))
   return -EINVAL;
 
- d->bdev = bl_open_udev_path(v);
+ d->bdev = bl_open_dm_mpath_udev_path(v);
+ if (IS_ERR(d->bdev))
+  d->bdev = bl_open_udev_path(v);
  if (IS_ERR(d->bdev))
   return PTR_ERR(d->bdev);
 
-- 
1.7.1