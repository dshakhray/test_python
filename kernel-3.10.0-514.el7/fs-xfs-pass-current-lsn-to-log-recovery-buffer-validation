From f96bd0c9889977e16ae07333a804872d18273c46 Mon Sep 17 00:00:00 2001
From: Brian Foster <bfoster@redhat.com>
Date: Tue, 27 Sep 2016 13:07:18 -0400
Subject: [fs] xfs: pass current lsn to log recovery buffer validation

Message-id: <1474981641-45465-3-git-send-email-bfoster@redhat.com>
Patchwork-id: 158392
O-Subject: [RHEL7 PATCH 2/5] xfs: pass current lsn to log recovery buffer validation
Bugzilla: 1362730
RH-Acked-by: Dave Chinner <dchinner@redhat.com>
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

commit 22db9af2488655f7f841e9588d25384a5e694fa6
Author: Brian Foster <bfoster@redhat.com>
Date:   Mon Sep 26 08:32:07 2016 +1000

    xfs: pass current lsn to log recovery buffer validation

    The current LSN must be available to the buffer validation function to
    provide the ability to update the metadata LSN of the buffer. Pass the
    current_lsn value down to xlog_recover_validate_buf_type() in
    preparation.

    Signed-off-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Dave Chinner <dchinner@redhat.com>
    Signed-off-by: Dave Chinner <david@fromorbit.com>

Signed-off-by: Brian Foster <bfoster@redhat.com>
Signed-off-by: Rafael Aquini <aquini@redhat.com>

diff --git a/fs/xfs/xfs_log_recover.c b/fs/xfs/xfs_log_recover.c
index b6ab7cf..d055a4e 100644
--- a/fs/xfs/xfs_log_recover.c
+++ b/fs/xfs/xfs_log_recover.c
@@ -2357,7 +2357,8 @@ static void
 xlog_recover_validate_buf_type(
  struct xfs_mount *mp,
  struct xfs_buf  *bp,
- xfs_buf_log_format_t *buf_f)
+ xfs_buf_log_format_t *buf_f,
+ xfs_lsn_t  current_lsn)
 {
  struct xfs_da_blkinfo *info = bp->b_addr;
  __uint32_t  magic32;
@@ -2556,7 +2557,8 @@ xlog_recover_do_reg_buffer(
  struct xfs_mount *mp,
  xlog_recover_item_t *item,
  struct xfs_buf  *bp,
- xfs_buf_log_format_t *buf_f)
+ xfs_buf_log_format_t *buf_f,
+ xfs_lsn_t  current_lsn)
 {
  int   i;
  int   bit;
@@ -2629,7 +2631,7 @@ xlog_recover_do_reg_buffer(
  /* Shouldn't be any more regions */
  ASSERT(i == item->ri_total);
 
- xlog_recover_validate_buf_type(mp, bp, buf_f);
+ xlog_recover_validate_buf_type(mp, bp, buf_f, current_lsn);
 }
 
 /*
@@ -2672,7 +2674,7 @@ xlog_recover_do_dquot_buffer(
  if (log->l_quotaoffs_flag & type)
   return false;
 
- xlog_recover_do_reg_buffer(mp, item, bp, buf_f);
+ xlog_recover_do_reg_buffer(mp, item, bp, buf_f, NULLCOMMITLSN);
  return true;
 }
 
@@ -2760,7 +2762,7 @@ xlog_recover_buffer_pass2(
   */
  lsn = xlog_recover_get_buf_lsn(mp, bp);
  if (lsn && lsn != -1 && XFS_LSN_CMP(lsn, current_lsn) >= 0) {
-  xlog_recover_validate_buf_type(mp, bp, buf_f);
+  xlog_recover_validate_buf_type(mp, bp, buf_f, NULLCOMMITLSN);
   goto out_release;
  }
 
@@ -2776,7 +2778,7 @@ xlog_recover_buffer_pass2(
   if (!dirty)
    goto out_release;
  } else {
-  xlog_recover_do_reg_buffer(mp, item, bp, buf_f);
+  xlog_recover_do_reg_buffer(mp, item, bp, buf_f, current_lsn);
  }
 
  /*
-- 
1.7.1