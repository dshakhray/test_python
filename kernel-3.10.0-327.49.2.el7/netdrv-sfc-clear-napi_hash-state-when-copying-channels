From 7a21ebd8606664b332e9ffaca25d205f98aaa77e Mon Sep 17 00:00:00 2001
From: Jarod Wilson <jarod@redhat.com>
Date: Wed, 16 Nov 2016 17:25:48 +0100
Subject: [netdrv] sfc: clear napi_hash state when copying channels

Message-id: <20161116172548.35620-1-jarod@redhat.com>
Patchwork-id: 160572
O-Subject: [RHEL7 PATCH] sfc: clear napi_hash state when copying channels
Bugzilla: 1394304
Z-Bugzilla: 1401460
RH-Acked-by: David Arcari <darcari@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Bugzilla: http://bugzilla.redhat.com/1394304
Brew: https://brewweb.engineering.redhat.com/brew/taskinfo?taskID=12113134
Testing: done internally at Solarflare

Patch is currently in DaveM's net-next tree.

commit 46d054f8f540612f09987a53154aa39ae15f2e4c
Author: Bert Kenward <bkenward@solarflare.com>
Date:   Fri Nov 11 15:56:51 2016 +0000

    sfc: clear napi_hash state when copying channels

    efx_copy_channel() doesn't correctly clear the napi_hash related state.
    This means that when napi_hash_add is called for that channel nothing is
    done, and we are left with a copy of the napi_hash_node from the old
    channel. When we later call napi_hash_del() on this channel we have a
    stale napi_hash_node.

    Corruption is only seen when there are multiple entries in one of the
    napi_hash lists. This is made more likely by having a very large number
    of channels. Testing was carried out with 512 channels - 32 channels on
    each of 16 ports.

    This failure typically appears as protection faults within napi_by_id()
    or napi_hash_add(). efx_copy_channel() is only used when tx or rx ring
    sizes are changed (ethtool -G).

    Fixes: 36763266bbe8 ("sfc: Add support for busy polling")
    Signed-off-by: Bert Kenward <bkenward@solarflare.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Alexander Gordeev <agordeev@redhat.com>

diff --git a/drivers/net/ethernet/sfc/efx.c b/drivers/net/ethernet/sfc/efx.c
index be51d5f..5713b05 100644
--- a/drivers/net/ethernet/sfc/efx.c
+++ b/drivers/net/ethernet/sfc/efx.c
@@ -479,6 +479,9 @@ efx_copy_channel(const struct efx_channel *old_channel)
  *channel = *old_channel;
 
  channel->napi_dev = NULL;
+ INIT_HLIST_NODE(&channel->napi_str.napi_hash_node);
+ channel->napi_str.napi_id = 0;
+ channel->napi_str.state = 0;
  memset(&channel->eventq, 0, sizeof(channel->eventq));
 
  for (j = 0; j < EFX_TXQ_TYPES; j++) {
-- 
1.7.1