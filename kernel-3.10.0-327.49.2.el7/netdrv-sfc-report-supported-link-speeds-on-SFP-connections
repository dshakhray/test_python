From 3eea69a9953ba352fcf725a2ac7640b82069201d Mon Sep 17 00:00:00 2001
From: Jarod Wilson <jarod@redhat.com>
Date: Thu, 9 Jun 2016 17:58:21 +0200
Subject: [netdrv] sfc: report supported link speeds on SFP connections

Message-id: <1465495101-7837-1-git-send-email-jarod@redhat.com>
Patchwork-id: 149893
O-Subject: [RHEL7 PATCH] sfc: report supported link speeds on SFP connections
Bugzilla: 1166525
Z-Bugzilla: 1382609
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Arcari <darcari@redhat.com>

Bugzilla: http://bugzilla.redhat.com/1166525
Brew: https://brewweb.engineering.redhat.com/brew/taskinfo?taskID=11162319
Testing: ran on reproducer host, where no speeds were reported in ethtool's
Supported field, and now they are. Win. Ship it!

Upstream: In DaveM's netdev tree as of today.

commit 3497ed8c852a5a3d48957ca91baaa443d9bfcd4d
Author: Bert Kenward <bkenward@solarflare.com>
Date:   Mon Jun 6 17:29:30 2016 +0100

    sfc: report supported link speeds on SFP connections

    7000-series SFC NICs connected with an SFP+ module currently fail to
    report any supported link speeds.

    Reported-by: Jarod Wilson <jarod@redhat.com>
    Signed-off-by: Bert Kenward <bkenward@solarflare.com>
    Reviewed-by: Jarod Wilson <jarod@redhat.com>
    Tested-by: Jarod Wilson <jarod@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Alexander Gordeev <agordeev@redhat.com>

diff --git a/drivers/net/ethernet/sfc/mcdi_port.c b/drivers/net/ethernet/sfc/mcdi_port.c
index 7f295c4..2a9228a 100644
--- a/drivers/net/ethernet/sfc/mcdi_port.c
+++ b/drivers/net/ethernet/sfc/mcdi_port.c
@@ -189,11 +189,12 @@ static u32 mcdi_to_ethtool_cap(u32 media, u32 cap)
 
  case MC_CMD_MEDIA_XFP:
  case MC_CMD_MEDIA_SFP_PLUS:
-  result |= SUPPORTED_FIBRE;
-  break;
-
  case MC_CMD_MEDIA_QSFP_PLUS:
   result |= SUPPORTED_FIBRE;
+  if (cap & (1 << MC_CMD_PHY_CAP_1000FDX_LBN))
+   result |= SUPPORTED_1000baseT_Full;
+  if (cap & (1 << MC_CMD_PHY_CAP_10000FDX_LBN))
+   result |= SUPPORTED_10000baseT_Full;
   if (cap & (1 << MC_CMD_PHY_CAP_40000FDX_LBN))
    result |= SUPPORTED_40000baseCR4_Full;
   break;
-- 
1.7.1