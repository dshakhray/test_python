From c3233d36897cec1f9d8de1cf3f95f3a7cd034142 Mon Sep 17 00:00:00 2001
From: Vitaly Kuznetsov <vkuznets@redhat.com>
Date: Thu, 25 Aug 2016 20:49:16 +0200
Subject: [hv] balloon: don't wait for ol_waitevent when memhp_auto_online is enabled

Message-id: <1472158157-4795-4-git-send-email-vkuznets@redhat.com>
Patchwork-id: 157324
O-Subject: [RHEL7 KERNEL PATCH 3/4] Drivers: hv: balloon: don't wait for ol_waitevent when memhp_auto_online is enabled
Bugzilla: 1361245
Z-Bugzilla: 1373818
RH-Acked-by: Cathy Avery <cavery@redhat.com>

Upstream status: signed-off-by the subsystem maintainer, sent to Greg for merging:
  http://driverdev.linuxdriverproject.org/pipermail/driverdev-devel/2016-August/092841.html
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Wed Aug 24 16:23:11 2016 -0700

    Drivers: hv: balloon: don't wait for ol_waitevent when memhp_auto_online is enabled

    With the recently introduced in-kernel memory onlining
    (MEMORY_HOTPLUG_DEFAULT_ONLINE) these is no point in waiting for pages
    to come online in the driver and we can get rid of the waiting.

    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>

RHEL-only: memhp_auto_online is missing in RHEL7 at this moment, always wait.

Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
Signed-off-by: Alexander Gordeev <agordeev@redhat.com>

diff --git a/drivers/hv/hv_balloon.c b/drivers/hv/hv_balloon.c
index 198ed37..28b204a 100644
--- a/drivers/hv/hv_balloon.c
+++ b/drivers/hv/hv_balloon.c
@@ -671,7 +671,7 @@ static void hv_mem_hot_add(unsigned long start, unsigned long size,
   has->covered_end_pfn +=  processed_pfn;
 
   init_completion(&dm_device.ol_waitevent);
-  dm_device.ha_waiting = true;
+  dm_device.ha_waiting = true; /* memhp_auto_online is missing in RHEL */
 
   mutex_unlock(&dm_device.ha_region_mutex);
   nid = memory_add_physaddr_to_nid(PFN_PHYS(start_pfn));
@@ -697,12 +697,15 @@ static void hv_mem_hot_add(unsigned long start, unsigned long size,
   }
 
   /*
-   * Wait for the memory block to be onlined.
-   * Since the hot add has succeeded, it is ok to
-   * proceed even if the pages in the hot added region
-   * have not been "onlined" within the allowed time.
+   * Wait for the memory block to be onlined when memory onlining
+   * is done outside of kernel (memhp_auto_online). Since the hot
+   * add has succeeded, it is ok to proceed even if the pages in
+   * the hot added region have not been "onlined" within the
+   * allowed time.
    */
-  wait_for_completion_timeout(&dm_device.ol_waitevent, 5*HZ);
+  if (dm_device.ha_waiting)
+   wait_for_completion_timeout(&dm_device.ol_waitevent,
+          5*HZ);
   mutex_lock(&dm_device.ha_region_mutex);
   post_status(&dm_device);
  }
-- 
1.7.1