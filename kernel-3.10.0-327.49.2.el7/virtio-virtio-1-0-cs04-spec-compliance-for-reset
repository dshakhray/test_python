From 452e46dbda5c017bcb2140e7a9c194e7172c3f23 Mon Sep 17 00:00:00 2001
From: Michael S. Tsirkin <mst@redhat.com>
Date: Sun, 8 May 2016 16:03:05 +0200
Subject: [virtio] virtio 1.0 cs04 spec compliance for reset

Message-id: <1462723329-9010-1-git-send-email-mst@redhat.com>
Patchwork-id: 143619
O-Subject: [PATCH RHEL7.3/7.2.z] virtio: virtio 1.0 cs04 spec compliance for reset
Bugzilla: 1334106
Z-Bugzilla: 1370175
RH-Acked-by: Ladi Prosek <lprosek@redhat.com>
RH-Acked-by: Thomas Huth <thuth@redhat.com>
RH-Acked-by: Jason Wang <jasowang@redhat.com>

The spec says: after writing 0 to device_status, the driver MUST wait
for a read of device_status to return 0 before reinitializing the
device.

Cc: stable@vger.kernel.org
Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
Acked-by: Jason Wang <jasowang@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1334106
Brew: https://brewweb.engineering.redhat.com/brew/taskinfo?taskID=10983904
Upstream: 05dbcb430795b2e1fb1d5c757f8619d3dbed0a1c
Tested: on developer's system
Signed-off-by: Alexander Gordeev <agordeev@redhat.com>

diff --git a/drivers/virtio/virtio_pci_modern.c b/drivers/virtio/virtio_pci_modern.c
index f7f60d5..18b4622 100644
--- a/drivers/virtio/virtio_pci_modern.c
+++ b/drivers/virtio/virtio_pci_modern.c
@@ -17,6 +17,7 @@
  *
  */
 
+#include <linux/delay.h>
 #define VIRTIO_PCI_NO_LEGACY
 #include "virtio_pci_common.h"
 
@@ -271,9 +272,13 @@ static void vp_reset(struct virtio_device *vdev)
  struct virtio_pci_device *vp_dev = to_vp_device(vdev);
  /* 0 status means a reset. */
  vp_iowrite8(0, &vp_dev->common->device_status);
- /* Flush out the status write, and flush in device writes,
-  * including MSI-X interrupts, if any. */
- vp_ioread8(&vp_dev->common->device_status);
+ /* After writing 0 to device_status, the driver MUST wait for a read of
+  * device_status to return 0 before reinitializing the device.
+  * This will flush out the status write, and flush in device writes,
+  * including MSI-X interrupts, if any.
+  */
+ while (vp_ioread8(&vp_dev->common->device_status))
+  msleep(1);
  /* Flush pending VQ/configuration callbacks. */
  vp_synchronize_vectors(vdev);
 }
-- 
1.7.1