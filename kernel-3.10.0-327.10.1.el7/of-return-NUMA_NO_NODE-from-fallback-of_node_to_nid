From d9ca1e9b9982b05c95fc62d11f47a9afeb68106c Mon Sep 17 00:00:00 2001
From: Thadeu Lima de Souza Cascardo <cascardo@redhat.com>
Date: Tue, 5 Jan 2016 17:59:23 +0100
Subject: [of] return NUMA_NO_NODE from fallback of_node_to_nid()

Message-id: <1452016763-11528-1-git-send-email-cascardo@redhat.com>
Patchwork-id: 131666
O-Subject: [RHEL7.3 PATCH] of: return NUMA_NO_NODE from fallback of_node_to_nid()
Bugzilla: 1294398
Z-Bugzilla: 1300614
RH-Acked-by: Jarod Wilson <jarod@redhat.com>
RH-Acked-by: Aaron Conole <aconole@redhat.com>
RH-Acked-by: Gustavo Duarte <gduarte@redhat.com>

From: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1294398
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=10277115

Tested on a patched qemu with a memoryless node 0.

    commit c8fff7bc5bba6bd59cad40441c189c4efe7190f6
    Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Date:   Wed Apr 8 19:59:20 2015 +0300

        of: return NUMA_NO_NODE from fallback of_node_to_nid()

        Node 0 might be offline as well as any other numa node,
        in this case kernel cannot handle memory allocation and crashes.

        Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
        Fixes: 0c3f061c195c ("of: implement of_node_to_nid as a weak function")
        Signed-off-by: Grant Likely <grant.likely@linaro.org>

Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Alexander Gordeev <agordeev@redhat.com>

diff --git a/drivers/of/base.c b/drivers/of/base.c
index 0e3fa18..a800dfe 100644
--- a/drivers/of/base.c
+++ b/drivers/of/base.c
@@ -82,7 +82,7 @@ EXPORT_SYMBOL(of_n_size_cells);
 #ifdef CONFIG_NUMA
 int __weak of_node_to_nid(struct device_node *np)
 {
- return numa_node_id();
+ return NUMA_NO_NODE;
 }
 #endif
 
diff --git a/include/linux/of.h b/include/linux/of.h
index aa7abfa..6997def 100644
--- a/include/linux/of.h
+++ b/include/linux/of.h
@@ -545,7 +545,10 @@ static inline int of_machine_is_compatible(const char *compat)
 #if defined(CONFIG_OF) && defined(CONFIG_NUMA)
 extern int of_node_to_nid(struct device_node *np);
 #else
-static inline int of_node_to_nid(struct device_node *device) { return 0; }
+static inline int of_node_to_nid(struct device_node *device)
+{
+ return NUMA_NO_NODE;
+}
 #endif
 
 /**
-- 
1.7.1