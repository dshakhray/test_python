From 49d8fe5e9d7faddf51b28637632d82fb01080f7f Mon Sep 17 00:00:00 2001
From: Andrea Arcangeli <aarcange@redhat.com>
Date: Mon, 2 Nov 2015 17:24:53 +0100
Subject: [mm] ksm: use find_mergeable_vma in try_to_merge_with_ksm_page

Message-id: <1446485094-9312-5-git-send-email-aarcange@redhat.com>
Patchwork-id: 126117
O-Subject: [RHEL7.2 PATCH 4/5] ksm: use find_mergeable_vma in try_to_merge_with_ksm_page
Bugzilla: 1274871
Z-Bugzilla: 1281422
RH-Acked-by: Andrew Jones <drjones@redhat.com>
RH-Acked-by: Petr Holasek <pholasek@redhat.com>

Doing the VM_MERGEABLE check after the page == kpage check won't
provide any meaningful benefit. The !vma->anon_vma check of
find_mergeable_vma is the only superfluous bit in using
find_mergeable_vma because the !PageAnon check of
try_to_merge_one_page() implicitly checks for that, but it still looks
cleaner to share the same find_mergeable_vma().

Acked-by: Hugh Dickins <hughd@google.com>
Signed-off-by: Andrea Arcangeli <aarcange@redhat.com>
Signed-off-by: Alexander Gordeev <agordeev@redhat.com>

diff --git a/mm/ksm.c b/mm/ksm.c
index ac0d6c5..c0fd522 100644
--- a/mm/ksm.c
+++ b/mm/ksm.c
@@ -1022,8 +1022,6 @@ static int try_to_merge_one_page(struct vm_area_struct *vma,
  if (page == kpage)   /* ksm page forked */
   return 0;
 
- if (!(vma->vm_flags & VM_MERGEABLE))
-  goto out;
  if (PageTransCompound(page) && page_trans_compound_anon_split(page))
   goto out;
  BUG_ON(PageTransCompound(page));
@@ -1088,10 +1086,8 @@ static int try_to_merge_with_ksm_page(struct rmap_item *rmap_item,
  int err = -EFAULT;
 
  down_read(&mm->mmap_sem);
- if (ksm_test_exit(mm))
-  goto out;
- vma = find_vma(mm, rmap_item->address);
- if (!vma || vma->vm_start > rmap_item->address)
+ vma = find_mergeable_vma(mm, rmap_item->address);
+ if (!vma)
   goto out;
 
  err = try_to_merge_one_page(vma, page, kpage);
-- 
1.7.1