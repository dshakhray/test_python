From 216f92951041a09f083c70cecdf942b369ea9226 Mon Sep 17 00:00:00 2001
From: Mateusz Guzik <mguzik@redhat.com>
Date: Wed, 11 Nov 2015 18:44:00 +0100
Subject: [x86] nmi: Fix a paravirt stack-clobbering bug in the NMI code

Message-id: <1447267441-24584-6-git-send-email-mguzik@redhat.com>
Patchwork-id: 126575
O-Subject: [RHEL7 PATCH 5/6] x86/nmi/64: Fix a paravirt stack-clobbering bug in the NMI code
Bugzilla: 1259583
Z-Bugzilla: 1259582
CVE: CVE-2015-5157
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Jarod Wilson <jarod@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1259583
Brew: http://brewweb.devel.redhat.com/brew/taskinfo?taskID=10092756
CVE: CVE-2015-5157
Tested: by me

Upstream from 3.12 branch:
commit a6f39d84d08b0e9d7f7e8bcb3d845ed676dd4e52
Author: Andy Lutomirski <luto@kernel.org>
Date:   Sun Sep 20 16:32:05 2015 -0700

    x86/nmi/64: Fix a paravirt stack-clobbering bug in the NMI code

    commit 83c133cf11fb0e68a51681447e372489f052d40e upstream.

    The NMI entry code that switches to the normal kernel stack needs to
    be very careful not to clobber any extra stack slots on the NMI
    stack.  The code is fine under the assumption that SWAPGS is just a
    normal instruction, but that assumption isn't really true.  Use
    SWAPGS_UNSAFE_STACK instead.

    This is part of a fix for some random crashes that Sasha saw.

    Fixes: 9b6e6a8334d5 ("x86/nmi/64: Switch stacks on userspace NMI entry")
    Reported-and-tested-by: Sasha Levin <sasha.levin@oracle.com>
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Link: http://lkml.kernel.org/r/974bc40edffdb5c2950a5c4977f821a446b76178.1442791737.git.luto@kernel.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

Signed-off-by: Mateusz Guzik <mguzik@redhat.com>
Signed-off-by: Alexander Gordeev <agordeev@redhat.com>

diff --git a/arch/x86/kernel/entry_64.S b/arch/x86/kernel/entry_64.S
index 3f6f1cd..97a0cf6 100644
--- a/arch/x86/kernel/entry_64.S
+++ b/arch/x86/kernel/entry_64.S
@@ -1520,9 +1520,12 @@ ENTRY(nmi)
   * we don't want to enable interrupts, because then we'll end
   * up in an awkward situation in which IRQs are on but NMIs
   * are off.
+  *
+  * We also must not push anything to the stack before switching
+  * stacks lest we corrupt the "NMI executing" variable.
   */
 
- SWAPGS
+ SWAPGS_UNSAFE_STACK
  cld
  movq %rsp, %rdx
  movq PER_CPU_VAR(kernel_stack), %rsp
-- 
1.7.1