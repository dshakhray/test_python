From 66a0f82a17b9db42841f197800216fb76e8c0b77 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Wed, 21 Oct 2015 13:34:52 +0200
Subject: [cpufreq] revert "intel_pstate: add quirk to disable HWP on Skylake-S processors"

Message-id: <1445434493-19829-3-git-send-email-prarit@redhat.com>
Patchwork-id: 125837
O-Subject: [RHEL7.3 PATCH BZ 1264990 2/3] Revert "[cpufreq] intel_pstate: add quirk to disable HWP on Skylake-S processors"
Bugzilla: 1264990
Z-Bugzilla: 1273926
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Jerry Snitselaar <jsnitsel@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: http://bugzilla.redhat.com/1264990

This reverts commit e12a48c9e0520c0155f3a0cd0955d83921d1a2a5.

Cc: Lenny Szubowicz <lszubowi@redhat.com>
Cc: Steve Best <sbest@redhat.com>
Signed-off-by: Alexander Gordeev <agordeev@redhat.com>

diff --git a/drivers/cpufreq/intel_pstate.c b/drivers/cpufreq/intel_pstate.c
index 11ad013..1d385c0 100644
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@ -1046,12 +1046,6 @@ static int __initdata no_hwp;
 static int __initdata hwp_only;
 static unsigned int force_load;
 
-/* RHEL7: disable HWP for Skylake-S processors */
-static struct x86_cpu_id __initdata hwp_quirk_cpu_ids[] = {
- { .vendor = X86_VENDOR_INTEL, .family = 6, .model = 0x5e },
- {}
-};
-
 static int intel_pstate_msrs_not_valid(void)
 {
  if (!pstate_funcs.get_max() ||
@@ -1230,16 +1224,6 @@ static int __init intel_pstate_init(void)
  if (!all_cpu_data)
   return -ENOMEM;
 
- /*
-  * RHEL7: We are having issues with the Skylake-S hanging
-  * when HWP is enabled so check for Skylake-S and
-  * disable HWP if found
-  */
- if (x86_match_cpu(hwp_quirk_cpu_ids)) {
-  pr_info("intel_pstate Skylake-S detected. disabling HWP\n");
-  no_hwp = 1;
- }
-
  if (cpu_has(c,X86_FEATURE_HWP) && !no_hwp)
   intel_pstate_hwp_enable();
 
-- 
1.7.1