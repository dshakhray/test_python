From 19855bb37da9600e3b9c9d677f8172c0efadb81e Mon Sep 17 00:00:00 2001
From: David Howells <dhowells@redhat.com>
Date: Tue, 20 Oct 2015 19:22:19 +0200
Subject: [security] keys: Don't permit request_key() to construct a new keyring

Message-id: <20151020192219.10873.54488.stgit@warthog.procyon.org.uk>
Patchwork-id: 125804
O-Subject: [RHEL7 PATCH 3/3] KEYS: Don't permit request_key() to construct a new keyring
Bugzilla: 1273465
Z-Bugzilla: 1275929
CVE: CVE-2015-7872
RH-Acked-by: Jarod Wilson <jarod@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

If request_key() is used to find a keyring, only do the search part - don't
do the construction part if the keyring was not found by the search.  We
don't really want keyrings in the negative instantiated state since the
rejected/negative instantiation error value in the payload is unioned with
keyring metadata.

Now the kernel gives an error:

 request_key("keyring", "#selinux,bdekeyring", "keyring", KEY_SPEC_USER_SESSION_KEYRING) = -1 EPERM (Operation not permitted)

Signed-off-by: David Howells <dhowells@redhat.com>
Original-commit: 911b79cde95c7da0ec02f48105358a36636b7a71
RH-Bugzilla: 1273465
Signed-off-by: Alexander Gordeev <agordeev@redhat.com>

diff --git a/security/keys/request_key.c b/security/keys/request_key.c
index 3814119..9ea60a7 100644
--- a/security/keys/request_key.c
+++ b/security/keys/request_key.c
@@ -457,6 +457,9 @@ static struct key *construct_key_and_link(struct keyring_search_context *ctx,
 
  kenter("");
 
+ if (ctx->index_key.type == &key_type_keyring)
+  return ERR_PTR(-EPERM);
+ 
  user = key_user_lookup(current_fsuid());
  if (!user)
   return ERR_PTR(-ENOMEM);
-- 
1.7.1