From 28243f99e35f0af64389eca0bb4804bdbacee09f Mon Sep 17 00:00:00 2001
From: Dave Anderson <anderson@redhat.com>
Date: Tue, 24 Nov 2015 19:49:56 +0100
Subject: [net] vsock: Fix lockdep issue

Message-id: <1448394596-2486-3-git-send-email-anderson@redhat.com>
Patchwork-id: 127575
O-Subject: [RHEL7.3 PATCH 2/2] BZ #1253971: VSOCK: Fix lockdep issue.
Bugzilla: 1253971
Z-Bugzilla: 1292372
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Jarod Wilson <jarod@redhat.com>

commit 8566b86ab9f0f45bc6f7dd422b21de9d0cf5415a
  Author: Jorgen Hansen <jhansen@vmware.com>
  Date:   Thu Oct 22 08:25:25 2015 -0700

    VSOCK: Fix lockdep issue.

    The recent fix for the vsock sock_put issue used the wrong
    initializer for the transport spin_lock causing an issue when
    running with lockdep checking.

    Testing: Verified fix on kernel with lockdep enabled.

    Reviewed-by: Thomas Hellstrom <thellstrom@vmware.com>
    Signed-off-by: Jorgen Hansen <jhansen@vmware.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Alexander Gordeev <agordeev@redhat.com>

diff --git a/net/vmw_vsock/vmci_transport.c b/net/vmw_vsock/vmci_transport.c
index e303296..3328622 100644
--- a/net/vmw_vsock/vmci_transport.c
+++ b/net/vmw_vsock/vmci_transport.c
@@ -1570,7 +1570,7 @@ static int vmci_transport_socket_init(struct vsock_sock *vsk,
  vmci_trans(vsk)->notify_ops = NULL;
  INIT_LIST_HEAD(&vmci_trans(vsk)->elem);
  vmci_trans(vsk)->sk = &vsk->sk;
- vmci_trans(vsk)->lock = __SPIN_LOCK_UNLOCKED(vmci_trans(vsk)->lock);
+ spin_lock_init(&vmci_trans(vsk)->lock);
  if (psk) {
   vmci_trans(vsk)->queue_pair_size =
    vmci_trans(psk)->queue_pair_size;
-- 
1.7.1