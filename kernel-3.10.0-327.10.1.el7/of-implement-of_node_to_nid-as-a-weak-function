From 7d54bbb7e405a0699c1fa8f6c58f2f558b06af6c Mon Sep 17 00:00:00 2001
From: Steve Best <sbest@redhat.com>
Date: Thu, 22 Oct 2015 17:10:34 +0200
Subject: [of] implement of_node_to_nid as a weak function

Message-id: <20151022171034.4864.47857.sendpatchset@ibm-p7r2-01.lab.bos.redhat.com>
Patchwork-id: 125860
O-Subject: [PATCH RHEL7.3 BZ1273978] of: implement of_node_to_nid as a weak function
Bugzilla: 1273978
Z-Bugzilla: 1283526
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

RHBZ#:
------
https://bugzilla.redhat.com/show_bug.cgi?id=1273978

Description:
------------
Implement of_node_to_nid as weak function to remove the dependency on
asm/prom.h. This is in preparation to make prom.h optional.

Signed-off-by: Rob Herring <rob.herring@calxeda.com>
Acked-by: Grant Likely <grant.likely@linaro.org>

Brew:
-----
http://brewweb.devel.redhat.com/brew/taskinfo?taskID=9999480

Upstream:
---------
http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=0c3f061c195ceb891067b6de9e4ecc347c4dea31

Test Status:
------------
Tested successfully by IBM. I also testing using ibm-p8-rhevm-09 system.

Test steps are below:

[root@ibm-p8-rhevm-09 ~]# uname -a
Linux ibm-p8-rhevm-09.lab4.eng.bos.redhat.com 3.10.0-325.el7.ppc64le #1 SMP Fri Oct 16 18:13:47 EDT 2015 ppc64le ppc64le ppc64le GNU/Linux
[root@ibm-p8-rhevm-09 ~]# lscpu
Architecture:          ppc64le
Byte Order:            Little Endian
CPU(s):                160
On-line CPU(s) list:   0-159
Thread(s) per core:    8
Core(s) per socket:    5
Socket(s):             4
NUMA node(s):          4
Model:                 8247-22L
L1d cache:             64K
L1i cache:             32K
L2 cache:              512K
L3 cache:              8192K
NUMA node0 CPU(s):     0-39
NUMA node1 CPU(s):     40-79
NUMA node16 CPU(s):    80-119
NUMA node17 CPU(s):    120-159

[root@ibm-p8-rhevm-09 ~]# find /sys/devices -name numa_node -exec cat {} \;
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

after the patch

find /sys/devices -name numa_node -exec cat {} \;
0
0
0
0
0
0
0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
16
17
17

---------------------------------------------------------------
Steve Best

Signed-off-by: Alexander Gordeev <agordeev@redhat.com>

diff --git a/arch/powerpc/include/asm/prom.h b/arch/powerpc/include/asm/prom.h
index 20aff0a..b7dcea5 100644
--- a/arch/powerpc/include/asm/prom.h
+++ b/arch/powerpc/include/asm/prom.h
@@ -51,13 +51,6 @@ struct device_node *of_get_cpu_node(int cpu, unsigned int *thread);
 /* cache lookup */
 struct device_node *of_find_next_cache_node(struct device_node *np);
 
-#ifdef CONFIG_NUMA
-extern int of_node_to_nid(struct device_node *device);
-#else
-static inline int of_node_to_nid(struct device_node *device) { return 0; }
-#endif
-#define of_node_to_nid of_node_to_nid
-
 extern void of_instantiate_rtc(void);
 
 extern int of_get_ibm_chip_id(struct device_node *np);
diff --git a/arch/sparc/include/asm/prom.h b/arch/sparc/include/asm/prom.h
index 67c6257..60c8d7b 100644
--- a/arch/sparc/include/asm/prom.h
+++ b/arch/sparc/include/asm/prom.h
@@ -43,10 +43,6 @@ extern int of_getintprop_default(struct device_node *np,
      const char *name,
      int def);
 extern int of_find_in_proplist(const char *list, const char *match, int len);
-#ifdef CONFIG_NUMA
-extern int of_node_to_nid(struct device_node *dp);
-#define of_node_to_nid of_node_to_nid
-#endif
 
 extern void prom_build_devicetree(void);
 extern void of_populate_present_mask(void);
diff --git a/drivers/of/base.c b/drivers/of/base.c
index ae4bf3d..0e3fa18 100644
--- a/drivers/of/base.c
+++ b/drivers/of/base.c
@@ -79,6 +79,13 @@ int of_n_size_cells(struct device_node *np)
 }
 EXPORT_SYMBOL(of_n_size_cells);
 
+#ifdef CONFIG_NUMA
+int __weak of_node_to_nid(struct device_node *np)
+{
+ return numa_node_id();
+}
+#endif
+
 #if defined(CONFIG_OF_DYNAMIC)
 /**
  * of_node_get - Increment refcount of a node
diff --git a/include/linux/of.h b/include/linux/of.h
index b94ec0c..aa7abfa 100644
--- a/include/linux/of.h
+++ b/include/linux/of.h
@@ -542,13 +542,10 @@ static inline int of_machine_is_compatible(const char *compat)
  while (0)
 #endif /* CONFIG_OF */
 
-#ifndef of_node_to_nid
-static inline int of_node_to_nid(struct device_node *np)
-{
- return numa_node_id();
-}
-
-#define of_node_to_nid of_node_to_nid
+#if defined(CONFIG_OF) && defined(CONFIG_NUMA)
+extern int of_node_to_nid(struct device_node *np);
+#else
+static inline int of_node_to_nid(struct device_node *device) { return 0; }
 #endif
 
 /**
-- 
1.7.1