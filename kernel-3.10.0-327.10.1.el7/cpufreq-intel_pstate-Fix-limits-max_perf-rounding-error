From 8ab928c9c27a7d9b041391eb031f9252b137d48a Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 10 Dec 2015 14:19:27 +0100
Subject: [cpufreq] intel_pstate: Fix limits->max_perf rounding error

Message-id: <1449757167-27598-4-git-send-email-prarit@redhat.com>
Patchwork-id: 128708
O-Subject: [RHEL7.3 PATCH BZ 1279617 3/3] cpufreq: intel_pstate: Fix limits->max_perf rounding error
Bugzilla: 1279617
Z-Bugzilla: 1296276
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Jarod Wilson <jarod@redhat.com>

Bugzilla: http://bugzilla.redhat.com/1279617

commit 785ee27881411bd971d5e37a7fd72a5063fc1237
Author: Prarit Bhargava <prarit@redhat.com>
Date:   Fri Nov 20 18:47:57 2015 -0500

    cpufreq: intel_pstate: Fix limits->max_perf rounding error

    A rounding error was found in the calculation of limits->max_perf
    in intel_pstate_set_policy(), which is used to calculate the max and min
    pstate values in intel_pstate_get_min_max().  In that code,
    limits->max_perf is truncated to 2 hex digits such that, for example,
    0x169 was incorrectly calculated to 0x16 instead of 0x17.  This resulted in
    the pstate being set one level too low.  This patch rounds the value of
    limits->max_perf up instead of down so that the correct max pstate can
    be reached.

    Signed-off-by: Prarit Bhargava <prarit@redhat.com>
    Acked-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
Cc: Steve Best <sbest@redhat.com>
Signed-off-by: Alexander Gordeev <agordeev@redhat.com>

diff --git a/drivers/cpufreq/intel_pstate.c b/drivers/cpufreq/intel_pstate.c
index 648fb16..cba7886 100644
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@ -978,6 +978,7 @@ static int intel_pstate_set_policy(struct cpufreq_policy *policy)
  limits.max_policy_pct = clamp_t(int, limits.max_policy_pct, 0 , 100);
  limits.max_perf_pct = min(limits.max_policy_pct, limits.max_sysfs_pct);
  limits.max_perf = div_fp(int_tofp(limits.max_perf_pct), int_tofp(100));
+ limits.max_perf = round_up(limits.max_perf, 8);
 
  if (hwp_active)
   intel_pstate_hwp_set();
-- 
1.7.1