From a1d2179b6cf06e4f76d6d26920481b74f20a34bc Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 10 Dec 2015 16:08:08 +0100
Subject: [cpufreq] intel_pstate: Fix limits->max_policy_pct rounding error

Message-id: <1449763688-28718-1-git-send-email-prarit@redhat.com>
Patchwork-id: 128725
O-Subject: Re: [RHEL7.3 PATCH BZ 1279617 2/3] cpufreq: intel_pstate: Fix limits->max_policy_pct rounding [v2] error
Bugzilla: 1279617
Z-Bugzilla: 1296276
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Jarod Wilson <jarod@redhat.com>

Bugzilla: http://bugzilla.redhat.com/1279617

commit 8478f53946f01b8365a206ac58a2640e3e408fb2
Author: Prarit Bhargava <prarit@redhat.com>
Date:   Fri Nov 20 18:47:56 2015 -0500

    cpufreq: intel_pstate: Fix limits->max_policy_pct rounding error

    I have a Intel (6,63) processor with a "marketing" frequency (from
    /proc/cpuinfo) of 2100MHz, and a max turbo frequency of 2600MHz.  I
    can execute

    cpupower frequency-set -g powersave --min 1200MHz --max 2100MHz

    and the max_freq_pct is set to 80.  When adding load to the system I noticed
    that the cpu frequency only reached 2000MHZ and not 2100MHz as expected.

    This is because limits->max_policy_pct is calculated as 2100 * 100 /2600 = 80.7
    and is rounded down to 80 when it should be rounded up to 81.  This patch
    adds a DIV_ROUND_UP() which will return the correct value.

    Signed-off-by: Prarit Bhargava <prarit@redhat.com>
    Acked-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

[v2]: remove the previous calculation :)

Cc: Lenny Szubowicz <lszubowi@redhat.com>
Cc: Steve Best <sbest@redhat.com>
Signed-off-by: Alexander Gordeev <agordeev@redhat.com>

diff --git a/drivers/cpufreq/intel_pstate.c b/drivers/cpufreq/intel_pstate.c
index 59a248b..648fb16 100644
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@ -973,7 +973,8 @@ static int intel_pstate_set_policy(struct cpufreq_policy *policy)
  limits.min_perf_pct = clamp_t(int, limits.min_perf_pct, 0 , 100);
  limits.min_perf = div_fp(int_tofp(limits.min_perf_pct), int_tofp(100));
 
- limits.max_policy_pct = (policy->max * 100) / policy->cpuinfo.max_freq;
+ limits.max_policy_pct = DIV_ROUND_UP(policy->max * 100,
+           policy->cpuinfo.max_freq);
  limits.max_policy_pct = clamp_t(int, limits.max_policy_pct, 0 , 100);
  limits.max_perf_pct = min(limits.max_policy_pct, limits.max_sysfs_pct);
  limits.max_perf = div_fp(int_tofp(limits.max_perf_pct), int_tofp(100));
-- 
1.7.1