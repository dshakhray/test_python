From 9c1ae722488721c849caea4187a1db6d3e64b6a1 Mon Sep 17 00:00:00 2001
From: Jiri Pirko <jiri@resnulli.us>
Date: Thu, 3 Jan 2013 22:48:59 +0000
Subject: [PATCH 488/858] vlan: remove usage of dev->master in
 __vlan_find_dev_deep()

Also, since all users call __vlan_find_dev_deep() with rcu_read_lock,
make no possibility to call this with rtnl mutex held only.

Signed-off-by: Jiri Pirko <jiri@resnulli.us>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1cdfd72f791918ab4690570d7d93a1f86e171cb8)

Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 net/8021q/vlan_core.c | 18 +++++++++++-------
 1 file changed, 11 insertions(+), 7 deletions(-)

diff --git a/net/8021q/vlan_core.c b/net/8021q/vlan_core.c
index 65e06ab..380440b 100644
--- a/net/8021q/vlan_core.c
+++ b/net/8021q/vlan_core.c
@@ -60,21 +60,25 @@ bool vlan_do_receive(struct sk_buff **skbp)
  return true;
 }
 
-/* Must be invoked with rcu_read_lock or with RTNL. */
-struct net_device *__vlan_find_dev_deep(struct net_device *real_dev,
+/* Must be invoked with rcu_read_lock. */
+struct net_device *__vlan_find_dev_deep(struct net_device *dev,
      u16 vlan_id)
 {
- struct vlan_info *vlan_info = rcu_dereference_rtnl(real_dev->vlan_info);
+ struct vlan_info *vlan_info = rcu_dereference(dev->vlan_info);
 
  if (vlan_info) {
   return vlan_group_get_device(&vlan_info->grp, vlan_id);
  } else {
   /*
-   * Bonding slaves do not have grp assigned to themselves.
-   * Grp is assigned to bonding master instead.
+   * Lower devices of master uppers (bonding, team) do not have
+   * grp assigned to themselves. Grp is assigned to upper device
+   * instead.
    */
-  if (netif_is_bond_slave(real_dev))
-   return __vlan_find_dev_deep(real_dev->master, vlan_id);
+  struct net_device *upper_dev;
+
+  upper_dev = netdev_master_upper_dev_get_rcu(dev);
+  if (upper_dev)
+   return __vlan_find_dev_deep(upper_dev, vlan_id);
  }
 
  return NULL;
-- 
1.8.3.1