From 4fb0783a1928d3e2c96de578ce317490265199f5 Mon Sep 17 00:00:00 2001
From: Aviad Yehezkel <aviadye@mellanox.com>
Date: Thu, 24 Jan 2013 01:54:15 +0000
Subject: [PATCH 637/858] net/mlx4_en: Fix traffic loss under promiscuous mode

When port is stopped and flow steering mode is not device managed: promisc QP
rule wasn't removed from MCG table.
Added code to remove it in all flow steering modes.
In addition, promsic rule removal should be in stop port and not in start
port - moved it accordingly.

Signed-off-by: Aviad Yehezkel <aviadye@mellanox.com>
Signed-off-by: Eugenia Emantayev <eugenia@mellanox.com>
Signed-off-by: Hadar Hen Zion <hadarh@mellanox.com>
Signed-off-by: Amir Vadai <amirv@mellanox.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit db0e7cba6dafa269f33f379997794a9d3bd4d535)

Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 drivers/net/ethernet/mellanox/mlx4/en_netdev.c | 35 +++++++++++++++++++-------
 1 file changed, 26 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/mellanox/mlx4/en_netdev.c b/drivers/net/ethernet/mellanox/mlx4/en_netdev.c
index 81466c6..1dcada2 100644
--- a/drivers/net/ethernet/mellanox/mlx4/en_netdev.c
+++ b/drivers/net/ethernet/mellanox/mlx4/en_netdev.c
@@ -1530,15 +1530,6 @@ int mlx4_en_start_port(struct net_device *dev)
 
  /* Must redo promiscuous mode setup. */
  priv->flags &= ~(MLX4_EN_FLAG_PROMISC | MLX4_EN_FLAG_MC_PROMISC);
- if (mdev->dev->caps.steering_mode ==
-     MLX4_STEERING_MODE_DEVICE_MANAGED) {
-  mlx4_flow_steer_promisc_remove(mdev->dev,
-            priv->port,
-            MLX4_FS_PROMISC_UPLINK);
-  mlx4_flow_steer_promisc_remove(mdev->dev,
-            priv->port,
-            MLX4_FS_PROMISC_ALL_MULTI);
- }
 
  /* Schedule multicast task to populate multicast list */
  queue_work(mdev->workqueue, &priv->rx_mode_task);
@@ -1597,6 +1588,32 @@ void mlx4_en_stop_port(struct net_device *dev, int detach)
  /* Set port as not active */
  priv->port_up = false;
 
+ /* Promsicuous mode */
+ if (mdev->dev->caps.steering_mode ==
+     MLX4_STEERING_MODE_DEVICE_MANAGED) {
+  priv->flags &= ~(MLX4_EN_FLAG_PROMISC |
+     MLX4_EN_FLAG_MC_PROMISC);
+  mlx4_flow_steer_promisc_remove(mdev->dev,
+            priv->port,
+            MLX4_FS_PROMISC_UPLINK);
+  mlx4_flow_steer_promisc_remove(mdev->dev,
+            priv->port,
+            MLX4_FS_PROMISC_ALL_MULTI);
+ } else if (priv->flags & MLX4_EN_FLAG_PROMISC) {
+  priv->flags &= ~MLX4_EN_FLAG_PROMISC;
+
+  /* Disable promiscouos mode */
+  mlx4_unicast_promisc_remove(mdev->dev, priv->base_qpn,
+         priv->port);
+
+  /* Disable Multicast promisc */
+  if (priv->flags & MLX4_EN_FLAG_MC_PROMISC) {
+   mlx4_multicast_promisc_remove(mdev->dev, priv->base_qpn,
+            priv->port);
+   priv->flags &= ~MLX4_EN_FLAG_MC_PROMISC;
+  }
+ }
+
  /* Detach All multicasts */
  memset(&mc_list[10], 0xff, ETH_ALEN);
  mc_list[5] = priv->port; /* needed for B0 steering support */
-- 
1.8.3.1