From 26a5db280ecc7c11694c880ebad23d16df46ef1d Mon Sep 17 00:00:00 2001
From: Yaniv Rosner <yanivr@broadcom.com>
Date: Sun, 7 Apr 2013 05:36:23 +0000
Subject: [PATCH 611/858] bnx2x: Fix KR2 rapid link flap

Check KR2 recovery time at the beginning of the work-around function.

Signed-off-by: Yaniv Rosner <yanivr@broadcom.com>
Signed-off-by: Eilon Greenstein <eilong@broadcom.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit cb28ea3b13b86fb23448525f34720e659bda7aa8)

Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 drivers/net/ethernet/broadcom/bnx2x/bnx2x_link.c | 18 +++++++++++-------
 1 file changed, 11 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_link.c b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_link.c
index ca15442..71babc7 100644
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_link.c
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_link.c
@@ -13437,13 +13437,7 @@ static void bnx2x_check_kr2_wa(struct link_params *params,
 {
  struct bnx2x *bp = params->bp;
  u16 base_page, next_page, not_kr2_device, lane;
- int sigdet = bnx2x_warpcore_get_sigdet(phy, params);
-
- if (!sigdet) {
-  if (!(vars->link_attr_sync & LINK_ATTR_SYNC_KR2_ENABLE))
-   bnx2x_kr2_recovery(params, vars, phy);
-  return;
- }
+ int sigdet;
 
  /* Once KR2 was disabled, wait 5 seconds before checking KR2 recovery
   * since some switches tend to reinit the AN process and clear the
@@ -13454,6 +13448,16 @@ static void bnx2x_check_kr2_wa(struct link_params *params,
   vars->check_kr2_recovery_cnt--;
   return;
  }
+
+ sigdet = bnx2x_warpcore_get_sigdet(phy, params);
+ if (!sigdet) {
+  if (!(vars->link_attr_sync & LINK_ATTR_SYNC_KR2_ENABLE)) {
+   bnx2x_kr2_recovery(params, vars, phy);
+   DP(NETIF_MSG_LINK, "No sigdet\n");
+  }
+  return;
+ }
+
  lane = bnx2x_get_warpcore_lane(phy, params);
  CL22_WR_OVER_CL45(bp, phy, MDIO_REG_BANK_AER_BLOCK,
      MDIO_AER_BLOCK_AER_REG, lane);
-- 
1.8.3.1