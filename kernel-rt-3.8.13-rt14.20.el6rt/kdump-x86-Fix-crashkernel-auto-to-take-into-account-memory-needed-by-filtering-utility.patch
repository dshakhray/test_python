From ca8d32a046d8cfd3a80f0c7a079ea97d51bf600b Mon Sep 17 00:00:00 2001
From: Vivek Goyal <vgoyal@redhat.com>
Date: Tue, 11 Jun 2013 10:02:31 -0300
Subject: [PATCH 401/858] [kdump] x86: Fix crashkernel=auto to take into
 account memory needed by filtering utility

commit e5bb512bd48d66e7d6075b4c41f37a02c24dfae2 rhel6

Bugzilla: 820427

Message-id: <20110815132917.GA10154@redhat.com>
Patchwork-id: 40124
O-Subject: Re: [PATCH RHEL6.2] kdump: x86: Fix crashkernel=auto to take into
 account memory needed by filtering utility
Bugzilla: 730077
RH-Acked-by: Dave Anderson <anderson@redhat.com>
RH-Acked-by: Amerigo Wang <amwang@redhat.com>

We recently profiled the kdump memory usage and one of the variable factors
of memory usage was filtering utility mkdumpfile. This utility uses 2bits
of memory for every 4K page.

So we need to scale memory reservation based on physical memory present
in the system. This patch reserves 2bits per 4K page extra memory on
i386 and x86_64 when crashkernel=auto is passed.

Tested to make sure right amount of RAM is reserved on big memory system
and no ram is reserved on systems having less than 4G of memory.

Signed-off-by: Vivek Goyal <vgoyal@redhat.com>
Signed-off-by: Aristeu Rozanski <arozansk@redhat.com>
Signed-off-by: Luis Claudio R. Goncalves <lgoncalv@redhat.com>
---
 Documentation/kdump/kdump.txt | 14 +++++++++++---
 kernel/kexec.c                | 11 ++++++-----
 2 files changed, 17 insertions(+), 8 deletions(-)

diff --git a/Documentation/kdump/kdump.txt b/Documentation/kdump/kdump.txt
index 1f8ff0a..50f2913 100644
--- a/Documentation/kdump/kdump.txt
+++ b/Documentation/kdump/kdump.txt
@@ -292,9 +292,17 @@ Or you can use:
 if you have enough memory. The threshold is 4G on ia64 and x86, 2G on powerpc,
 below which this won't work.
 
-The automatically reserved memory size would be 128M on x86_32, 128M or 256M
-on ppc, 1/32 of your physical memory size on x86_64 and ppc64 (but it will not
-grow if you have more than 128G memory). IA64 has its own policy, shown below:
+
+The automatically reserved memory size varies based on architecture. For i386
+and x86_64, base memory reserved is 128M and this memory is scaled based on
+physical memory present in the system. Currently dump filtering utility
+(makedumpfile) requires 2bits per 4K page of memory in its user space. So
+memory reserved is scaled accordingly. That means on top of 128MB, we reserve
+additional 2bit per 4K page of physical memory in the system.
+
+It will be 128M or 256M on ppc, 1/32 of your physical memory size on ppc64
+(but it will not grow if you have more than 128G memory). IA64 has its own
+policy, shown below:
 
  Memory size Reserved memory
  =========== ===============
diff --git a/kernel/kexec.c b/kernel/kexec.c
index 14f101b..28c7534 100644
--- a/kernel/kexec.c
+++ b/kernel/kexec.c
@@ -1373,13 +1373,14 @@ unsigned long long __init arch_default_crash_size(unsigned long long total_size)
  if (total_size < KEXEC_AUTO_THRESHOLD)
   return 0;
  else {
-#ifdef CONFIG_64BIT
+  /*
+   * Filtering logic in kdump initrd requires 2bits per 4K page.
+   * Hence reserve 2bits per 4K of RAM (or 1byte per 16K of RAM)
+   * on top of base of 128M (KEXEC_AUTO_RESERVED_SIZE).
+   */
   return KEXEC_AUTO_RESERVED_SIZE +
    roundup((total_size - KEXEC_AUTO_RESERVED_SIZE)
-    / (1ULL<<23), 1ULL<<20); /* 1:8192 */
-#else
-  return KEXEC_AUTO_RESERVED_SIZE;
-#endif
+    / (1ULL<<14), 1ULL<<20);
  }
 }
 #define arch_default_crash_size arch_default_crash_size
-- 
1.8.3.1