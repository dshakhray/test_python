From 18949e774420603bdf52f1c2a8a0b9ae25cd76c0 Mon Sep 17 00:00:00 2001
From: Lucas Stach <l.stach@pengutronix.de>
Date: Thu, 14 Mar 2013 05:12:01 +0000
Subject: [PATCH 832/858] net: fec: restart the FEC when PHY speed changes

Proviously we would only restart the FEC when PHY link or duplex state
changed. PHY does not always bring down the link for speed changes, in
which case we would not detect any change and keep FEC running.

Switching link speed without restarting the FEC results in the FEC being
stuck in an indefinite state, generating error conditions for every
packet.

Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d97e74976982a35168c7f131cce0d93537337a26)

Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 drivers/net/ethernet/freescale/fec.c | 26 +++++++++++++++-----------
 drivers/net/ethernet/freescale/fec.h |  1 +
 2 files changed, 16 insertions(+), 11 deletions(-)

diff --git a/drivers/net/ethernet/freescale/fec.c b/drivers/net/ethernet/freescale/fec.c
index f52ba33..6cc0942 100644
--- a/drivers/net/ethernet/freescale/fec.c
+++ b/drivers/net/ethernet/freescale/fec.c
@@ -917,24 +917,28 @@ static void fec_enet_adjust_link(struct net_device *ndev)
   goto spin_unlock;
  }
 
- /* Duplex link change */
  if (phy_dev->link) {
-  if (fep->full_duplex != phy_dev->duplex) {
-   fec_restart(ndev, phy_dev->duplex);
-   /* prevent unnecessary second fec_restart() below */
+  if (!fep->link) {
    fep->link = phy_dev->link;
    status_change = 1;
   }
- }
 
- /* Link on or off change */
- if (phy_dev->link != fep->link) {
-  fep->link = phy_dev->link;
-  if (phy_dev->link)
+  if (fep->full_duplex != phy_dev->duplex)
+   status_change = 1;
+
+  if (phy_dev->speed != fep->speed) {
+   fep->speed = phy_dev->speed;
+   status_change = 1;
+  }
+
+  /* if any of the above changed restart the FEC */
+  if (status_change)
    fec_restart(ndev, phy_dev->duplex);
-  else
+ } else {
+  if (fep->link) {
    fec_stop(ndev);
-  status_change = 1;
+   status_change = 1;
+  }
  }
 
 spin_unlock:
diff --git a/drivers/net/ethernet/freescale/fec.h b/drivers/net/ethernet/freescale/fec.h
index 2ebedaf..1c2c874 100644
--- a/drivers/net/ethernet/freescale/fec.h
+++ b/drivers/net/ethernet/freescale/fec.h
@@ -244,6 +244,7 @@ struct fec_enet_private {
  phy_interface_t phy_interface;
  int link;
  int full_duplex;
+ int speed;
  struct completion mdio_done;
  int irq[FEC_IRQ_NUM];
  int bufdesc_ex;
-- 
1.8.3.1