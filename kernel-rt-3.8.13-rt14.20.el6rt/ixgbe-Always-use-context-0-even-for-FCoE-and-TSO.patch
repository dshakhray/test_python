From bece4c69907724b7054cbbd077a4dcc8d5286129 Mon Sep 17 00:00:00 2001
From: Alexander Duyck <alexander.h.duyck@intel.com>
Date: Tue, 30 Oct 2012 06:01:45 +0000
Subject: [PATCH 680/858] ixgbe: Always use context 0, even for FCoE and TSO

We were spending cycles separating the FCoE and TSO contexts even though we
always overwriting the context anyway.  Instead of doing that we can just
use context 0 for all descriptors.

Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com>
Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit c44f5f516e0b830f560ade66847433f88a4bcc3a)

Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 drivers/net/ethernet/intel/ixgbe/ixgbe_fcoe.c |  3 +--
 drivers/net/ethernet/intel/ixgbe/ixgbe_main.c | 11 +----------
 2 files changed, 2 insertions(+), 12 deletions(-)

diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_fcoe.c b/drivers/net/ethernet/intel/ixgbe/ixgbe_fcoe.c
index 1837788..88d89a5 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_fcoe.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_fcoe.c
@@ -550,9 +550,8 @@ int ixgbe_fso(struct ixgbe_ring *tx_ring,
  /* set flag indicating FCOE to ixgbe_tx_map call */
  first->tx_flags |= IXGBE_TX_FLAGS_FCOE;
 
- /* mss_l4len_id: use 1 for FSO as TSO, no need for L4LEN */
+ /* mss_l4len_id: use 0 for FSO as TSO, no need for L4LEN */
  mss_l4len_idx = skb_shinfo(skb)->gso_size << IXGBE_ADVTXD_MSS_SHIFT;
- mss_l4len_idx |= 1 << IXGBE_ADVTXD_IDX_SHIFT;
 
  /* vlan_macip_lens: HEADLEN, MACLEN, VLAN tag */
  vlan_macip_lens = skb_transport_offset(skb) +
diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c b/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
index 676c25a..574916a 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
@@ -5955,10 +5955,9 @@ static int ixgbe_tso(struct ixgbe_ring *tx_ring,
  first->gso_segs = skb_shinfo(skb)->gso_segs;
  first->bytecount += (first->gso_segs - 1) * *hdr_len;
 
- /* mss_l4len_id: use 1 as index for TSO */
+ /* mss_l4len_id: use 0 as index for TSO */
  mss_l4len_idx = l4len << IXGBE_ADVTXD_L4LEN_SHIFT;
  mss_l4len_idx |= skb_shinfo(skb)->gso_size << IXGBE_ADVTXD_MSS_SHIFT;
- mss_l4len_idx |= 1 << IXGBE_ADVTXD_IDX_SHIFT;
 
  /* vlan_macip_lens: HEADLEN, MACLEN, VLAN tag */
  vlan_macip_lens = skb_network_header_len(skb);
@@ -6084,14 +6083,6 @@ static void ixgbe_tx_olinfo_status(union ixgbe_adv_tx_desc *tx_desc,
  if (tx_flags & IXGBE_TX_FLAGS_IPV4)
   olinfo_status |= cpu_to_le32(IXGBE_ADVTXD_POPTS_IXSM);
 
- /* use index 1 context for TSO/FSO/FCOE */
-#ifdef IXGBE_FCOE
- if (tx_flags & (IXGBE_TX_FLAGS_TSO | IXGBE_TX_FLAGS_FCOE))
-#else
- if (tx_flags & IXGBE_TX_FLAGS_TSO)
-#endif
-  olinfo_status |= cpu_to_le32(1 << IXGBE_ADVTXD_IDX_SHIFT);
-
  /*
   * Check Context must be set if Tx switch is enabled, which it
   * always is for case where virtual functions are running
-- 
1.8.3.1