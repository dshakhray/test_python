From 346ec847339a5fe2cba6eeef4fc8e58f445ae6cb Mon Sep 17 00:00:00 2001
From: Yuval Mintz <yuvalmin@broadcom.com>
Date: Wed, 23 Jan 2013 03:21:49 +0000
Subject: [PATCH 595/858] bnx2x: Modify unload conditions

Don't unload the bnx2x driver if its in a recovery process, or if
the previous load have failed.

Signed-off-by: Yuval Mintz <yuvalmin@broadcom.com>
Signed-off-by: Ariel Elior <ariele@broadcom.com>
Signed-off-by: Eilon Greenstein <eilong@broadcom.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 80bfe5cc1b8c320247a21ff40d8c139c5f3bbcaf)

Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c | 14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c
index 296c23d..d97ab9d 100644
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c
@@ -2756,7 +2756,7 @@ int bnx2x_nic_unload(struct bnx2x *bp, int unload_mode, bool keep_link)
      val & ~DRV_FLAGS_CAPABILITIES_LOADED_L2);
  }
 
- if (IS_PF(bp) &&
+ if (IS_PF(bp) && bp->recovery_state != BNX2X_RECOVERY_DONE &&
      (bp->state == BNX2X_STATE_CLOSED ||
       bp->state == BNX2X_STATE_ERROR)) {
   /* We can get here if the driver has been unloaded
@@ -2776,8 +2776,16 @@ int bnx2x_nic_unload(struct bnx2x *bp, int unload_mode, bool keep_link)
   return -EINVAL;
  }
 
- /*
-  * It's important to set the bp->state to the value different from
+ /* Nothing to do during unload if previous bnx2x_nic_load()
+  * have not completed succesfully - all resourses are released.
+  *
+  * we can get here only after unsuccessful ndo_* callback, during which
+  * dev->IFF_UP flag is still on.
+  */
+ if (bp->state == BNX2X_STATE_CLOSED || bp->state == BNX2X_STATE_ERROR)
+  return 0;
+
+ /* It's important to set the bp->state to the value different from
   * BNX2X_STATE_OPEN and only then stop the Tx. Otherwise bnx2x_tx_int()
   * may restart the Tx from the NAPI context (see bnx2x_tx_int()).
   */
-- 
1.8.3.1