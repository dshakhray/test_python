From 82d13c16565739856b4365e8990747f3af3c967f Mon Sep 17 00:00:00 2001
From: "Luis Claudio R. Goncalves" <lclaudio@uudg.org>
Date: Thu, 11 Jul 2013 12:59:40 -0500
Subject: [PATCH 840/858] igb: minimize busy loop on igb_get_hw_semaphore

Change udelay(50) to usleep_range(50,51) in function
igb_get_hw_semaphore() on RT kernel. This prevents a potential
soft lockup where igb driver polls a h/w semaphore at high
priority in the IRQ thread and holds off other kernel threads
(e.g. RCU).

Signed-off-by: Luis Claudio R. Goncalves <lclaudio@uudg.org>
Signed-off-by: Clark Williams <williams@redhat.com>
(cherry picked from commit 3f07b930372b1154f6b317a22ebbc3552ed28932)

Signed-off-by: Clark Williams <williams@redhat.com>
---
 drivers/net/ethernet/intel/igb/e1000_mac.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/intel/igb/e1000_mac.c b/drivers/net/ethernet/intel/igb/e1000_mac.c
index a5c7200..ec0be87 100644
--- a/drivers/net/ethernet/intel/igb/e1000_mac.c
+++ b/drivers/net/ethernet/intel/igb/e1000_mac.c
@@ -1225,7 +1225,7 @@ s32 igb_get_hw_semaphore(struct e1000_hw *hw)
   if (!(swsm & E1000_SWSM_SMBI))
    break;
 
-  udelay(50);
+  usleep_range(50,51);
   i++;
  }
 
@@ -1244,7 +1244,7 @@ s32 igb_get_hw_semaphore(struct e1000_hw *hw)
   if (rd32(E1000_SWSM) & E1000_SWSM_SWESMBI)
    break;
 
-  udelay(50);
+  usleep_range(50,51);
  }
 
  if (i == timeout) {
-- 
1.8.3.1