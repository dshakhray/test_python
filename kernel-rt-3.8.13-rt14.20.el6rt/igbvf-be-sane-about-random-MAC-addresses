From 859d145b333311852092f9edc853ecb80cf8cceb Mon Sep 17 00:00:00 2001
From: Mitch A Williams <mitch.a.williams@intel.com>
Date: Fri, 18 Jan 2013 08:57:20 +0000
Subject: [PATCH 726/858] igbvf: be sane about random MAC addresses

Tighten up some of the code surrounding MAC addresses. Since the PF is
now giving all zeros instead of a random address, check for this case
and generate a random address. This ensures that we always know when we
have a random address and udev won't get upset about it.

Additionally, tighten up some of the log messages and clean up the
formatting.

Signed-off-by: Mitch Williams <mitch.a.williams@intel.com>
CC: Andy Gospodarek <andy@greyhouse.net>
CC: Stefan Assmann <sassmann@kpanic.de>
Tested-by: Aaron Brown <aaron.f.brown@intel.com>
Tested-by: Stefan Assmann <sassmann@redhat.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 8d56b6d507e0c4f6e24680fd202cbaad445935c5)

Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 drivers/net/ethernet/intel/igbvf/netdev.c | 24 ++++++++++--------------
 1 file changed, 10 insertions(+), 14 deletions(-)

diff --git a/drivers/net/ethernet/intel/igbvf/netdev.c b/drivers/net/ethernet/intel/igbvf/netdev.c
index 116f28b..f53f713 100644
--- a/drivers/net/ethernet/intel/igbvf/netdev.c
+++ b/drivers/net/ethernet/intel/igbvf/netdev.c
@@ -2733,26 +2733,22 @@ static int igbvf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
  err = hw->mac.ops.reset_hw(hw);
  if (err) {
   dev_info(&pdev->dev,
-    "PF still in reset state, assigning new address."
-    " Is the PF interface up?\n");
-  eth_hw_addr_random(netdev);
-  memcpy(adapter->hw.mac.addr, netdev->dev_addr,
-   netdev->addr_len);
+    "PF still in reset state. Is the PF interface up?\n");
  } else {
   err = hw->mac.ops.read_mac_addr(hw);
-  if (err) {
-   dev_err(&pdev->dev, "Error reading MAC address\n");
-   goto err_hw_init;
-  }
+  if (err)
+   dev_info(&pdev->dev, "Error reading MAC address.\n");
+  else if (is_zero_ether_addr(adapter->hw.mac.addr))
+   dev_info(&pdev->dev, "MAC address not assigned by administrator.\n");
   memcpy(netdev->dev_addr, adapter->hw.mac.addr,
-   netdev->addr_len);
+         netdev->addr_len);
  }
 
  if (!is_valid_ether_addr(netdev->dev_addr)) {
-  dev_err(&pdev->dev, "Invalid MAC Address: %pM\n",
-          netdev->dev_addr);
-  err = -EIO;
-  goto err_hw_init;
+  dev_info(&pdev->dev, "Assigning random MAC address.\n");
+  eth_hw_addr_random(netdev);
+  memcpy(adapter->hw.mac.addr, netdev->dev_addr,
+   netdev->addr_len);
  }
 
  setup_timer(&adapter->watchdog_timer, &igbvf_watchdog,
-- 
1.8.3.1