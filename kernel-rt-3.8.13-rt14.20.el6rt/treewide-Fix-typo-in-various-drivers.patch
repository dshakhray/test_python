From 030b005128b1c7fb686afd9bd982e9fd52d52de9 Mon Sep 17 00:00:00 2001
From: Masanari Iida <standby24x7@gmail.com>
Date: Sat, 29 Dec 2012 02:00:09 +0900
Subject: [PATCH 432/858] treewide: Fix typo in various drivers

Correct spelling typo in printk within various drivers.

Signed-off-by: Masanari Iida <standby24x7@gmail.com>
Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit 8a168ca7074b463d0e19a9e9c15946db1afbddc4)

Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

Conflicts:
 drivers/devfreq/exynos4_bus.c

Minor spelling fixup.
---
 drivers/bluetooth/ath3k.c                        | 2 +-
 drivers/devfreq/exynos4_bus.c                    | 2 +-
 drivers/firewire/ohci.c                          | 2 +-
 drivers/gpu/drm/i915/i915_debugfs.c              | 2 +-
 drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c | 2 +-
 drivers/rpmsg/virtio_rpmsg_bus.c                 | 2 +-
 drivers/target/sbp/sbp_target.c                  | 2 +-
 fs/cifs/link.c                                   | 2 +-
 fs/hpfs/inode.c                                  | 2 +-
 fs/ocfs2/cluster/tcp.c                           | 2 +-
 fs/qnx6/inode.c                                  | 2 +-
 include/linux/dma-buf.h                          | 2 +-
 net/caif/cfcnfg.c                                | 2 +-
 scripts/basic/fixdep.c                           | 2 +-
 14 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/drivers/bluetooth/ath3k.c b/drivers/bluetooth/ath3k.c
index 1c0929b..518b5d2 100644
--- a/drivers/bluetooth/ath3k.c
+++ b/drivers/bluetooth/ath3k.c
@@ -353,7 +353,7 @@ static int ath3k_load_syscfg(struct usb_device *udev)
 
  ret = ath3k_get_state(udev, &fw_state);
  if (ret < 0) {
-  BT_ERR("Can't get state to change to load configration err");
+  BT_ERR("Can't get state to change to load configuration err");
   return -EBUSY;
  }
 
diff --git a/drivers/devfreq/exynos4_bus.c b/drivers/devfreq/exynos4_bus.c
index 46d94e9..3f37f3b 100644
--- a/drivers/devfreq/exynos4_bus.c
+++ b/drivers/devfreq/exynos4_bus.c
@@ -658,7 +658,7 @@ static int exynos4_bus_target(struct device *dev, unsigned long *_freq,
  if (old_freq == freq)
   return 0;
 
- dev_dbg(dev, "targetting %lukHz %luuV\n", freq, new_oppinfo.volt);
+ dev_dbg(dev, "targeting %lukHz %luuV\n", freq, new_oppinfo.volt);
 
  mutex_lock(&data->lock);
 
diff --git a/drivers/firewire/ohci.c b/drivers/firewire/ohci.c
index 6ce6e07..45912e6 100644
--- a/drivers/firewire/ohci.c
+++ b/drivers/firewire/ohci.c
@@ -329,7 +329,7 @@ module_param_named(quirks, param_quirks, int, 0644);
 MODULE_PARM_DESC(quirks, "Chip quirks (default = 0"
  ", nonatomic cycle timer = " __stringify(QUIRK_CYCLE_TIMER)
  ", reset packet generation = " __stringify(QUIRK_RESET_PACKET)
- ", AR/selfID endianess = " __stringify(QUIRK_BE_HEADERS)
+ ", AR/selfID endianness = " __stringify(QUIRK_BE_HEADERS)
  ", no 1394a enhancements = " __stringify(QUIRK_NO_1394A)
  ", disable MSI = "  __stringify(QUIRK_NO_MSI)
  ", TI SLLZ059 erratum = " __stringify(QUIRK_TI_SLLZ059)
diff --git a/drivers/gpu/drm/i915/i915_debugfs.c b/drivers/gpu/drm/i915/i915_debugfs.c
index 261efc8e..da15d50 100644
--- a/drivers/gpu/drm/i915/i915_debugfs.c
+++ b/drivers/gpu/drm/i915/i915_debugfs.c
@@ -1464,7 +1464,7 @@ static const char *swizzle_string(unsigned swizzle)
  case I915_BIT_6_SWIZZLE_9_10_17:
   return "bit9/bit10/bit17";
  case I915_BIT_6_SWIZZLE_UNKNOWN:
-  return "unkown";
+  return "unknown";
  }
 
  return "bug";
diff --git a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
index fb7ac8e..7f63b5f 100644
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
@@ -1063,7 +1063,7 @@ static int qlcnic_check_npar_opertional(struct qlcnic_adapter *adapter)
  }
  if (!npar_opt_timeo) {
   dev_err(&adapter->pdev->dev,
-   "Waiting for NPAR state to opertional timeout\n");
+   "Waiting for NPAR state to operational timeout\n");
   return -EIO;
  }
  return 0;
diff --git a/drivers/rpmsg/virtio_rpmsg_bus.c b/drivers/rpmsg/virtio_rpmsg_bus.c
index f1e3239..d854460 100644
--- a/drivers/rpmsg/virtio_rpmsg_bus.c
+++ b/drivers/rpmsg/virtio_rpmsg_bus.c
@@ -839,7 +839,7 @@ static void rpmsg_recv_done(struct virtqueue *rvq)
   /* farewell, ept, we don't need you anymore */
   kref_put(&ept->refcount, __ept_release);
  } else
-  dev_warn(dev, "msg received with no recepient\n");
+  dev_warn(dev, "msg received with no recipient\n");
 
  /* publish the real size of the buffer */
  sg_init_one(&sg, msg, RPMSG_BUF_SIZE);
diff --git a/drivers/target/sbp/sbp_target.c b/drivers/target/sbp/sbp_target.c
index 2e8d06f..6917a9e 100644
--- a/drivers/target/sbp/sbp_target.c
+++ b/drivers/target/sbp/sbp_target.c
@@ -1719,7 +1719,7 @@ static struct se_node_acl *sbp_alloc_fabric_acl(struct se_portal_group *se_tpg)
 
  nacl = kzalloc(sizeof(struct sbp_nacl), GFP_KERNEL);
  if (!nacl) {
-  pr_err("Unable to alocate struct sbp_nacl\n");
+  pr_err("Unable to allocate struct sbp_nacl\n");
   return NULL;
  }
 
diff --git a/fs/cifs/link.c b/fs/cifs/link.c
index 51dc2fb..9f6c4c4 100644
--- a/fs/cifs/link.c
+++ b/fs/cifs/link.c
@@ -76,7 +76,7 @@ symlink_hash(unsigned int link_len, const char *link_str, u8 *md5_hash)
  }
  rc = crypto_shash_update(&sdescmd5->shash, link_str, link_len);
  if (rc) {
-  cERROR(1, "%s: Could not update iwth link_str", __func__);
+  cERROR(1, "%s: Could not update with link_str", __func__);
   goto symlink_hash_err;
  }
  rc = crypto_shash_final(&sdescmd5->shash, md5_hash);
diff --git a/fs/hpfs/inode.c b/fs/hpfs/inode.c
index 5dc06c8..9edeeb0 100644
--- a/fs/hpfs/inode.c
+++ b/fs/hpfs/inode.c
@@ -147,7 +147,7 @@ static void hpfs_write_inode_ea(struct inode *i, struct fnode *fnode)
  /*if (le32_to_cpu(fnode->acl_size_l) || le16_to_cpu(fnode->acl_size_s)) {
      Some unknown structures like ACL may be in fnode,
      we'd better not overwrite them
-  hpfs_error(i->i_sb, "fnode %08x has some unknown HPFS386 stuctures", i->i_ino);
+  hpfs_error(i->i_sb, "fnode %08x has some unknown HPFS386 structures", i->i_ino);
  } else*/ if (hpfs_sb(i->i_sb)->sb_eas >= 2) {
   __le32 ea;
   if (!uid_eq(i->i_uid, hpfs_sb(i->i_sb)->sb_uid) || hpfs_inode->i_ea_uid) {
diff --git a/fs/ocfs2/cluster/tcp.c b/fs/ocfs2/cluster/tcp.c
index 1bfe880..a1d83c5 100644
--- a/fs/ocfs2/cluster/tcp.c
+++ b/fs/ocfs2/cluster/tcp.c
@@ -870,7 +870,7 @@ int o2net_register_handler(u32 msg_type, u32 key, u32 max_len,
   /* we've had some trouble with handlers seemingly vanishing. */
   mlog_bug_on_msg(o2net_handler_tree_lookup(msg_type, key, &p,
          &parent) == NULL,
-           "couldn't find handler we *just* registerd "
+           "couldn't find handler we *just* registered "
     "for type %u key %08x\n", msg_type, key);
  }
  write_unlock(&o2net_handler_lock);
diff --git a/fs/qnx6/inode.c b/fs/qnx6/inode.c
index b6addf5..57199a5 100644
--- a/fs/qnx6/inode.c
+++ b/fs/qnx6/inode.c
@@ -285,7 +285,7 @@ static struct buffer_head *qnx6_check_first_superblock(struct super_block *s,
   if (fs32_to_cpu(sbi, sb->sb_magic) == QNX6_SUPER_MAGIC) {
    /* we got a big endian fs */
    QNX6DEBUG((KERN_INFO "qnx6: fs got different"
-     " endianess.\n"));
+     " endianness.\n"));
    return bh;
   } else
    sbi->s_bytesex = BYTESEX_LE;
diff --git a/include/linux/dma-buf.h b/include/linux/dma-buf.h
index bd2e52c..3d754a3 100644
--- a/include/linux/dma-buf.h
+++ b/include/linux/dma-buf.h
@@ -53,7 +53,7 @@ struct dma_buf_attachment;
  * @begin_cpu_access: [optional] called before cpu access to invalidate cpu
  *         caches and allocate backing storage (if not yet done)
  *         respectively pin the objet into memory.
- * @end_cpu_access: [optional] called after cpu access to flush cashes.
+ * @end_cpu_access: [optional] called after cpu access to flush caches.
  * @kmap_atomic: maps a page from the buffer into kernel address
  *    space, users may not block until the subsequent unmap call.
  *    This callback must not sleep.
diff --git a/net/caif/cfcnfg.c b/net/caif/cfcnfg.c
index ba9cfd4..f1dbddb 100644
--- a/net/caif/cfcnfg.c
+++ b/net/caif/cfcnfg.c
@@ -402,7 +402,7 @@ cfcnfg_linkup_rsp(struct cflayer *layer, u8 channel_id, enum cfctrl_srv serv,
 
  phyinfo = cfcnfg_get_phyinfo_rcu(cnfg, phyid);
  if (phyinfo == NULL) {
-  pr_err("ERROR: Link Layer Device dissapeared"
+  pr_err("ERROR: Link Layer Device disappeared"
     "while connecting\n");
   goto unlock;
  }
diff --git a/scripts/basic/fixdep.c b/scripts/basic/fixdep.c
index cb1f50c..7f6425e 100644
--- a/scripts/basic/fixdep.c
+++ b/scripts/basic/fixdep.c
@@ -409,7 +409,7 @@ static void traps(void)
  int *p = (int *)test;
 
  if (*p != INT_CONF) {
-  fprintf(stderr, "fixdep: sizeof(int) != 4 or wrong endianess? %#x\n",
+  fprintf(stderr, "fixdep: sizeof(int) != 4 or wrong endianness? %#x\n",
    *p);
   exit(2);
  }
-- 
1.8.3.1