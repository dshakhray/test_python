From 1b6de0d9d00660a64d5aef3ac89f8578c8b659fe Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:23:04 -0400
Subject: [fs] ceph: Avoid data inconsistency due to d-cache aliasing in readpage()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-78-git-send-email-sweil@redhat.com>
Patchwork-id: 89606
O-Subject: [PATCH 077/303] ceph: Avoid data inconsistency due to d-cache aliasing in readpage()
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Li Wang <liwang@ubuntukylin.com>

If the length of data to be read in readpage() is exactly
PAGE_CACHE_SIZE, the original code does not flush d-cache
for data consistency after finishing reading. This patches fixes
this.

Signed-off-by: Li Wang <liwang@ubuntukylin.com>
Signed-off-by: Sage Weil <sage@inktank.com>
(cherry picked from commit 56f91aad69444d650237295f68c195b74d888d95)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ceph/addr.c b/fs/ceph/addr.c
index 44b7679..ac86250 100644
--- a/fs/ceph/addr.c
+++ b/fs/ceph/addr.c
@@ -195,9 +195,13 @@ static int readpage_nounlock(struct file *filp, struct page *page)
  if (err < 0) {
   SetPageError(page);
   goto out;
- } else if (err < PAGE_CACHE_SIZE) {
+ } else {
+  if (err < PAGE_CACHE_SIZE) {
   /* zero fill remainder of page */
-  zero_user_segment(page, err, PAGE_CACHE_SIZE);
+   zero_user_segment(page, err, PAGE_CACHE_SIZE);
+  } else {
+   flush_dcache_page(page);
+  }
  }
  SetPageUptodate(page);
 out:
-- 
1.7.1