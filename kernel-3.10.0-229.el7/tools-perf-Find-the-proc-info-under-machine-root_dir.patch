From 77469678dd5c6e7c9b89be029116ba728f2b1ea0 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:51:31 -0400
Subject: [tools] perf: Find the proc info under machine->root_dir

Message-id: <1408953210-26343-204-git-send-email-jolsa@redhat.com>
Patchwork-id: 88856
O-Subject: [PATCH RHEL7.1 BZ1133083 203/322] perf tools: Find the proc info under machine->root_dir.
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 995634650ef1f907196bd7e9ae45354124a80e47
Author: Dongsheng Yang <yangds.fnst@cn.fujitsu.com>
Date: Fri Dec 20 15:52:57 2013 -0500

description
===========
When we synthesize the threads, we are looking for the infomation under
/proc. But it is only for host.

This patch look for the path of proc under machine->root_dir, then
XXX__synthesize_threads() functions can support guest machines.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/event.c b/tools/perf/util/event.c
index 484e994..a61726e 100644
--- a/tools/perf/util/event.c
+++ b/tools/perf/util/event.c
@@ -129,7 +129,8 @@ static pid_t perf_event__synthesize_comm(struct perf_tool *tool,
   goto out;
  }
 
- snprintf(filename, sizeof(filename), "/proc/%d/task", pid);
+ snprintf(filename, sizeof(filename), "%s/proc/%d/task",
+   machine->root_dir, pid);
 
  tasks = opendir(filename);
  if (tasks == NULL) {
@@ -178,7 +179,8 @@ static int perf_event__synthesize_mmap_events(struct perf_tool *tool,
  FILE *fp;
  int rc = 0;
 
- snprintf(filename, sizeof(filename), "/proc/%d/maps", pid);
+ snprintf(filename, sizeof(filename), "%s/proc/%d/maps",
+   machine->root_dir, pid);
 
  fp = fopen(filename, "r");
  if (fp == NULL) {
@@ -387,6 +389,7 @@ int perf_event__synthesize_threads(struct perf_tool *tool,
        struct machine *machine, bool mmap_data)
 {
  DIR *proc;
+ char proc_path[PATH_MAX];
  struct dirent dirent, *next;
  union perf_event *comm_event, *mmap_event;
  int err = -1;
@@ -399,7 +402,9 @@ int perf_event__synthesize_threads(struct perf_tool *tool,
  if (mmap_event == NULL)
   goto out_free_comm;
 
- proc = opendir("/proc");
+ snprintf(proc_path, sizeof(proc_path), "%s/proc", machine->root_dir);
+ proc = opendir(proc_path);
+
  if (proc == NULL)
   goto out_free_mmap;
 
-- 
1.7.1