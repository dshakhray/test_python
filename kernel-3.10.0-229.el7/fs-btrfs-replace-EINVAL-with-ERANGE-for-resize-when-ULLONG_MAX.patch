From 53cd57318b50139e635b03bced905156aa2b9787 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:04:15 -0400
Subject: [fs] btrfs: replace EINVAL with ERANGE for resize when ULLONG_MAX

Message-id: <1407179109-13714-369-git-send-email-sandeen@redhat.com>
Patchwork-id: 87252
O-Subject: [RHEL7.1 PATCH 368/422] btrfs: replace EINVAL with ERANGE for resize when ULLONG_MAX
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Gui Hecheng <guihc.fnst@cn.fujitsu.com>

commit 902c68a4da74442f0ab1c0b458f7723a68dfd3b1
Author: Gui Hecheng <guihc.fnst@cn.fujitsu.com>
Date:   Thu May 29 09:19:58 2014 +0800

    btrfs: replace EINVAL with ERANGE for resize when ULLONG_MAX

    To be accurate about the error case,
    if the new size is beyond ULLONG_MAX, return ERANGE instead of EINVAL.

    Signed-off-by: Gui Hecheng <guihc.fnst@cn.fujitsu.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/ioctl.c b/fs/btrfs/ioctl.c
index 219e26f..55f4d71 100644
--- a/fs/btrfs/ioctl.c
+++ b/fs/btrfs/ioctl.c
@@ -1593,7 +1593,7 @@ static noinline int btrfs_ioctl_resize(struct file *file,
   new_size = old_size - new_size;
  } else if (mod > 0) {
   if (new_size > ULLONG_MAX - old_size) {
-   ret = -EINVAL;
+   ret = -ERANGE;
    goto out_free;
   }
   new_size = old_size + new_size;
-- 
1.7.1