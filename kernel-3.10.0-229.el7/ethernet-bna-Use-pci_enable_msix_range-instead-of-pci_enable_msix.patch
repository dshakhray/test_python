From afd428af821c38e811a0e9455affbdc5e2a4613b Mon Sep 17 00:00:00 2001
From: Ivan Vecera <ivecera@redhat.com>
Date: Wed, 3 Sep 2014 15:15:50 -0400
Subject: [ethernet] bna: Use pci_enable_msix_range() instead of pci_enable_msix()

Message-id: <1409757361-26781-3-git-send-email-ivecera@redhat.com>
Patchwork-id: 91163
O-Subject: [RHEL7.1 PATCH 02/13] bna: Use pci_enable_msix_range() instead of pci_enable_msix()
Bugzilla: 1136912
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

BZ: #1136912

Upstream commit(s):
commit 43c20200d13146b2e51a0bd069a566e582c75c9d
Author: Alexander Gordeev <agordeev@redhat.com>
Date:   Tue Feb 18 11:07:56 2014 +0100

    bna: Use pci_enable_msix_range() instead of pci_enable_msix()

    As result of deprecation of MSI-X/MSI enablement functions
    pci_enable_msix() and pci_enable_msi_block() all drivers
    using these two interfaces need to be updated to use the
    new pci_enable_msi_range() and pci_enable_msix_range()
    interfaces.

    Signed-off-by: Alexander Gordeev <agordeev@redhat.com>
    Cc: Rasesh Mody <rmody@brocade.com>
    Cc: netdev@vger.kernel.org
    Cc: linux-pci@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Ivan Vecera <ivecera@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/brocade/bna/bnad.c b/drivers/net/ethernet/brocade/bna/bnad.c
index 4ad1187..aeec9cc 100644
--- a/drivers/net/ethernet/brocade/bna/bnad.c
+++ b/drivers/net/ethernet/brocade/bna/bnad.c
@@ -2669,9 +2669,11 @@ bnad_enable_msix(struct bnad *bnad)
  for (i = 0; i < bnad->msix_num; i++)
   bnad->msix_table[i].entry = i;
 
- ret = pci_enable_msix(bnad->pcidev, bnad->msix_table, bnad->msix_num);
- if (ret > 0) {
-  /* Not enough MSI-X vectors. */
+ ret = pci_enable_msix_range(bnad->pcidev, bnad->msix_table,
+        1, bnad->msix_num);
+ if (ret < 0) {
+  goto intx_mode;
+ } else if (ret < bnad->msix_num) {
   pr_warn("BNA: %d MSI-X vectors allocated < %d requested\n",
    ret, bnad->msix_num);
 
@@ -2684,18 +2686,11 @@ bnad_enable_msix(struct bnad *bnad)
   bnad->msix_num = BNAD_NUM_TXQ + BNAD_NUM_RXP +
     BNAD_MAILBOX_MSIX_VECTORS;
 
-  if (bnad->msix_num > ret)
-   goto intx_mode;
-
-  /* Try once more with adjusted numbers */
-  /* If this fails, fall back to INTx */
-  ret = pci_enable_msix(bnad->pcidev, bnad->msix_table,
-          bnad->msix_num);
-  if (ret)
+  if (bnad->msix_num > ret) {
+   pci_disable_msix(bnad->pcidev);
    goto intx_mode;
-
- } else if (ret < 0)
-  goto intx_mode;
+  }
+ }
 
  pci_intx(bnad->pcidev, 0);
 
-- 
1.7.1