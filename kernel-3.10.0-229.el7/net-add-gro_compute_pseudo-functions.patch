From 551cc17d4e52e2c9b45aa14dd38e2f7754d1e5fa Mon Sep 17 00:00:00 2001
From: Florian Westphal <fwestpha@redhat.com>
Date: Tue, 2 Sep 2014 10:15:04 -0400
Subject: [net] add gro_compute_pseudo functions

Message-id: <1409652920-431-42-git-send-email-fwestpha@redhat.com>
Patchwork-id: 90178
O-Subject: [PATCH 41/57] [RHEL7.1 net] net: add gro_compute_pseudo functions
Bugzilla: 1131999
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: Vlad Yasevich <vyasevic@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>
RH-Acked-by: Jiri Benc <jbenc@redhat.com>

BZ: 1131999

conflict due to context difference only.

commit 1933a7852ce6a81349855431b25122d7666bbfca
Author: Tom Herbert <therbert@google.com>
Date:   Fri Aug 22 13:34:04 2014 -0700

    net: add gro_compute_pseudo functions

    Add inet_gro_compute_pseudo and ip6_gro_compute_pseudo. These are
    the logical equivalents of inet_compute_pseudo and ip6_compute_pseudo
    for GRO path. The IP header is taken from skb_gro_network_header.

    Signed-off-by: Tom Herbert <therbert@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/net/ip.h b/include/net/ip.h
index f148ad0..3f8d3e0 100644
--- a/include/net/ip.h
+++ b/include/net/ip.h
@@ -319,6 +319,14 @@ static inline __wsum inet_compute_pseudo(struct sk_buff *skb, int proto)
       skb->len, proto, 0);
 }
 
+static inline __wsum inet_gro_compute_pseudo(struct sk_buff *skb, int proto)
+{
+ const struct iphdr *iph = skb_gro_network_header(skb);
+
+ return csum_tcpudp_nofold(iph->saddr, iph->daddr,
+      skb_gro_len(skb), proto, 0);
+}
+
 /*
  * Map a multicast IP onto multicast MAC for type ethernet.
  */
diff --git a/include/net/ip6_checksum.h b/include/net/ip6_checksum.h
index 55236cb..1a49b73 100644
--- a/include/net/ip6_checksum.h
+++ b/include/net/ip6_checksum.h
@@ -48,6 +48,14 @@ static inline __wsum ip6_compute_pseudo(struct sk_buff *skb, int proto)
          skb->len, proto, 0));
 }
 
+static inline __wsum ip6_gro_compute_pseudo(struct sk_buff *skb, int proto)
+{
+ const struct ipv6hdr *iph = skb_gro_network_header(skb);
+
+ return ~csum_unfold(csum_ipv6_magic(&iph->saddr, &iph->daddr,
+         skb_gro_len(skb), proto, 0));
+}
+
 static __inline__ __sum16 tcp_v6_check(int len,
        const struct in6_addr *saddr,
        const struct in6_addr *daddr,
-- 
1.7.1