From 107b50aa97de89f00f20c610811a9ad55f3ddae9 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:14:05 -0400
Subject: [fs] pstore: Introduce new argument 'compressed' in the read callback

Message-id: <1410545655-205645-617-git-send-email-dzickus@redhat.com>
Patchwork-id: 94684
O-Subject: [RHEL7 PATCH 616/626] pstore: Introduce new argument 'compressed' in the read callback
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 9a4e1398208d147a9240731a1f8cfe7d8cc4c553
Author: Aruna Balakrishnaiah <aruna@linux.vnet.ibm.com>
Date:   Fri Aug 16 13:53:19 2013 -0700

    pstore: Introduce new argument 'compressed' in the read callback

    Backends will set the flag 'compressed' after reading the log from
    persistent store to indicate the data being returned to pstore is
    compressed or not.

    Signed-off-by: Aruna Balakrishnaiah <aruna@linux.vnet.ibm.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/platforms/pseries/nvram.c b/arch/powerpc/platforms/pseries/nvram.c
index d0750f7..5169032 100644
--- a/arch/powerpc/platforms/pseries/nvram.c
+++ b/arch/powerpc/platforms/pseries/nvram.c
@@ -597,7 +597,7 @@ static int nvram_pstore_write(enum pstore_type_id type,
  */
 static ssize_t nvram_pstore_read(u64 *id, enum pstore_type_id *type,
     int *count, struct timespec *time, char **buf,
-    struct pstore_info *psi)
+    bool *compressed, struct pstore_info *psi)
 {
  struct oops_log_info *oops_hdr;
  unsigned int err_type, id_no, size = 0;
diff --git a/drivers/acpi/apei/erst.c b/drivers/acpi/apei/erst.c
index 5e90796..b0dca8e 100644
--- a/drivers/acpi/apei/erst.c
+++ b/drivers/acpi/apei/erst.c
@@ -933,7 +933,7 @@ static int erst_open_pstore(struct pstore_info *psi);
 static int erst_close_pstore(struct pstore_info *psi);
 static ssize_t erst_reader(u64 *id, enum pstore_type_id *type, int *count,
       struct timespec *time, char **buf,
-      struct pstore_info *psi);
+      bool *compressed, struct pstore_info *psi);
 static int erst_writer(enum pstore_type_id type, enum kmsg_dump_reason reason,
          u64 *id, unsigned int part, int count, bool compressed,
          size_t size, struct pstore_info *psi);
@@ -989,7 +989,7 @@ static int erst_close_pstore(struct pstore_info *psi)
 
 static ssize_t erst_reader(u64 *id, enum pstore_type_id *type, int *count,
       struct timespec *time, char **buf,
-      struct pstore_info *psi)
+      bool *compressed, struct pstore_info *psi)
 {
  int rc;
  ssize_t len = 0;
diff --git a/drivers/firmware/efi/efi-pstore.c b/drivers/firmware/efi/efi-pstore.c
index 24858f9..1f4239f 100644
--- a/drivers/firmware/efi/efi-pstore.c
+++ b/drivers/firmware/efi/efi-pstore.c
@@ -196,7 +196,8 @@ static int efi_pstore_sysfs_entry_iter(void *data, struct efivar_entry **pos)
  */
 static ssize_t efi_pstore_read(u64 *id, enum pstore_type_id *type,
           int *count, struct timespec *timespec,
-          char **buf, struct pstore_info *psi)
+          char **buf, bool *compressed,
+          struct pstore_info *psi)
 {
  struct pstore_read_data data;
  ssize_t size;
diff --git a/fs/pstore/platform.c b/fs/pstore/platform.c
index 20fa686..602bc4b 100644
--- a/fs/pstore/platform.c
+++ b/fs/pstore/platform.c
@@ -298,6 +298,7 @@ void pstore_get_records(int quiet)
  enum pstore_type_id type;
  struct timespec  time;
  int   failed = 0, rc;
+ bool   compressed;
 
  if (!psi)
   return;
@@ -306,7 +307,8 @@ void pstore_get_records(int quiet)
  if (psi->open && psi->open(psi))
   goto out;
 
- while ((size = psi->read(&id, &type, &count, &time, &buf, psi)) > 0) {
+ while ((size = psi->read(&id, &type, &count, &time, &buf, &compressed,
+    psi)) > 0) {
   rc = pstore_mkfile(type, psi->name, id, count, buf,
       (size_t)size, time, psi);
   kfree(buf);
diff --git a/fs/pstore/ram.c b/fs/pstore/ram.c
index 2fa71ee..5f6980c 100644
--- a/fs/pstore/ram.c
+++ b/fs/pstore/ram.c
@@ -133,7 +133,8 @@ ramoops_get_next_prz(struct persistent_ram_zone *przs[], uint *c, uint max,
 
 static ssize_t ramoops_pstore_read(u64 *id, enum pstore_type_id *type,
        int *count, struct timespec *time,
-       char **buf, struct pstore_info *psi)
+       char **buf, bool *compressed,
+       struct pstore_info *psi)
 {
  ssize_t size;
  ssize_t ecc_notice_size;
diff --git a/include/linux/pstore.h b/include/linux/pstore.h
index abfca4f..abd437d 100644
--- a/include/linux/pstore.h
+++ b/include/linux/pstore.h
@@ -55,7 +55,7 @@ struct pstore_info {
  int  (*close)(struct pstore_info *psi);
  ssize_t  (*read)(u64 *id, enum pstore_type_id *type,
    int *count, struct timespec *time, char **buf,
-   struct pstore_info *psi);
+   bool *compressed, struct pstore_info *psi);
  int  (*write)(enum pstore_type_id type,
    enum kmsg_dump_reason reason, u64 *id,
    unsigned int part, int count, bool compressed,
-- 
1.7.1