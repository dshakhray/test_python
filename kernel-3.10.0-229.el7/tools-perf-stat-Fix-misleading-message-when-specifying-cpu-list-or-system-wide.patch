From b0ffdaa81f797535682971589f63d040e47e3d6e Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:25:20 -0400
Subject: [tools] perf/stat: Fix misleading message when specifying cpu list or system wide

Message-id: <1408462094-14194-152-git-send-email-jolsa@redhat.com>
Patchwork-id: 88120
O-Subject: [PATCH RHEL7.1 BZ1131394 151/325] perf stat: Fix misleading message when specifying cpu list or system wide
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 62d3b617c02785a4f1fbde8d93ca77a0b33d8454
Author: David Ahern <dsahern@gmail.com>
Date: Sat Sep 28 14:27:58 2013 -0600

description
===========
The "perf stat" tool displays the command run in its summary output
which is misleading when using a cpu list or system wide collection.

Before:

perf stat -a -- sleep 1

 Performance counter stats for 'sleep 1':

16152.670249 task-clock                #   16.132 CPUs utilized
         417 context-switches          #    0.002 M/sec
           7 cpu-migrations            #    0.030 K/sec
...

After:

perf stat -a -- sleep 1

 Performance counter stats for 'system wide':

16206.931120 task-clock                #   16.144 CPUs utilized
         395 context-switches          #    0.002 M/sec
           5 cpu-migrations            #    0.030 K/sec
...

or

perf stat -C1 -- sleep 1

 Performance counter stats for 'CPU(s) 1':

   1001.669257 task-clock                #    1.000 CPUs utilized
         4,264 context-switches          #    0.004 M/sec
             3 cpu-migrations            #    0.003 K/sec
...
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-stat.c b/tools/perf/builtin-stat.c
index fb02b53..c8a2662 100644
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@ -1229,7 +1229,11 @@ static void print_stat(int argc, const char **argv)
  if (!csv_output) {
   fprintf(output, "\n");
   fprintf(output, " Performance counter stats for ");
-  if (!perf_target__has_task(&target)) {
+  if (target.system_wide)
+   fprintf(output, "\'system wide");
+  else if (target.cpu_list)
+   fprintf(output, "\'CPU(s) %s", target.cpu_list);
+  else if (!perf_target__has_task(&target)) {
    fprintf(output, "\'%s", argv[0]);
    for (i = 1; i < argc; i++)
     fprintf(output, " %s", argv[i]);
-- 
1.7.1