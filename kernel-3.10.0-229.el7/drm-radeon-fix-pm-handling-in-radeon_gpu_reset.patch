From 901cf26ff8d43ca98e26cf84cd322940e2940381 Mon Sep 17 00:00:00 2001
From: Rob Clark <rclark@redhat.com>
Date: Wed, 17 Dec 2014 21:38:48 -0500
Subject: [drm] radeon: fix pm handling in radeon_gpu_reset

Message-id: <1418852380-13061-38-git-send-email-rclark@redhat.com>
Patchwork-id: 102226
O-Subject: [RHEL7 drm 37/89] drm/radeon: fix pm handling in radeon_gpu_reset
Bugzilla: 1173317
RH-Acked-by: Jerome Glisse <jglisse@redhat.com>
RH-Acked-by: Dave Airlie <airlied@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1173317
Upstream: since v3.16.4

commit 05396d20dc953fb4ed295693afb2095963b1c4c4

Author:     Alex Deucher <alexander.deucher@amd.com>
AuthorDate: Mon Aug 18 11:57:28 2014 -0400
Commit:     Rob Clark <rclark@redhat.com>
CommitDate: Wed Dec 10 17:19:46 2014 -0500

    drm/radeon: fix pm handling in radeon_gpu_reset

    commit c940b4476f4fb649f6493b6a0ae837474ded8915 upstream.

    pm_suspend is handled in the radeon_suspend callbacks.
    pm_resume has special handling depending on whether
    dpm or legacy pm is enabled.  Change radeon_gpu_reset
    to mirror the behavior in the suspend and resume
    pathes.

    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Christian Koenig <christian.koenig@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Signed-off-by: Rob Clark <rclark@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/gpu/drm/radeon/radeon_device.c b/drivers/gpu/drm/radeon/radeon_device.c
index 697add2..614f1da 100644
--- a/drivers/gpu/drm/radeon/radeon_device.c
+++ b/drivers/gpu/drm/radeon/radeon_device.c
@@ -1637,7 +1637,6 @@ int radeon_gpu_reset(struct radeon_device *rdev)
  radeon_save_bios_scratch_regs(rdev);
  /* block TTM */
  resched = ttm_bo_lock_delayed_workqueue(&rdev->mman.bdev);
- radeon_pm_suspend(rdev);
  radeon_suspend(rdev);
 
  for (i = 0; i < RADEON_NUM_RINGS; ++i) {
@@ -1683,9 +1682,24 @@ retry:
   }
  }
 
- radeon_pm_resume(rdev);
+ if ((rdev->pm.pm_method == PM_METHOD_DPM) && rdev->pm.dpm_enabled) {
+  /* do dpm late init */
+  r = radeon_pm_late_init(rdev);
+  if (r) {
+   rdev->pm.dpm_enabled = false;
+   DRM_ERROR("radeon_pm_late_init failed, disabling dpm\n");
+  }
+ } else {
+  /* resume old pm late */
+  radeon_pm_resume(rdev);
+ }
+
  drm_helper_resume_force_mode(rdev->ddev);
 
+ /* set the power state here in case we are a PX system or headless */
+ if ((rdev->pm.pm_method == PM_METHOD_DPM) && rdev->pm.dpm_enabled)
+  radeon_pm_compute_clocks(rdev);
+
  ttm_bo_unlock_delayed_workqueue(&rdev->mman.bdev, resched);
  if (r) {
   /* bad news, how to tell it to userspace ? */
-- 
1.7.1