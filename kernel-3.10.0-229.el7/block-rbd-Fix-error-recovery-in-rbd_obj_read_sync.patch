From 82ef525673da8182bf9747fc1a94a404a285a8ab Mon Sep 17 00:00:00 2001
From: Ilya Dryomov <ilya.dryomov@inktank.com>
Date: Tue, 18 Nov 2014 15:49:58 -0500
Subject: [block] rbd: Fix error recovery in rbd_obj_read_sync()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1416325805-26490-44-git-send-email-idryomov@redhat.com>
Patchwork-id: 100235
O-Subject: [RHEL7.1 PATCH 43/50] rbd: Fix error recovery in rbd_obj_read_sync()
Bugzilla: 1165232
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Sage Weil <sweil@redhat.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>

From: Jan Kara <jack@suse.cz>

When we fail to allocate page vector in rbd_obj_read_sync() we just
basically ignore the problem and continue which will result in an oops
later. Fix the problem by returning proper error.

CC: Yehuda Sadeh <yehuda@inktank.com>
CC: Sage Weil <sage@inktank.com>
CC: ceph-devel@vger.kernel.org
CC: stable@vger.kernel.org
Coverity-id: 1226882
Signed-off-by: Jan Kara <jack@suse.cz>
Signed-off-by: Ilya Dryomov <idryomov@redhat.com>
(cherry picked from commit a8d4205623ae965e36c68629db306ca0695a2771)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/block/rbd.c b/drivers/block/rbd.c
index d8b3f0a..6f6c690 100644
--- a/drivers/block/rbd.c
+++ b/drivers/block/rbd.c
@@ -3576,7 +3576,7 @@ static int rbd_obj_read_sync(struct rbd_device *rbd_dev,
  page_count = (u32) calc_pages_for(offset, length);
  pages = ceph_alloc_page_vector(page_count, GFP_KERNEL);
  if (IS_ERR(pages))
-  ret = PTR_ERR(pages);
+  return PTR_ERR(pages);
 
  ret = -ENOMEM;
  obj_request = rbd_obj_request_create(object_name, offset, length,
-- 
1.7.1