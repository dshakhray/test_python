From 0bb0e68b49218ee1e593d1aca107b4528205620d Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Fri, 13 Jun 2014 14:35:35 -0400
Subject: [block] Revert: blk-mq: initialize req->q in allocation

Message-id: <1402670238-13916-48-git-send-email-snitzer@redhat.com>
Patchwork-id: 83790
O-Subject: [RHEL7.1 PATCH 047/150] Revert "blk-mq: initialize req->q in allocation"
Bugzilla: 1105204
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Jeff Moyer <jmoyer@redhat.com>

BZ: 1105204

Upstream commit 70ab0b2d51f84fc7d9eb6ed81c3986595efaa33d
Author: Jens Axboe <axboe@fb.com>
Date:   Thu Apr 24 08:50:38 2014 -0600

    Revert "blk-mq: initialize req->q in allocation"

    This reverts commit 6a3c8a3ac0e68dcfc2a01f4aa1ca0edd1a1701eb.

    We need selective clearing of the request to make the init-at-free
    time completely safe. Otherwise we end up stomping on
    rq->atomic_flags, which we don't want to do.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/block/blk-mq.c b/block/blk-mq.c
index cea1bd8..7d5650d 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -82,6 +82,7 @@ static struct request *__blk_mq_alloc_request(struct blk_mq_hw_ctx *hctx,
  tag = blk_mq_get_tag(hctx->tags, gfp, reserved);
  if (tag != BLK_MQ_TAG_FAIL) {
   rq = hctx->tags->rqs[tag];
+  blk_rq_init(hctx->queue, rq);
   rq->tag = tag;
 
   return rq;
@@ -186,7 +187,6 @@ static void blk_mq_rq_ctx_init(struct request_queue *q, struct blk_mq_ctx *ctx,
  if (blk_queue_io_stat(q))
   rw_flags |= REQ_IO_STAT;
 
- rq->q = q;
  rq->mq_ctx = ctx;
  rq->cmd_flags = rw_flags;
  rq->start_time = jiffies;
@@ -258,7 +258,6 @@ static void __blk_mq_free_request(struct blk_mq_hw_ctx *hctx,
  const int tag = rq->tag;
  struct request_queue *q = rq->q;
 
- blk_rq_init(hctx->queue, rq);
  blk_mq_put_tag(hctx->tags, tag);
  blk_mq_queue_exit(q);
 }
@@ -1195,7 +1194,6 @@ static struct blk_mq_tags *blk_mq_init_rq_map(struct blk_mq_tag_set *set,
   left -= to_do * rq_size;
   for (j = 0; j < to_do; j++) {
    tags->rqs[i] = p;
-   blk_rq_init(NULL, tags->rqs[i]);
    if (set->ops->init_request) {
     if (set->ops->init_request(set->driver_data,
       tags->rqs[i], hctx_idx, i,
-- 
1.7.1