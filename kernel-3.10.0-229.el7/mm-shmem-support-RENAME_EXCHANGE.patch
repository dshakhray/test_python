From 9c696736eb8f91bd3ef87480904883d57896aca7 Mon Sep 17 00:00:00 2001
From: David Howells <dhowells@redhat.com>
Date: Tue, 25 Nov 2014 16:34:12 -0500
Subject: [mm] shmem: support RENAME_EXCHANGE

Message-id: <20141125163412.18115.7134.stgit@warthog.procyon.org.uk>
Patchwork-id: 100918
O-Subject: [PATCH 18/47] shmem: support RENAME_EXCHANGE
Bugzilla: 985875
RH-Acked-by: Steve Best <sbest@redhat.com>

From: Miklos Szeredi <mszeredi@suse.cz>

This is really simple in tmpfs since the VFS already takes care of
shuffling the dentries.  Just adjust nlink on parent directories and touch
c & mtimes.

Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
Acked-by: Hugh Dickins <hughd@google.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
Original-commit: 37456771c58be10dd813fb4510035d0d67a969aa
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/mm/shmem.c b/mm/shmem.c
index e49891c..a8f6d7c 100644
--- a/mm/shmem.c
+++ b/mm/shmem.c
@@ -2052,6 +2052,28 @@ static int shmem_rmdir(struct inode *dir, struct dentry *dentry)
  return shmem_unlink(dir, dentry);
 }
 
+static int shmem_exchange(struct inode *old_dir, struct dentry *old_dentry, struct inode *new_dir, struct dentry *new_dentry)
+{
+ bool old_is_dir = S_ISDIR(old_dentry->d_inode->i_mode);
+ bool new_is_dir = S_ISDIR(new_dentry->d_inode->i_mode);
+
+ if (old_dir != new_dir && old_is_dir != new_is_dir) {
+  if (old_is_dir) {
+   drop_nlink(old_dir);
+   inc_nlink(new_dir);
+  } else {
+   drop_nlink(new_dir);
+   inc_nlink(old_dir);
+  }
+ }
+ old_dir->i_ctime = old_dir->i_mtime =
+ new_dir->i_ctime = new_dir->i_mtime =
+ old_dentry->d_inode->i_ctime =
+ new_dentry->d_inode->i_ctime = CURRENT_TIME;
+
+ return 0;
+}
+
 /*
  * The VFS layer already does all the dentry stuff for rename,
  * we just have to decrement the usage count for the target if
@@ -2063,9 +2085,12 @@ static int shmem_rename2(struct inode *old_dir, struct dentry *old_dentry, struc
  struct inode *inode = old_dentry->d_inode;
  int they_are_dirs = S_ISDIR(inode->i_mode);
 
- if (flags & ~(RENAME_NOREPLACE))
+ if (flags & ~(RENAME_NOREPLACE | RENAME_EXCHANGE))
   return -EINVAL;
 
+ if (flags & RENAME_EXCHANGE)
+  return shmem_exchange(old_dir, old_dentry, new_dir, new_dentry);
+
  if (!simple_empty(new_dentry))
   return -ENOTEMPTY;
 
-- 
1.7.1