From 64733b2e0f58133fa65b549e091e541a4bfa2ba9 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Thu, 23 Oct 2014 20:01:20 -0400
Subject: [md] dm-thin: prefetch missing metadata pages

Message-id: <1414094494-22068-11-git-send-email-snitzer@redhat.com>
Patchwork-id: 98345
O-Subject: [RHEL7.2 PATCH 10/24] dm thin: prefetch missing metadata pages
Bugzilla: 1156161
RH-Acked-by: Heinz Mauelshagen <heinzm@redhat.com>
RH-Acked-by: Joe Thornber <thornber@redhat.com>

BZ: 1156161

Upstream linux-dm.git commit 748a791e9a65eb47481322eeae208a947bef4b29
Author: Joe Thornber <ejt@redhat.com>
Date:   Mon Oct 6 15:28:30 2014 +0100

    dm thin: prefetch missing metadata pages

    Prefetch metadata at the start of the worker thread and then again every
    128th bio processed from the deferred list.

    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/dm-thin-metadata.c b/drivers/md/dm-thin-metadata.c
index ee42d1c..43adbb8 100644
--- a/drivers/md/dm-thin-metadata.c
+++ b/drivers/md/dm-thin-metadata.c
@@ -1809,3 +1809,8 @@ bool dm_pool_metadata_needs_check(struct dm_pool_metadata *pmd)
 
  return needs_check;
 }
+
+void dm_pool_issue_prefetches(struct dm_pool_metadata *pmd)
+{
+ dm_tm_issue_prefetches(pmd->tm);
+}
diff --git a/drivers/md/dm-thin-metadata.h b/drivers/md/dm-thin-metadata.h
index efedd5a..921d15e 100644
--- a/drivers/md/dm-thin-metadata.h
+++ b/drivers/md/dm-thin-metadata.h
@@ -213,6 +213,11 @@ int dm_pool_register_metadata_threshold(struct dm_pool_metadata *pmd,
 int dm_pool_metadata_set_needs_check(struct dm_pool_metadata *pmd);
 bool dm_pool_metadata_needs_check(struct dm_pool_metadata *pmd);
 
+/*
+ * Issue any prefetches that may be useful.
+ */
+void dm_pool_issue_prefetches(struct dm_pool_metadata *pmd);
+
 /*----------------------------------------------------------------*/
 
 #endif
diff --git a/drivers/md/dm-thin.c b/drivers/md/dm-thin.c
index 904a3b4..17f3c92 100644
--- a/drivers/md/dm-thin.c
+++ b/drivers/md/dm-thin.c
@@ -1520,6 +1520,7 @@ static void process_thin_deferred_bios(struct thin_c *tc)
  struct bio *bio;
  struct bio_list bios;
  struct blk_plug plug;
+ unsigned count = 0;
 
  if (tc->requeue_mode) {
   requeue_bio_list(tc, &tc->deferred_bio_list);
@@ -1561,6 +1562,10 @@ static void process_thin_deferred_bios(struct thin_c *tc)
    pool->process_discard(tc, bio);
   else
    pool->process_bio(tc, bio);
+
+  if ((count++ & 127) == 0) {
+   dm_pool_issue_prefetches(pool->pmd);
+  }
  }
  blk_finish_plug(&plug);
 }
@@ -1646,6 +1651,7 @@ static void do_worker(struct work_struct *ws)
 {
  struct pool *pool = container_of(ws, struct pool, worker);
 
+ dm_pool_issue_prefetches(pool->pmd);
  process_prepared(pool, &pool->prepared_mappings, &pool->process_prepared_mapping);
  process_prepared(pool, &pool->prepared_discards, &pool->process_prepared_discard);
  process_deferred_bios(pool);
@@ -1984,10 +1990,6 @@ static int thin_bio_map(struct dm_target *ti, struct bio *bio)
   /* fall through */
 
  case -EWOULDBLOCK:
-  /*
-   * In future, the failed dm_thin_find_block above could
-   * provide the hint to load the metadata into cache.
-   */
   thin_defer_bio(tc, bio);
   return DM_MAPIO_SUBMITTED;
 
-- 
1.7.1