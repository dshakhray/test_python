From 2e2c5bee41d86d34c7149d46f7ba8559d68a7dab Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Wed, 6 Aug 2014 03:45:23 -0400
Subject: [x86] pci: Use NUMA_NO_NODE, not -1, for unknown node

Message-id: <20140806034523.1438.89554.stgit@gir.stowe>
Patchwork-id: 87421
O-Subject: [RHEL7.1 PATCH 12/69] x86/PCI: Use NUMA_NO_NODE, not -1, for unknown node
Bugzilla: 1110896
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110896
Upstream Status: 8a3d01c740ab5ce141af8ddeef23cecaa51d2710

commit 8a3d01c740ab5ce141af8ddeef23cecaa51d2710
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Fri Jan 24 14:51:49 2014 -0700

    x86/PCI: Use NUMA_NO_NODE, not -1, for unknown node

    NUMA_NO_NODE is the usual value for "we don't know what node this is on,"
    e.g., it is the error return from acpi_get_node().  This changes uses of -1
    to NUMA_NO_NODE.  NUMA_NO_NODE is #defined to be -1 already, so this is not
    a functional change.

    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/pci/acpi.c b/arch/x86/pci/acpi.c
index b9e7618..755eae7 100644
--- a/arch/x86/pci/acpi.c
+++ b/arch/x86/pci/acpi.c
@@ -494,17 +494,17 @@ struct pci_bus *pci_acpi_scan_root(struct acpi_pci_root *root)
   return NULL;
  }
 
- node = -1;
+ node = NUMA_NO_NODE;
 #ifdef CONFIG_ACPI_NUMA
  pxm = acpi_get_pxm(device->handle);
  if (pxm >= 0)
   node = pxm_to_node(pxm);
 #endif
- if (node == -1)
+ if (node == NUMA_NO_NODE)
   node = x86_pci_root_bus_node(busnum);
 
- if (node != -1 && !node_online(node))
-  node = -1;
+ if (node != NUMA_NO_NODE && !node_online(node))
+  node = NUMA_NO_NODE;
 
  info = kzalloc(sizeof(*info), GFP_KERNEL);
  if (!info) {
@@ -570,7 +570,7 @@ struct pci_bus *pci_acpi_scan_root(struct acpi_pci_root *root)
    pcie_bus_configure_settings(child);
  }
 
- if (bus && node != -1) {
+ if (bus && node != NUMA_NO_NODE) {
 #ifdef CONFIG_ACPI_NUMA
   if (pxm >= 0)
    dev_printk(KERN_DEBUG, &bus->dev,
-- 
1.7.1