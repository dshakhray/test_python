From aa6520a49d93ddfa5ba38e1fdd1afdd11e0f0439 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Wed, 11 Jun 2014 11:53:01 -0400
Subject: [kernel] smp/generic-ipi: Kill unnecessary variable - csd_flags

Message-id: <1402487594-26332-2-git-send-email-prarit@redhat.com>
Patchwork-id: 83641
O-Subject: [RHEL7.1 PATCH BZ 1105192 01/14] generic-ipi: Kill unnecessary variable - csd_flags
Bugzilla: 1105192
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Neil Horman <nhorman@redhat.com>

commit 46591962cb5bfd2bfb0baf42497119c816503598
Author: Xie XiuQi <xiexiuqi@huawei.com>
Date:   Tue Jul 30 11:06:09 2013 +0800

    generic-ipi: Kill unnecessary variable - csd_flags

    After commit 8969a5ede0f9e17da4b943712429aef2c9bcd82b
    ("generic-ipi: remove kmalloc()"), wait = 0 can be guaranteed,
    and all callsites of generic_exec_single() do an unconditional
    csd_lock() now.

    So csd_flags is unnecessary now. Remove it.

    Signed-off-by: Xie XiuQi <xiexiuqi@huawei.com>
    Signed-off-by: Peter Zijlstra <peterz@infradead.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Nick Piggin <npiggin@suse.de>
    Cc: Jens Axboe <jens.axboe@oracle.com>
    Cc: "Paul E. McKenney" <paulmck@linux.vnet.ibm.com>
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    Link: http://lkml.kernel.org/r/51F72DA1.7010401@huawei.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/kernel/smp.c b/kernel/smp.c
index 208cdd1..6d56c4e 100644
--- a/kernel/smp.c
+++ b/kernel/smp.c
@@ -190,25 +190,13 @@ void generic_smp_call_function_single_interrupt(void)
 
  while (!list_empty(&list)) {
   struct call_single_data *csd;
-  unsigned int csd_flags;
 
   csd = list_entry(list.next, struct call_single_data, list);
   list_del(&csd->list);
 
-  /*
-   * 'csd' can be invalid after this call if flags == 0
-   * (when called through generic_exec_single()),
-   * so save them away before making the call:
-   */
-  csd_flags = csd->flags;
-
   csd->func(csd->info);
 
-  /*
-   * Unlocked CSDs are valid through generic_exec_single():
-   */
-  if (csd_flags & CSD_FLAG_LOCK)
-   csd_unlock(csd);
+  csd_unlock(csd);
  }
 }
 
-- 
1.7.1