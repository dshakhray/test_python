From cbfc4a8b5ff17e7aa56e5d4fe5b2bb4607bb1da9 Mon Sep 17 00:00:00 2001
From: Alexander Duyck <alexander.h.duyck@redhat.com>
Date: Tue, 28 Oct 2014 14:34:05 -0400
Subject: [net] bridge: notify user space after fdb update

Message-id: <20141028143405.4003.15144.stgit@ahduyck-vm-rhel7>
Patchwork-id: 98488
O-Subject: [RHEL7.1 net PATCH 2/2] bridge: notify user space after fdb update
Bugzilla: 1109605
RH-Acked-by: Hannes Frederic Sowa <hannes@redhat.com>
RH-Acked-by: Marcelo Leitner <mleitner@redhat.com>
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>

Bugzilla: 1109605
Brew Build: 8163719

Backport of upstream commit: c65c7a306610ee7c13669a8f5601b472c19dc6f1

 commit c65c7a306610ee7c13669a8f5601b472c19dc6f1
 Author: Jon Maxwell <jmaxwell37@gmail.com>
 Date:   Thu May 29 17:27:16 2014 +1000

    bridge: notify user space after fdb update

    There has been a number incidents recently where customers running KVM have
    reported that VM hosts on different Hypervisors are unreachable. Based on
    pcap traces we found that the bridge was broadcasting the ARP request out
    onto the network. However some NICs have an inbuilt switch which on occasions
    were broadcasting the VMs ARP request back through the physical NIC on the
    Hypervisor. This resulted in the bridge changing ports and incorrectly learning
    that the VMs mac address was external. As a result the ARP reply was directed
    back onto the external network and VM never updated it's ARP cache. This patch
    will notify the bridge command, after a fdb has been updated to identify such
    port toggling.

    Signed-off-by: Jon Maxwell <jmaxwell37@gmail.com>
    Reviewed-by: Jiri Pirko <jiri@resnulli.us>
    Acked-by: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
    Acked-by: Stephen Hemminger <stephen@networkplumber.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Alexander Duyck <alexander.h.duyck@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/bridge/br_fdb.c b/net/bridge/br_fdb.c
index 8a5d8b2..84ec589 100644
--- a/net/bridge/br_fdb.c
+++ b/net/bridge/br_fdb.c
@@ -502,6 +502,7 @@ void br_fdb_update(struct net_bridge *br, struct net_bridge_port *source,
 {
  struct hlist_head *head = &br->hash[br_mac_hash(addr, vid)];
  struct net_bridge_fdb_entry *fdb;
+ bool fdb_modified = false;
 
  /* some users want to always flood. */
  if (hold_time(br) == 0)
@@ -522,10 +523,15 @@ void br_fdb_update(struct net_bridge *br, struct net_bridge_port *source,
      source->dev->name);
   } else {
    /* fastpath: update of existing entry */
-   fdb->dst = source;
+   if (unlikely(source != fdb->dst)) {
+    fdb->dst = source;
+    fdb_modified = true;
+   }
    fdb->updated = jiffies;
    if (unlikely(added_by_user))
     fdb->added_by_user = 1;
+   if (unlikely(fdb_modified))
+    fdb_notify(br, fdb, RTM_NEWNEIGH);
   }
  } else {
   spin_lock(&br->hash_lock);
-- 
1.7.1