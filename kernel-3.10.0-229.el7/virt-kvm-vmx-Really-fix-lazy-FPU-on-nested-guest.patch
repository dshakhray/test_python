From 77f376e4ae3468782a77a3a4fa24870c2057ef86 Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:38:28 -0400
Subject: [virt] kvm/vmx: Really fix lazy FPU on nested guest

Message-id: <1406040016-3289-114-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86192
O-Subject: [RHEL7 PATCH v2 113/221] kvm, vmx: Really fix lazy FPU on nested guest
Bugzilla: 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Commit e504c9098ed6 (kvm, vmx: Fix lazy FPU on nested guest, 2013-11-13)
highlighted a real problem, but the fix was subtly wrong.

nested_read_cr0 is the CR0 as read by L2, but here we want to look at
the CR0 value reflecting L1's setup.  In other words, L2 might think
that TS=0 (so nested_read_cr0 has the bit clear); but if L1 is actually
running it with TS=1, we should inject the fault into L1.

The effective value of CR0 in L2 is contained in vmcs12->guest_cr0, use
it.

Fixes: e504c9098ed6acd9e1079c5e10e4910724ad429f
Reported-by: Kashyap Chamarty <kchamart@redhat.com>
Reported-by: Stefan Bader <stefan.bader@canonical.com>
Tested-by: Kashyap Chamarty <kchamart@redhat.com>
Tested-by: Anthoine Bourgeois <bourgeois@bertin.fr>
Cc: stable@vger.kernel.org
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 1b385cbdd74aa803e966e01e5fe49490d6044e30)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index 60e709a..8b73840 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -6644,7 +6644,7 @@ static bool nested_vmx_exit_handled(struct kvm_vcpu *vcpu)
   else if (is_page_fault(intr_info))
    return enable_ept;
   else if (is_no_device(intr_info) &&
-    !(nested_read_cr0(vmcs12) & X86_CR0_TS))
+    !(vmcs12->guest_cr0 & X86_CR0_TS))
    return 0;
   return vmcs12->exception_bitmap &
     (1u << (intr_info & INTR_INFO_VECTOR_MASK));
-- 
1.7.1