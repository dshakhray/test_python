From d1af68f54e12020782462d7ce889382cb5d9b980 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:07:02 -0400
Subject: [usb] xhci: add the meaningful IRQ description if it is empty

Message-id: <1410887463-20674-351-git-send-email-dzickus@redhat.com>
Patchwork-id: 95610
O-Subject: [RHEL7 PATCH 350/591] xhci: add the meaningful IRQ description if it is empty
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 7969943789df1196faa9ba67518d83fd93e4f9f6
Author: Adrian Huang <ahuang12@lenovo.com>
Date:   Thu Feb 27 11:26:03 2014 +0000

    xhci: add the meaningful IRQ description if it is empty

    When some xHCI host controllers fall back to use the legacy IRQ,
    the member irq_descr of the usb_hcd structure will be empty. This
    leads to the empty string of the xHCI host controller in
    /proc/interrupts. Here is the example (The irq 19 is the xHCI host
    controller):

               CPU0
      0:         91  IO-APIC-edge       timer
      8:          1         IO-APIC-edge       rtc0
      9:       7191         IO-APIC-fasteoi    acpi
     18:        104        IR-IO-APIC-fasteoi  ehci_hcd:usb1, ehci_hcd:usb2
     19:        473      IR-IO-APIC-fasteoi

    After applying the patch, the name of the registered xHCI host
    controller can be displayed correctly. Here is the example:

               CPU0
      0:         91  IO-APIC-edge       timer
      8:          1         IO-APIC-edge       rtc0
      9:       7191         IO-APIC-fasteoi    acpi
     18:        104        IR-IO-APIC-fasteoi  ehci_hcd:usb1, ehci_hcd:usb2
     19:        473      IR-IO-APIC-fasteoi xhci_hcd:usb3

    Tested on v3.14-rc4.

    Signed-off-by: Adrian Huang <ahuang12@lenovo.com>
    Reviewed-by: Nagananda Chumbalkar <nchumbalkar@lenovo.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/host/xhci.c b/drivers/usb/host/xhci.c
index 2877c9a..d96da14 100644
--- a/drivers/usb/host/xhci.c
+++ b/drivers/usb/host/xhci.c
@@ -390,6 +390,10 @@ static int xhci_try_enable_msi(struct usb_hcd *hcd)
  }
 
  legacy_irq:
+ if (!strlen(hcd->irq_descr))
+  snprintf(hcd->irq_descr, sizeof(hcd->irq_descr), "%s:usb%d",
+    hcd->driver->description, hcd->self.busnum);
+
  /* fall back to legacy interrupt*/
  ret = request_irq(pdev->irq, &usb_hcd_irq, IRQF_SHARED,
    hcd->irq_descr, hcd);
-- 
1.7.1