From 840d5ecb6afec4123a3e9bb7bb362f9a3a20d95f Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:04:49 -0400
Subject: [powerpc] pseries: Read and write to the 'compressed' flag of pstore

Message-id: <1410545655-205645-61-git-send-email-dzickus@redhat.com>
Patchwork-id: 94101
O-Subject: [RHEL7 PATCH 060/626] powerpc/pseries: Read and write to the 'compressed' flag of pstore
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 40594264bd622e0865a981f14b98d9e09bc50b14
Author: Aruna Balakrishnaiah <aruna@linux.vnet.ibm.com>
Date:   Fri Aug 16 13:53:49 2013 -0700

    powerpc/pseries: Read and write to the 'compressed' flag of pstore

    If data returned from pstore is compressed, nvram's write callback
    will add a flag ERR_TYPE_KERNEL_PANIC_GZ indicating the data is compressed
    while writing to nvram. If the data read from nvram is compressed, nvram's
    read callback will set the flag 'compressed'. The patch adds backward
    compatibilty with old format oops header when reading from pstore.

    Signed-off-by: Aruna Balakrishnaiah <aruna@linux.vnet.ibm.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/platforms/pseries/nvram.c b/arch/powerpc/platforms/pseries/nvram.c
index 9641de2..ed14b05 100644
--- a/arch/powerpc/platforms/pseries/nvram.c
+++ b/arch/powerpc/platforms/pseries/nvram.c
@@ -581,6 +581,9 @@ static int nvram_pstore_write(enum pstore_type_id type,
  oops_hdr->report_length = cpu_to_be16(size);
  oops_hdr->timestamp = cpu_to_be64(get_seconds());
 
+ if (compressed)
+  err_type = ERR_TYPE_KERNEL_PANIC_GZ;
+
  rc = nvram_write_os_partition(&oops_log_partition, oops_buf,
   (int) (sizeof(*oops_hdr) + size), err_type, count);
 
@@ -687,6 +690,11 @@ static ssize_t nvram_pstore_read(u64 *id, enum pstore_type_id *type,
    return -ENOMEM;
   memcpy(*buf, buff + hdr_size, length);
   kfree(buff);
+
+  if (err_type == ERR_TYPE_KERNEL_PANIC_GZ)
+   *compressed = true;
+  else
+   *compressed = false;
   return length;
  }
 
-- 
1.7.1