From 6eff71445124b4e2e19764daa323e47ad6b81320 Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Wed, 29 Oct 2014 16:34:26 -0400
Subject: [fs] ext4: don't keep using page if inline conversion fails

Message-id: <1414600485-1929-37-git-send-email-lczerner@redhat.com>
Patchwork-id: 98554
O-Subject: [RHEL 7.1 PATCH v2 36/55] ext4: don't keep using page if inline conversion fails
Bugzilla: 1156096
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: "Darrick J. Wong" <darrick.wong@oracle.com>

BZ 1156096
https://bugzilla.redhat.com/show_bug.cgi?id=1156096

BREW 8169722
https://brewweb.devel.redhat.com/taskinfo?taskID=8169722

Upstream commit 684de5748660e16e185754697ac0afa9e18297f6

 If inline->extent conversion fails (most probably due to ENOSPC) and
 we release the temporary page that we allocated to transfer the file
 contents, don't keep using the page pointer after releasing the page.
 This occasionally leads to complaints about evicting locked pages or
 hangs when blocksize > pagesize, because it's possible for the page to
 get reallocated elsewhere in the meantime.

 Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
 Signed-off-by: Theodore Ts'o <tytso@mit.edu>
 Reviewed-by: Jan Kara <jack@suse.cz>
 Cc: Tao Ma <tm@tao.ma>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/inline.c b/fs/ext4/inline.c
index ad0bbdf..f701fa9 100644
--- a/fs/ext4/inline.c
+++ b/fs/ext4/inline.c
@@ -594,6 +594,7 @@ retry:
  if (ret) {
   unlock_page(page);
   page_cache_release(page);
+  page = NULL;
   ext4_orphan_add(handle, inode);
   up_write(&EXT4_I(inode)->xattr_sem);
   sem_held = 0;
@@ -613,7 +614,8 @@ retry:
  if (ret == -ENOSPC && ext4_should_retry_alloc(inode->i_sb, &retries))
   goto retry;
 
- block_commit_write(page, from, to);
+ if (page)
+  block_commit_write(page, from, to);
 out:
  if (page) {
   unlock_page(page);
-- 
1.7.1