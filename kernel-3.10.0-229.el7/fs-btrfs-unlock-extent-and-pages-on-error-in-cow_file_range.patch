From f9984106c2723e506028cb4e3d62c42f4d8cd321 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:01:08 -0400
Subject: [fs] btrfs: unlock extent and pages on error in cow_file_range

Message-id: <1407179109-13714-182-git-send-email-sandeen@redhat.com>
Patchwork-id: 87102
O-Subject: [RHEL7.1 PATCH 181/422] Btrfs: unlock extent and pages on error in cow_file_range
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Josef Bacik <jbacik@fb.com>

commit 29bce2f3997a8dc5195b7a7724362d1e55df7bb2
Author: Josef Bacik <jbacik@fb.com>
Date:   Fri Feb 7 12:21:23 2014 -0500

    Btrfs: unlock extent and pages on error in cow_file_range

    When I converted the BUG_ON() for the free_space_cache_inode in cow_file_range I
    made it so we just return an error instead of unlocking all of our various
    stuff.  This is a mistake and causes us to hang when we run into this.  This
    patch fixes this problem.  Thanks,

    Signed-off-by: Josef Bacik <jbacik@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/inode.c b/fs/btrfs/inode.c
index 1902750..e534833 100644
--- a/fs/btrfs/inode.c
+++ b/fs/btrfs/inode.c
@@ -864,7 +864,8 @@ static noinline int cow_file_range(struct inode *inode,
 
  if (btrfs_is_free_space_inode(inode)) {
   WARN_ON_ONCE(1);
-  return -EINVAL;
+  ret = -EINVAL;
+  goto out_unlock;
  }
 
  num_bytes = ALIGN(end - start + 1, blocksize);
-- 
1.7.1