From 3864bed95d6340c6ae01fbcadcf139c7953e6121 Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:23:50 -0400
Subject: [fs] ceph: handle cap export race in try_flush_caps()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-124-git-send-email-sweil@redhat.com>
Patchwork-id: 89588
O-Subject: [PATCH 123/303] ceph: handle cap export race in try_flush_caps()
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: "Yan, Zheng" <zheng.z.yan@intel.com>

auth cap may change after releasing the i_ceph_lock

Signed-off-by: Yan, Zheng <zheng.z.yan@intel.com>
(cherry picked from commit 4fe59789adc93b2573b0417ac93136805521902e)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ceph/caps.c b/fs/ceph/caps.c
index d0065ac..70a1449 100644
--- a/fs/ceph/caps.c
+++ b/fs/ceph/caps.c
@@ -1733,13 +1733,12 @@ ack:
 /*
  * Try to flush dirty caps back to the auth mds.
  */
-static int try_flush_caps(struct inode *inode, struct ceph_mds_session *session,
-     unsigned *flush_tid)
+static int try_flush_caps(struct inode *inode, unsigned *flush_tid)
 {
  struct ceph_mds_client *mdsc = ceph_sb_to_client(inode->i_sb)->mdsc;
  struct ceph_inode_info *ci = ceph_inode(inode);
- int unlock_session = session ? 0 : 1;
  int flushing = 0;
+ struct ceph_mds_session *session = NULL;
 
 retry:
  spin_lock(&ci->i_ceph_lock);
@@ -1753,13 +1752,14 @@ retry:
   int want = __ceph_caps_wanted(ci);
   int delayed;
 
-  if (!session) {
+  if (!session || session != cap->session) {
    spin_unlock(&ci->i_ceph_lock);
+   if (session)
+    mutex_unlock(&session->s_mutex);
    session = cap->session;
    mutex_lock(&session->s_mutex);
    goto retry;
   }
-  BUG_ON(session != cap->session);
   if (cap->session->s_state < CEPH_MDS_SESSION_OPEN)
    goto out;
 
@@ -1778,7 +1778,7 @@ retry:
 out:
  spin_unlock(&ci->i_ceph_lock);
 out_unlocked:
- if (session && unlock_session)
+ if (session)
   mutex_unlock(&session->s_mutex);
  return flushing;
 }
@@ -1863,7 +1863,7 @@ int ceph_fsync(struct file *file, loff_t start, loff_t end, int datasync)
   return ret;
  mutex_lock(&inode->i_mutex);
 
- dirty = try_flush_caps(inode, NULL, &flush_tid);
+ dirty = try_flush_caps(inode, &flush_tid);
  dout("fsync dirty caps are %s\n", ceph_cap_string(dirty));
 
  /*
@@ -1898,7 +1898,7 @@ int ceph_write_inode(struct inode *inode, struct writeback_control *wbc)
 
  dout("write_inode %p wait=%d\n", inode, wait);
  if (wait) {
-  dirty = try_flush_caps(inode, NULL, &flush_tid);
+  dirty = try_flush_caps(inode, &flush_tid);
   if (dirty)
    err = wait_event_interruptible(ci->i_cap_wq,
            caps_are_flushed(inode, flush_tid));
-- 
1.7.1