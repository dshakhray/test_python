From 033735fb4bc659d76cfbc65bbde542597da953b1 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Wed, 10 Dec 2014 19:59:15 -0500
Subject: [x86] perf: Use extended offcore mask on Haswell

Message-id: <1418241555-143489-1-git-send-email-dzickus@redhat.com>
Patchwork-id: 101623
O-Subject: [RHEL7 PATCH] perf/x86: Use extended offcore mask on Haswell
Bugzilla: 1170795
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1170795
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=8332895
Tested: On a Haswell Brickland with the perf command

commit 36bbb2f2988a29cdc3f8e0c93478795934553454
Author: Andi Kleen <ak@linux.intel.com>
Date:   Thu Jul 31 14:05:22 2014 -0700

    perf/x86: Use extended offcore mask on Haswell

    HSW-EP has a larger offcore mask than the client Haswell CPUs.
    It is the same mask as on Sandy/IvyBridge-EP. All of
    Haswell was using the client mask, so some bits were missing.

    On the client parts some bits were also missing compared
    to Sandy/IvyBridge, in particular the bits to match on a L4
    cache hit.

    The Haswell core in both client and server incarnations
    accepts the same bits (but some are nops), so we can use
    the same mask.

    So use the snbep extended mask, which is a superset of the
    client and the server, for all of Haswell.

    This allows specifying a number of extra offcore events, like
    for example for HSW-EP.

    % perf stat -e cpu/event=0xb7,umask=0x1,offcore_rsp=0x3fffc00100,name=offcore_response_pf_l3_rfo_l3_miss_any_response/ true

    which were <not supported> before.

    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Reviewed-by: eranian@google.com
    Signed-off-by: Peter Zijlstra <peterz@infradead.org>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Link: http://lkml.kernel.org/r/1406840722-25416-1-git-send-email-andi@firstfloor.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kernel/cpu/perf_event_intel.c b/arch/x86/kernel/cpu/perf_event_intel.c
index 1cbea49..3675390 100644
--- a/arch/x86/kernel/cpu/perf_event_intel.c
+++ b/arch/x86/kernel/cpu/perf_event_intel.c
@@ -2548,7 +2548,7 @@ __init int intel_pmu_init(void)
 
   x86_pmu.event_constraints = intel_hsw_event_constraints;
   x86_pmu.pebs_constraints = intel_hsw_pebs_event_constraints;
-  x86_pmu.extra_regs = intel_snb_extra_regs;
+  x86_pmu.extra_regs = intel_snbep_extra_regs;
   x86_pmu.pebs_aliases = intel_pebs_aliases_snb;
   /* all extra regs are per-cpu when HT is on */
   x86_pmu.er_flags |= ERF_HAS_RSP_1;
-- 
1.7.1