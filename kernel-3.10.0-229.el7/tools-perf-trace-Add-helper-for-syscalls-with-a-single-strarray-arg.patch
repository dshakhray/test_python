From 83babf56ec81308aae306f897b97c0a4f1eac423 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:25:03 -0400
Subject: [tools] perf/trace: Add helper for syscalls with a single strarray arg

Message-id: <1408462094-14194-135-git-send-email-jolsa@redhat.com>
Patchwork-id: 88086
O-Subject: [PATCH RHEL7.1 BZ1131394 134/325] perf trace: Add helper for syscalls with a single strarray arg
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 453350dd0f0245b91b1e43310f5966fb1c51e7bd
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date: Fri Sep 20 12:13:37 2013 -0300

description
===========
In such cases just stating the (arg, name, array) is enough, reducing
the size of the syscall formatters table.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-trace.c b/tools/perf/builtin-trace.c
index de37641..9f75fd0 100644
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@ -562,6 +562,10 @@ static size_t syscall_arg__scnprintf_signum(char *bf, size_t size, struct syscal
 
 #define SCA_SIGNUM syscall_arg__scnprintf_signum
 
+#define STRARRAY(arg, name, array) \
+   .arg_scnprintf = { [arg] = SCA_STRARRAY, }, \
+   .arg_parm  = { [arg] = &strarray__##array, }
+
 static struct syscall_fmt {
  const char *name;
  const char *alias;
@@ -577,33 +581,23 @@ static struct syscall_fmt {
  { .name     = "brk",     .hexret = true,
    .arg_scnprintf = { [0] = SCA_HEX, /* brk */ }, },
  { .name     = "connect",    .errmsg = true, },
- { .name     = "epoll_ctl",  .errmsg = true,
-   .arg_scnprintf = { [1] = SCA_STRARRAY, /* op */ },
-   .arg_parm  = { [1] = &strarray__epoll_ctl_ops, /* op */ }, },
+ { .name     = "epoll_ctl",  .errmsg = true, STRARRAY(1, op, epoll_ctl_ops), },
  { .name     = "eventfd2",   .errmsg = true,
    .arg_scnprintf = { [1] = SCA_EFD_FLAGS, /* flags */ }, },
- { .name     = "fcntl",     .errmsg = true,
-   .arg_scnprintf = { [1] = SCA_STRARRAY, /* cmd */ },
-   .arg_parm  = { [1] = &strarray__fcntl_cmds, /* cmd */ }, },
+ { .name     = "fcntl",     .errmsg = true, STRARRAY(1, cmd, fcntl_cmds), },
  { .name     = "flock",     .errmsg = true,
    .arg_scnprintf = { [1] = SCA_FLOCK, /* cmd */ }, },
  { .name     = "fstat",     .errmsg = true, .alias = "newfstat", },
  { .name     = "fstatat",    .errmsg = true, .alias = "newfstatat", },
  { .name     = "futex",     .errmsg = true,
    .arg_scnprintf = { [1] = SCA_FUTEX_OP, /* op */ }, },
- { .name     = "getitimer",  .errmsg = true,
-   .arg_scnprintf = { [0] = SCA_STRARRAY, /* which */ },
-   .arg_parm  = { [0] = &strarray__itimers, /* which */ }, },
- { .name     = "getrlimit",  .errmsg = true,
-   .arg_scnprintf = { [0] = SCA_STRARRAY, /* resource */ },
-   .arg_parm  = { [0] = &strarray__rlimit_resources, /* resource */ }, },
+ { .name     = "getitimer",  .errmsg = true, STRARRAY(0, which, itimers), },
+ { .name     = "getrlimit",  .errmsg = true, STRARRAY(0, resource, rlimit_resources), },
  { .name     = "ioctl",     .errmsg = true,
    .arg_scnprintf = { [2] = SCA_HEX, /* arg */ }, },
  { .name     = "kill",     .errmsg = true,
    .arg_scnprintf = { [1] = SCA_SIGNUM, /* sig */ }, },
- { .name     = "lseek",     .errmsg = true,
-   .arg_scnprintf = { [2] = SCA_STRARRAY, /* whence */ },
-   .arg_parm  = { [2] = &strarray__whences, /* whence */ }, },
+ { .name     = "lseek",     .errmsg = true, STRARRAY(2, whence, whences), },
  { .name     = "lstat",     .errmsg = true, .alias = "newlstat", },
  { .name     = "madvise",    .errmsg = true,
    .arg_scnprintf = { [0] = SCA_HEX,  /* start */
@@ -629,9 +623,7 @@ static struct syscall_fmt {
  { .name     = "poll",     .errmsg = true, .timeout = true, },
  { .name     = "ppoll",     .errmsg = true, .timeout = true, },
  { .name     = "pread",     .errmsg = true, .alias = "pread64", },
- { .name     = "prlimit64",  .errmsg = true,
-   .arg_scnprintf = { [1] = SCA_STRARRAY, /* resource */ },
-   .arg_parm  = { [1] = &strarray__rlimit_resources, /* resource */ }, },
+ { .name     = "prlimit64",  .errmsg = true, STRARRAY(1, resource, rlimit_resources), },
  { .name     = "pwrite",     .errmsg = true, .alias = "pwrite64", },
  { .name     = "read",     .errmsg = true, },
  { .name     = "recvfrom",   .errmsg = true,
@@ -642,9 +634,7 @@ static struct syscall_fmt {
    .arg_scnprintf = { [2] = SCA_MSG_FLAGS, /* flags */ }, },
  { .name     = "rt_sigaction", .errmsg = true,
    .arg_scnprintf = { [0] = SCA_SIGNUM, /* sig */ }, },
- { .name     = "rt_sigprocmask", .errmsg = true,
-   .arg_scnprintf = { [0] = SCA_STRARRAY, /* how */ },
-   .arg_parm  = { [0] = &strarray__sighow, /* how */ }, },
+ { .name     = "rt_sigprocmask",  .errmsg = true, STRARRAY(0, how, sighow), },
  { .name     = "rt_sigqueueinfo", .errmsg = true,
    .arg_scnprintf = { [1] = SCA_SIGNUM, /* sig */ }, },
  { .name     = "rt_tgsigqueueinfo", .errmsg = true,
@@ -656,12 +646,8 @@ static struct syscall_fmt {
    .arg_scnprintf = { [2] = SCA_MSG_FLAGS, /* flags */ }, },
  { .name     = "sendto",     .errmsg = true,
    .arg_scnprintf = { [3] = SCA_MSG_FLAGS, /* flags */ }, },
- { .name     = "setitimer",  .errmsg = true,
-   .arg_scnprintf = { [0] = SCA_STRARRAY, /* which */ },
-   .arg_parm  = { [0] = &strarray__itimers, /* which */ }, },
- { .name     = "setrlimit",  .errmsg = true,
-   .arg_scnprintf = { [0] = SCA_STRARRAY, /* resource */ },
-   .arg_parm  = { [0] = &strarray__rlimit_resources, /* resource */ }, },
+ { .name     = "setitimer",  .errmsg = true, STRARRAY(0, which, itimers), },
+ { .name     = "setrlimit",  .errmsg = true, STRARRAY(0, resource, rlimit_resources), },
  { .name     = "socket",     .errmsg = true,
    .arg_scnprintf = { [0] = SCA_STRARRAY, /* family */
         [1] = SCA_SK_TYPE, /* type */ },
-- 
1.7.1