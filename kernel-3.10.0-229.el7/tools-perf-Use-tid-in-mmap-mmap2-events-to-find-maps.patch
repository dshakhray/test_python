From fc9c7e0ab0c0d7326e5973010f75d61bfda93a49 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:05:53 -0400
Subject: [tools] perf: Use tid in mmap/mmap2 events to find maps

Message-id: <1410181752-25631-109-git-send-email-jolsa@redhat.com>
Patchwork-id: 91771
O-Subject: [PATCH RHEL7.1 BZ1134356 108/307] perf tools: Use tid in mmap/mmap2 events to find maps
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit 11c9abf2270793bd1c1b8828edb4223f8010e56c
Author: Don Zickus <dzickus@redhat.com>
Date: Wed Feb 26 10:45:27 2014 -0500

description
===========
Now that we can properly synthesize threads system-wide, make sure the
mmap and mmap2 events use tids instead of pids to locate their maps.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/tests/hists_link.c b/tools/perf/tests/hists_link.c
index 2b6519e..7ccbc7b 100644
--- a/tools/perf/tests/hists_link.c
+++ b/tools/perf/tests/hists_link.c
@@ -101,6 +101,7 @@ static struct machine *setup_fake_machine(struct machines *machines)
    .mmap = {
     .header = { .misc = PERF_RECORD_MISC_USER, },
     .pid = fake_mmap_info[i].pid,
+    .tid = fake_mmap_info[i].pid,
     .start = fake_mmap_info[i].start,
     .len = 0x1000ULL,
     .pgoff = 0ULL,
diff --git a/tools/perf/util/machine.c b/tools/perf/util/machine.c
index d280bf2..a53cd0b 100644
--- a/tools/perf/util/machine.c
+++ b/tools/perf/util/machine.c
@@ -1027,7 +1027,7 @@ int machine__process_mmap2_event(struct machine *machine,
  }
 
  thread = machine__findnew_thread(machine, event->mmap2.pid,
-     event->mmap2.pid);
+     event->mmap2.tid);
  if (thread == NULL)
   goto out_problem;
 
@@ -1075,7 +1075,7 @@ int machine__process_mmap_event(struct machine *machine, union perf_event *event
  }
 
  thread = machine__findnew_thread(machine, event->mmap.pid,
-      event->mmap.pid);
+      event->mmap.tid);
  if (thread == NULL)
   goto out_problem;
 
-- 
1.7.1