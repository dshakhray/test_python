From 9d026c4a5272fdb3f2f05923ba2436f29ec6da23 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:10:04 -0400
Subject: [powerpc] perf: Fix handling of L3 events with bank == 1

Message-id: <1410545655-205645-376-git-send-email-dzickus@redhat.com>
Patchwork-id: 94392
O-Subject: [RHEL7 PATCH 375/626] powerpc/perf: Fix handling of L3 events with bank == 1
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit e9aaac1ac39f58a897e9b71e153317c8c216cb21
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Fri Mar 14 16:00:45 2014 +1100

    powerpc/perf: Fix handling of L3 events with bank == 1

    Currently we reject events which have the L3 bank == 1, such as
    0x000084918F, because the cache field is non-zero.

    However that is incorrect, because although the bank is non-zero, the
    value we would write into MMCRC is zero, and so we can count the event.

    So fix the check to ignore the bank selector when checking whether the
    cache selector is non-zero.

    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/perf/power8-pmu.c b/arch/powerpc/perf/power8-pmu.c
index 3ad363d..fe2763b 100644
--- a/arch/powerpc/perf/power8-pmu.c
+++ b/arch/powerpc/perf/power8-pmu.c
@@ -325,9 +325,10 @@ static int power8_get_constraint(u64 event, unsigned long *maskp, unsigned long
    * HV writable, and there is no API for guest kernels to modify
    * it. The solution is for the hypervisor to initialise the
    * field to zeroes, and for us to only ever allow events that
-   * have a cache selector of zero.
+   * have a cache selector of zero. The bank selector (bit 3) is
+   * irrelevant, as long as the rest of the value is 0.
    */
-  if (cache)
+  if (cache & 0x7)
    return -1;
 
  } else if (event & EVENT_IS_L1) {
-- 
1.7.1