From 92dbe87fa0120ee9c3e08055b2052a19320d82d5 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:04:08 -0400
Subject: [usb] xhci: fix incorrect type in assignment in xhci_address_device()

Message-id: <1410887463-20674-177-git-send-email-dzickus@redhat.com>
Patchwork-id: 95223
O-Subject: [RHEL7 PATCH 176/591] xhci: fix incorrect type in assignment in xhci_address_device()
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 0c052aabe66c495bf1248f301a8e745da66c6633
Author: Xenia Ragiadakou <burzalodowa@gmail.com>
Date:   Fri Nov 15 03:18:07 2013 +0200

    xhci: fix incorrect type in assignment in xhci_address_device()

    The field 'dev_info' in struct xhci_slot_ctx has type __le32 and it needs
    to be converted to CPU byteorder for the correct retrieval of its subfield
    'Context Entries'. This field is used by the trace event 'xhci_address_ctx'
    to trace only the contexts of valid endpoints.
    This bug was found using sparse.

    Signed-off-by: Xenia Ragiadakou <burzalodowa@gmail.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/host/xhci.c b/drivers/usb/host/xhci.c
index 4265b48..a96b35c 100644
--- a/drivers/usb/host/xhci.c
+++ b/drivers/usb/host/xhci.c
@@ -3771,7 +3771,7 @@ int xhci_address_device(struct usb_hcd *hcd, struct usb_device *udev)
  xhci_dbg(xhci, "Slot ID %d Input Context:\n", udev->slot_id);
  xhci_dbg_ctx(xhci, virt_dev->in_ctx, 2);
  trace_xhci_address_ctx(xhci, virt_dev->in_ctx,
-    slot_ctx->dev_info >> 27);
+    le32_to_cpu(slot_ctx->dev_info) >> 27);
 
  spin_lock_irqsave(&xhci->lock, flags);
  cmd_trb = xhci_find_next_enqueue(xhci->cmd_ring);
@@ -3850,7 +3850,7 @@ int xhci_address_device(struct usb_hcd *hcd, struct usb_device *udev)
  xhci_dbg(xhci, "Slot ID %d Input Context:\n", udev->slot_id);
  xhci_dbg_ctx(xhci, virt_dev->in_ctx, 2);
  trace_xhci_address_ctx(xhci, virt_dev->in_ctx,
-    slot_ctx->dev_info >> 27);
+    le32_to_cpu(slot_ctx->dev_info) >> 27);
  xhci_dbg(xhci, "Slot ID %d Output Context:\n", udev->slot_id);
  xhci_dbg_ctx(xhci, virt_dev->out_ctx, 2);
  /*
@@ -3859,7 +3859,7 @@ int xhci_address_device(struct usb_hcd *hcd, struct usb_device *udev)
   */
  slot_ctx = xhci_get_slot_ctx(xhci, virt_dev->out_ctx);
  trace_xhci_address_ctx(xhci, virt_dev->out_ctx,
-    slot_ctx->dev_info >> 27);
+    le32_to_cpu(slot_ctx->dev_info) >> 27);
  /* Zero the input context control for later use */
  ctrl_ctx->add_flags = 0;
  ctrl_ctx->drop_flags = 0;
-- 
1.7.1