From a4210e1822dd3d107729d4a19a1015dea1271684 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:03:07 -0400
Subject: [fs] btrfs: limit the path size in send to PATH_MAX

Message-id: <1407179109-13714-301-git-send-email-sandeen@redhat.com>
Patchwork-id: 87352
O-Subject: [RHEL7.1 PATCH 300/422] Btrfs: limit the path size in send to PATH_MAX
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Chris Mason <clm@fb.com>

commit cfd4a535b68faf651b238586011f5bae128391c4
Author: Chris Mason <clm@fb.com>
Date:   Sat Apr 26 05:02:03 2014 -0700

    Btrfs: limit the path size in send to PATH_MAX

    fs_path_ensure_buf is used to make sure our path buffers for
    send are big enough for the path names as we construct them.
    The buffer size is limited to 32K by the length field in
    the struct.

    But bugs in the path construction can end up trying to build
    a huge buffer, and we'll do invalid memmmoves when the
    buffer length field wraps.

    This patch is step one, preventing the overflows.

    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/send.c b/fs/btrfs/send.c
index 1ac3ca9..eb6537a 100644
--- a/fs/btrfs/send.c
+++ b/fs/btrfs/send.c
@@ -349,6 +349,11 @@ static int fs_path_ensure_buf(struct fs_path *p, int len)
  if (p->buf_len >= len)
   return 0;
 
+ if (len > PATH_MAX) {
+  WARN_ON(1);
+  return -ENOMEM;
+ }
+
  path_len = p->end - p->start;
  old_buf_len = p->buf_len;
 
-- 
1.7.1