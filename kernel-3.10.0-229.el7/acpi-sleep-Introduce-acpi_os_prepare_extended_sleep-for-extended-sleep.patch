From fb809163696b29fdfe4f09e429483f5a16cc4a3c Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 10 Jul 2014 01:03:58 -0400
Subject: [acpi] sleep: Introduce acpi_os_prepare_extended_sleep() for extended sleep

Message-id: <20140710010357.22146.48257.stgit@gir.stowe>
Patchwork-id: 85594
O-Subject: [RHEL7.1 PATCH 055/105] ACPI / sleep: Introduce acpi_os_prepare_extended_sleep() for extended sleep
Bugzilla: 1114228
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1114228
Upstream Status: d6b47b122473885abc882e337ac2d321bbcfb378

commit d6b47b122473885abc882e337ac2d321bbcfb378
Author: Ben Guthro <benjamin.guthro@citrix.com>
Date:   Tue Jul 30 08:24:52 2013 -0400

    ACPI / sleep: Introduce acpi_os_prepare_extended_sleep() for extended sleep

    Like acpi_os_prepare_sleep(), register a callback for use in systems
    like tboot, and xen, which have system specific requirements outside
    of ACPICA.  This mirrors the functionality in acpi_os_prepare_sleep(),
    called from acpi_hw_sleep()

    Signed-off-by: Ben Guthro <benjamin.guthro@citrix.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/acpi/acpica/hwesleep.c b/drivers/acpi/acpica/hwesleep.c
index 5e5f762..4140768 100644
--- a/drivers/acpi/acpica/hwesleep.c
+++ b/drivers/acpi/acpica/hwesleep.c
@@ -43,6 +43,7 @@
  */
 
 #include <acpi/acpi.h>
+#include <linux/acpi.h>
 #include "accommon.h"
 
 #define _COMPONENT          ACPI_HARDWARE
@@ -128,6 +129,14 @@ acpi_status acpi_hw_extended_sleep(u8 sleep_state)
 
  ACPI_FLUSH_CPU_CACHE();
 
+ status = acpi_os_prepare_extended_sleep(sleep_state,
+      acpi_gbl_sleep_type_a,
+      acpi_gbl_sleep_type_b);
+ if (ACPI_SKIP(status))
+  return_ACPI_STATUS(AE_OK);
+ if (ACPI_FAILURE(status))
+  return_ACPI_STATUS(status);
+
  /*
   * Set the SLP_TYP and SLP_EN bits.
   *
diff --git a/drivers/acpi/osl.c b/drivers/acpi/osl.c
index 0563344..9da55d7 100644
--- a/drivers/acpi/osl.c
+++ b/drivers/acpi/osl.c
@@ -80,6 +80,8 @@ extern char line_buf[80];
 
 static int (*__acpi_os_prepare_sleep)(u8 sleep_state, u32 pm1a_ctrl,
           u32 pm1b_ctrl);
+static int (*__acpi_os_prepare_extended_sleep)(u8 sleep_state, u32 val_a,
+          u32 val_b);
 
 static acpi_osd_handler acpi_irq_handler;
 static void *acpi_irq_context;
@@ -1780,6 +1782,28 @@ void acpi_os_set_prepare_sleep(int (*func)(u8 sleep_state,
  __acpi_os_prepare_sleep = func;
 }
 
+acpi_status acpi_os_prepare_extended_sleep(u8 sleep_state, u32 val_a,
+      u32 val_b)
+{
+ int rc = 0;
+ if (__acpi_os_prepare_extended_sleep)
+  rc = __acpi_os_prepare_extended_sleep(sleep_state,
+          val_a, val_b);
+ if (rc < 0)
+  return AE_ERROR;
+ else if (rc > 0)
+  return AE_CTRL_SKIP;
+
+ return AE_OK;
+}
+
+void acpi_os_set_prepare_extended_sleep(int (*func)(u8 sleep_state,
+          u32 val_a, u32 val_b))
+{
+ __acpi_os_prepare_extended_sleep = func;
+}
+
+
 void alloc_acpi_hp_work(acpi_handle handle, u32 type, void *context,
    void (*func)(struct work_struct *work))
 {
diff --git a/include/linux/acpi.h b/include/linux/acpi.h
index 072ab5e..e2e52cf 100644
--- a/include/linux/acpi.h
+++ b/include/linux/acpi.h
@@ -474,6 +474,13 @@ void acpi_os_set_prepare_sleep(int (*func)(u8 sleep_state,
 
 acpi_status acpi_os_prepare_sleep(u8 sleep_state,
       u32 pm1a_control, u32 pm1b_control);
+
+void acpi_os_set_prepare_extended_sleep(int (*func)(u8 sleep_state,
+            u32 val_a,  u32 val_b));
+
+acpi_status acpi_os_prepare_extended_sleep(u8 sleep_state,
+        u32 val_a, u32 val_b);
+
 #ifdef CONFIG_X86
 void arch_reserve_mem_area(acpi_physical_address addr, size_t size);
 #else
-- 
1.7.1