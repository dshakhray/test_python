From f6f9313f23ab30d6d50846a736ddf1a7ce8b384a Mon Sep 17 00:00:00 2001
From: Hendrik Brueckner <brueckner@redhat.com>
Date: Tue, 20 May 2014 14:51:30 -0400
Subject: [s390] af_iucv: wrong mapping of sent and confirmed skbs

Message-id: <1400597490-12357-1-git-send-email-brueckner@redhat.com>
Patchwork-id: 79987
O-Subject: [RHEL7.1 PATCH] [s390] af_iucv: wrong mapping of sent and confirmed skbs
Bugzilla: 1098513
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Description
-----------
Backport of upstream commit:

 af_iucv: wrong mapping of sent and confirmed skbs

 When sending data through IUCV a MESSAGE COMPLETE interrupt
 signals that sent data memory can be freed or reused again.
 With commit f9c41a62bba3f3f7ef3541b2a025e3371bcbba97
 "af_iucv: fix recvmsg by replacing skb_pull() function" the
 MESSAGE COMPLETE callback iucv_callback_txdone() identifies
 the wrong skb as being confirmed, which leads to data corruption.
 This patch fixes the skb mapping logic in iucv_callback_txdone().

 Signed-off-by: Ursula Braun <ursula.braun@de.ibm.com>
 Signed-off-by: Frank Blaschka <frank.blaschka@de.ibm.com>
 Cc: <stable@vger.kernel.org>

Bugzilla
--------
BZ 1098513
https://bugzilla.redhat.com/show_bug.cgi?id=1098513

Upstream status of the patch
----------------------------
The patch has been sent upstream integration recently.  I post this patch in advance
because data corruptions are likely.  The upstream posting are:

  http://www.spinics.net/lists/stable/msg45870.html
  http://www.spinics.net/lists/stable/msg45961.html

The patch is already accepted in the net.git tree, see also
  https://git.kernel.org/cgit/linux/kernel/git/davem/net.git/log/
and
  https://git.kernel.org/cgit/linux/kernel/git/davem/net.git/commit/?id=f5738e2ef88070ef1372e6e718124d88e9abe4ac

This patch will be requested for a z-stream update.

Brew
----
https://brewweb.devel.redhat.com/taskinfo?taskID=7475637

Test status
-----------
The patch has been tested and fixes the problem.
The fix has been verified by the IBM test department.

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/iucv/af_iucv.c b/net/iucv/af_iucv.c
index 276aa86..215e9b0 100644
--- a/net/iucv/af_iucv.c
+++ b/net/iucv/af_iucv.c
@@ -1829,7 +1829,7 @@ static void iucv_callback_txdone(struct iucv_path *path,
   spin_lock_irqsave(&list->lock, flags);
 
   while (list_skb != (struct sk_buff *)list) {
-   if (msg->tag != IUCV_SKB_CB(list_skb)->tag) {
+   if (msg->tag == IUCV_SKB_CB(list_skb)->tag) {
     this = list_skb;
     break;
    }
-- 
1.7.1