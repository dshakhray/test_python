From 3813364bf687575a96c2e4e951e1658f8e09b90e Mon Sep 17 00:00:00 2001
From: Tomas Henzl <thenzl@redhat.com>
Date: Mon, 8 Sep 2014 14:31:51 -0400
Subject: [scsi] hpsa: remove dev_dbg() calls from hot paths

Message-id: <1410186734-19986-61-git-send-email-thenzl@redhat.com>
Patchwork-id: 92072
O-Subject: [RHEL6.6 e-stor PATCH 60/83] hpsa: remove dev_dbg() calls from hot paths
Bugzilla: 1069185
RH-Acked-by: Maurizio Lombardi <mlombard@redhat.com>
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Ewan Milne <emilne@redhat.com>

They are not completely free of cost when disabled and
when enabled emitting debug output for every command
submitted produces far too much output to be useful.

Signed-off-by: Stephen M. Cameron <scameron@beardog.cce.hp.com>
Reviewed-by: Mike Miller <michael.miller@canonical.com>
Reviewed-by: Webb Scales <webb.scales@hp.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 7b9235ee19aa7405d91f00a3e1668029cbf4a463)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/hpsa.h b/drivers/scsi/hpsa.h
index 75414a0..5ee3e7a 100644
--- a/drivers/scsi/hpsa.h
+++ b/drivers/scsi/hpsa.h
@@ -343,8 +343,6 @@ struct offline_device_entry {
 static void SA5_submit_command(struct ctlr_info *h,
  struct CommandList *c)
 {
- dev_dbg(&h->pdev->dev, "Sending %x, tag = %x\n", c->busaddr,
-  c->Header.Tag.lower);
  writel(c->busaddr, h->vaddr + SA5_REQUEST_PORT_OFFSET);
  (void) readl(h->vaddr + SA5_SCRATCHPAD_OFFSET);
 }
@@ -352,8 +350,6 @@ static void SA5_submit_command(struct ctlr_info *h,
 static void SA5_submit_command_ioaccel2(struct ctlr_info *h,
  struct CommandList *c)
 {
- dev_dbg(&h->pdev->dev, "Sending %x, tag = %x\n", c->busaddr,
-  c->Header.Tag.lower);
  if (c->cmd_type == CMD_IOACCEL2)
   writel(c->busaddr, h->vaddr + IOACCEL2_INBOUND_POSTQ_32);
  else
@@ -475,7 +471,6 @@ static bool SA5_intr_pending(struct ctlr_info *h)
 {
  unsigned long register_value  =
   readl(h->vaddr + SA5_INTR_STATUS);
- dev_dbg(&h->pdev->dev, "intr_pending %lx\n", register_value);
  return register_value & SA5_INTR_PENDING;
 }
 
-- 
1.7.1