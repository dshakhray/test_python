From d7070a90e60f601781481dd3f04a65d46ca86294 Mon Sep 17 00:00:00 2001
From: David Howells <dhowells@redhat.com>
Date: Tue, 25 Nov 2014 16:33:05 -0500
Subject: [fs] namei: move d_move() up

Message-id: <20141125163305.18115.44008.stgit@warthog.procyon.org.uk>
Patchwork-id: 100903
O-Subject: [PATCH 03/47] vfs: rename: move d_move() up
Bugzilla: 985875
RH-Acked-by: Ian Kent <ikent@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

From: Miklos Szeredi <mszeredi@suse.cz>

Move the d_move() in vfs_rename_dir() up, similarly to how it's done in
vfs_rename_other().  The next patch will consolidate these two functions
and this is the only structural difference between them.

I'm not sure if doing the d_move() after the dput is even valid.  But there
may be a logical explanation for that.  But moving the d_move() before the
dput() (and the mutex_unlock()) should definitely not hurt.

Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
Reviewed-by: J. Bruce Fields <bfields@redhat.com>
Original-commit: de22a4c3720a96f1c2ebf12b0857b6db6a991f2c
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/namei.c b/fs/namei.c
index bc48c0f..96b4a92 100644
--- a/fs/namei.c
+++ b/fs/namei.c
@@ -4006,13 +4006,12 @@ static int vfs_rename_dir(struct inode *old_dir, struct dentry *old_dentry,
   target->i_flags |= S_DEAD;
   dont_mount(new_dentry);
  }
+ if (!(old_dir->i_sb->s_type->fs_flags & FS_RENAME_DOES_D_MOVE))
+  d_move(old_dentry, new_dentry);
 out:
  if (target)
   mutex_unlock(&target->i_mutex);
  dput(new_dentry);
- if (!error)
-  if (!(old_dir->i_sb->s_type->fs_flags & FS_RENAME_DOES_D_MOVE))
-   d_move(old_dentry,new_dentry);
  return error;
 }
 
-- 
1.7.1