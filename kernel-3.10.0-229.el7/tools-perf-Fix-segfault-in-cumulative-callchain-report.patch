From 251491f41435b21ab4944921c4398406913b4197 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:09:11 -0400
Subject: [tools] perf: Fix segfault in cumulative.callchain report

Message-id: <1410181752-25631-307-git-send-email-jolsa@redhat.com>
Patchwork-id: 91865
O-Subject: [PATCH RHEL7.1 BZ1134356 306/307] perf tools: Fix segfault in cumulative.callchain report
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit d755330c5e0658d8056242b5b81e2f44ed7a96d8
Author: Jiri Olsa <jolsa@kernel.org>
Date: Sun Jun 15 10:22:15 2014 +0200

description
===========
When cumulative callchain mode is on, we could get samples with
with no actual hits. This breaks the assumption of the annotation
code, that each sample has annotation counts allocated and leads
to segfault.

Fixing this by additional checks for annotation stats.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/ui/browsers/hists.c b/tools/perf/ui/browsers/hists.c
index 52c03fb..04a229a 100644
--- a/tools/perf/ui/browsers/hists.c
+++ b/tools/perf/ui/browsers/hists.c
@@ -17,6 +17,7 @@
 #include "../util.h"
 #include "../ui.h"
 #include "map.h"
+#include "annotate.h"
 
 struct hist_browser {
  struct ui_browser   b;
@@ -1593,13 +1594,18 @@ static int perf_evsel__hists_browse(struct perf_evsel *evsel, int nr_events,
       bi->to.sym->name) > 0)
     annotate_t = nr_options++;
   } else {
-
    if (browser->selection != NULL &&
        browser->selection->sym != NULL &&
-       !browser->selection->map->dso->annotate_warned &&
-    asprintf(&options[nr_options], "Annotate %s",
-      browser->selection->sym->name) > 0)
-    annotate = nr_options++;
+       !browser->selection->map->dso->annotate_warned) {
+    struct annotation *notes;
+
+    notes = symbol__annotation(browser->selection->sym);
+
+    if (notes->src &&
+        asprintf(&options[nr_options], "Annotate %s",
+       browser->selection->sym->name) > 0)
+     annotate = nr_options++;
+   }
   }
 
   if (thread != NULL &&
@@ -1656,6 +1662,7 @@ retry_popup_menu:
 
   if (choice == annotate || choice == annotate_t || choice == annotate_f) {
    struct hist_entry *he;
+   struct annotation *notes;
    int err;
 do_annotate:
    if (!objdump_path && perf_session_env__lookup_objdump(env))
@@ -1679,6 +1686,10 @@ do_annotate:
     he->ms.map = he->branch_info->to.map;
    }
 
+   notes = symbol__annotation(he->ms.sym);
+   if (!notes->src)
+    continue;
+
    /*
     * Don't let this be freed, say, by hists__decay_entry.
     */
-- 
1.7.1