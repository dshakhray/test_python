From d1514b36dfd9cc899b43588cbab2822cf53a0473 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 18:59:43 -0400
Subject: [fs] btrfs: fix wrong send_in_progress accounting

Message-id: <1407179109-13714-97-git-send-email-sandeen@redhat.com>
Patchwork-id: 87008
O-Subject: [RHEL7.1 PATCH 096/422] Btrfs: fix wrong send_in_progress accounting
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Wang Shilong <wangsl.fnst@cn.fujitsu.com>

commit 896c14f97f700aec6565154f2451605d7c5ce3ed
Author: Wang Shilong <wangsl.fnst@cn.fujitsu.com>
Date:   Tue Jan 7 17:25:18 2014 +0800

    Btrfs: fix wrong send_in_progress accounting

    Steps to reproduce:
     # mkfs.btrfs -f /dev/sda8
     # mount /dev/sda8 /mnt
     # btrfs sub snapshot -r /mnt /mnt/snap1
     # btrfs sub snapshot -r /mnt /mnt/snap2
     # btrfs send /mnt/snap1 -p /mnt/snap2 -f /mnt/1
     # dmesg

    The problem is that we will sort clone roots(include @send_root), it
    might push @send_root before thus @send_root's @send_in_progress will
    be decreased twice.

    Cc: David Sterba <dsterba@suse.cz>
    Signed-off-by: Wang Shilong <wangsl.fnst@cn.fujitsu.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/send.c b/fs/btrfs/send.c
index bff0b1a..5b69785 100644
--- a/fs/btrfs/send.c
+++ b/fs/btrfs/send.c
@@ -4752,6 +4752,7 @@ long btrfs_ioctl_send(struct file *mnt_file, void __user *arg_)
  u32 i;
  u64 *clone_sources_tmp = NULL;
  int clone_sources_to_rollback = 0;
+ int sort_clone_roots = 0;
 
  if (!capable(CAP_SYS_ADMIN))
   return -EPERM;
@@ -4942,6 +4943,7 @@ long btrfs_ioctl_send(struct file *mnt_file, void __user *arg_)
  sort(sctx->clone_roots, sctx->clone_roots_cnt,
    sizeof(*sctx->clone_roots), __clone_root_cmp_sort,
    NULL);
+ sort_clone_roots = 1;
 
  ret = send_subvol(sctx);
  if (ret < 0)
@@ -4957,11 +4959,19 @@ long btrfs_ioctl_send(struct file *mnt_file, void __user *arg_)
  }
 
 out:
- for (i = 0; sctx && i < clone_sources_to_rollback; i++)
-  btrfs_root_dec_send_in_progress(sctx->clone_roots[i].root);
+ if (sort_clone_roots) {
+  for (i = 0; i < sctx->clone_roots_cnt; i++)
+   btrfs_root_dec_send_in_progress(
+     sctx->clone_roots[i].root);
+ } else {
+  for (i = 0; sctx && i < clone_sources_to_rollback; i++)
+   btrfs_root_dec_send_in_progress(
+     sctx->clone_roots[i].root);
+
+  btrfs_root_dec_send_in_progress(send_root);
+ }
  if (sctx && !IS_ERR_OR_NULL(sctx->parent_root))
   btrfs_root_dec_send_in_progress(sctx->parent_root);
- btrfs_root_dec_send_in_progress(send_root);
 
  kfree(arg);
  vfree(clone_sources_tmp);
-- 
1.7.1