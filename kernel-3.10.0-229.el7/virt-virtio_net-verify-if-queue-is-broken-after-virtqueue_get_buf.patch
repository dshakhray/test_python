From 71eaedf53aa3c30653068fd46eae9cf328726653 Mon Sep 17 00:00:00 2001
From: Hendrik Brueckner <brueckner@redhat.com>
Date: Wed, 23 Jul 2014 10:49:55 -0400
Subject: [virt] virtio_net: verify if queue is broken after virtqueue_get_buf()

Message-id: <1406112611-9862-8-git-send-email-brueckner@redhat.com>
Patchwork-id: 86321
O-Subject: [RHEL7.1 PATCH 07/23] [virt] virtio_net: verify if queue is broken after virtqueue_get_buf()
Bugzilla: 1088554
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Description
-----------
commit 047b9b94951dba2e93c65a582ae2bce25c960b86
Author: Heinz Graalfs <graalfs@linux.vnet.ibm.com>
Commit: Rusty Russell <rusty@rustcorp.com.au>

    virtio_net: verify if queue is broken after virtqueue_get_buf()

    If a virtqueue_get_buf() call returns a NULL pointer a possibly endless while
    loop should be avoided by checking for a broken virtqueue.

    Signed-off-by: Heinz Graalfs <graalfs@linux.vnet.ibm.com>
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

Bugzilla
--------
BZ 1088554
https://bugzilla.redhat.com/show_bug.cgi?id=1088554

Upstream status of the patch
----------------------------
The patch is upstream as of kernel version v3.13-rc1
http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=047b9b94951dba2e93c65a582ae2bce25c960b86

Brew
----
https://brewweb.devel.redhat.com/taskinfo?taskID=7725759

Test status
-----------
The patch has been tested and fixes the problem.
The fix has been verified by the IBM test department.

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/virtio_net.c b/drivers/net/virtio_net.c
index 9acf56d..ddc1d2b 100644
--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@ -866,7 +866,8 @@ static bool virtnet_send_command(struct virtnet_info *vi, u8 class, u8 cmd,
  /* Spin for a response, the kick causes an ioport write, trapping
   * into the hypervisor, so the request should be handled immediately.
   */
- while (!virtqueue_get_buf(vi->cvq, &tmp))
+ while (!virtqueue_get_buf(vi->cvq, &tmp) &&
+        !virtqueue_is_broken(vi->cvq))
   cpu_relax();
 
  return status == VIRTIO_NET_OK;
-- 
1.7.1