From b70da4d04fb2dd4b5a2969a2d42c3edc04bb63fd Mon Sep 17 00:00:00 2001
From: Doug Ledford <dledford@redhat.com>
Date: Wed, 24 Sep 2014 17:33:03 -0400
Subject: [infiniband] qib: Fix memory leak of recv context when driver fails to initialize

Message-id: <2250f17f43bf068031b3b5b4334f8f519325307e.1411579814.git.dledford@redhat.com>
Patchwork-id: 96700
O-Subject: [Patch RHEL7 10/19] IB/qib: Fix memory leak of recv context when driver fails to initialize.
Bugzilla: 1085961
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

From: Dennis Dalessandro <dennis.dalessandro@intel.com>

In qib_create_ctxts() we allocate an array to hold recv contexts. Then attempt
to create data for those recv contexts. If that call to qib_create_ctxtdata()
fails then an error is returned but the previously allocated memory is not
freed.

Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
Signed-off-by: Roland Dreier <roland@purestorage.com>
(cherry picked from commit 06064a103f6bd5b409ffed6248983270c0681c21)
Signed-off-by: Doug Ledford <dledford@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/infiniband/hw/qib/qib_init.c b/drivers/infiniband/hw/qib/qib_init.c
index 7fbf466..5b7aeb2 100644
--- a/drivers/infiniband/hw/qib/qib_init.c
+++ b/drivers/infiniband/hw/qib/qib_init.c
@@ -130,7 +130,6 @@ void qib_set_ctxtcnt(struct qib_devdata *dd)
 int qib_create_ctxts(struct qib_devdata *dd)
 {
  unsigned i;
- int ret;
  int local_node_id = pcibus_to_node(dd->pcidev->bus);
 
  if (local_node_id < 0)
@@ -145,8 +144,7 @@ int qib_create_ctxts(struct qib_devdata *dd)
  if (!dd->rcd) {
   qib_dev_err(dd,
    "Unable to allocate ctxtdata array, failing\n");
-  ret = -ENOMEM;
-  goto done;
+  return -ENOMEM;
  }
 
  /* create (one or more) kctxt */
@@ -163,15 +161,14 @@ int qib_create_ctxts(struct qib_devdata *dd)
   if (!rcd) {
    qib_dev_err(dd,
     "Unable to allocate ctxtdata for Kernel ctxt, failing\n");
-   ret = -ENOMEM;
-   goto done;
+   kfree(dd->rcd);
+   dd->rcd = NULL;
+   return -ENOMEM;
   }
   rcd->pkeys[0] = QIB_DEFAULT_P_KEY;
   rcd->seq_cnt = 1;
  }
- ret = 0;
-done:
- return ret;
+ return 0;
 }
 
 /*
-- 
1.7.1