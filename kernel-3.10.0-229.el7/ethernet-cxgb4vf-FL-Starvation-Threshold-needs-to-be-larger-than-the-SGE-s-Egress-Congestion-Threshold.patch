From ed0b970bb8afa9deb9c00dedc67628821238505a Mon Sep 17 00:00:00 2001
From: Sai Vemuri <svemuri@redhat.com>
Date: Wed, 12 Nov 2014 19:08:18 -0500
Subject: [ethernet] cxgb4vf: FL Starvation Threshold needs to be larger than the SGE's Egress Congestion Threshold

Message-id: <1415819300-32670-18-git-send-email-svemuri@redhat.com>
Patchwork-id: 99872
O-Subject: [RHEL7.1 PATCH BZ 1163467 17/19] cxgb4vf: FL Starvation Threshold needs to be larger than the SGE's Egress Congestion Threshold
Bugzilla: 1163467
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>

Free List Starvation Threshold needs to be larger than the SGE's Egress
Congestion Threshold or we'll end up in a mutual stall where the driver waits
for Ingress Packets to drive replacing Free List Pointers and the SGE waits for
Free List Pointers before pushing Ingress Packets to the host.

Based on original work by Casey Leedom <leedom@chelsio.com>

Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 50d21a662d6d3155132edf34f72161a59675c02c)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/chelsio/cxgb4vf/sge.c b/drivers/net/ethernet/chelsio/cxgb4vf/sge.c
index da39376..4e4e43e 100644
--- a/drivers/net/ethernet/chelsio/cxgb4vf/sge.c
+++ b/drivers/net/ethernet/chelsio/cxgb4vf/sge.c
@@ -94,12 +94,6 @@ enum {
  MAX_TIMER_TX_RECLAIM = 100,
 
  /*
-  * An FL with <= FL_STARVE_THRES buffers is starving and a periodic
-  * timer will attempt to refill it.
-  */
- FL_STARVE_THRES = 4,
-
- /*
   * Suspend an Ethernet TX queue with fewer available descriptors than
   * this.  We always want to have room for a maximum sized packet:
   * inline immediate data + MAX_SKB_FRAGS. This is the same as
@@ -2490,6 +2484,16 @@ int t4vf_sge_init(struct adapter *adapter)
   s->fl_align = max(ingpadboundary, ingpackboundary);
  }
 
+ /* A FL with <= fl_starve_thres buffers is starving and a periodic
+  * timer will attempt to refill it.  This needs to be larger than the
+  * SGE's Egress Congestion Threshold.  If it isn't, then we can get
+  * stuck waiting for new packets while the SGE is waiting for us to
+  * give it more Free List entries.  (Note that the SGE's Egress
+  * Congestion Threshold is in units of 2 Free List pointers.)
+  */
+ s->fl_starve_thres
+  = EGRTHRESHOLD_GET(sge_params->sge_congestion_control)*2 + 1;
+
  /*
   * Set up tasklet timers.
   */
diff --git a/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h b/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h
index b5c301d..4b6a6d1 100644
--- a/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h
+++ b/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h
@@ -140,6 +140,7 @@ struct sge_params {
  u32 sge_user_mode_limits; /* limits for BAR2 user mode accesses */
  u32 sge_fl_buffer_size[16]; /* free list buffer sizes */
  u32 sge_ingress_rx_threshold; /* RX counter interrupt threshold[4] */
+ u32 sge_congestion_control;     /* congestion thresholds, etc. */
  u32 sge_timer_value_0_and_1; /* interrupt coalescing timer values */
  u32 sge_timer_value_2_and_3;
  u32 sge_timer_value_4_and_5;
diff --git a/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c b/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c
index dc30d28..1e896b9 100644
--- a/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c
+++ b/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c
@@ -493,10 +493,13 @@ int t4vf_get_sge_params(struct adapter *adapter)
 
  params[0] = (FW_PARAMS_MNEM(FW_PARAMS_MNEM_REG) |
        FW_PARAMS_PARAM_XYZ(SGE_INGRESS_RX_THRESHOLD));
- v = t4vf_query_params(adapter, 1, params, vals);
+ params[1] = (FW_PARAMS_MNEM(FW_PARAMS_MNEM_REG) |
+       FW_PARAMS_PARAM_XYZ(SGE_CONM_CTRL));
+ v = t4vf_query_params(adapter, 2, params, vals);
  if (v)
   return v;
  sge_params->sge_ingress_rx_threshold = vals[0];
+ sge_params->sge_congestion_control = vals[1];
 
  return 0;
 }
-- 
1.7.1