From 78d398155cbcbbf88c00d5baf027a38a8e54ea37 Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Mon, 23 Jun 2014 21:51:44 -0400
Subject: [fs] nfsd: fix setting of NFS4_OO_CONFIRMED in nfsd4_open

Message-id: <1403560314-32525-163-git-send-email-bfields@redhat.com>
Patchwork-id: 84582
O-Subject: [Patch RHEL7 162/172] nfsd: fix setting of NFS4_OO_CONFIRMED in nfsd4_open
Bugzilla: 1111719
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Jeff Layton <jlayton@primarydata.com>

In the NFS4_OPEN_CLAIM_PREVIOUS case, we should only mark it confirmed
if the nfs4_check_open_reclaim check succeeds.

In the NFS4_OPEN_CLAIM_DELEG_PREV_FH and NFS4_OPEN_CLAIM_DELEGATE_PREV
cases, I see no point in declaring the openowner confirmed when the
operation is going to fail anyway, and doing so might allow the client
to game things such that it wouldn't need to confirm a subsequent open
with the same owner.

Signed-off-by: Jeff Layton <jlayton@primarydata.com>
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: ba5378b66f5eb20e464796c5b088c0961fb5f618
Bugzilla: 1111719
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4proc.c b/fs/nfsd/nfs4proc.c
index 259e41c..1bed2a9 100644
--- a/fs/nfsd/nfs4proc.c
+++ b/fs/nfsd/nfs4proc.c
@@ -429,12 +429,12 @@ nfsd4_open(struct svc_rqst *rqstp, struct nfsd4_compound_state *cstate,
     goto out;
    break;
   case NFS4_OPEN_CLAIM_PREVIOUS:
-   open->op_openowner->oo_flags |= NFS4_OO_CONFIRMED;
    status = nfs4_check_open_reclaim(&open->op_clientid,
         cstate->minorversion,
         nn);
    if (status)
     goto out;
+   open->op_openowner->oo_flags |= NFS4_OO_CONFIRMED;
   case NFS4_OPEN_CLAIM_FH:
   case NFS4_OPEN_CLAIM_DELEG_CUR_FH:
    status = do_open_fhandle(rqstp, cstate, open);
@@ -444,7 +444,6 @@ nfsd4_open(struct svc_rqst *rqstp, struct nfsd4_compound_state *cstate,
    break;
   case NFS4_OPEN_CLAIM_DELEG_PREV_FH:
               case NFS4_OPEN_CLAIM_DELEGATE_PREV:
-   open->op_openowner->oo_flags |= NFS4_OO_CONFIRMED;
    dprintk("NFSD: unsupported OPEN claim type %d\n",
     open->op_claim_type);
    status = nfserr_notsupp;
-- 
1.7.1