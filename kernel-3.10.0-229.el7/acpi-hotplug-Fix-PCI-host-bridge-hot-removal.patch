From 3830dfecb528ba74ad4c8e7cd8de161ae3ea91de Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 10 Jul 2014 01:08:52 -0400
Subject: [acpi] hotplug: Fix PCI host bridge hot removal

Message-id: <20140710010852.22146.35408.stgit@gir.stowe>
Patchwork-id: 85640
O-Subject: [RHEL7.1 PATCH 101/105] ACPI / hotplug: Fix PCI host bridge hot removal
Bugzilla: 1114228
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1114228
Upstream Status: c1beb0bdb5b3ef670af3ab946434f7fc55d4c7a3

commit c1beb0bdb5b3ef670af3ab946434f7fc55d4c7a3
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Nov 14 00:54:08 2013 +0100

    ACPI / hotplug: Fix PCI host bridge hot removal

    Since the PCI host bridge scan handler does not set hotplug.enabled,
    the check of it in acpi_bus_device_eject() effectively prevents the
    root bridge hot removal from working after commit a3b1b1ef78cd
    (ACPI / hotplug: Merge device hot-removal routines).  However, that
    check is not necessary, because the other acpi_bus_device_eject()
    users, acpi_hotplug_notify_cb and acpi_eject_store(), do the same
    check by themselves before executing that function.

    For this reason, remove the scan handler check from
    acpi_bus_device_eject() to make PCI hot bridge hot removal work
    again.

    Fixes: a3b1b1ef78cd (ACPI / hotplug: Merge device hot-removal routines)
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Acked-by: Toshi Kani <toshi.kani@hp.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/acpi/scan.c b/drivers/acpi/scan.c
index be7a603..d5c429e 100644
--- a/drivers/acpi/scan.c
+++ b/drivers/acpi/scan.c
@@ -289,24 +289,17 @@ void acpi_bus_device_eject(void *data, u32 ost_src)
 {
  struct acpi_device *device = data;
  acpi_handle handle = device->handle;
- struct acpi_scan_handler *handler;
  u32 ost_code = ACPI_OST_SC_NON_SPECIFIC_FAILURE;
  int error;
 
  lock_device_hotplug();
  mutex_lock(&acpi_scan_lock);
 
- handler = device->handler;
- if (!handler || !handler->hotplug.enabled) {
-  put_device(&device->dev);
-  goto err_support;
- }
-
  if (ost_src == ACPI_NOTIFY_EJECT_REQUEST)
   acpi_evaluate_hotplug_ost(handle, ACPI_NOTIFY_EJECT_REQUEST,
        ACPI_OST_SC_EJECT_IN_PROGRESS, NULL);
 
- if (handler->hotplug.mode == AHM_CONTAINER)
+ if (device->handler && device->handler->hotplug.mode == AHM_CONTAINER)
   kobject_uevent(&device->dev.kobj, KOBJ_OFFLINE);
 
  error = acpi_scan_hot_remove(device);
-- 
1.7.1