From 42a5cf3559a2a9f3725755793606d4c114bea201 Mon Sep 17 00:00:00 2001
From: Stefan Assmann <sassmann@redhat.com>
Date: Tue, 26 Aug 2014 14:11:21 -0400
Subject: [ethernet] igb: fix 32-bit DMA mask handling

Message-id: <1409062359-13063-4-git-send-email-sassmann@redhat.com>
Patchwork-id: 89133
O-Subject: [RHEL7.1 PATCH 03/81] DMA-API: net: intel/igb: fix 32-bit DMA mask handling
Bugzilla: 1091121
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Neil Horman <nhorman@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Russell King <rmk+kernel@arm.linux.org.uk>

The fallback to 32-bit DMA mask is rather odd:
 err = dma_set_mask(&pdev->dev, DMA_BIT_MASK(64));
 if (!err) {
  err = dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(64));
  if (!err)
   pci_using_dac = 1;
 } else {
  err = dma_set_mask(&pdev->dev, DMA_BIT_MASK(32));
  if (err) {
   err = dma_set_coherent_mask(&pdev->dev,
          DMA_BIT_MASK(32));
   if (err) {
    dev_err(&pdev->dev,
     "No usable DMA configuration, aborting\n");
    goto err_dma;
   }
  }
 }
This means we only set the coherent DMA mask in the fallback path if
the DMA mask set failed, which is silly.  This fixes it to set the
coherent DMA mask only if dma_set_mask() succeeded, and to error out
if either fails.

Acked-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
Signed-off-by: Stefan Assmann <sassmann@redhat.com>
(cherry picked from commit dc4ff9bb7534ebd153f8441ec0e9190964ad8944)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/igb/igb_main.c b/drivers/net/ethernet/intel/igb/igb_main.c
index 421f3f1..3b32b1e 100644
--- a/drivers/net/ethernet/intel/igb/igb_main.c
+++ b/drivers/net/ethernet/intel/igb/igb_main.c
@@ -2035,21 +2035,15 @@ static int igb_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
   return err;
 
  pci_using_dac = 0;
- err = dma_set_mask(&pdev->dev, DMA_BIT_MASK(64));
+ err = dma_set_mask_and_coherent(&pdev->dev, DMA_BIT_MASK(64));
  if (!err) {
-  err = dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(64));
-  if (!err)
-   pci_using_dac = 1;
+  pci_using_dac = 1;
  } else {
-  err = dma_set_mask(&pdev->dev, DMA_BIT_MASK(32));
+  err = dma_set_mask_and_coherent(&pdev->dev, DMA_BIT_MASK(32));
   if (err) {
-   err = dma_set_coherent_mask(&pdev->dev,
-          DMA_BIT_MASK(32));
-   if (err) {
-    dev_err(&pdev->dev,
-     "No usable DMA configuration, aborting\n");
-    goto err_dma;
-   }
+   dev_err(&pdev->dev,
+    "No usable DMA configuration, aborting\n");
+   goto err_dma;
   }
  }
 
-- 
1.7.1