From f9df4098c36f6e7ebecc17f5dc52d88848f14679 Mon Sep 17 00:00:00 2001
From: Nikolay Aleksandrov <nikolay@redhat.com>
Date: Fri, 5 Sep 2014 11:04:01 -0400
Subject: [ethernet] sfc: fix calling of free_irq with already free vector

Message-id: <1409915048-26438-26-git-send-email-nikolay@redhat.com>
Patchwork-id: 91418
O-Subject: [RHEL7.1 PATCH BZ 1110888 25/32] sfc: fix calling of free_irq with already free vector
Bugzilla: 1110888
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

If the sfc driver is in legacy interrupt mode (either explicitly by
using interrupt_mode module param or by falling back to it) it will
hit a warning at kernel/irq/manage.c because it will try to free an irq
which wasn't allocated by it in the first place because the MSI(X) irqs are
zero and it'll try to free them unconditionally. So fix it by checking if
we're in legacy mode and freeing the appropriate irqs.

CC: Zenghui Shi <zshi@redhat.com>
CC: Ben Hutchings <ben@decadent.org.uk>
CC: <linux-net-drivers@solarflare.com>
CC: Shradha Shah <sshah@solarflare.com>
CC: David S. Miller <davem@davemloft.net>

Fixes: 1899c111a535 ("sfc: Fix IRQ cleanup in case of a probe failure")
Reported-by: Zenghui Shi <zshi@redhat.com>
Signed-off-by: Nikolay Aleksandrov <nikolay@redhat.com>
Acked-by: Shradha Shah <sshah@solarflare.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1c3639005f48492e5f2d965779efd814e80f8b15)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/sfc/nic.c b/drivers/net/ethernet/sfc/nic.c
index 32d969e..89b83e5 100644
--- a/drivers/net/ethernet/sfc/nic.c
+++ b/drivers/net/ethernet/sfc/nic.c
@@ -156,13 +156,15 @@ void efx_nic_fini_interrupt(struct efx_nic *efx)
  efx->net_dev->rx_cpu_rmap = NULL;
 #endif
 
- /* Disable MSI/MSI-X interrupts */
- efx_for_each_channel(channel, efx)
-  free_irq(channel->irq, &efx->msi_context[channel->channel]);
-
- /* Disable legacy interrupt */
- if (efx->legacy_irq)
+ if (EFX_INT_MODE_USE_MSI(efx)) {
+  /* Disable MSI/MSI-X interrupts */
+  efx_for_each_channel(channel, efx)
+   free_irq(channel->irq,
+     &efx->msi_context[channel->channel]);
+ } else {
+  /* Disable legacy interrupt */
   free_irq(efx->legacy_irq, efx);
+ }
 }
 
 /* Register dump */
-- 
1.7.1