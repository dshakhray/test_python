From c0a8a34e9ad70f2836f72f8fb7214d94fe733177 Mon Sep 17 00:00:00 2001
From: Jeff Moyer <jmoyer@redhat.com>
Date: Fri, 10 Oct 2014 21:03:18 -0400
Subject: [block] fix unbalanced bypass-disable in blk_register_queue

Message-id: <1412975015-5370-18-git-send-email-jmoyer@redhat.com>
Patchwork-id: 97469
O-Subject: [RHEL7 PATCH 17/34] Block: fix unbalanced bypass-disable in blk_register_queue
Bugzilla: 1146660
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Mike Snitzer <snitzer@redhat.com>

This is a backport of the following commit.  This resolves bug
1146660.

  commit df35c7c912fe668797681842b3b74c61b0664050
  Author: Alan Stern <stern@rowland.harvard.edu>
  Date:   Tue Sep 9 11:50:58 2014 -0400

    Block: fix unbalanced bypass-disable in blk_register_queue

    When a queue is registered, the block layer turns off the bypass
    setting (because bypass is enabled when the queue is created).  This
    doesn't work well for queues that are unregistered and then registered
    again; we get a WARNING because of the unbalanced calls to
    blk_queue_bypass_end().

    This patch fixes the problem by making blk_register_queue() call
    blk_queue_bypass_end() only the first time the queue is registered.

    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Acked-by: Tejun Heo <tj@kernel.org>
    CC: James Bottomley <James.Bottomley@HansenPartnership.com>
    CC: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Jens Axboe <axboe@fb.com>

Signed-off-by: Jeff Moyer <jmoyer@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/block/blk-sysfs.c b/block/blk-sysfs.c
index 654bfe8..06557ee 100644
--- a/block/blk-sysfs.c
+++ b/block/blk-sysfs.c
@@ -587,8 +587,10 @@ int blk_register_queue(struct gendisk *disk)
   * Initialization must be complete by now.  Finish the initial
   * bypass from queue allocation.
   */
- queue_flag_set_unlocked(QUEUE_FLAG_INIT_DONE, q);
- blk_queue_bypass_end(q);
+ if (!blk_queue_init_done(q)) {
+  queue_flag_set_unlocked(QUEUE_FLAG_INIT_DONE, q);
+  blk_queue_bypass_end(q);
+ }
 
  ret = blk_trace_init_sysfs(dev);
  if (ret)
-- 
1.7.1