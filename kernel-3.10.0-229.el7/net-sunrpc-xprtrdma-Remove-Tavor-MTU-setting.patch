From 84d020db37e82b1744332c0057daa46fec8bccf3 Mon Sep 17 00:00:00 2001
From: Steve Dickson <SteveD@redhat.com>
Date: Thu, 26 Jun 2014 15:54:26 -0400
Subject: [net] sunrpc/xprtrdma: Remove Tavor MTU setting

Message-id: <1403798077-28799-68-git-send-email-steved@redhat.com>
Patchwork-id: 84900
O-Subject: [RHEL7.1 PATCH 67/78] xprtrdma: Remove Tavor MTU setting
Bugzilla: 1113248
RH-Acked-by: J. Bruce Fields <bfields@redhat.com>

From: Chuck Lever <chuck.lever@oracle.com>

Clean up.  Remove HCA-specific clutter in xprtrdma, which is
supposed to be device-independent.

Hal Rosenstock <hal@dev.mellanox.co.il> observes:
> Note that there is OpenSM option (enable_quirks) to return 1K MTU
> in SA PathRecord responses for Tavor so that can be used for this.
> The default setting for enable_quirks is FALSE so that would need
> changing.

Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
Upstream Id: 5bc4bc729275a0bfc2bfd04466e8ab7c85af2f6e
Bugzilla: 1113248
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/sunrpc/xprtrdma/verbs.c b/net/sunrpc/xprtrdma/verbs.c
index 54edf2a..515dfc1 100644
--- a/net/sunrpc/xprtrdma/verbs.c
+++ b/net/sunrpc/xprtrdma/verbs.c
@@ -48,7 +48,6 @@
  */
 
 #include <linux/interrupt.h>
-#include <linux/pci.h> /* for Tavor hack below */
 #include <linux/slab.h>
 #include <asm/bitops.h>
 
@@ -920,19 +919,6 @@ retry:
   }
  }
 
-/* XXX Tavor device performs badly with 2K MTU! */
-if (strnicmp(ia->ri_id->device->dma_device->bus->name, "pci", 3) == 0) {
- struct pci_dev *pcid = to_pci_dev(ia->ri_id->device->dma_device);
- if (pcid->device == PCI_DEVICE_ID_MELLANOX_TAVOR &&
-     (pcid->vendor == PCI_VENDOR_ID_MELLANOX ||
-      pcid->vendor == PCI_VENDOR_ID_TOPSPIN)) {
-  struct ib_qp_attr attr = {
-   .path_mtu = IB_MTU_1024
-  };
-  rc = ib_modify_qp(ia->ri_id->qp, &attr, IB_QP_PATH_MTU);
- }
-}
-
  ep->rep_connected = 0;
 
  rc = rdma_connect(ia->ri_id, &ep->rep_remote_cma);
-- 
1.7.1