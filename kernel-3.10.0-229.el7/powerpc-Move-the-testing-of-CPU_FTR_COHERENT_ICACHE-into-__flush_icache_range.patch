From adb6183dd5e4f468aa0a1170de2d917e8c534e7d Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:04:28 -0400
Subject: [powerpc] Move the testing of CPU_FTR_COHERENT_ICACHE into __flush_icache_range

Message-id: <1410545655-205645-40-git-send-email-dzickus@redhat.com>
Patchwork-id: 94298
O-Subject: [RHEL7 PATCH 039/626] powerpc: Move the testing of CPU_FTR_COHERENT_ICACHE into __flush_icache_range
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit abb29c3bb13c7b747fae18b9c63b660529ccc612
Author: Kevin Hao <haokexin@gmail.com>
Date:   Tue Aug 6 18:23:30 2013 +0800

    powerpc: Move the testing of CPU_FTR_COHERENT_ICACHE into __flush_icache_range

    In function flush_icache_range(), we use cpu_has_feature() to test
    the feature bit of CPU_FTR_COHERENT_ICACHE. But this seems not optimal
    for two reasons:
     a) For ppc32, the function __flush_icache_range() already do this
        check with the macro END_FTR_SECTION_IFSET.
     b) Compare with the cpu_has_feature(), the method of using macro
        END_FTR_SECTION_IFSET will not introduce any runtime overhead.

    [And while at it, add the missing required isync] -- BenH

    Signed-off-by: Kevin Hao <haokexin@gmail.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/cacheflush.h b/arch/powerpc/include/asm/cacheflush.h
index b843e35..60b620d 100644
--- a/arch/powerpc/include/asm/cacheflush.h
+++ b/arch/powerpc/include/asm/cacheflush.h
@@ -35,8 +35,7 @@ extern void __flush_disable_L1(void);
 extern void __flush_icache_range(unsigned long, unsigned long);
 static inline void flush_icache_range(unsigned long start, unsigned long stop)
 {
- if (!cpu_has_feature(CPU_FTR_COHERENT_ICACHE))
-  __flush_icache_range(start, stop);
+ __flush_icache_range(start, stop);
 }
 
 extern void flush_icache_user_range(struct vm_area_struct *vma,
diff --git a/arch/powerpc/kernel/misc_32.S b/arch/powerpc/kernel/misc_32.S
index e2f4333..673ee1d 100644
--- a/arch/powerpc/kernel/misc_32.S
+++ b/arch/powerpc/kernel/misc_32.S
@@ -344,6 +344,7 @@ END_FTR_SECTION_IFSET(CPU_FTR_UNIFIED_ID_CACHE)
  */
 _KPROBE(__flush_icache_range)
 BEGIN_FTR_SECTION
+ isync
  blr    /* for 601, do nothing */
 END_FTR_SECTION_IFSET(CPU_FTR_COHERENT_ICACHE)
  li r5,L1_CACHE_BYTES-1
diff --git a/arch/powerpc/kernel/misc_64.S b/arch/powerpc/kernel/misc_64.S
index 809b295..c22b482 100644
--- a/arch/powerpc/kernel/misc_64.S
+++ b/arch/powerpc/kernel/misc_64.S
@@ -66,7 +66,9 @@ PPC64_CACHES:
  */
 
 _KPROBE(__flush_icache_range)
-
+BEGIN_FTR_SECTION
+ blr
+END_FTR_SECTION_IFSET(CPU_FTR_COHERENT_ICACHE)
 /*
  * Flush the data cache to memory 
  * 
-- 
1.7.1