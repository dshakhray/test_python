From a1dfff8d8c81be92b6ff9bb7b232156ea85673af Mon Sep 17 00:00:00 2001
From: Amir Vadai <avadai@redhat.com>
Date: Thu, 11 Sep 2014 12:01:00 -0400
Subject: [infiniband] mlx5: Fix signature handover operation for interleaved buffers

Message-id: <8f2d7faa56b5bf25af96bacbff9e51f80292fbd7.1410425016.git.avadai@redhat.com>
Patchwork-id: 93639
O-Subject: [Patch RHEL7.1 V1 124/197] mlx5_core: Fix signature handover operation for interleaved buffers
Bugzilla: 1107617 1107618 1107619 1107620
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

From: Sagi Grimberg <sagig@mellanox.com>

When the data and protection are interleaved in the memory domain, no
need to expand the mkey total length.

At the moment no Linux user works (iSER initiator & target) in
interleaved mode. This may change in the future as for SCSI
pass-through devices there is no real point in target performing
de-interleaving and re-interleaving of the protection data in the PT
stage. Regardless, signature verbs support this mode.

Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
Signed-off-by: Roland Dreier <roland@purestorage.com>
(cherry picked from commit 8524867b9c3d11e38de084f47e2128f43e74610a)
Signed-off-by: Amir Vadai <avadai@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/infiniband/hw/mlx5/qp.c b/drivers/infiniband/hw/mlx5/qp.c
index dc930ed..74ee4a4 100644
--- a/drivers/infiniband/hw/mlx5/qp.c
+++ b/drivers/infiniband/hw/mlx5/qp.c
@@ -2275,7 +2275,10 @@ static int set_sig_umr_wr(struct ib_send_wr *wr, struct mlx5_ib_qp *qp,
 
  /* length of the protected region, data + protection */
  region_len = wr->sg_list->length;
- if (wr->wr.sig_handover.prot)
+ if (wr->wr.sig_handover.prot &&
+     (wr->wr.sig_handover.prot->lkey != wr->sg_list->lkey  ||
+      wr->wr.sig_handover.prot->addr != wr->sg_list->addr  ||
+      wr->wr.sig_handover.prot->length != wr->sg_list->length))
   region_len += wr->wr.sig_handover.prot->length;
 
  /**
-- 
1.7.1