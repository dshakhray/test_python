From d03dbaa940c6bee28dbac69787fa50a307c91997 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 10 Jul 2014 01:04:28 -0400
Subject: [base] move mutex lock out of add_memory_section()

Message-id: <20140710010428.22146.60983.stgit@gir.stowe>
Patchwork-id: 85599
O-Subject: [RHEL7.1 PATCH 060/105] drivers: base: move mutex lock out of add_memory_section()
Bugzilla: 1114228
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1114228
Upstream Status: b1eaef3da5a7bbc48fa9dbefaa2a28e45367fdb1

commit b1eaef3da5a7bbc48fa9dbefaa2a28e45367fdb1
Author: Seth Jennings <sjenning@linux.vnet.ibm.com>
Date:   Tue Aug 20 12:12:57 2013 -0500

    drivers: base: move mutex lock out of add_memory_section()

    There is no point in releasing the mutex for each section that is added
    during boot time.  Just hold it over the entire initialization loop.

    Signed-off-by: Seth Jennings <sjenning@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/base/memory.c b/drivers/base/memory.c
index cbcdf5d..cecd660 100644
--- a/drivers/base/memory.c
+++ b/drivers/base/memory.c
@@ -615,8 +615,6 @@ static int add_memory_section(int nid, struct mem_section *section,
  int scn_nr = __section_nr(section);
  int ret = 0;
 
- mutex_lock(&mem_sysfs_mutex);
-
  if (context == BOOT) {
   /* same memory block ? */
   if (mem_p && *mem_p)
@@ -645,7 +643,6 @@ static int add_memory_section(int nid, struct mem_section *section,
    ret = register_mem_sect_under_node(mem, nid);
  }
 
- mutex_unlock(&mem_sysfs_mutex);
  return ret;
 }
 
@@ -655,7 +652,13 @@ static int add_memory_section(int nid, struct mem_section *section,
  */
 int register_new_memory(int nid, struct mem_section *section)
 {
- return add_memory_section(nid, section, NULL, MEM_OFFLINE, HOTPLUG);
+ int ret;
+
+ mutex_lock(&mem_sysfs_mutex);
+ ret = add_memory_section(nid, section, NULL, MEM_OFFLINE, HOTPLUG);
+ mutex_unlock(&mem_sysfs_mutex);
+
+ return ret;
 }
 
 #ifdef CONFIG_MEMORY_HOTREMOVE
@@ -748,6 +751,7 @@ int __init memory_dev_init(void)
   * Create entries for memory sections that were found
   * during boot and have been initialized
   */
+ mutex_lock(&mem_sysfs_mutex);
  for (i = 0; i < NR_MEM_SECTIONS; i++) {
   if (!present_section_nr(i))
    continue;
@@ -759,6 +763,7 @@ int __init memory_dev_init(void)
   if (!ret)
    ret = err;
  }
+ mutex_unlock(&mem_sysfs_mutex);
 
 out:
  if (ret)
-- 
1.7.1