From ab1b504069e77ea99fa5c80e2d74b3e0ccb522cb Mon Sep 17 00:00:00 2001
From: Ilya Dryomov <ilya.dryomov@inktank.com>
Date: Tue, 23 Sep 2014 11:20:28 -0400
Subject: [net] ceph: gracefully handle large reply messages from the mon

Message-id: <1411471230-5430-2-git-send-email-idryomov@redhat.com>
Patchwork-id: 96477
O-Subject: [RHEL7.1 PATCH 1/3] libceph: gracefully handle large reply messages from the mon
Bugzilla: 1142285
CVE: CVE-2014-6416
RH-Acked-by: Jarod Wilson <jarod@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Sage Weil <sweil@redhat.com>

BZ: https://bugzilla.redhat.com/show_bug.cgi?id=1142285
Upstream: present upstream, commit ID below

A straight cherry-pick from upstream, no differences.

commit 73c3d4812b4c755efeca0140f606f83772a39ce4
Author: Sage Weil <sage@redhat.com>
Date:   Mon Aug 4 07:01:54 2014 -0700

    libceph: gracefully handle large reply messages from the mon

    We preallocate a few of the message types we get back from the mon.  If we
    get a larger message than we are expecting, fall back to trying to allocate
    a new one instead of blindly using the one we have.

    CC: stable@vger.kernel.org
    Signed-off-by: Sage Weil <sage@redhat.com>
    Reviewed-by: Ilya Dryomov <ilya.dryomov@inktank.com>

Signed-off-by: Ilya Dryomov <idryomov@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ceph/mon_client.c b/net/ceph/mon_client.c
index 067d3af..61fcfc3 100644
--- a/net/ceph/mon_client.c
+++ b/net/ceph/mon_client.c
@@ -1181,7 +1181,15 @@ static struct ceph_msg *mon_alloc_msg(struct ceph_connection *con,
  if (!m) {
   pr_info("alloc_msg unknown type %d\n", type);
   *skip = 1;
+ } else if (front_len > m->front_alloc_len) {
+  pr_warning("mon_alloc_msg front %d > prealloc %d (%u#%llu)\n",
+      front_len, m->front_alloc_len,
+      (unsigned int)con->peer_name.type,
+      le64_to_cpu(con->peer_name.num));
+  ceph_msg_put(m);
+  m = ceph_msg_new(type, front_len, GFP_NOFS, false);
  }
+
  return m;
 }
 
-- 
1.7.1