From 69eaed460caaf5e208179cbbb52c82182b6732e5 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:51:55 -0400
Subject: [tools] lib/traceevent: Replace tabs with spaces for all non-commands statements

Message-id: <1408953210-26343-228-git-send-email-jolsa@redhat.com>
Patchwork-id: 88878
O-Subject: [PATCH RHEL7.1 BZ1133083 227/322] tools lib traceevent: Replace tabs with spaces for all non-commands statements
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 198430b56d4ab49d77381ef7cd3daf418a2c00c0
Author: Jiri Olsa <jolsa@redhat.com>
Date: Thu Jan 2 10:53:04 2014 +0100

description
===========
The tabbed indentation in non-commands statements could be sometimes
considered as follow up for the rule command in the Makefile.

This error is hard to find, so as a precaution replacing tabs with
spaces for all non-commands statements.

Link: http://marc.info/?t=136484403900003&r=1&w=2
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/lib/traceevent/Makefile b/tools/lib/traceevent/Makefile
index ca4ab78..76fe0ae 100644
--- a/tools/lib/traceevent/Makefile
+++ b/tools/lib/traceevent/Makefile
@@ -86,8 +86,8 @@ ifeq ($(BUILD_SRC),)
 ifneq ($(OUTPUT),)
 
 define build_output
- $(if $(VERBOSE:1=),@)+$(MAKE) -C $(OUTPUT) \
- BUILD_SRC=$(CURDIR)/ -f $(CURDIR)/Makefile $1
+  $(if $(VERBOSE:1=),@)+$(MAKE) -C $(OUTPUT) \
+  BUILD_SRC=$(CURDIR)/ -f $(CURDIR)/Makefile $1
 endef
 
 all: sub-make
@@ -221,23 +221,23 @@ $(PLUGINS): %.so: %.o
  $(QUIET_LINK)$(CC) $(CFLAGS) -shared -nostartfiles -o $@ $<
 
 define make_version.h
- (echo '/* This file is automatically generated. Do not modify. */';  \
- echo \#define VERSION_CODE $(shell      \
- expr $(VERSION) \* 256 + $(PATCHLEVEL));     \
- echo '#define EXTRAVERSION ' $(EXTRAVERSION);     \
- echo '#define VERSION_STRING "'$(VERSION).$(PATCHLEVEL).$(EXTRAVERSION)'"'; \
- echo '#define FILE_VERSION '$(FILE_VERSION);     \
- ) > $1
+  (echo '/* This file is automatically generated. Do not modify. */';  \
+   echo \#define VERSION_CODE $(shell      \
+   expr $(VERSION) \* 256 + $(PATCHLEVEL));     \
+   echo '#define EXTRAVERSION ' $(EXTRAVERSION);    \
+   echo '#define VERSION_STRING "'$(VERSION).$(PATCHLEVEL).$(EXTRAVERSION)'"'; \
+   echo '#define FILE_VERSION '$(FILE_VERSION);     \
+  ) > $1
 endef
 
 define update_version.h
- ($(call make_version.h, $@.tmp);  \
- if [ -r $@ ] && cmp -s $@ $@.tmp; then  \
-  rm -f $@.tmp;    \
- else      \
-  echo '  UPDATE                 $@'; \
-  mv -f $@.tmp $@;   \
- fi);
+  ($(call make_version.h, $@.tmp);  \
+    if [ -r $@ ] && cmp -s $@ $@.tmp; then \
+      rm -f $@.tmp;    \
+    else     \
+      echo '  UPDATE                 $@'; \
+      mv -f $@.tmp $@;    \
+    fi);
 endef
 
 ep_version.h: force
@@ -246,13 +246,13 @@ ep_version.h: force
 VERSION_FILES = ep_version.h
 
 define update_dir
- (echo $1 > $@.tmp; \
- if [ -r $@ ] && cmp -s $@ $@.tmp; then  \
-  rm -f $@.tmp;    \
- else      \
-  echo '  UPDATE                 $@'; \
-  mv -f $@.tmp $@;   \
- fi);
+  (echo $1 > $@.tmp;    \
+   if [ -r $@ ] && cmp -s $@ $@.tmp; then \
+     rm -f $@.tmp;    \
+   else      \
+     echo '  UPDATE                 $@'; \
+     mv -f $@.tmp $@;    \
+   fi);
 endef
 
 ## make deps
@@ -262,10 +262,10 @@ all_deps := $(all_objs:%.o=.%.d)
 
 # let .d file also depends on the source and header files
 define check_deps
-  @set -e; $(RM) $@; \
-  $(CC) -MM $(CFLAGS) $< > $@.$$$$; \
-  sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
-  $(RM) $@.$$$$
+  @set -e; $(RM) $@; \
+  $(CC) -MM $(CFLAGS) $< > $@.$$$$; \
+  sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
+  $(RM) $@.$$$$
 endef
 
 $(all_deps): .%.d: $(src)/%.c
-- 
1.7.1