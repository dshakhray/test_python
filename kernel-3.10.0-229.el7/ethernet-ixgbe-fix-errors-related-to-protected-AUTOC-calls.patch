From ed2e49964e4c183378cf34aeb1a746058f1d9ce1 Mon Sep 17 00:00:00 2001
From: John Greene <jogreene@redhat.com>
Date: Wed, 10 Sep 2014 18:28:52 -0400
Subject: [ethernet] ixgbe: fix errors related to protected AUTOC calls

Message-id: <1410373750-11341-33-git-send-email-jogreene@redhat.com>
Patchwork-id: 93535
O-Subject: [RHEL7.1 PATCH 32/50] ixgbe: fix errors related to protected AUTOC calls
Bugzilla: 1091123
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Neil Horman <nhorman@redhat.com>

BZ: 1091123
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7919168
Tested: In beaker. See BZ for details

Found several incorrect conditionals after calling the prot_autoc_*
functions. Likewise we weren't always freeing the FWSW semaphore after
grabbing it.   This would lead to DA cables being unable to link along with
possible other errors.

CC: Arun Sharma <asharma@fb.com>
CC: Emil Tantilov <emil.s.tantilov@intel.com>
Signed-off-by: Don Skidmore <donald.c.skidmore@intel.com>
Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit f8cf7a00d82b6c7b984adc917199cb63552957fb)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_82599.c b/drivers/net/ethernet/intel/ixgbe/ixgbe_82599.c
index d638564..71048cf 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_82599.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_82599.c
@@ -210,7 +210,7 @@ static s32 prot_autoc_read_82599(struct ixgbe_hw *hw, bool *locked,
  if (ixgbe_verify_lesm_fw_enabled_82599(hw)) {
   ret_val = hw->mac.ops.acquire_swfw_sync(hw,
      IXGBE_GSSR_MAC_CSR_SM);
-  if (!ret_val)
+  if (ret_val)
    return IXGBE_ERR_SWFW_SYNC;
 
   *locked = true;
@@ -245,8 +245,10 @@ static s32 prot_autoc_write_82599(struct ixgbe_hw *hw, u32 autoc, bool locked)
  if (!locked && ixgbe_verify_lesm_fw_enabled_82599(hw)) {
   ret_val = hw->mac.ops.acquire_swfw_sync(hw,
      IXGBE_GSSR_MAC_CSR_SM);
-  if (!ret_val)
+  if (ret_val)
    return IXGBE_ERR_SWFW_SYNC;
+
+  locked = true;
  }
 
  IXGBE_WRITE_REG(hw, IXGBE_AUTOC, autoc);
@@ -1094,7 +1096,7 @@ static s32 ixgbe_setup_mac_link_82599(struct ixgbe_hw *hw,
  if (autoc != start_autoc) {
   /* Restart link */
   status = hw->mac.ops.prot_autoc_write(hw, autoc, false);
-  if (!status)
+  if (status)
    goto out;
 
   /* Only poll for autoneg to complete if specified to do so */
@@ -1277,7 +1279,7 @@ mac_reset_top:
    status = hw->mac.ops.prot_autoc_write(hw,
        hw->mac.orig_autoc,
        false);
-   if (!status)
+   if (status)
     goto reset_hw_out;
   }
 
diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_common.c b/drivers/net/ethernet/intel/ixgbe/ixgbe_common.c
index 6149c65..38ca240 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_common.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_common.c
@@ -143,7 +143,7 @@ static s32 ixgbe_setup_fc(struct ixgbe_hw *hw)
  case ixgbe_media_type_backplane:
   /* some MAC's need RMW protection on AUTOC */
   ret_val = hw->mac.ops.prot_autoc_read(hw, &locked, &reg_bp);
-  if (!ret_val)
+  if (ret_val)
    goto out;
 
   /* only backplane uses autoc so fall though */
@@ -2723,14 +2723,14 @@ s32 ixgbe_blink_led_start_generic(struct ixgbe_hw *hw, u32 index)
 
  if (!link_up) {
   ret_val = hw->mac.ops.prot_autoc_read(hw, &locked, &autoc_reg);
-  if (!ret_val)
+  if (ret_val)
    goto out;
 
   autoc_reg |= IXGBE_AUTOC_AN_RESTART;
   autoc_reg |= IXGBE_AUTOC_FLU;
 
   ret_val = hw->mac.ops.prot_autoc_write(hw, autoc_reg, locked);
-  if (!ret_val)
+  if (ret_val)
    goto out;
 
   IXGBE_WRITE_FLUSH(hw);
@@ -2760,14 +2760,14 @@ s32 ixgbe_blink_led_stop_generic(struct ixgbe_hw *hw, u32 index)
  bool locked = false;
 
  ret_val = hw->mac.ops.prot_autoc_read(hw, &locked, &autoc_reg);
- if (!ret_val)
+ if (ret_val)
   goto out;
 
  autoc_reg &= ~IXGBE_AUTOC_FLU;
  autoc_reg |= IXGBE_AUTOC_AN_RESTART;
 
  ret_val = hw->mac.ops.prot_autoc_write(hw, autoc_reg, locked);
- if (!ret_val)
+ if (ret_val)
   goto out;
 
  led_reg &= ~IXGBE_LED_MODE_MASK(index);
-- 
1.7.1