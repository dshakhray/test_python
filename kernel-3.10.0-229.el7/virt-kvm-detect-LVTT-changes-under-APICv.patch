From 81cb2da81deb3ec6772adfc51fdf812c66bd42a6 Mon Sep 17 00:00:00 2001
From: Radim Krcmar <rkrcmar@redhat.com>
Date: Wed, 12 Nov 2014 17:46:01 -0500
Subject: [virt] kvm: detect LVTT changes under APICv

Message-id: <20141112174601.GC9579@potion.brq.redhat.com>
Patchwork-id: 99853
O-Subject: [RHEL7.1 kernel PATCH 3/2] KVM: x86: detect LVTT changes under APICv
Bugzilla: 1151174
RH-Acked-by: Igor Mammedov <imammedo@redhat.com>
RH-Acked-by: Andrew Jones <drjones@redhat.com>
RH-Acked-by: Paolo Bonzini <pbonzini@redhat.com>

APIC-write VM exits are "trap-like": they save CS:RIP values for the
instruction after the write, and more importantly, the handler will
already see the new value in the virtual-APIC page.  This means that
apic_reg_write cannot use kvm_apic_get_reg to omit timer cancelation
when mode changes.

timer_mode_mask shouldn't be changing as it depends on cpuid.

Signed-off-by: Radim Krcmar <rkrcmar@redhat.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit a323b409820c8afd33fbd841f5534eb84b406e8d)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kvm/lapic.c b/arch/x86/kvm/lapic.c
index c6efcaf..f1502c8 100644
--- a/arch/x86/kvm/lapic.c
+++ b/arch/x86/kvm/lapic.c
@@ -1184,17 +1184,20 @@ static int apic_reg_write(struct kvm_lapic *apic, u32 reg, u32 val)
 
   break;
 
- case APIC_LVTT:
-  if ((kvm_apic_get_reg(apic, APIC_LVTT) &
-      apic->lapic_timer.timer_mode_mask) !=
-     (val & apic->lapic_timer.timer_mode_mask))
+ case APIC_LVTT: {
+  u32 timer_mode = val & apic->lapic_timer.timer_mode_mask;
+
+  if (apic->lapic_timer.timer_mode != timer_mode) {
+   apic->lapic_timer.timer_mode = timer_mode;
    hrtimer_cancel(&apic->lapic_timer.timer);
+  }
 
   if (!kvm_apic_sw_enabled(apic))
    val |= APIC_LVT_MASKED;
   val &= (apic_lvt_mask[0] | apic->lapic_timer.timer_mode_mask);
   apic_set_reg(apic, APIC_LVTT, val);
   break;
+ }
 
  case APIC_TMICT:
   if (apic_lvtt_tscdeadline(apic))
@@ -1425,6 +1428,7 @@ void kvm_lapic_reset(struct kvm_vcpu *vcpu)
 
  for (i = 0; i < APIC_LVT_NUM; i++)
   apic_set_reg(apic, APIC_LVTT + 0x10 * i, APIC_LVT_MASKED);
+ apic->lapic_timer.timer_mode = 0;
  apic_set_reg(apic, APIC_LVT0,
        SET_APIC_DELIVERY_MODE(0, APIC_MODE_EXTINT));
 
diff --git a/arch/x86/kvm/lapic.h b/arch/x86/kvm/lapic.h
index 8a18501..70ac252 100644
--- a/arch/x86/kvm/lapic.h
+++ b/arch/x86/kvm/lapic.h
@@ -11,6 +11,7 @@
 struct kvm_timer {
  struct hrtimer timer;
  s64 period;     /* unit: ns */
+ u32 timer_mode;
  u32 timer_mode_mask;
  u64 tscdeadline;
  atomic_t pending;   /* accumulated triggered timers */
-- 
1.7.1