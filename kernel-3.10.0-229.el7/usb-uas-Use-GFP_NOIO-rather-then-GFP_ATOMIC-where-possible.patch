From 863277c6c211a0e4bfc228dc8a3d65e148447976 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:06:40 -0400
Subject: [usb] uas: Use GFP_NOIO rather then GFP_ATOMIC where possible

Message-id: <1410887463-20674-329-git-send-email-dzickus@redhat.com>
Patchwork-id: 95292
O-Subject: [RHEL7 PATCH 328/591] uas: Use GFP_NOIO rather then GFP_ATOMIC where possible
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit e36e64930cffd94e1c37fdb82f35989384aa946b
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Nov 7 08:35:55 2013 +0100

    uas: Use GFP_NOIO rather then GFP_ATOMIC where possible

    We can sleep in our own workqueue (which is the whole reason for having
    it), and scsi error handlers are also always called from a context which
    may sleep.

    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/storage/uas.c b/drivers/usb/storage/uas.c
index 7fc4ad2..8023944 100644
--- a/drivers/usb/storage/uas.c
+++ b/drivers/usb/storage/uas.c
@@ -133,7 +133,7 @@ static void uas_do_work(struct work_struct *work)
   struct scsi_pointer *scp = (void *)cmdinfo;
   struct scsi_cmnd *cmnd = container_of(scp, struct scsi_cmnd,
             SCp);
-  err = uas_submit_urbs(cmnd, cmnd->device->hostdata, GFP_ATOMIC);
+  err = uas_submit_urbs(cmnd, cmnd->device->hostdata, GFP_NOIO);
   if (!err) {
    cmdinfo->state &= ~IS_IN_WORK_LIST;
    list_del(&cmdinfo->work);
@@ -745,7 +745,7 @@ static int uas_eh_task_mgmt(struct scsi_cmnd *cmnd,
 
  devinfo->running_task = 1;
  memset(&devinfo->response, 0, sizeof(devinfo->response));
- sense_urb = uas_submit_sense_urb(shost, GFP_ATOMIC, tag);
+ sense_urb = uas_submit_sense_urb(shost, GFP_NOIO, tag);
  if (!sense_urb) {
   shost_printk(KERN_INFO, shost,
         "%s: %s: submit sense urb failed\n",
@@ -754,7 +754,7 @@ static int uas_eh_task_mgmt(struct scsi_cmnd *cmnd,
   spin_unlock_irqrestore(&devinfo->lock, flags);
   return FAILED;
  }
- if (uas_submit_task_urb(cmnd, GFP_ATOMIC, function, tag)) {
+ if (uas_submit_task_urb(cmnd, GFP_NOIO, function, tag)) {
   shost_printk(KERN_INFO, shost,
         "%s: %s: submit task mgmt urb failed\n",
         __func__, fname);
-- 
1.7.1