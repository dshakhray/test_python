From 0e568af070505013c293411526e93abb979b9d1c Mon Sep 17 00:00:00 2001
From: John Greene <jogreene@redhat.com>
Date: Mon, 11 Aug 2014 16:47:28 -0400
Subject: [ethernet] e1000: prevent oops when adapter is being closed and reset simultaneously

Message-id: <1407775649-7313-2-git-send-email-jogreene@redhat.com>
Patchwork-id: 87636
O-Subject: [RHEL7.1 net PATCH 1/2] e1000: prevent oops when adapter is being closed and reset simultaneously
Bugzilla: 1091129
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

BZ: 1091129
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7810984
Tested: By me. Acceptable. See BZ for details

This change is based on a similar change made to e1000e support in
commit bb9e44d0d0f4 ("e1000e: prevent oops when adapter is being closed
and reset simultaneously").  The same issue has also been observed
on the older e1000 cards.

Here, we have increased the RESET_COUNT value to 50 because there are too
many accesses to e1000 nic on stress tests to e1000 nic, it is not enough
to set RESET_COUT 25. Experimentation has shown that it is enough to set
RESET_COUNT 50.

Signed-off-by: yzhu1 <yanjun.zhu@windriver.com>
Tested-by: Aaron Brown <aaron.f.brown@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 6a7d64e3e09e11181a07a2e8cd6af5d6355133be)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/e1000/e1000.h b/drivers/net/ethernet/intel/e1000/e1000.h
index d6173c0..30ac811 100644
--- a/drivers/net/ethernet/intel/e1000/e1000.h
+++ b/drivers/net/ethernet/intel/e1000/e1000.h
@@ -83,6 +83,11 @@ struct e1000_adapter;
 
 #define E1000_MAX_INTR   10
 
+/*
+ * Count for polling __E1000_RESET condition every 10-20msec.
+ */
+#define E1000_CHECK_RESET_COUNT 50
+
 /* TX/RX descriptor defines */
 #define E1000_DEFAULT_TXD  256
 #define E1000_MAX_TXD   256
diff --git a/drivers/net/ethernet/intel/e1000/e1000_main.c b/drivers/net/ethernet/intel/e1000/e1000_main.c
index a032c4e..733a699 100644
--- a/drivers/net/ethernet/intel/e1000/e1000_main.c
+++ b/drivers/net/ethernet/intel/e1000/e1000_main.c
@@ -1431,6 +1431,10 @@ static int e1000_close(struct net_device *netdev)
 {
  struct e1000_adapter *adapter = netdev_priv(netdev);
  struct e1000_hw *hw = &adapter->hw;
+ int count = E1000_CHECK_RESET_COUNT;
+
+ while (test_bit(__E1000_RESETTING, &adapter->flags) && count--)
+  usleep_range(10000, 20000);
 
  WARN_ON(test_bit(__E1000_RESETTING, &adapter->flags));
  e1000_down(adapter);
@@ -4939,6 +4943,11 @@ static int __e1000_shutdown(struct pci_dev *pdev, bool *enable_wake)
  netif_device_detach(netdev);
 
  if (netif_running(netdev)) {
+  int count = E1000_CHECK_RESET_COUNT;
+
+  while (test_bit(__E1000_RESETTING, &adapter->flags) && count--)
+   usleep_range(10000, 20000);
+
   WARN_ON(test_bit(__E1000_RESETTING, &adapter->flags));
   e1000_down(adapter);
  }
-- 
1.7.1