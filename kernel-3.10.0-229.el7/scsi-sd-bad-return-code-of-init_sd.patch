From 312a4d1cacff98ede8ded19e941a4c149da4e1a0 Mon Sep 17 00:00:00 2001
From: Ewan Milne <emilne@redhat.com>
Date: Wed, 20 Aug 2014 18:58:50 -0400
Subject: [scsi] sd: bad return code of init_sd
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1408561176-18133-12-git-send-email-emilne@redhat.com>
Patchwork-id: 88431
O-Subject: [RHEL7.1 PATCH e-stor 11/57] sd: bad return code of init_sd
Bugzilla: 1132092
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: "Ewan D. Milne" <emilne@redhat.com>

Bugzilla: 1132092
Upstream Status: upstream commit a20b76bdaee4295b839d82946ea244dc92f3021b
Brew: 7853755
Tested: Tested by Ewan D. Milne and Barry Donahue with a combination
        of manual and automated testing.  No issues seen.

upstream commit a20b76bdaee4295b839d82946ea244dc92f3021b
Author: ClÃÂ©ment Calmels <clement.calmels@free.fr>
Date:   Tue Jun 3 23:34:25 2014 +0200

    sd: bad return code of init_sd

    In init_sd function, if kmem_cache_create or mempool_create_slab_pools
    calls fail, the error will not be correclty reported because
    class_register previously set the value of err to 0.

    Signed-off-by: ClÃÂ©ment Calmels <clement.calmels@free.fr>
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

Signed-off-by: Ewan D. Milne <emilne@redhat.com>
---
 drivers/scsi/sd.c | 2 ++
 1 file changed, 2 insertions(+)

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/sd.c b/drivers/scsi/sd.c
index c5e454c..dcb92a6 100644
--- a/drivers/scsi/sd.c
+++ b/drivers/scsi/sd.c
@@ -3169,12 +3169,14 @@ static int __init init_sd(void)
       0, 0, NULL);
  if (!sd_cdb_cache) {
   printk(KERN_ERR "sd: can't init extended cdb cache\n");
+  err = -ENOMEM;
   goto err_out_class;
  }
 
  sd_cdb_pool = mempool_create_slab_pool(SD_MEMPOOL_SIZE, sd_cdb_cache);
  if (!sd_cdb_pool) {
   printk(KERN_ERR "sd: can't init extended cdb pool\n");
+  err = -ENOMEM;
   goto err_out_cache;
  }
 
-- 
1.7.1