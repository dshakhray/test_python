From 56f391dd632ee3e2089ece9aa96a7c1f2b4fd649 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Fri, 13 Jun 2014 14:35:04 -0400
Subject: [block] blk-mq: add REQ_SYNC early

Message-id: <1402670238-13916-17-git-send-email-snitzer@redhat.com>
Patchwork-id: 83770
O-Subject: [RHEL7.1 PATCH 016/150] blk-mq: add REQ_SYNC early
Bugzilla: 1105204
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Jeff Moyer <jmoyer@redhat.com>

BZ: 1105204

Upstream commit 27fbf4e87c16bb3e40730890169a643a494b7c64
Author: Shaohua Li <shli@kernel.org>
Date:   Wed Feb 19 20:20:21 2014 +0800

    blk-mq: add REQ_SYNC early

    Add REQ_SYNC early, so rq_dispatched[] in blk_mq_rq_ctx_init
    is set correctly.

    Signed-off-by: Shaohua Li<shli@fusionio.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/block/blk-mq.c b/block/blk-mq.c
index 3c28048..b1bcc61 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -860,6 +860,8 @@ static void blk_mq_make_request(struct request_queue *q, struct bio *bio)
  ctx = blk_mq_get_ctx(q);
  hctx = q->mq_ops->map_queue(q, ctx->cpu);
 
+ if (is_sync)
+  rw |= REQ_SYNC;
  trace_block_getrq(q, bio, rw);
  rq = __blk_mq_alloc_request(hctx, GFP_ATOMIC, false);
  if (likely(rq))
-- 
1.7.1