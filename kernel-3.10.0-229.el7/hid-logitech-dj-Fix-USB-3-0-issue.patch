From a5c559c1d8206facc04b4ed107734cb3c77003a7 Mon Sep 17 00:00:00 2001
From: Benjamin Tissoires <benjamin.tissoires@redhat.com>
Date: Tue, 19 Aug 2014 19:48:50 -0400
Subject: [hid] logitech-dj: Fix USB 3.0 issue

Message-id: <1408477730-9237-1-git-send-email-benjamin.tissoires@redhat.com>
Patchwork-id: 88358
O-Subject: [RHEL7.1 PATCH] HID: logitech-dj: Fix USB 3.0 issue
Bugzilla: 1110523
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Aristeu Rozanski <aris@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110523
Upstream: since v3.14
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7858726
Test: tested by myself on a Lenovo T540p and a Logitech Zone Touch Mouse T400

commit 42c22dbf81ebd1146960875ddfe71630cb2b3ae6
Author: Benjamin Tisssoires <benjamin.tissoires@redhat.com>
Date:   Wed Jan 8 17:18:45 2014 -0500

    HID: logitech-dj: Fix USB 3.0 issue

    This fix (not very clean though) should fix the long time USB3
    issue that was spotted last year. The rational has been given by
    Hans de Goede:

     ----

    I think the most likely cause for this is a firmware bug
    in the unifying receiver, likely a race condition.

    The most prominent difference between having a USB-2 device
    plugged into an EHCI (so USB-2 only) port versus an XHCI
    port will be inter packet timing. Specifically if you
    send packets (ie hid reports) one at a time, then with
    the EHCI controller their will be a significant pause
    between them, where with XHCI they will be very close
    together in time.

    The reason for this is the difference in EHCI / XHCI
    controller OS <-> driver interfaces.

    For non periodic endpoints (control, bulk) the EHCI uses a
    circular linked-list of commands in dma-memory, which it
    follows to execute commands, if the list is empty, it
    will go into an idle state and re-check periodically.

    The XHCI uses a ring of commands per endpoint, and if the OS
    places anything new on the ring it will do an ioport write,
    waking up the XHCI making it send the new packet immediately.

    For periodic transfers (isoc, interrupt) the delay between
    packets when sending one at a time (rather then queuing them
    up) will be even larger, because they need to be inserted into
    the EHCI schedule 2 ms in the future so the OS driver can be
    sure that the EHCI driver does not try to start executing the
    time slot in question before the insertion has completed.

    So a possible fix may be to insert a delay between packets
    being send to the receiver.

     ----

    I tested this on a buggy Haswell USB 3.0 motherboard, and I always
    get the notification after adding the msleep.

    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/hid/hid-logitech-dj.c b/drivers/hid/hid-logitech-dj.c
index 4f762bc..e495ec1 100644
--- a/drivers/hid/hid-logitech-dj.c
+++ b/drivers/hid/hid-logitech-dj.c
@@ -471,6 +471,14 @@ static int logi_dj_recv_switch_to_dj_mode(struct dj_receiver_dev *djrcv_dev,
  dj_report->report_params[CMD_SWITCH_PARAM_TIMEOUT_SECONDS] = (u8)timeout;
  retval = logi_dj_recv_send_report(djrcv_dev, dj_report);
  kfree(dj_report);
+
+ /*
+  * Ugly sleep to work around a USB 3.0 bug when the receiver is still
+  * processing the "switch-to-dj" command while we send an other command.
+  * 50 msec should gives enough time to the receiver to be ready.
+  */
+ msleep(50);
+
  return retval;
 }
 
-- 
1.7.1