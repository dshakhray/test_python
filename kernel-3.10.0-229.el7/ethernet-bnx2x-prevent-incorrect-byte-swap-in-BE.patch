From c241ce498d62b7da9ed72d9bd9f5005c950fad49 Mon Sep 17 00:00:00 2001
From: Michal Schmidt <mschmidt@redhat.com>
Date: Fri, 5 Sep 2014 19:49:57 -0400
Subject: [ethernet] bnx2x: prevent incorrect byte-swap in BE

Message-id: <1409946615-5862-53-git-send-email-mschmidt@redhat.com>
Patchwork-id: 91591
O-Subject: [RHEL7.1 PATCH 52/70] bnx2x: prevent incorrect byte-swap in BE
Bugzilla: 1119861 1060671 1089402
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

BZ: https://bugzilla.redhat.com/show_bug.cgi?id=1060671
BZ: https://bugzilla.redhat.com/show_bug.cgi?id=1089402
BZ: https://bugzilla.redhat.com/show_bug.cgi?id=1119861

Upstream commit:
commit 55ef5c89db81aabf2c3802de830774feb7eb8b22
Author: Dmitry Kravkov <Dmitry.Kravkov@qlogic.com>
Date:   Thu Aug 28 16:54:23 2014 +0300

    bnx2x: prevent incorrect byte-swap in BE

    Fixes incorrectly defined struct in FW HSI for BE platform.
    Affects tunneling, tx-switching and anti-spoofing.

    Introduced in e42780b66aab88d3a82b6087bcd6095b90eecde7
        bnx2x: Utilize FW 7.10.51

    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Dmitry Kravkov <Dmitry.Kravkov@qlogic.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_hsi.h b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_hsi.h
index 3b6cbd2..923a95f 100644
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_hsi.h
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_hsi.h
@@ -3977,29 +3977,10 @@ struct eth_mac_addresses {
 
 /* tunneling related data */
 struct eth_tunnel_data {
-#if defined(__BIG_ENDIAN)
- __le16 dst_mid;
- __le16 dst_lo;
-#elif defined(__LITTLE_ENDIAN)
  __le16 dst_lo;
  __le16 dst_mid;
-#endif
-#if defined(__BIG_ENDIAN)
- __le16 fw_ip_hdr_csum;
- __le16 dst_hi;
-#elif defined(__LITTLE_ENDIAN)
  __le16 dst_hi;
  __le16 fw_ip_hdr_csum;
-#endif
-#if defined(__BIG_ENDIAN)
- u8 flags;
-#define ETH_TUNNEL_DATA_IP_HDR_TYPE_OUTER (0x1<<0)
-#define ETH_TUNNEL_DATA_IP_HDR_TYPE_OUTER_SHIFT 0
-#define ETH_TUNNEL_DATA_RESERVED (0x7F<<1)
-#define ETH_TUNNEL_DATA_RESERVED_SHIFT 1
- u8 ip_hdr_start_inner_w;
- __le16 pseudo_csum;
-#elif defined(__LITTLE_ENDIAN)
  __le16 pseudo_csum;
  u8 ip_hdr_start_inner_w;
  u8 flags;
@@ -4007,7 +3988,6 @@ struct eth_tunnel_data {
 #define ETH_TUNNEL_DATA_IP_HDR_TYPE_OUTER_SHIFT 0
 #define ETH_TUNNEL_DATA_RESERVED (0x7F<<1)
 #define ETH_TUNNEL_DATA_RESERVED_SHIFT 1
-#endif
 };
 
 /* union for mac addresses and for tunneling data.
-- 
1.7.1