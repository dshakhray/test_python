From 3c075405d3994e24a1e29f7addb1439daff12d9f Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:10:14 -0400
Subject: [powerpc] prom: early_init_dt_scan_cpus() updates cpu features only once

Message-id: <1410545655-205645-386-git-send-email-dzickus@redhat.com>
Patchwork-id: 94360
O-Subject: [RHEL7 PATCH 385/626] powerpc/prom: early_init_dt_scan_cpus() updates cpu features only once
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 7222f779acf94a123557c7bbbfbcc19424589f52
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Fri Mar 28 13:36:28 2014 +1100

    powerpc/prom: early_init_dt_scan_cpus() updates cpu features only once

    All our cpu feature updates were done for every CPU in the device-tree,
    thus overwriting the cputable bits over and over again. Instead do them
    only for the boot CPU.

    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kernel/prom.c b/arch/powerpc/kernel/prom.c
index 3a8d4b7..f674ea0 100644
--- a/arch/powerpc/kernel/prom.c
+++ b/arch/powerpc/kernel/prom.c
@@ -346,33 +346,34 @@ static int __init early_init_dt_scan_cpus(unsigned long node,
 #endif
  }
 
- if (found >= 0) {
-  DBG("boot cpu: logical %d physical %d\n", found,
-   be32_to_cpu(intserv[found_thread]));
-  boot_cpuid = found;
-  set_hard_smp_processor_id(found,
-   be32_to_cpu(intserv[found_thread]));
+ /* Not the boot CPU */
+ if (found < 0)
+  return 0;
 
-  /*
-   * PAPR defines "logical" PVR values for cpus that
-   * meet various levels of the architecture:
-   * 0x0f000001 Architecture version 2.04
-   * 0x0f000002 Architecture version 2.05
-   * If the cpu-version property in the cpu node contains
-   * such a value, we call identify_cpu again with the
-   * logical PVR value in order to use the cpu feature
-   * bits appropriate for the architecture level.
-   *
-   * A POWER6 partition in "POWER6 architected" mode
-   * uses the 0x0f000002 PVR value; in POWER5+ mode
-   * it uses 0x0f000001.
-   */
-  prop = of_get_flat_dt_prop(node, "cpu-version", NULL);
-  if (prop && (be32_to_cpup(prop) & 0xff000000) == 0x0f000000)
-   identify_cpu(0, be32_to_cpup(prop));
+ DBG("boot cpu: logical %d physical %d\n", found,
+     be32_to_cpu(intserv[found_thread]));
+ boot_cpuid = found;
+ set_hard_smp_processor_id(found, be32_to_cpu(intserv[found_thread]));
 
-  identical_pvr_fixup(node);
- }
+ /*
+  * PAPR defines "logical" PVR values for cpus that
+  * meet various levels of the architecture:
+  * 0x0f000001 Architecture version 2.04
+  * 0x0f000002 Architecture version 2.05
+  * If the cpu-version property in the cpu node contains
+  * such a value, we call identify_cpu again with the
+  * logical PVR value in order to use the cpu feature
+  * bits appropriate for the architecture level.
+  *
+  * A POWER6 partition in "POWER6 architected" mode
+  * uses the 0x0f000002 PVR value; in POWER5+ mode
+  * it uses 0x0f000001.
+  */
+ prop = of_get_flat_dt_prop(node, "cpu-version", NULL);
+ if (prop && (be32_to_cpup(prop) & 0xff000000) == 0x0f000000)
+  identify_cpu(0, be32_to_cpup(prop));
+
+ identical_pvr_fixup(node);
 
  check_cpu_feature_properties(node);
  check_cpu_pa_features(node);
@@ -384,7 +385,6 @@ static int __init early_init_dt_scan_cpus(unsigned long node,
  else
   cur_cpu_spec->cpu_features &= ~CPU_FTR_SMT;
 #endif
-
  return 0;
 }
 
-- 
1.7.1