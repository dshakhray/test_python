From ac5b5e21e127b188fe6ab798584ecff23c7d10f8 Mon Sep 17 00:00:00 2001
From: Sai Vemuri <svemuri@redhat.com>
Date: Thu, 11 Sep 2014 22:44:05 -0400
Subject: [ethernet] cxgb4: Detect and display firmware reported errors

Message-id: <1410475447-94392-107-git-send-email-svemuri@redhat.com>
Patchwork-id: 93831
O-Subject: [RHEL7.1 PATCH BZ 1124947 106/108] cxgb4: Detect and display firmware reported errors
Bugzilla: 1124947
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

The adapter firmware can indicate error conditions to the host.
If the firmware has indicated an error, print out the reason for
the firmware error.

Based on original work by Casey Leedom <leedom@chelsio.com>

Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 31d55c2d6672430f3ef0bfd4de72c5a4f6a8bab9)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c b/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
index b94f434..85dfe73 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
@@ -169,6 +169,34 @@ void t4_hw_pci_read_cfg4(struct adapter *adap, int reg, u32 *val)
 }
 
 /*
+ * t4_report_fw_error - report firmware error
+ * @adap: the adapter
+ *
+ * The adapter firmware can indicate error conditions to the host.
+ * If the firmware has indicated an error, print out the reason for
+ * the firmware error.
+ */
+static void t4_report_fw_error(struct adapter *adap)
+{
+ static const char *const reason[] = {
+  "Crash",                        /* PCIE_FW_EVAL_CRASH */
+  "During Device Preparation",    /* PCIE_FW_EVAL_PREP */
+  "During Device Configuration",  /* PCIE_FW_EVAL_CONF */
+  "During Device Initialization", /* PCIE_FW_EVAL_INIT */
+  "Unexpected Event",             /* PCIE_FW_EVAL_UNEXPECTEDEVENT */
+  "Insufficient Airflow",         /* PCIE_FW_EVAL_OVERHEAT */
+  "Device Shutdown",              /* PCIE_FW_EVAL_DEVICESHUTDOWN */
+  "Reserved",                     /* reserved */
+ };
+ u32 pcie_fw;
+
+ pcie_fw = t4_read_reg(adap, MA_PCIE_FW);
+ if (pcie_fw & FW_PCIE_FW_ERR)
+  dev_err(adap->pdev_dev, "Firmware reports adapter error: %s\n",
+   reason[FW_PCIE_FW_EVAL_GET(pcie_fw)]);
+}
+
+/*
  * Get the reply to a mailbox command and store it in @rpl in big-endian order.
  */
 static void get_mbox_rpl(struct adapter *adap, __be64 *rpl, int nflit,
@@ -301,6 +329,7 @@ int t4_wr_mbox_meat(struct adapter *adap, int mbox, const void *cmd, int size,
  dump_mbox(adap, mbox, data_reg);
  dev_err(adap->pdev_dev, "command %#x in mailbox %d timed out\n",
   *(const u8 *)cmd, mbox);
+ t4_report_fw_error(adap);
  return -ETIMEDOUT;
 }
 
@@ -1534,6 +1563,9 @@ static void cim_intr_handler(struct adapter *adapter)
 
  int fat;
 
+ if (t4_read_reg(adapter, MA_PCIE_FW) & FW_PCIE_FW_ERR)
+  t4_report_fw_error(adapter);
+
  fat = t4_handle_intr_status(adapter, CIM_HOST_INT_CAUSE,
         cim_intr_info) +
        t4_handle_intr_status(adapter, CIM_HOST_UPACC_INT_CAUSE,
@@ -2752,12 +2784,16 @@ retry:
  /*
   * Issue the HELLO command to the firmware.  If it's not successful
   * but indicates that we got a "busy" or "timeout" condition, retry
-  * the HELLO until we exhaust our retry limit.
+  * the HELLO until we exhaust our retry limit.  If we do exceed our
+  * retry limit, check to see if the firmware left us any error
+  * information and report that if so.
   */
  ret = t4_wr_mbox(adap, mbox, &c, sizeof(c), &c);
  if (ret < 0) {
   if ((ret == -EBUSY || ret == -ETIMEDOUT) && retries-- > 0)
    goto retry;
+  if (t4_read_reg(adap, MA_PCIE_FW) & FW_PCIE_FW_ERR)
+   t4_report_fw_error(adap);
   return ret;
  }
 
diff --git a/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h b/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h
index dd3807b..ee69e5f 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h
@@ -2161,6 +2161,10 @@ struct fw_debug_cmd {
 #define FW_PCIE_FW_MASTER(x)     ((x) << FW_PCIE_FW_MASTER_SHIFT)
 #define FW_PCIE_FW_MASTER_GET(x) (((x) >> FW_PCIE_FW_MASTER_SHIFT) & \
      FW_PCIE_FW_MASTER_MASK)
+#define FW_PCIE_FW_EVAL_MASK   0x7
+#define FW_PCIE_FW_EVAL_SHIFT  24
+#define FW_PCIE_FW_EVAL_GET(x) (((x) >> FW_PCIE_FW_EVAL_SHIFT) & \
+     FW_PCIE_FW_EVAL_MASK)
 
 struct fw_hdr {
  u8 ver;
-- 
1.7.1