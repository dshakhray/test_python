From d04ce8bb915937e274a637d0f39288c4c906498e Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:37:42 -0400
Subject: [virt] kvm/nept: Some additional comments

Message-id: <1406040016-3289-68-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86146
O-Subject: [RHEL7 PATCH v2 067/221] nEPT: Some additional comments
Bugzilla: 1048496 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Nadav Har'El <nyh@il.ibm.com>

Some additional comments to preexisting code:
Explain who (L0 or L1) handles EPT violation and misconfiguration exits.
Don't mention "shadow on either EPT or shadow" as the only two options.

Reviewed-by: Xiao Guangrong <xiaoguangrong@linux.vnet.ibm.com>
Signed-off-by: Nadav Har'El <nyh@il.ibm.com>
Signed-off-by: Jun Nakajima <jun.nakajima@intel.com>
Signed-off-by: Xinhao Xu <xinhao.xu@intel.com>
Signed-off-by: Yang Zhang <yang.z.zhang@Intel.com>
Signed-off-by: Gleb Natapov <gleb@redhat.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 2b1be677413b63e2464ec18b998524482eb42bcf)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index d470bd0..c567a61 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -6680,7 +6680,20 @@ static bool nested_vmx_exit_handled(struct kvm_vcpu *vcpu)
   return nested_cpu_has2(vmcs12,
    SECONDARY_EXEC_VIRTUALIZE_APIC_ACCESSES);
  case EXIT_REASON_EPT_VIOLATION:
+  /*
+   * L0 always deals with the EPT violation. If nested EPT is
+   * used, and the nested mmu code discovers that the address is
+   * missing in the guest EPT table (EPT12), the EPT violation
+   * will be injected with nested_ept_inject_page_fault()
+   */
+  return 0;
  case EXIT_REASON_EPT_MISCONFIG:
+  /*
+   * L2 never uses directly L1's EPT, but rather L0's own EPT
+   * table (shadow on EPT) or a merged EPT table that L0 built
+   * (EPT on EPT). So any problems with the structure of the
+   * table is L0's fault.
+   */
   return 0;
  case EXIT_REASON_PREEMPTION_TIMER:
   return vmcs12->pin_based_vm_exec_control &
-- 
1.7.1