From 4f2a4e630cef64cd3f337d058e3634b92f1a8b35 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:14:10 -0400
Subject: [ethernet] ibmveth: Fix little endian issues

Message-id: <1410545655-205645-622-git-send-email-dzickus@redhat.com>
Patchwork-id: 94579
O-Subject: [RHEL7 PATCH 621/626] ibmveth: Fix little endian issues
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 0b536be7b987de14dab63ea565fc1e271a7f3a5f
Author: Anton Blanchard <anton@samba.org>
Date:   Tue Sep 3 09:55:32 2013 +1000

    ibmveth: Fix little endian issues

    The hypervisor is big endian, so little endian kernel builds need
    to byteswap.

    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/ibm/ibmveth.c b/drivers/net/ethernet/ibm/ibmveth.c
index c29bf9c..e7dfb81 100644
--- a/drivers/net/ethernet/ibm/ibmveth.c
+++ b/drivers/net/ethernet/ibm/ibmveth.c
@@ -106,7 +106,7 @@ struct ibmveth_stat ibmveth_stats[] = {
 /* simple methods of getting data from the current rxq entry */
 static inline u32 ibmveth_rxq_flags(struct ibmveth_adapter *adapter)
 {
- return adapter->rx_queue.queue_addr[adapter->rx_queue.index].flags_off;
+ return be32_to_cpu(adapter->rx_queue.queue_addr[adapter->rx_queue.index].flags_off);
 }
 
 static inline int ibmveth_rxq_toggle(struct ibmveth_adapter *adapter)
@@ -132,7 +132,7 @@ static inline int ibmveth_rxq_frame_offset(struct ibmveth_adapter *adapter)
 
 static inline int ibmveth_rxq_frame_length(struct ibmveth_adapter *adapter)
 {
- return adapter->rx_queue.queue_addr[adapter->rx_queue.index].length;
+ return be32_to_cpu(adapter->rx_queue.queue_addr[adapter->rx_queue.index].length);
 }
 
 static inline int ibmveth_rxq_csum_good(struct ibmveth_adapter *adapter)
diff --git a/drivers/net/ethernet/ibm/ibmveth.h b/drivers/net/ethernet/ibm/ibmveth.h
index 43a794f..84066ba 100644
--- a/drivers/net/ethernet/ibm/ibmveth.h
+++ b/drivers/net/ethernet/ibm/ibmveth.h
@@ -164,14 +164,26 @@ struct ibmveth_adapter {
     u64 tx_send_failed;
 };
 
+/*
+ * We pass struct ibmveth_buf_desc_fields to the hypervisor in registers,
+ * so we don't need to byteswap the two elements. However since we use
+ * a union (ibmveth_buf_desc) to convert from the struct to a u64 we
+ * do end up with endian specific ordering of the elements and that
+ * needs correcting.
+ */
 struct ibmveth_buf_desc_fields {
+#ifdef __BIG_ENDIAN
+ u32 flags_len;
+ u32 address;
+#else
+ u32 address;
  u32 flags_len;
+#endif
 #define IBMVETH_BUF_VALID 0x80000000
 #define IBMVETH_BUF_TOGGLE 0x40000000
 #define IBMVETH_BUF_NO_CSUM 0x02000000
 #define IBMVETH_BUF_CSUM_GOOD 0x01000000
 #define IBMVETH_BUF_LEN_MASK 0x00FFFFFF
- u32 address;
 };
 
 union ibmveth_buf_desc {
@@ -180,7 +192,7 @@ union ibmveth_buf_desc {
 };
 
 struct ibmveth_rx_q_entry {
- u32 flags_off;
+ __be32 flags_off;
 #define IBMVETH_RXQ_TOGGLE  0x80000000
 #define IBMVETH_RXQ_TOGGLE_SHIFT 31
 #define IBMVETH_RXQ_VALID  0x40000000
@@ -188,7 +200,8 @@ struct ibmveth_rx_q_entry {
 #define IBMVETH_RXQ_CSUM_GOOD  0x01000000
 #define IBMVETH_RXQ_OFF_MASK  0x0000FFFF
 
- u32 length;
+ __be32 length;
+ /* correlator is only used by the OS, no need to byte swap */
  u64 correlator;
 };
 
-- 
1.7.1