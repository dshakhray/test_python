From d5f210bcb7eb348496b852a6b29a37721a8d2b55 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:02:08 -0400
Subject: [usb] Disable USB 2.0 Link PM before device reset

Message-id: <1410887463-20674-57-git-send-email-dzickus@redhat.com>
Patchwork-id: 95126
O-Subject: [RHEL7 PATCH 056/591] usb: Disable USB 2.0 Link PM before device reset.
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit dcc01c0864823f91c3bf3ffca6613e2351702b87
Author: Sarah Sharp <sarah.a.sharp@linux.intel.com>
Date:   Mon Sep 30 17:26:29 2013 +0300

    usb: Disable USB 2.0 Link PM before device reset.

    Before the USB core resets a device, we need to disable the L1 timeout
    for the roothub, if USB 2.0 Link PM is enabled.  Otherwise the port may
    transition into L1 in between descriptor fetches, before we know if the
    USB device descriptors changed.  LPM will be re-enabled after the
    full device descriptors are fetched, and we can confirm the device still
    supports USB 2.0 LPM after the reset.

    We don't need to wait for the USB device to exit L1 before resetting the
    device, since the xHCI roothub port diagrams show a transition to the
    Reset state from any of the Ux states (see Figure 34 in the 2012-08-14
    xHCI specification update).

    This patch should be backported to kernels as old as 3.2, that contain
    the commit 65580b4321eb36f16ae8b5987bfa1bb948fc5112 "xHCI: set USB2
    hardware LPM".  That was the first commit to enable USB 2.0
    hardware-driven Link Power Management.

    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
    Cc: stable@vger.kernel.org
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/core/hub.c b/drivers/usb/core/hub.c
index 79e985f..85e784d 100644
--- a/drivers/usb/core/hub.c
+++ b/drivers/usb/core/hub.c
@@ -5090,6 +5090,12 @@ static int usb_reset_and_verify_device(struct usb_device *udev)
  }
  parent_hub = usb_hub_to_struct_hub(parent_hdev);
 
+ /* Disable USB2 hardware LPM.
+  * It will be re-enabled by the enumeration process.
+  */
+ if (udev->usb2_hw_lpm_enabled == 1)
+  usb_set_usb2_hardware_lpm(udev, 0);
+
  bos = udev->bos;
  udev->bos = NULL;
 
-- 
1.7.1