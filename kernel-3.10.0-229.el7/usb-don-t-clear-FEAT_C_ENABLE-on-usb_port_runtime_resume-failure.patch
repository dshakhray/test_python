From 26153e555a27395c279f3c5cd4e2a9e7da246c0d Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:09:47 -0400
Subject: [usb] don't clear FEAT_C_ENABLE on usb_port_runtime_resume failure

Message-id: <1410887463-20674-516-git-send-email-dzickus@redhat.com>
Patchwork-id: 95544
O-Subject: [RHEL7 PATCH 515/591] usb: don't clear FEAT_C_ENABLE on usb_port_runtime_resume failure
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=821903

commit 7c604079bdf729e7b8c4b0e67c688b5081d1863d
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Tue May 20 18:09:03 2014 -0700

    usb: don't clear FEAT_C_ENABLE on usb_port_runtime_resume failure

    Three reasons:
    1/ It's an invalid operation on usb3 ports
    2/ There's no guarantee of when / if a usb2 port has entered an error
       state relative to PORT_POWER request
    3/ The port is active / powered at this point, so khubd will clear it as
       a matter of course

    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/core/port.c b/drivers/usb/core/port.c
index 827b0d3..f41f051 100644
--- a/drivers/usb/core/port.c
+++ b/drivers/usb/core/port.c
@@ -110,7 +110,6 @@ static int usb_port_runtime_resume(struct device *dev)
   if (retval < 0)
    dev_dbg(&port_dev->dev, "can't get reconnection after setting port  power on, status %d\n",
      retval);
-  usb_clear_port_feature(hdev, port1, USB_PORT_FEAT_C_ENABLE);
   retval = 0;
  }
 
-- 
1.7.1