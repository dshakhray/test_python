From 4c6cefb219e40339209813753c298eb2a31a5642 Mon Sep 17 00:00:00 2001
From: Ewan Milne <emilne@redhat.com>
Date: Wed, 20 Aug 2014 18:59:32 -0400
Subject: [scsi] scsi_debug: fix resp_xdwriteread() return value when running out of memory

Message-id: <1408561176-18133-54-git-send-email-emilne@redhat.com>
Patchwork-id: 88473
O-Subject: [RHEL7.1 PATCH e-stor 53/57] [SCSI] scsi_debug: fix resp_xdwriteread() return value when running out of memory
Bugzilla: 1132100
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: "Ewan D. Milne" <emilne@redhat.com>

upstream commit c5af0db96b7c219245f4985314e11c7e716e82ae

Tested by Ewan D. Milne and Barry Donahue with a combination
of manual and automated testing.  No issues seen.

upstream commit c5af0db96b7c219245f4985314e11c7e716e82ae
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Wed Feb 26 22:57:01 2014 +0900

    [SCSI] scsi_debug: fix resp_xdwriteread() return value when running out of memory

    When resp_xdwriteread() can't allocate temporary buffer, it returns -1.
    But the return value is used as scsi status code and -1 is not
    interpreted as correct code.

    target_core_mod has similar xdwriteread emulation code. So this mimics
    what target_core_mod does for xdwriteread when running out of memory.

    Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com>
    Reviewed-by: Douglas Gilbert <dgilbert@interlog.com>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

Signed-off-by: Ewan D. Milne <emilne@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/scsi_debug.c b/drivers/scsi/scsi_debug.c
index 1a42880..a102519 100644
--- a/drivers/scsi/scsi_debug.c
+++ b/drivers/scsi/scsi_debug.c
@@ -64,6 +64,7 @@ static const char * scsi_debug_version_date = "20100324";
 /* Additional Sense Code (ASC) */
 #define NO_ADDITIONAL_SENSE 0x0
 #define LOGICAL_UNIT_NOT_READY 0x4
+#define LOGICAL_UNIT_COMMUNICATION_FAILURE 0x8
 #define UNRECOVERED_READ_ERR 0x11
 #define PARAMETER_LIST_LENGTH_ERR 0x1a
 #define INVALID_OPCODE 0x20
@@ -2318,8 +2319,11 @@ static int resp_xdwriteread(struct scsi_cmnd *scp, unsigned long long lba,
 
  /* better not to use temporary buffer. */
  buf = kmalloc(scsi_bufflen(scp), GFP_ATOMIC);
- if (!buf)
-  return ret;
+ if (!buf) {
+  mk_sense_buffer(devip, NOT_READY,
+    LOGICAL_UNIT_COMMUNICATION_FAILURE, 0);
+  return check_condition_result;
+ }
 
  scsi_sg_copy_to_buffer(scp, buf, scsi_bufflen(scp));
 
-- 
1.7.1