From dd493651c290978c58daa02445ae3d69144bc24f Mon Sep 17 00:00:00 2001
From: Vlad Yasevich <vyasevic@redhat.com>
Date: Fri, 29 Aug 2014 21:23:12 -0400
Subject: [net] Correctly set segment mac_len in skb_segment()

Message-id: <1409347403-2401-2-git-send-email-vyasevic@redhat.com>
Patchwork-id: 89926
O-Subject: [RHEL7 PATCH 01/12] net: Correctly set segment mac_len in skb_segment().
Bugzilla: 1135619
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: John Linville <linville@redhat.com>

From: Vlad Yasevich <vyasevic@redhat.com>

When performing segmentation, the mac_len value is copied right
out of the original skb.  However, this value is not always set correctly
(like when the packet is VLAN-tagged) and we'll end up copying a bad
value.

One way to demonstrate this is to configure a VM which tags
packets internally and turn off VLAN acceleration on the forwarding
bridge port.  The packets show up corrupt like this:
16:18:24.985548 52:54:00:ab:be:25 > 52:54:00:26:ce:a3, ethertype 802.1Q
(0x8100), length 1518: vlan 100, p 0, ethertype 0x05e0,
        0x0000:  8cdb 1c7c 8cdb 0064 4006 b59d 0a00 6402 ...|...d@.....d.
        0x0010:  0a00 6401 9e0d b441 0a5e 64ec 0330 14fa ..d....A.^d..0..
        0x0020:  29e3 01c9 f871 0000 0101 080a 000a e833)....q.........3
        0x0030:  000f 8c75 6e65 7470 6572 6600 6e65 7470 ...unetperf.netp
        0x0040:  6572 6600 6e65 7470 6572 6600 6e65 7470 erf.netperf.netp
        0x0050:  6572 6600 6e65 7470 6572 6600 6e65 7470 erf.netperf.netp
        0x0060:  6572 6600 6e65 7470 6572 6600 6e65 7470 erf.netperf.netp
        ...

This also leads to awful throughput as GSO packets are dropped and
cause retransmissions.

The solution is to set the mac_len using the values already available
in then new skb.  We've already adjusted all of the header offset, so we
might as well correctly figure out the mac_len using skb_reset_mac_len().
After this change, packets are segmented correctly and performance
is restored.

CC: Eric Dumazet <edumazet@google.com>
Signed-off-by: Vlad Yasevich <vyasevic@redhat.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit fcdfe3a7fa4cb74391d42b6a26dc07c20dab1d82)
Signed-off-by: Vladislav Yasevich <vyasevic@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/core/skbuff.c b/net/core/skbuff.c
index 792d691..5201892 100644
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@ -2958,9 +2958,9 @@ struct sk_buff *skb_segment(struct sk_buff *head_skb,
   tail = nskb;
 
   __copy_skb_header(nskb, head_skb);
-  nskb->mac_len = head_skb->mac_len;
 
   skb_headers_offset_update(nskb, skb_headroom(nskb) - headroom);
+  skb_reset_mac_len(nskb);
 
   skb_copy_from_linear_data_offset(head_skb, -tnl_hlen,
        nskb->data - tnl_hlen,
-- 
1.7.1