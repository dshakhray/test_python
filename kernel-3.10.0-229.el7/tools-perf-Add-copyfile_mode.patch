From 815ae99a50f770c469688f268ce2f1788ba7c1b5 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:25:55 -0400
Subject: [tools] perf: Add copyfile_mode()

Message-id: <1408462094-14194-187-git-send-email-jolsa@redhat.com>
Patchwork-id: 88151
O-Subject: [PATCH RHEL7.1 BZ1131394 186/325] perf tools: Add copyfile_mode()
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 9a17d7268d71674f0bbff6821f7d8e6dc0ece19a
Author: Adrian Hunter <adrian.hunter@intel.com>
Date: Mon Oct 14 13:43:41 2013 +0300

description
===========
Add a function to copy a file specifying the permissions to use for the
created file.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/util.c b/tools/perf/util/util.c
index ab71d62..8dc8cf3 100644
--- a/tools/perf/util/util.c
+++ b/tools/perf/util/util.c
@@ -55,17 +55,20 @@ int mkdir_p(char *path, mode_t mode)
  return (stat(path, &st) && mkdir(path, mode)) ? -1 : 0;
 }
 
-static int slow_copyfile(const char *from, const char *to)
+static int slow_copyfile(const char *from, const char *to, mode_t mode)
 {
- int err = 0;
+ int err = -1;
  char *line = NULL;
  size_t n;
  FILE *from_fp = fopen(from, "r"), *to_fp;
+ mode_t old_umask;
 
  if (from_fp == NULL)
   goto out;
 
+ old_umask = umask(mode ^ 0777);
  to_fp = fopen(to, "w");
+ umask(old_umask);
  if (to_fp == NULL)
   goto out_fclose_from;
 
@@ -82,7 +85,7 @@ out:
  return err;
 }
 
-int copyfile(const char *from, const char *to)
+int copyfile_mode(const char *from, const char *to, mode_t mode)
 {
  int fromfd, tofd;
  struct stat st;
@@ -93,13 +96,13 @@ int copyfile(const char *from, const char *to)
   goto out;
 
  if (st.st_size == 0) /* /proc? do it slowly... */
-  return slow_copyfile(from, to);
+  return slow_copyfile(from, to, mode);
 
  fromfd = open(from, O_RDONLY);
  if (fromfd < 0)
   goto out;
 
- tofd = creat(to, 0755);
+ tofd = creat(to, mode);
  if (tofd < 0)
   goto out_close_from;
 
@@ -121,6 +124,11 @@ out:
  return err;
 }
 
+int copyfile(const char *from, const char *to)
+{
+ return copyfile_mode(from, to, 0755);
+}
+
 unsigned long convert_unit(unsigned long value, char *unit)
 {
  *unit = ' ';
diff --git a/tools/perf/util/util.h b/tools/perf/util/util.h
index 1f06ba4..42dfba7 100644
--- a/tools/perf/util/util.h
+++ b/tools/perf/util/util.h
@@ -243,6 +243,7 @@ static inline int sane_case(int x, int high)
 
 int mkdir_p(char *path, mode_t mode);
 int copyfile(const char *from, const char *to);
+int copyfile_mode(const char *from, const char *to, mode_t mode);
 
 s64 perf_atoll(const char *str);
 char **argv_split(const char *str, int *argcp);
-- 
1.7.1