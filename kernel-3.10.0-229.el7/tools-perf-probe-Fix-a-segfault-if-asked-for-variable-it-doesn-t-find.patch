From 488ac52403e602fcaf36093eb3431fc9cfc65ea5 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:06:29 -0400
Subject: [tools] perf/probe: Fix a segfault if asked for variable it doesn't find

Message-id: <1410181752-25631-145-git-send-email-jolsa@redhat.com>
Patchwork-id: 91845
O-Subject: [PATCH RHEL7.1 BZ1134356 144/307] perf probe: Fix a segfault if asked for variable it doesn't find
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit 0c188a07b6a399e3df66534c29fef0a2082aaf57
Author: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
Date: Thu May 29 19:52:32 2014 +0900

description
===========
Fix a segfault bug by asking for variable it doesn't find.
Since the convert_variable() didn't handle error code returned
from convert_variable_location(), it just passed an incomplete
variable field and then a segfault was occurred when formatting
the field.

This fixes that bug by handling success code correctly in
convert_variable(). Other callers of convert_variable_location()
are correctly checking the return code.

This bug was introduced by following commit. But another hidden
erroneous error handling has been there previously (-ENOMEM case).

 commit 3d918a12a1b3088ac16ff37fa52760639d6e2403
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/probe-finder.c b/tools/perf/util/probe-finder.c
index 5627621..9d8eb26 100644
--- a/tools/perf/util/probe-finder.c
+++ b/tools/perf/util/probe-finder.c
@@ -511,12 +511,12 @@ static int convert_variable(Dwarf_Die *vr_die, struct probe_finder *pf)
 
  ret = convert_variable_location(vr_die, pf->addr, pf->fb_ops,
      &pf->sp_die, pf->tvar);
- if (ret == -ENOENT)
+ if (ret == -ENOENT || ret == -EINVAL)
   pr_err("Failed to find the location of %s at this address.\n"
          " Perhaps, it has been optimized out.\n", pf->pvar->var);
  else if (ret == -ENOTSUP)
   pr_err("Sorry, we don't support this variable location yet.\n");
- else if (pf->pvar->field) {
+ else if (ret == 0 && pf->pvar->field) {
   ret = convert_variable_fields(vr_die, pf->pvar->var,
            pf->pvar->field, &pf->tvar->ref,
            &die_mem);
-- 
1.7.1