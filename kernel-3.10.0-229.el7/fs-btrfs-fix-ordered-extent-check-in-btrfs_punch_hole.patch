From 17e00a31a70a3f45a774dd7df99a45b0c47c1925 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 18:58:42 -0400
Subject: [fs] btrfs: fix ordered extent check in btrfs_punch_hole

Message-id: <1407179109-13714-36-git-send-email-sandeen@redhat.com>
Patchwork-id: 87347
O-Subject: [RHEL7.1 PATCH 035/422] Btrfs: fix ordered extent check in btrfs_punch_hole
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Filipe David Borba Manana <fdmanana@gmail.com>

commit 6126e3caf7468a07cc1a8239d9e95090acedd3ca
Author: Filipe David Borba Manana <fdmanana@gmail.com>
Date:   Tue Nov 19 16:19:24 2013 +0000

    Btrfs: fix ordered extent check in btrfs_punch_hole

    If the ordered extent's last byte was 1 less than our region's
    start byte, we would unnecessarily wait for the completion of
    that ordered extent, because it doesn't intersect our target
    range.

    Signed-off-by: Filipe David Borba Manana <fdmanana@gmail.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/file.c b/fs/btrfs/file.c
index 18fe826..2473350 100644
--- a/fs/btrfs/file.c
+++ b/fs/btrfs/file.c
@@ -2167,7 +2167,7 @@ static int btrfs_punch_hole(struct inode *inode, loff_t offset, loff_t len)
    * we need to try again.
    */
   if ((!ordered ||
-      (ordered->file_offset + ordered->len < lockstart ||
+      (ordered->file_offset + ordered->len <= lockstart ||
        ordered->file_offset > lockend)) &&
        !test_range_bit(&BTRFS_I(inode)->io_tree, lockstart,
          lockend, EXTENT_UPTODATE, 0,
-- 
1.7.1