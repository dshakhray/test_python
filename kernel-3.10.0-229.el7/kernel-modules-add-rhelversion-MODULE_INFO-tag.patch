From 9af8c3992ce5fff253c49abc0dedb3ec77badba4 Mon Sep 17 00:00:00 2001
From: Kyle McMartin <kmcmarti@redhat.com>
Date: Fri, 12 Sep 2014 17:46:12 -0400
Subject: [kernel] modules: add rhelversion MODULE_INFO tag

Message-id: <20140912174612.GS29420@redacted.bos.redhat.com>
Patchwork-id: 94052
O-Subject: [RHEL7.1 PATCH 2/6 v4] modules: add rhelversion MODULE_INFO tag
Bugzilla: 1110315
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Johannes Weiner <jweiner@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Kyle McMartin <kmcmarti@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110315

>From kylem's RHEL8 post:

Let's not lose this ability in RHEL8. Sadly can't be applied to RHEL7
because it breaks KABI due to the struct module change.

Inspired by bits of a147e4729d9920ccae2c717ca65c811cc0f93a1d in RHEL6,
which got lost for RHEL7.0. :/

Kyle is correct and doing this would break RHEL7's KABI.  I'm taking this
patch in as a base and the next patch will resolve the KABI issues.

[v2]: dzickus, cleanup add_rhelversion()
[v4]: resubmitted along with 16k stacks change

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/linux/module.h b/include/linux/module.h
index 504035f..709671f 100644
--- a/include/linux/module.h
+++ b/include/linux/module.h
@@ -240,6 +240,7 @@ struct module
  struct module_attribute *modinfo_attrs;
  const char *version;
  const char *srcversion;
+ const char *rhelversion;
  struct kobject *holders_dir;
 
  /* Exported symbols */
diff --git a/kernel/module.c b/kernel/module.c
index 73dc30c..722f540 100644
--- a/kernel/module.c
+++ b/kernel/module.c
@@ -616,6 +616,7 @@ static struct module_attribute modinfo_##field = {                    \
 
 MODINFO_ATTR(version);
 MODINFO_ATTR(srcversion);
+MODINFO_ATTR(rhelversion);
 
 static char last_unloaded_module[MODULE_NAME_LEN+1];
 
@@ -1120,6 +1121,7 @@ static struct module_attribute *modinfo_attrs[] = {
  &module_uevent,
  &modinfo_version,
  &modinfo_srcversion,
+ &modinfo_rhelversion,
  &modinfo_initstate,
  &modinfo_coresize,
  &modinfo_initsize,
diff --git a/scripts/mod/modpost.c b/scripts/mod/modpost.c
index a4be8e1..815ed6a 100644
--- a/scripts/mod/modpost.c
+++ b/scripts/mod/modpost.c
@@ -20,6 +20,7 @@
 #include "modpost.h"
 #include "../../include/generated/autoconf.h"
 #include "../../include/linux/license.h"
+#include "../../include/generated/uapi/linux/version.h"
 #include "../../include/linux/export.h"
 
 /* Are we using CONFIG_MODVERSIONS? */
@@ -2010,6 +2011,12 @@ static void add_srcversion(struct buffer *b, struct module *mod)
  }
 }
 
+static void add_rhelversion(struct buffer *b, struct module *mod)
+{
+ buf_printf(b, "MODULE_INFO(rhelversion, \"%d.%d\");\n", RHEL_MAJOR,
+     RHEL_MINOR);
+}
+
 static void write_if_changed(struct buffer *b, const char *fname)
 {
  char *tmp;
@@ -2235,6 +2242,7 @@ int main(int argc, char **argv)
   add_depends(&buf, mod, modules);
   add_moddevtable(&buf, mod);
   add_srcversion(&buf, mod);
+  add_rhelversion(&buf, mod);
 
   sprintf(fname, "%s.mod.c", mod->name);
   write_if_changed(&buf, fname);
-- 
1.7.1