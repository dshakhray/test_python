From da13ee79113b5d7eeeb891d9eb8cffbec0b22cfa Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:24:11 -0400
Subject: [cpufreq] intel_pstate: Improve initial busy calculation

Message-id: <1409235879-1283-158-git-send-email-prarit@redhat.com>
Patchwork-id: 89467
O-Subject: [RHEL7.1 PATCH BZ 1134639 157/185] intel_pstate: Improve initial busy calculation
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit bf8102228a8bf053051f311e5486042fe0542894
Author: Doug Smythies <dsmythies@telus.net>
Date:   Fri May 30 10:10:57 2014 -0700

    intel_pstate: Improve initial busy calculation

    This change makes the busy calculation using 64 bit math which prevents
    overflow for large values of aperf/mperf.

    Cc: 3.14+ <stable@vger.kernel.org> # 3.14+
    Signed-off-by: Doug Smythies <dsmythies@telus.net>
    Signed-off-by: Dirk Brandewie <dirk.j.brandewie@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
Cc: Tony Camuso <tcamuso@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/intel_pstate.c b/drivers/cpufreq/intel_pstate.c
index 32fe188..d4d8a26 100644
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@ -554,16 +554,21 @@ static void intel_pstate_get_cpu_pstates(struct cpudata *cpu)
 static inline void intel_pstate_calc_busy(struct cpudata *cpu)
 {
  struct sample *sample = &cpu->sample;
- int32_t core_pct;
+ int64_t core_pct;
+ int32_t rem;
+
+ core_pct = int_tofp(sample->aperf) * int_tofp(100);
+ core_pct = div_u64_rem(core_pct, int_tofp(sample->mperf), &rem);
+
+ if ((rem << 1) >= int_tofp(sample->mperf))
+  core_pct += 1;
 
- core_pct = div_fp(int_tofp(sample->aperf), int_tofp(sample->mperf));
- core_pct = mul_fp(core_pct, int_tofp(100));
  FP_ROUNDUP(core_pct);
 
  sample->freq = fp_toint(
   mul_fp(int_tofp(cpu->pstate.max_pstate * 1000), core_pct));
 
- sample->core_pct_busy = core_pct;
+ sample->core_pct_busy = (int32_t)core_pct;
 }
 
 static inline void intel_pstate_sample(struct cpudata *cpu)
-- 
1.7.1