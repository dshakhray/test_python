From 2e6fd26edd9392e70ff60e56bc2399109f8f8f89 Mon Sep 17 00:00:00 2001
From: Stanislaw Gruszka <sgruszka@redhat.com>
Date: Wed, 10 Dec 2014 10:29:38 -0500
Subject: [wireless] mac80211: schedule the actual switch of the station before CSA count 0

Message-id: <1418207389-7899-25-git-send-email-sgruszka@redhat.com>
Patchwork-id: 101595
O-Subject: [RHEL7.1 PATCH 24/35] mac80211: schedule the actual switch of the station before CSA count 0
Bugzilla: 1155538
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: John Greene <jogreene@redhat.com>

From: Luciano Coelho <luciano.coelho@intel.com>

BZ#1155538

commit ff1e417c7c239b7abfe70aa90460a77eaafc7f83 upstream.

Due to the time it takes to process the beacon that started the CSA
process, we may be late for the switch if we try to reach exactly
beacon 0.  To avoid that, use count - 1 when calculating the switch time.

Reported-by: Jouni Malinen <j@w1.fi>
Signed-off-by: Luciano Coelho <luciano.coelho@intel.com>
Signed-off-by: Johannes Berg <johannes.berg@intel.com>
Signed-off-by: Luis Henriques <luis.henriques@canonical.com>

Brew:
https://brewweb.devel.redhat.com/taskinfo?taskID=8330268

Testing:
Tested on Intel, Atheros and Ralink hardware.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/mac80211/mlme.c b/net/mac80211/mlme.c
index a374bcc..a59a78b 100644
--- a/net/mac80211/mlme.c
+++ b/net/mac80211/mlme.c
@@ -1136,7 +1136,8 @@ ieee80211_sta_process_chanswitch(struct ieee80211_sub_if_data *sdata,
   ieee80211_queue_work(&local->hw, &ifmgd->chswitch_work);
  else
   mod_timer(&ifmgd->chswitch_timer,
-     TU_TO_EXP_TIME(csa_ie.count * cbss->beacon_interval));
+     TU_TO_EXP_TIME((csa_ie.count - 1) *
+      cbss->beacon_interval));
 }
 
 static u32 ieee80211_handle_pwr_constr(struct ieee80211_sub_if_data *sdata,
-- 
1.7.1