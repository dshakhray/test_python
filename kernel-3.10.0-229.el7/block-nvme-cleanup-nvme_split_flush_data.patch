From c3a81e923f5fdd428ac2da63dcef5d88cab15118 Mon Sep 17 00:00:00 2001
From: David Milburn <dmilburn@redhat.com>
Date: Mon, 10 Nov 2014 18:53:11 -0500
Subject: [block] nvme: cleanup nvme_split_flush_data()

Message-id: <1415645591-13072-1-git-send-email-dmilburn@redhat.com>
Patchwork-id: 99816
O-Subject: [RHEL7.1 PATCH] NVMe: cleanup nvme_split_flush_data()
Bugzilla: 1161766
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

When backporting upstream 53562be74bd0 (NVMe: Flush with data support),
we should have cleared the REQ_FLUSH flag for b2 in the bio pair, not
b1 since it is the flush portion. For testing, instrumented kernel to
tell block layer device supported REQ_FLUSH.

https://brewweb.devel.redhat.com/taskinfo?taskID=8215592

This resolves BZ 1161766, please review and ACK.

Thanks,
David

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/block/nvme-core.c b/drivers/block/nvme-core.c
index 6258d7a..68739dc 100644
--- a/drivers/block/nvme-core.c
+++ b/drivers/block/nvme-core.c
@@ -794,7 +794,8 @@ static int nvme_split_flush_data(struct nvme_queue *nvmeq, struct bio *bio)
  if (!bp)
   return -ENOMEM;
 
- bp->b1.bi_rw &= ~REQ_FLUSH;
+ bp->b1.bi_phys_segments = 0;
+ bp->b2.bi_rw &= ~REQ_FLUSH;
 
  if (!waitqueue_active(&nvmeq->sq_full))
   add_wait_queue(&nvmeq->sq_full, &nvmeq->sq_cong_wait);
-- 
1.7.1