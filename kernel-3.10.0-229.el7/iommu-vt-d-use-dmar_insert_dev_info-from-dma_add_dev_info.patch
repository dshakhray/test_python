From 366abaa57c97ede0cd117060ae0023e904fd7993 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 01:49:05 -0400
Subject: [iommu] vt-d: use dmar_insert_dev_info() from dma_add_dev_info()

Message-id: <20140905014905.31297.45195.stgit@gir.stowe>
Patchwork-id: 91326
O-Subject: [RHEL7.1 PATCH 33/65] iommu/vt-d: use dmar_insert_dev_info() from dma_add_dev_info()
Bugzilla: 1129880 1087643
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1087643
Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1129880
Upstream Status: 0ac72664853b3181a437afb02a86d7c6f792e031

commit 0ac72664853b3181a437afb02a86d7c6f792e031
Author: David Woodhouse <David.Woodhouse@intel.com>
Date:   Sun Mar 9 13:19:22 2014 -0700

    iommu/vt-d: use dmar_insert_dev_info() from dma_add_dev_info()

    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c
index c1c5642..7d3d33f 100644
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@ -2452,29 +2452,21 @@ static int domain_add_dev_info(struct dmar_domain *domain,
           struct pci_dev *pdev,
           int translation)
 {
+ struct dmar_domain *ndomain;
  struct device_domain_info *info;
  unsigned long flags;
  int ret;
 
- info = alloc_devinfo_mem();
- if (!info)
-  return -ENOMEM;
-
- info->segment = pci_domain_nr(pdev->bus);
- info->bus = pdev->bus->number;
- info->devfn = pdev->devfn;
- info->dev = &pdev->dev;
- info->domain = domain;
-
- spin_lock_irqsave(&device_domain_lock, flags);
- list_add(&info->link, &domain->devices);
- list_add(&info->global, &device_domain_list);
- pdev->dev.archdata.iommu = info;
- spin_unlock_irqrestore(&device_domain_lock, flags);
+ ndomain = dmar_insert_dev_info(pci_domain_nr(pdev->bus),
+           pdev->bus->number, pdev->devfn,
+           &pdev->dev, domain);
+ if (ndomain != domain)
+  return -EBUSY;
 
  ret = domain_context_mapping(domain, pdev, translation);
  if (ret) {
   spin_lock_irqsave(&device_domain_lock, flags);
+  info = pdev->dev.archdata.iommu;
   unlink_domain_info(info);
   spin_unlock_irqrestore(&device_domain_lock, flags);
   free_devinfo_mem(info);
-- 
1.7.1