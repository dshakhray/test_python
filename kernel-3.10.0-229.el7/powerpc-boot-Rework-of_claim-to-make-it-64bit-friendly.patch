From eda6b9bd57ddf850ceb1b396d0556ec97a4c8d8c Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:12:11 -0400
Subject: [powerpc] boot: Rework of_claim() to make it 64bit friendly

Message-id: <1410545655-205645-503-git-send-email-dzickus@redhat.com>
Patchwork-id: 94501
O-Subject: [RHEL7 PATCH 502/626] powerpc/boot: Rework of_claim() to make it 64bit friendly
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 034e55e6c2f8e2a9ea37901ea87bac8a08464441
Author: Cedric Le Goater <clg@fr.ibm.com>
Date:   Thu Apr 24 09:23:30 2014 +0200

    powerpc/boot: Rework of_claim() to make it 64bit friendly

    This patch fixes 64bit compile warnings and updates the wrapper code
    to converge the kernel code in prom_init.

    Signed-off-by: Cedric Le Goater <clg@fr.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/boot/of.c b/arch/powerpc/boot/of.c
index 62e2f43..7ca910c 100644
--- a/arch/powerpc/boot/of.c
+++ b/arch/powerpc/boot/of.c
@@ -40,8 +40,8 @@ static void *of_try_claim(unsigned long size)
 #ifdef DEBUG
   printf("    trying: 0x%08lx\n\r", claim_base);
 #endif
-  addr = (unsigned long)of_claim(claim_base, size, 0);
-  if ((void *)addr != (void *)-1)
+  addr = (unsigned long) of_claim(claim_base, size, 0);
+  if (addr != PROM_ERROR)
    break;
  }
  if (addr == 0)
diff --git a/arch/powerpc/boot/of.h b/arch/powerpc/boot/of.h
index 0f058ef..504a0a3 100644
--- a/arch/powerpc/boot/of.h
+++ b/arch/powerpc/boot/of.h
@@ -6,7 +6,8 @@ typedef void *ihandle;
 
 void of_init(void *promptr);
 int of_call_prom(const char *service, int nargs, int nret, ...);
-void *of_claim(unsigned long virt, unsigned long size, unsigned long align);
+unsigned int of_claim(unsigned long virt, unsigned long size,
+ unsigned long align);
 void *of_vmlinux_alloc(unsigned long size);
 void of_exit(void);
 void *of_finddevice(const char *name);
diff --git a/arch/powerpc/boot/oflib.c b/arch/powerpc/boot/oflib.c
index 7f61f2e..329437d 100644
--- a/arch/powerpc/boot/oflib.c
+++ b/arch/powerpc/boot/oflib.c
@@ -147,7 +147,8 @@ static int check_of_version(void)
  return 1;
 }
 
-void *of_claim(unsigned long virt, unsigned long size, unsigned long align)
+unsigned int of_claim(unsigned long virt, unsigned long size,
+        unsigned long align)
 {
  int ret;
  prom_arg_t result;
@@ -155,32 +156,32 @@ void *of_claim(unsigned long virt, unsigned long size, unsigned long align)
  if (need_map < 0)
   need_map = check_of_version();
  if (align || !need_map)
-  return (void *) of_call_prom("claim", 3, 1, virt, size, align);
+  return of_call_prom("claim", 3, 1, virt, size, align);
 
  ret = of_call_prom_ret("call-method", 5, 2, &result, "claim", memory,
           align, size, virt);
  if (ret != 0 || result == -1)
-  return (void *) -1;
+  return  -1;
  ret = of_call_prom_ret("call-method", 5, 2, &result, "claim", chosen_mmu,
           align, size, virt);
  /* 0x12 == coherent + read/write */
  ret = of_call_prom("call-method", 6, 1, "map", chosen_mmu,
       0x12, size, virt, virt);
- return (void *) virt;
+ return virt;
 }
 
 void *of_vmlinux_alloc(unsigned long size)
 {
  unsigned long start = (unsigned long)_start, end = (unsigned long)_end;
- void *addr;
+ unsigned long addr;
  void *p;
 
  /* With some older POWER4 firmware we need to claim the area the kernel
   * will reside in.  Newer firmwares don't need this so we just ignore
   * the return value.
   */
- addr = of_claim(start, end - start, 0);
- printf("Trying to claim from 0x%lx to 0x%lx (0x%lx) got %p\r\n",
+ addr = (unsigned long) of_claim(start, end - start, 0);
+ printf("Trying to claim from 0x%lx to 0x%lx (0x%lx) got %lx\r\n",
         start, end, end - start, addr);
 
  p = malloc(size);
-- 
1.7.1