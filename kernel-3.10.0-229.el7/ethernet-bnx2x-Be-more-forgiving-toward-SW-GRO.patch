From b4d70f2530de626cb9ab81a781cbeb1d4af58cc1 Mon Sep 17 00:00:00 2001
From: Michal Schmidt <mschmidt@redhat.com>
Date: Fri, 5 Sep 2014 19:50:14 -0400
Subject: [ethernet] bnx2x: Be more forgiving toward SW GRO

Message-id: <1409946615-5862-70-git-send-email-mschmidt@redhat.com>
Patchwork-id: 91600
O-Subject: [RHEL7.1 PATCH 69/70] bnx2x: Be more forgiving toward SW GRO
Bugzilla: 1089402
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

BZ: https://bugzilla.redhat.com/show_bug.cgi?id=1089402

Upstream commit:
commit aebf6244cd39ba01a6d748e8b29a4f6c7be52535
Author: Dmitry Kravkov <Dmitry.Kravkov@qlogic.com>
Date:   Mon Aug 25 17:48:32 2014 +0300

    bnx2x: Be more forgiving toward SW GRO

    This introduces 2 new relaxations in the bnx2x driver regarding GRO:
      1. Don't prevent SW GRO if HW GRO is disabled.
      2. If all aggregations are disabled, when GRO configuration changes
         there's no need to perform an inner-reload [since it will have no
         actual effect].

    Signed-off-by: Dmitry Kravkov <Dmitry.Kravkov@qlogic.com>
    Signed-off-by: Yuval Mintz <Yuval.Mintz@qlogic.com>
    Signed-off-by: Ariel Elior <Ariel.Elior@qlogic.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c
index c5c700e..66717c5 100644
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c
@@ -4810,11 +4810,15 @@ netdev_features_t bnx2x_fix_features(struct net_device *dev,
  struct bnx2x *bp = netdev_priv(dev);
 
  /* TPA requires Rx CSUM offloading */
- if (!(features & NETIF_F_RXCSUM) || bp->disable_tpa) {
+ if (!(features & NETIF_F_RXCSUM)) {
   features &= ~NETIF_F_LRO;
   features &= ~NETIF_F_GRO;
  }
 
+ /* Note: do not disable SW GRO in kernel when HW GRO is off */
+ if (bp->disable_tpa)
+  features &= ~NETIF_F_LRO;
+
  return features;
 }
 
@@ -4853,6 +4857,10 @@ int bnx2x_set_features(struct net_device *dev, netdev_features_t features)
  if ((changes & GRO_ENABLE_FLAG) && (flags & TPA_ENABLE_FLAG))
   changes &= ~GRO_ENABLE_FLAG;
 
+ /* if GRO is changed while HW TPA is off, don't force a reload */
+ if ((changes & GRO_ENABLE_FLAG) && bp->disable_tpa)
+  changes &= ~GRO_ENABLE_FLAG;
+
  if (changes)
   bnx2x_reload = true;
 
-- 
1.7.1