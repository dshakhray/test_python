From 5dc1c69d66957d21ac921b3bc0f5f23482542dfd Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Fri, 2 May 2014 14:37:03 -0400
Subject: [misc] mei: enable marking internal commands

Message-id: <1399041470-21330-31-git-send-email-prarit@redhat.com>
Patchwork-id: 79319
O-Subject: [RHEL7.1 PATCH BZ 1088953 30/77] mei: enable marking internal commands
Bugzilla: 1088953
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1088953

commit 479327fc42737234a1f76f20010334c99110d256
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Tue Dec 17 15:56:56 2013 +0200

    mei: enable marking internal commands

    Set hbm header bit 30 for internal commands
    This mark commands that are generated by
    the device driver

    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Cc: Dean Nelson <dnelson@redhat.com>
Cc: Stefan Assmann <sassmann@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/misc/mei/amthif.c b/drivers/misc/mei/amthif.c
index d22c686..29fcd57 100644
--- a/drivers/misc/mei/amthif.c
+++ b/drivers/misc/mei/amthif.c
@@ -316,6 +316,7 @@ static int mei_amthif_send_cmd(struct mei_device *dev, struct mei_cl_cb *cb)
   mei_hdr.host_addr = dev->iamthif_cl.host_client_id;
   mei_hdr.me_addr = dev->iamthif_cl.me_client_id;
   mei_hdr.reserved = 0;
+  mei_hdr.internal = 0;
   dev->iamthif_msg_buf_index += mei_hdr.length;
   ret = mei_write_message(dev, &mei_hdr, dev->iamthif_msg_buf);
   if (ret)
@@ -477,6 +478,7 @@ int mei_amthif_irq_write_complete(struct mei_cl *cl, struct mei_cl_cb *cb,
  mei_hdr.host_addr = cl->host_client_id;
  mei_hdr.me_addr = cl->me_client_id;
  mei_hdr.reserved = 0;
+ mei_hdr.internal = 0;
 
  if (*slots >= msg_slots) {
   mei_hdr.length = len;
diff --git a/drivers/misc/mei/client.c b/drivers/misc/mei/client.c
index 6184e85..f84d332 100644
--- a/drivers/misc/mei/client.c
+++ b/drivers/misc/mei/client.c
@@ -727,6 +727,7 @@ int mei_cl_irq_write_complete(struct mei_cl *cl, struct mei_cl_cb *cb,
  mei_hdr.host_addr = cl->host_client_id;
  mei_hdr.me_addr = cl->me_client_id;
  mei_hdr.reserved = 0;
+ mei_hdr.internal = cb->internal;
 
  if (*slots >= msg_slots) {
   mei_hdr.length = len;
@@ -826,6 +827,7 @@ int mei_cl_write(struct mei_cl *cl, struct mei_cl_cb *cb, bool blocking)
  mei_hdr.host_addr = cl->host_client_id;
  mei_hdr.me_addr = cl->me_client_id;
  mei_hdr.reserved = 0;
+ mei_hdr.internal = cb->internal;
 
 
  rets = mei_write_message(dev, &mei_hdr, buf->data);
diff --git a/drivers/misc/mei/hw.h b/drivers/misc/mei/hw.h
index cb2f556..dd44e33 100644
--- a/drivers/misc/mei/hw.h
+++ b/drivers/misc/mei/hw.h
@@ -111,7 +111,8 @@ struct mei_msg_hdr {
  u32 me_addr:8;
  u32 host_addr:8;
  u32 length:9;
- u32 reserved:6;
+ u32 reserved:5;
+ u32 internal:1;
  u32 msg_complete:1;
 } __packed;
 
diff --git a/drivers/misc/mei/mei_dev.h b/drivers/misc/mei/mei_dev.h
index 5d46472..d424d75 100644
--- a/drivers/misc/mei/mei_dev.h
+++ b/drivers/misc/mei/mei_dev.h
@@ -183,6 +183,7 @@ struct mei_cl_cb {
  unsigned long buf_idx;
  unsigned long read_time;
  struct file *file_object;
+ u32 internal:1;
 };
 
 /* MEI client instance carried as file->pirvate_data*/
@@ -643,9 +644,9 @@ static inline void mei_dbgfs_deregister(struct mei_device *dev) {}
 int mei_register(struct mei_device *dev);
 void mei_deregister(struct mei_device *dev);
 
-#define MEI_HDR_FMT "hdr:host=%02d me=%02d len=%d comp=%1d"
+#define MEI_HDR_FMT "hdr:host=%02d me=%02d len=%d internal=%1d comp=%1d"
 #define MEI_HDR_PRM(hdr)                  \
  (hdr)->host_addr, (hdr)->me_addr, \
- (hdr)->length, (hdr)->msg_complete
+ (hdr)->length, (hdr)->internal, (hdr)->msg_complete
 
 #endif
diff --git a/drivers/misc/mei/wd.c b/drivers/misc/mei/wd.c
index 376f73f..b1c5409 100644
--- a/drivers/misc/mei/wd.c
+++ b/drivers/misc/mei/wd.c
@@ -121,6 +121,7 @@ int mei_wd_send(struct mei_device *dev)
  hdr.me_addr = dev->wd_cl.me_client_id;
  hdr.msg_complete = 1;
  hdr.reserved = 0;
+ hdr.internal = 0;
 
  if (!memcmp(dev->wd_data, mei_start_wd_params, MEI_WD_HDR_SIZE))
   hdr.length = MEI_WD_START_MSG_SIZE;
-- 
1.7.1