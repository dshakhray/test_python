From 5b4af26ba8de7d1e9fed12f57312511035523732 Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 23 Oct 2014 09:53:20 -0400
Subject: [fs] ext4: simplify calculation of blocks to free on error

Message-id: <1414058125-4183-47-git-send-email-lczerner@redhat.com>
Patchwork-id: 98148
O-Subject: [RHEL 7.1 PATCH v2 046/171] ext4: simplify calculation of blocks to free on error
Bugzilla: 1150139
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Theodore Ts'o <tytso@mit.edu>

BZ 1150139
https://bugzilla.redhat.com/show_bug.cgi?id=1150139

BREW 8142710
https://brewweb.devel.redhat.com/taskinfo?taskID=8142710

Upstream commit c8e15130e1636f68d5165aa2605b8e9cba0f644c

 In ext4_ext_map_blocks(), if we have successfully allocated the data
 blocks, but then run into trouble inserting the extent into the extent
 tree, most likely due to an ENOSPC condition, determine the arguments
 to ext4_free_blocks() in a simpler way which is easier to prove to be
 correct.

 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/extents.c b/fs/ext4/extents.c
index 5e59be7..2f25f79 100644
--- a/fs/ext4/extents.c
+++ b/fs/ext4/extents.c
@@ -4264,8 +4264,8 @@ got_allocated_blocks:
   /* not a good idea to call discard here directly,
    * but otherwise we'd need to call it every free() */
   ext4_discard_preallocations(inode);
-  ext4_free_blocks(handle, inode, NULL, ext4_ext_pblock(&newex),
-     ext4_ext_get_actual_len(&newex), fb_flags);
+  ext4_free_blocks(handle, inode, NULL, newblock,
+     EXT4_C2B(sbi, allocated_clusters), fb_flags);
   goto out2;
  }
 
-- 
1.7.1