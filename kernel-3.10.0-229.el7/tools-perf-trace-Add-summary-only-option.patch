From 09eaaed638c14f48eed2e81e9ce29e60a3418453 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:27:47 -0400
Subject: [tools] perf/trace: Add summary only option

Message-id: <1408462094-14194-299-git-send-email-jolsa@redhat.com>
Patchwork-id: 88237
O-Subject: [PATCH RHEL7.1 BZ1131394 298/325] perf trace: Add summary only option
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit fd2eabaf16984bc75695e43f4b76e6f20ed4ea41
Author: David Ahern <dsahern@gmail.com>
Date: Tue Nov 12 09:31:15 2013 -0700

description
===========
Per request from Pekka make --summary a summary only option meaning do
not show the individual system calls. Add another option to see all
syscalls along with the summary. In addition use 's' and 'S' as
shortcuts for the options.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/Documentation/perf-trace.txt b/tools/perf/Documentation/perf-trace.txt
index 7b0497f..fae38d9 100644
--- a/tools/perf/Documentation/perf-trace.txt
+++ b/tools/perf/Documentation/perf-trace.txt
@@ -93,9 +93,15 @@ the thread executes on the designated CPUs. Default is to monitor all CPUs.
 --comm::
         Show process COMM right beside its ID, on by default, disable with --no-comm.
 
+-s::
 --summary::
- Show a summary of syscalls by thread with min, max, and average times (in
-    msec) and relative stddev.
+ Show only a summary of syscalls by thread with min, max, and average times
+    (in msec) and relative stddev.
+
+-S::
+--with-summary::
+ Show all syscalls followed by a summary by thread with min, max, and
+    average times (in msec) and relative stddev.
 
 --tool_stats::
  Show tool stats such as number of times fd->pathname was discovered thru
diff --git a/tools/perf/builtin-trace.c b/tools/perf/builtin-trace.c
index 0964c0c..aa5702f 100644
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@ -1168,6 +1168,7 @@ struct trace {
  bool   sched;
  bool   multiple_threads;
  bool   summary;
+ bool   summary_only;
  bool   show_comm;
  bool   show_tool_stats;
  double   duration_filter;
@@ -1611,7 +1612,7 @@ static int trace__sys_enter(struct trace *trace, struct perf_evsel *evsel,
         args, trace, thread);
 
  if (!strcmp(sc->name, "exit_group") || !strcmp(sc->name, "exit")) {
-  if (!trace->duration_filter) {
+  if (!trace->duration_filter && !trace->summary_only) {
    trace__fprintf_entry_head(trace, thread, 1, sample->time, trace->output);
    fprintf(trace->output, "%-70s\n", ttrace->entry_str);
   }
@@ -1664,6 +1665,9 @@ static int trace__sys_exit(struct trace *trace, struct perf_evsel *evsel,
  } else if (trace->duration_filter)
   goto out;
 
+ if (trace->summary_only)
+  goto out;
+
  trace__fprintf_entry_head(trace, thread, duration, sample->time, trace->output);
 
  if (ttrace->entry_pending) {
@@ -2282,8 +2286,10 @@ int cmd_trace(int argc, const char **argv, const char *prefix __maybe_unused)
  OPT_INCR('v', "verbose", &verbose, "be more verbose"),
  OPT_BOOLEAN('T', "time", &trace.full_time,
       "Show full timestamp, not time relative to first start"),
- OPT_BOOLEAN(0, "summary", &trace.summary,
-      "Show syscall summary with statistics"),
+ OPT_BOOLEAN('s', "summary", &trace.summary_only,
+      "Show only syscall summary with statistics"),
+ OPT_BOOLEAN('S', "with-summary", &trace.summary,
+      "Show all syscalls and summary with statistics"),
  OPT_END()
  };
  int err;
@@ -2294,6 +2300,10 @@ int cmd_trace(int argc, const char **argv, const char *prefix __maybe_unused)
 
  argc = parse_options(argc, argv, trace_options, trace_usage, 0);
 
+ /* summary_only implies summary option, but don't overwrite summary if set */
+ if (trace.summary_only)
+  trace.summary = trace.summary_only;
+
  if (output_name != NULL) {
   err = trace__open_output(&trace, output_name);
   if (err < 0) {
-- 
1.7.1