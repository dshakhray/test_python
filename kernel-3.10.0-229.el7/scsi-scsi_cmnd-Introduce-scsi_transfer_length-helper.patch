From aaa66d49dddcd150cda52d311b5070ddd4063ca7 Mon Sep 17 00:00:00 2001
From: Ewan Milne <emilne@redhat.com>
Date: Wed, 20 Aug 2014 18:58:41 -0400
Subject: [scsi] scsi_cmnd: Introduce scsi_transfer_length helper

Message-id: <1408561176-18133-3-git-send-email-emilne@redhat.com>
Patchwork-id: 88421
O-Subject: [RHEL7.1 PATCH e-stor 02/57] scsi_cmnd: Introduce scsi_transfer_length helper
Bugzilla: 1132092
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: "Ewan D. Milne" <emilne@redhat.com>

upstream commit 8846bab180fa2bcfe02d4ba5288fbaba12c8f4f3

Tested by Ewan D. Milne and Barry Donahue with a combination
of manual and automated testing.  No issues seen.

upstream commit 8846bab180fa2bcfe02d4ba5288fbaba12c8f4f3
Author: Sagi Grimberg <sagig@mellanox.com>
Date:   Wed Jun 11 12:09:57 2014 +0300

    scsi_cmnd: Introduce scsi_transfer_length helper

    In case protection information exists on the wire
    scsi transports should include it in the transfer
    byte count (even if protection information does not
    exist in the host memory space). This helper will
    compute the total transfer length from the scsi
    command data length and protection attributes.

    Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: stable@vger.kernel.org # 3.15+
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>

Signed-off-by: Ewan D. Milne <emilne@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/scsi/scsi_cmnd.h b/include/scsi/scsi_cmnd.h
index 8111a2f..c3e087b 100644
--- a/include/scsi/scsi_cmnd.h
+++ b/include/scsi/scsi_cmnd.h
@@ -7,6 +7,7 @@
 #include <linux/types.h>
 #include <linux/timer.h>
 #include <linux/scatterlist.h>
+#include <scsi/scsi_device.h>
 
 struct Scsi_Host;
 struct scsi_device;
@@ -317,4 +318,20 @@ static inline void set_driver_byte(struct scsi_cmnd *cmd, char status)
  cmd->result = (cmd->result & 0x00ffffff) | (status << 24);
 }
 
+static inline unsigned scsi_transfer_length(struct scsi_cmnd *scmd)
+{
+ unsigned int xfer_len = blk_rq_bytes(scmd->request);
+ unsigned int prot_op = scsi_get_prot_op(scmd);
+ unsigned int sector_size = scmd->device->sector_size;
+
+ switch (prot_op) {
+ case SCSI_PROT_NORMAL:
+ case SCSI_PROT_WRITE_STRIP:
+ case SCSI_PROT_READ_INSERT:
+  return xfer_len;
+ }
+
+ return xfer_len + (xfer_len >> ilog2(sector_size)) * 8;
+}
+
 #endif /* _SCSI_SCSI_CMND_H */
-- 
1.7.1