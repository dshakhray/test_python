From 61977e9be96cc4bf6eb803be8f219f5667ef4a56 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:10:49 -0400
Subject: [usb] pl2303: add quirk for legacy devices

Message-id: <1410887463-20674-578-git-send-email-dzickus@redhat.com>
Patchwork-id: 95536
O-Subject: [RHEL7 PATCH 577/591] USB: pl2303: add quirk for legacy devices
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 23c6acb9684ac87c2e752f61900c7a1a2dd543ac
Author: Johan Hovold <jhovold@gmail.com>
Date:   Sun Dec 29 19:23:08 2013 +0100

    USB: pl2303: add quirk for legacy devices

    Add quirk for legacy devices (type 0 and 1) rather than testing on
    device type throughout the driver.

    Signed-off-by: Johan Hovold <jhovold@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/serial/pl2303.c b/drivers/usb/serial/pl2303.c
index c102bef..eb3bd94 100644
--- a/drivers/usb/serial/pl2303.c
+++ b/drivers/usb/serial/pl2303.c
@@ -32,6 +32,7 @@
 
 
 #define PL2303_QUIRK_UART_STATE_IDX0  BIT(0)
+#define PL2303_QUIRK_LEGACY   BIT(1)
 
 static const struct usb_device_id id_table[] = {
  { USB_DEVICE(PL2303_VENDOR_ID, PL2303_PRODUCT_ID) },
@@ -226,6 +227,8 @@ static int pl2303_startup(struct usb_serial *serial)
 
  spriv->type = type;
  spriv->quirks = (unsigned long)usb_get_serial_data(serial);
+ if (type == TYPE_01)
+  spriv->quirks |= PL2303_QUIRK_LEGACY;
 
  usb_set_serial_data(serial, spriv);
 
@@ -239,7 +242,7 @@ static int pl2303_startup(struct usb_serial *serial)
  pl2303_vendor_read(serial, 0x8383, buf);
  pl2303_vendor_write(serial, 0, 1);
  pl2303_vendor_write(serial, 1, 0);
- if (type == TYPE_01)
+ if (spriv->quirks & PL2303_QUIRK_LEGACY)
   pl2303_vendor_write(serial, 2, 0x24);
  else
   pl2303_vendor_write(serial, 2, 0x44);
@@ -535,7 +538,7 @@ static void pl2303_set_termios(struct tty_struct *tty,
  }
 
  if (C_CRTSCTS(tty)) {
-  if (spriv->type == TYPE_01)
+  if (spriv->quirks & PL2303_QUIRK_LEGACY)
    pl2303_vendor_write(serial, 0x0, 0x41);
   else
    pl2303_vendor_write(serial, 0x0, 0x61);
@@ -575,7 +578,7 @@ static int pl2303_open(struct tty_struct *tty, struct usb_serial_port *port)
  struct pl2303_serial_private *spriv = usb_get_serial_data(serial);
  int result;
 
- if (spriv->type == TYPE_01) {
+ if (spriv->quirks & PL2303_QUIRK_LEGACY) {
   usb_clear_halt(serial->dev, port->write_urb->pipe);
   usb_clear_halt(serial->dev, port->read_urb->pipe);
  } else {
-- 
1.7.1