From 1602df7daadc1a2d9e24797950bf5c953f2d2dd5 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:23:20 -0400
Subject: [tools] perf/record: Add abort_tx, no_tx, in_tx branch filter options to perf record -j

Message-id: <1408462094-14194-32-git-send-email-jolsa@redhat.com>
Patchwork-id: 88026
O-Subject: [PATCH RHEL7.1 BZ1131394 031/325] tools/perf/record: Add abort_tx, no_tx, in_tx branch filter options to perf record -j
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 0126d493b62e1306db09e1019c05e0bfe84ae8e7
Author: Andi Kleen <ak@linux.intel.com>
Date: Fri Sep 20 07:40:42 2013 -0700

description
===========
Make perf record -j aware of the new in_tx,no_tx,abort_tx branch qualifiers.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/Documentation/perf-record.txt b/tools/perf/Documentation/perf-record.txt
index ca0d3d9..925d0e8 100644
--- a/tools/perf/Documentation/perf-record.txt
+++ b/tools/perf/Documentation/perf-record.txt
@@ -178,6 +178,9 @@ following filters are defined:
         - u:  only when the branch target is at the user level
         - k: only when the branch target is in the kernel
         - hv: only when the target is at the hypervisor level
+ - in_tx: only when the target is in a hardware transaction
+ - no_tx: only when the target is not in a hardware transaction
+ - abort_tx: only when the target is a hardware transaction abort
 
 +
 The option requires at least one branch type among any, any_call, any_ret, ind_call.
diff --git a/tools/perf/builtin-record.c b/tools/perf/builtin-record.c
index d046514..049c065 100644
--- a/tools/perf/builtin-record.c
+++ b/tools/perf/builtin-record.c
@@ -618,6 +618,9 @@ static const struct branch_mode branch_modes[] = {
  BRANCH_OPT("any_call", PERF_SAMPLE_BRANCH_ANY_CALL),
  BRANCH_OPT("any_ret", PERF_SAMPLE_BRANCH_ANY_RETURN),
  BRANCH_OPT("ind_call", PERF_SAMPLE_BRANCH_IND_CALL),
+ BRANCH_OPT("abort_tx", PERF_SAMPLE_BRANCH_ABORT_TX),
+ BRANCH_OPT("in_tx", PERF_SAMPLE_BRANCH_IN_TX),
+ BRANCH_OPT("no_tx", PERF_SAMPLE_BRANCH_NO_TX),
  BRANCH_END
 };
 
-- 
1.7.1