From ff910630e05e909855d5aca153f974e170e8df25 Mon Sep 17 00:00:00 2001
From: Stanislaw Gruszka <sgruszka@redhat.com>
Date: Wed, 10 Dec 2014 10:29:44 -0500
Subject: [wireless] ath9k: Fix RTC_DERIVED_CLK usage

Message-id: <1418207389-7899-31-git-send-email-sgruszka@redhat.com>
Patchwork-id: 101602
O-Subject: [RHEL7.1 PATCH 30/35] ath9k: Fix RTC_DERIVED_CLK usage
Bugzilla: 1155538
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: John Greene <jogreene@redhat.com>

From: Miaoqing Pan <miaoqing@qca.qualcomm.com>

BZ#1155538

commit 4e6ce4dc7ce71d0886908d55129d5d6482a27ff9 upstream.

Based on the reference clock, which could be 25MHz or 40MHz,
AR_RTC_DERIVED_CLK is programmed differently for AR9340 and AR9550.
But, when a chip reset is done, processing the initvals
sets the register back to the default value.

Fix this by moving the code in ath9k_hw_init_pll() to
ar9003_hw_override_ini(). Also, do this override for AR9531.

Signed-off-by: Miaoqing Pan <miaoqing@qca.qualcomm.com>
Signed-off-by: Sujith Manoharan <c_manoha@qca.qualcomm.com>
Signed-off-by: John W. Linville <linville@tuxdriver.com>
Signed-off-by: Luis Henriques <luis.henriques@canonical.com>

Brew:
https://brewweb.devel.redhat.com/taskinfo?taskID=8330268

Testing:
Compiled only.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/wireless/ath/ath9k/ar9003_phy.c b/drivers/net/wireless/ath/ath9k/ar9003_phy.c
index 8927fc3..b81f885 100644
--- a/drivers/net/wireless/ath/ath9k/ar9003_phy.c
+++ b/drivers/net/wireless/ath/ath9k/ar9003_phy.c
@@ -647,6 +647,19 @@ static void ar9003_hw_override_ini(struct ath_hw *ah)
   ah->enabled_cals |= TX_CL_CAL;
  else
   ah->enabled_cals &= ~TX_CL_CAL;
+
+ if (AR_SREV_9340(ah) || AR_SREV_9531(ah) || AR_SREV_9550(ah)) {
+  if (ah->is_clk_25mhz) {
+   REG_WRITE(ah, AR_RTC_DERIVED_CLK, 0x17c << 1);
+   REG_WRITE(ah, AR_SLP32_MODE, 0x0010f3d7);
+   REG_WRITE(ah, AR_SLP32_INC, 0x0001e7ae);
+  } else {
+   REG_WRITE(ah, AR_RTC_DERIVED_CLK, 0x261 << 1);
+   REG_WRITE(ah, AR_SLP32_MODE, 0x0010f400);
+   REG_WRITE(ah, AR_SLP32_INC, 0x0001e800);
+  }
+  udelay(100);
+ }
 }
 
 static void ar9003_hw_prog_ini(struct ath_hw *ah,
diff --git a/drivers/net/wireless/ath/ath9k/hw.c b/drivers/net/wireless/ath/ath9k/hw.c
index 2a8ed83..e1e2bf3 100644
--- a/drivers/net/wireless/ath/ath9k/hw.c
+++ b/drivers/net/wireless/ath/ath9k/hw.c
@@ -858,19 +858,6 @@ static void ath9k_hw_init_pll(struct ath_hw *ah,
  udelay(RTC_PLL_SETTLE_DELAY);
 
  REG_WRITE(ah, AR_RTC_SLEEP_CLK, AR_RTC_FORCE_DERIVED_CLK);
-
- if (AR_SREV_9340(ah) || AR_SREV_9550(ah)) {
-  if (ah->is_clk_25mhz) {
-   REG_WRITE(ah, AR_RTC_DERIVED_CLK, 0x17c << 1);
-   REG_WRITE(ah, AR_SLP32_MODE, 0x0010f3d7);
-   REG_WRITE(ah,  AR_SLP32_INC, 0x0001e7ae);
-  } else {
-   REG_WRITE(ah, AR_RTC_DERIVED_CLK, 0x261 << 1);
-   REG_WRITE(ah, AR_SLP32_MODE, 0x0010f400);
-   REG_WRITE(ah,  AR_SLP32_INC, 0x0001e800);
-  }
-  udelay(100);
- }
 }
 
 static void ath9k_hw_init_interrupt_masks(struct ath_hw *ah,
-- 
1.7.1