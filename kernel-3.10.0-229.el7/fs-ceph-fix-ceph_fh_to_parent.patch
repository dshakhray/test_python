From 77b48055903e20a7883c1b3343fcb80235ea9a28 Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:24:41 -0400
Subject: [fs] ceph: fix ceph_fh_to_parent()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-175-git-send-email-sweil@redhat.com>
Patchwork-id: 89638
O-Subject: [PATCH 174/303] ceph: fix ceph_fh_to_parent()
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: "Yan, Zheng" <zheng.z.yan@intel.com>

ceph_fh_to_parent() returns dentry that corresponds to the 'ino' field
of struct ceph_nfs_confh. This is wrong, it should return dentry that
corresponds to the 'parent_ino' field.

Signed-off-by: Yan, Zheng <zheng.z.yan@intel.com>
Reviewed-by: Sage Weil <sage@inktank.com>
(cherry picked from commit 8996f4f23db735f0f3bab34352188b1ab21d7d7f)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ceph/export.c b/fs/ceph/export.c
index 9c28b6a..eb66408 100644
--- a/fs/ceph/export.c
+++ b/fs/ceph/export.c
@@ -181,48 +181,24 @@ struct dentry *ceph_get_parent(struct dentry *child)
 }
 
 /*
- * get parent, if possible.
- *
- * FIXME: we could do better by querying the mds to discover the
- * parent.
+ * convert regular fh to parent
  */
 static struct dentry *ceph_fh_to_parent(struct super_block *sb,
-      struct fid *fid,
+     struct fid *fid,
      int fh_len, int fh_type)
 {
  struct ceph_nfs_confh *cfh = (void *)fid->raw;
- struct ceph_vino vino;
- struct inode *inode;
  struct dentry *dentry;
- int err;
 
- if (fh_type == 1)
-  return ERR_PTR(-ESTALE);
+ if (fh_type != FILEID_INO32_GEN_PARENT)
+  return NULL;
  if (fh_len < sizeof(*cfh) / 4)
-  return ERR_PTR(-ESTALE);
-
- pr_debug("fh_to_parent %llx/%d\n", cfh->parent_ino,
-   cfh->parent_name_hash);
-
- vino.ino = cfh->ino;
- vino.snap = CEPH_NOSNAP;
- inode = ceph_find_inode(sb, vino);
- if (!inode)
-  return ERR_PTR(-ESTALE);
+  return NULL;
 
- dentry = d_obtain_alias(inode);
- if (IS_ERR(dentry)) {
-  pr_err("fh_to_parent %llx -- inode %p but ENOMEM\n",
-         cfh->ino, inode);
-  iput(inode);
-  return dentry;
- }
- err = ceph_init_dentry(dentry);
- if (err < 0) {
-  iput(inode);
-  return ERR_PTR(err);
- }
- dout("fh_to_parent %llx %p dentry %p\n", cfh->ino, inode, dentry);
+ dout("fh_to_parent %llx\n", cfh->parent_ino);
+ dentry = __get_parent(sb, NULL, cfh->ino);
+ if (IS_ERR(dentry) && PTR_ERR(dentry) == -ENOENT)
+  dentry = __fh_to_dentry(sb, cfh->parent_ino);
  return dentry;
 }
 
-- 
1.7.1