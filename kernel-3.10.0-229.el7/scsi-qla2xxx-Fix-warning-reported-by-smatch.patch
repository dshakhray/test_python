From 00291de87dfc4137bf8db7a55d5ec700e72a067d Mon Sep 17 00:00:00 2001
From: Chad Dupuis <cdupuis@redhat.com>
Date: Mon, 18 Aug 2014 19:56:10 -0400
Subject: [scsi] qla2xxx: Fix warning reported by smatch

Message-id: <1408391817-6389-23-git-send-email-cdupuis@redhat.com>
Patchwork-id: 87916
O-Subject: [PATCH RHEL 7.1 e-stor 22/69] qla2xxx: Fix warning reported by smatch.
Bugzilla: 1089346
RH-Acked-by: Rob Evers <revers@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Saurav Kashyap <saurav.kashyap@qlogic.com>

scsi commit id c41afc9a754ee085f45a95d9dd58d90ab3bb25dd

Signed-off-by: Giridhar Malavali <giridhar.malavali@qlogic.com>
Signed-off-by: Saurav Kashyap <saurav.kashyap@qlogic.com>
Signed-off-by: James Bottomley <JBottomley@Parallels.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/qla2xxx/qla_gbl.h b/drivers/scsi/qla2xxx/qla_gbl.h
index 38d07e6..a6fa4d3 100644
--- a/drivers/scsi/qla2xxx/qla_gbl.h
+++ b/drivers/scsi/qla2xxx/qla_gbl.h
@@ -729,7 +729,7 @@ extern inline void qla8044_set_qsnt_ready(struct scsi_qla_host *vha);
 extern inline void qla8044_need_reset_handler(struct scsi_qla_host *vha);
 extern int qla8044_device_state_handler(struct scsi_qla_host *vha);
 extern void qla8044_clear_qsnt_ready(struct scsi_qla_host *vha);
-extern void qla8044_clear_drv_active(struct scsi_qla_host *vha);
+extern void qla8044_clear_drv_active(struct qla_hw_data *);
 void qla8044_get_minidump(struct scsi_qla_host *vha);
 int qla8044_collect_md_data(struct scsi_qla_host *vha);
 extern int qla8044_md_get_template(scsi_qla_host_t *);
diff --git a/drivers/scsi/qla2xxx/qla_nx.c b/drivers/scsi/qla2xxx/qla_nx.c
index 1656a21..ae53d98 100644
--- a/drivers/scsi/qla2xxx/qla_nx.c
+++ b/drivers/scsi/qla2xxx/qla_nx.c
@@ -2986,7 +2986,7 @@ qla8xxx_dev_failed_handler(scsi_qla_host_t *vha)
   qla82xx_clear_drv_active(ha);
   qla82xx_idc_unlock(ha);
  } else if (IS_QLA8044(ha)) {
-  qla8044_clear_drv_active(vha);
+  qla8044_clear_drv_active(ha);
   qla8044_idc_unlock(ha);
  }
 
diff --git a/drivers/scsi/qla2xxx/qla_nx2.c b/drivers/scsi/qla2xxx/qla_nx2.c
index cc3522f..b45f4d7 100644
--- a/drivers/scsi/qla2xxx/qla_nx2.c
+++ b/drivers/scsi/qla2xxx/qla_nx2.c
@@ -1257,10 +1257,10 @@ exit_start_fw:
 }
 
 void
-qla8044_clear_drv_active(struct scsi_qla_host *vha)
+qla8044_clear_drv_active(struct qla_hw_data *ha)
 {
  uint32_t drv_active;
- struct qla_hw_data *ha = vha->hw;
+ struct scsi_qla_host *vha = pci_get_drvdata(ha->pdev);
 
  drv_active = qla8044_rd_direct(vha, QLA8044_CRB_DRV_ACTIVE_INDEX);
  drv_active &= ~(1 << (ha->portnum));
@@ -1324,7 +1324,7 @@ qla8044_device_bootstrap(struct scsi_qla_host *vha)
  if (rval != QLA_SUCCESS) {
   ql_log(ql_log_info, vha, 0xb0b3,
        "%s: HW State: FAILED\n", __func__);
-  qla8044_clear_drv_active(vha);
+  qla8044_clear_drv_active(ha);
   qla8044_wr_direct(vha, QLA8044_CRB_DEV_STATE_INDEX,
       QLA8XXX_DEV_FAILED);
   return rval;
@@ -1737,7 +1737,7 @@ qla8044_update_idc_reg(struct scsi_qla_host *vha)
 
  rval = qla8044_set_idc_ver(vha);
  if (rval == QLA_FUNCTION_FAILED)
-  qla8044_clear_drv_active(vha);
+  qla8044_clear_drv_active(ha);
  qla8044_idc_unlock(ha);
 
 exit_update_idc_reg:
diff --git a/drivers/scsi/qla2xxx/qla_os.c b/drivers/scsi/qla2xxx/qla_os.c
index eadedec..bf5605c 100644
--- a/drivers/scsi/qla2xxx/qla_os.c
+++ b/drivers/scsi/qla2xxx/qla_os.c
@@ -2897,7 +2897,7 @@ probe_hw_failed:
  }
  if (IS_QLA8044(ha)) {
   qla8044_idc_lock(ha);
-  qla8044_clear_drv_active(base_vha);
+  qla8044_clear_drv_active(ha);
   qla8044_idc_unlock(ha);
  }
 iospace_config_failed:
@@ -3089,7 +3089,7 @@ qla2x00_remove_one(struct pci_dev *pdev)
 
  if (IS_QLA8044(ha)) {
   qla8044_idc_lock(ha);
-  qla8044_clear_drv_active(base_vha);
+  qla8044_clear_drv_active(ha);
   qla8044_idc_unlock(ha);
  }
  if (IS_QLA82XX(ha)) {
-- 
1.7.1