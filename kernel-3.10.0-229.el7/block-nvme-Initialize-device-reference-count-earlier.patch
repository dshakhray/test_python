From 5ae673010b82e038108bb31bb49e4d0cc757cd83 Mon Sep 17 00:00:00 2001
From: David Milburn <dmilburn@redhat.com>
Date: Mon, 5 May 2014 21:03:57 -0400
Subject: [block] nvme: Initialize device reference count earlier

Message-id: <1399323848-28227-2-git-send-email-dmilburn@redhat.com>
Patchwork-id: 79389
O-Subject: [RHEL7.1 PATCH BZ 1081734 01/12] NVMe: Initialize device reference count earlier
Bugzilla: 1081734
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

From: Keith Busch <keith.busch@intel.com>

If an NVMe device becomes ready but fails to create IO queues, the driver
creates a character device handle so the device can be managed. The
device reference count needs to be initialized before creating the
character device.

Signed-off-by: Keith Busch <keith.busch@intel.com>
Signed-off-by: Matthew Wilcox <matthew.r.wilcox@intel.com>
(cherry picked from commit fb35e914b3f88cda9ee6f9d776910c35269c4ecf)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/block/nvme-core.c b/drivers/block/nvme-core.c
index 4de07a6..f1b51ff 100644
--- a/drivers/block/nvme-core.c
+++ b/drivers/block/nvme-core.c
@@ -2545,6 +2545,7 @@ static int nvme_probe(struct pci_dev *pdev, const struct pci_device_id *id)
  if (result)
   goto release;
 
+ kref_init(&dev->kref);
  result = nvme_dev_start(dev);
  if (result) {
   if (result == -EBUSY)
@@ -2552,7 +2553,6 @@ static int nvme_probe(struct pci_dev *pdev, const struct pci_device_id *id)
   goto release_pools;
  }
 
- kref_init(&dev->kref);
  result = nvme_dev_add(dev);
  if (result)
   goto shutdown;
-- 
1.7.1