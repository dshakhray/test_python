From b44ea2112f12ff5be5f1043d1dea9d93bfd4932f Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:25:17 -0400
Subject: [tools] perf/stat: Don't print bogus data on -e instructions

Message-id: <1408462094-14194-149-git-send-email-jolsa@redhat.com>
Patchwork-id: 88116
O-Subject: [PATCH RHEL7.1 BZ1131394 148/325] perf stat: Don't print bogus data on -e instructions
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 3e7a081796146f97f166d77a655c0eb585065077
Author: Ramkumar Ramachandra <artagnon@gmail.com>
Date: Tue Oct 1 14:06:44 2013 +0530

description
===========
When only the instructions event is requested:

$ perf stat -e instructions git s
M  builtin-stat.c

 Performance counter stats for 'git s':

       917,453,420 instructions              #    0.00  insns per cycle

       0.213002926 seconds time elapsed

The 0.00 insns per cycle comment in the output is totally bogus and
misleading. It happens because update_shadow_stats() doesn't touch
runtime_cycles_stats when only the instructions event is requested. So,
omit printing the bogus data altogether.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-stat.c b/tools/perf/builtin-stat.c
index ce2266c..fb02b53 100644
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@ -930,11 +930,10 @@ static void abs_printout(int cpu, int nr, struct perf_evsel *evsel, double avg)
 
  if (perf_evsel__match(evsel, HARDWARE, HW_INSTRUCTIONS)) {
   total = avg_stats(&runtime_cycles_stats[cpu]);
-  if (total)
+  if (total) {
    ratio = avg / total;
-
-  fprintf(output, " #   %5.2f  insns per cycle        ", ratio);
-
+   fprintf(output, " #   %5.2f  insns per cycle        ", ratio);
+  }
   total = avg_stats(&runtime_stalled_cycles_front_stats[cpu]);
   total = max(total, avg_stats(&runtime_stalled_cycles_back_stats[cpu]));
 
-- 
1.7.1