From c759cc98b6dcb90da7dd933040ba20c23566281d Mon Sep 17 00:00:00 2001
From: Jiri Pirko <jpirko@redhat.com>
Date: Tue, 17 Jun 2014 18:16:47 -0400
Subject: [net] ipv4/tunnels: fix an oops when using ipip/sit with IPsec

Message-id: <1403029007-13096-1-git-send-email-jpirko@redhat.com>
Patchwork-id: 84150
O-Subject: [patch rhel7 net] ipv4 tunnels: fix an oops when using ipip/sit with IPsec
Bugzilla: 1108857
RH-Acked-by: Jiri Benc <jbenc@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Daniel Borkmann <dborkman@redhat.com>

BZ1108857
https://brewweb.devel.redhat.com/taskinfo?taskID=7588789
tested on my testing machine with libreswan and ipip

upstream commit 737e828bdbdaf2f9d7de07f20a0308ac46ce5178
Author: Li Hongjun <hongjun.li@6wind.com>
Date:   Wed Aug 28 11:54:50 2013 +0200

    ipv4 tunnels: fix an oops when using ipip/sit with IPsec

    Since commit 3d7b46cd20e3 (ip_tunnel: push generic protocol handling to
    ip_tunnel module.), an Oops is triggered when an xfrm policy is configured on
    an IPv4 over IPv4 tunnel.

    xfrm4_policy_check() calls __xfrm_policy_check2(), which uses skb_dst(skb). But
    this field is NULL because iptunnel_pull_header() calls skb_dst_drop(skb).

Signed-off-by: Jiri Pirko <jpirko@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ipv4/ipip.c b/net/ipv4/ipip.c
index bde3cca..26f141e 100644
--- a/net/ipv4/ipip.c
+++ b/net/ipv4/ipip.c
@@ -190,15 +190,14 @@ static int ipip_rcv(struct sk_buff *skb)
  struct ip_tunnel *tunnel;
  const struct iphdr *iph;
 
- if (iptunnel_pull_header(skb, 0, tpi.proto))
-  goto drop;
-
  iph = ip_hdr(skb);
  tunnel = ip_tunnel_lookup(itn, skb->dev->ifindex, TUNNEL_NO_KEY,
    iph->saddr, iph->daddr, 0);
  if (tunnel) {
   if (!xfrm4_policy_check(NULL, XFRM_POLICY_IN, skb))
    goto drop;
+  if (iptunnel_pull_header(skb, 0, tpi.proto))
+   goto drop;
   return ip_tunnel_rcv(tunnel, skb, &tpi, log_ecn_error);
  }
 
diff --git a/net/ipv6/sit.c b/net/ipv6/sit.c
index b37e886..aff21b3 100644
--- a/net/ipv6/sit.c
+++ b/net/ipv6/sit.c
@@ -645,11 +645,7 @@ static int ipip_rcv(struct sk_buff *skb)
  const struct iphdr *iph;
  struct ip_tunnel *tunnel;
 
- if (iptunnel_pull_header(skb, 0, tpi.proto))
-  goto drop;
-
  iph = ip_hdr(skb);
-
  tunnel = ipip6_tunnel_lookup(dev_net(skb->dev), skb->dev,
          iph->saddr, iph->daddr);
  if (tunnel != NULL) {
@@ -659,6 +655,8 @@ static int ipip_rcv(struct sk_buff *skb)
 
   if (!xfrm4_policy_check(NULL, XFRM_POLICY_IN, skb))
    goto drop;
+  if (iptunnel_pull_header(skb, 0, tpi.proto))
+   goto drop;
   return ip_tunnel_rcv(tunnel, skb, &tpi, log_ecn_error);
  }
 
-- 
1.7.1