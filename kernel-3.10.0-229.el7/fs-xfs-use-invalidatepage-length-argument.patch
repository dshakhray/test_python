From 439251e0bab2f178ac4f41b5ec5bb30c047a28db Mon Sep 17 00:00:00 2001
From: Brian Foster <bfoster@redhat.com>
Date: Thu, 23 Oct 2014 19:39:02 -0400
Subject: [fs] xfs: use ->invalidatepage() length argument

Message-id: <1414093144-51675-3-git-send-email-bfoster@redhat.com>
Patchwork-id: 98330
O-Subject: [RHEL7.1 PATCH 2/4] xfs: use ->invalidatepage() length argument
Bugzilla: 1032968
RH-Acked-by: Carlos Maiolino <cmaiolino@redhat.com>
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

- Use rhel7-specific block_invalidagepage_range() helper (kABI).

commit 34097dfe88503ca2d0dbca3646c5afb331d1ac99
Author: Lukas Czerner <lczerner@redhat.com>
Date:   Tue May 21 23:58:01 2013 -0400

    xfs: use ->invalidatepage() length argument

    ->invalidatepage() aop now accepts range to invalidate so we can make
    use of it in xfs_vm_invalidatepage()

    Signed-off-by: Lukas Czerner <lczerner@redhat.com>
    Acked-by: Dave Chinner <dchinner@redhat.com>
    Reviewed-by: Ben Myers <bpm@sgi.com>
    Cc: xfs@oss.sgi.com

Signed-off-by: Brian Foster <bfoster@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/xfs/xfs_aops.c b/fs/xfs/xfs_aops.c
index cc09ab8..106d80b 100644
--- a/fs/xfs/xfs_aops.c
+++ b/fs/xfs/xfs_aops.c
@@ -875,8 +875,9 @@ xfs_vm_invalidatepage(
  unsigned int  offset,
  unsigned int  length)
 {
- trace_xfs_invalidatepage(page->mapping->host, page, offset);
- block_invalidatepage_range(page, offset, PAGE_CACHE_SIZE - offset);
+ trace_xfs_invalidatepage(page->mapping->host, page, offset,
+     length);
+ block_invalidatepage_range(page, offset, length);
 }
 
 /*
@@ -970,7 +971,7 @@ xfs_vm_writepage(
  int   count = 0;
  int   nonblocking = 0;
 
- trace_xfs_writepage(inode, page, 0);
+ trace_xfs_writepage(inode, page, 0, 0);
 
  ASSERT(page_has_buffers(page));
 
@@ -1201,7 +1202,7 @@ xfs_vm_releasepage(
 {
  int   delalloc, unwritten;
 
- trace_xfs_releasepage(page->mapping->host, page, 0);
+ trace_xfs_releasepage(page->mapping->host, page, 0, 0);
 
  xfs_count_page_state(page, &delalloc, &unwritten);
 
diff --git a/fs/xfs/xfs_trace.h b/fs/xfs/xfs_trace.h
index 4245ab2..27fdd8b 100644
--- a/fs/xfs/xfs_trace.h
+++ b/fs/xfs/xfs_trace.h
@@ -1062,14 +1062,16 @@ DEFINE_RW_EVENT(xfs_file_splice_read);
 DEFINE_RW_EVENT(xfs_file_splice_write);
 
 DECLARE_EVENT_CLASS(xfs_page_class,
- TP_PROTO(struct inode *inode, struct page *page, unsigned long off),
- TP_ARGS(inode, page, off),
+ TP_PROTO(struct inode *inode, struct page *page, unsigned long off,
+   unsigned int len),
+ TP_ARGS(inode, page, off, len),
  TP_STRUCT__entry(
   __field(dev_t, dev)
   __field(xfs_ino_t, ino)
   __field(pgoff_t, pgoff)
   __field(loff_t, size)
   __field(unsigned long, offset)
+  __field(unsigned int, length)
   __field(int, delalloc)
   __field(int, unwritten)
  ),
@@ -1083,24 +1085,27 @@ DECLARE_EVENT_CLASS(xfs_page_class,
   __entry->pgoff = page_offset(page);
   __entry->size = i_size_read(inode);
   __entry->offset = off;
+  __entry->length = len;
   __entry->delalloc = delalloc;
   __entry->unwritten = unwritten;
  ),
  TP_printk("dev %d:%d ino 0x%llx pgoff 0x%lx size 0x%llx offset %lx "
-    "delalloc %d unwritten %d",
+    "length %x delalloc %d unwritten %d",
     MAJOR(__entry->dev), MINOR(__entry->dev),
     __entry->ino,
     __entry->pgoff,
     __entry->size,
     __entry->offset,
+    __entry->length,
     __entry->delalloc,
     __entry->unwritten)
 )
 
 #define DEFINE_PAGE_EVENT(name)  \
 DEFINE_EVENT(xfs_page_class, name, \
- TP_PROTO(struct inode *inode, struct page *page, unsigned long off), \
- TP_ARGS(inode, page, off))
+ TP_PROTO(struct inode *inode, struct page *page, unsigned long off, \
+   unsigned int len), \
+ TP_ARGS(inode, page, off, len))
 DEFINE_PAGE_EVENT(xfs_writepage);
 DEFINE_PAGE_EVENT(xfs_releasepage);
 DEFINE_PAGE_EVENT(xfs_invalidatepage);
-- 
1.7.1