From bfd05d320e5d8b1a903a6f8a446a207225db3582 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Fri, 13 Jun 2014 14:36:01 -0400
Subject: [block] blk-mq: Micro-optimize blk_queue_nomerges() check

Message-id: <1402670238-13916-74-git-send-email-snitzer@redhat.com>
Patchwork-id: 83804
O-Subject: [RHEL7.1 PATCH 073/150] blk-mq: Micro-optimize blk_queue_nomerges() check
Bugzilla: 1105204
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Jeff Moyer <jmoyer@redhat.com>

BZ: 1105204

Upstream commit da41a589f52464e24ddefe76814ee35bfb07950c
Author: Robert Elliott <elliott@hp.com>
Date:   Tue May 20 16:46:26 2014 -0500

    blk-mq: Micro-optimize blk_queue_nomerges() check

    In blk_mq_make_request(), do the blk_queue_nomerges() check
    outside the call to blk_attempt_plug_merge() to eliminate
    function call overhead when nomerges=2 (disabled)

    Signed-off-by: Robert Elliott <elliott@hp.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/block/blk-core.c b/block/blk-core.c
index a4da95f..4710af5 100644
--- a/block/blk-core.c
+++ b/block/blk-core.c
@@ -1477,6 +1477,8 @@ bool bio_attempt_front_merge(struct request_queue *q, struct request *req,
  * added on the elevator at this point.  In addition, we don't have
  * reliable access to the elevator outside queue lock.  Only check basic
  * merging parameters without querying the elevator.
+ *
+ * Caller must ensure !blk_queue_nomerges(q) beforehand.
  */
 bool blk_attempt_plug_merge(struct request_queue *q, struct bio *bio,
        unsigned int *request_count)
@@ -1486,9 +1488,6 @@ bool blk_attempt_plug_merge(struct request_queue *q, struct bio *bio,
  bool ret = false;
  struct list_head *plug_list;
 
- if (blk_queue_nomerges(q))
-  goto out;
-
  plug = current->plug;
  if (!plug)
   goto out;
@@ -1567,7 +1566,8 @@ void blk_queue_bio(struct request_queue *q, struct bio *bio)
   * Check if we can merge with the plugged list before grabbing
   * any locks.
   */
- if (blk_attempt_plug_merge(q, bio, &request_count))
+ if (!blk_queue_nomerges(q) &&
+     blk_attempt_plug_merge(q, bio, &request_count))
   return;
 
  spin_lock_irq(q->queue_lock);
diff --git a/block/blk-mq.c b/block/blk-mq.c
index fec8fcc..ef7ed5e 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -1087,7 +1087,8 @@ static void blk_mq_make_request(struct request_queue *q, struct bio *bio)
   return;
  }
 
- if (use_plug && blk_attempt_plug_merge(q, bio, &request_count))
+ if (use_plug && !blk_queue_nomerges(q) &&
+     blk_attempt_plug_merge(q, bio, &request_count))
   return;
 
  if (blk_mq_queue_enter(q)) {
-- 
1.7.1