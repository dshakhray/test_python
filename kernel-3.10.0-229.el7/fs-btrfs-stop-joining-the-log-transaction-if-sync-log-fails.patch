From 3a3db57dd147fcd2a613bc0c144f9e2090cf2ded Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:01:24 -0400
Subject: [fs] btrfs: stop joining the log transaction if sync log fails

Message-id: <1407179109-13714-198-git-send-email-sandeen@redhat.com>
Patchwork-id: 87202
O-Subject: [RHEL7.1 PATCH 197/422] Btrfs: stop joining the log transaction if sync log fails
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Miao Xie <miaox@cn.fujitsu.com>

commit 50471a388cf011523f3bf91d275ec3f30669f0ee
Author: Miao Xie <miaox@cn.fujitsu.com>
Date:   Thu Feb 20 18:08:57 2014 +0800

    Btrfs: stop joining the log transaction if sync log fails

    If the log sync fails, there is something wrong in the log tree, we
    should not continue to join the log transaction and log the metadata.
    What we should do is to do a full commit.

    This patch fixes this problem by setting ->last_trans_log_full_commit
    to the current transaction id, it will tell the tasks not to join
    the log transaction, and do a full commit.

    Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/tree-log.c b/fs/btrfs/tree-log.c
index 57d4ca7..e2f45fc 100644
--- a/fs/btrfs/tree-log.c
+++ b/fs/btrfs/tree-log.c
@@ -144,6 +144,12 @@ static int start_log_trans(struct btrfs_trans_handle *trans,
 
  mutex_lock(&root->log_mutex);
  if (root->log_root) {
+  if (ACCESS_ONCE(root->fs_info->last_trans_log_full_commit) ==
+      trans->transid) {
+   ret = -EAGAIN;
+   goto out;
+  }
+
   if (!root->log_start_pid) {
    root->log_start_pid = current->pid;
    root->log_multiple_pids = false;
@@ -2527,6 +2533,8 @@ int btrfs_sync_log(struct btrfs_trans_handle *trans,
   blk_finish_plug(&plug);
   btrfs_abort_transaction(trans, root, ret);
   btrfs_free_logged_extents(log, log_transid);
+  ACCESS_ONCE(root->fs_info->last_trans_log_full_commit) =
+        trans->transid;
   mutex_unlock(&root->log_mutex);
   goto out;
  }
@@ -2569,13 +2577,13 @@ int btrfs_sync_log(struct btrfs_trans_handle *trans,
    list_del_init(&root_log_ctx.list);
 
   blk_finish_plug(&plug);
+  ACCESS_ONCE(root->fs_info->last_trans_log_full_commit) =
+        trans->transid;
   if (ret != -ENOSPC) {
    btrfs_abort_transaction(trans, root, ret);
    mutex_unlock(&log_root_tree->log_mutex);
    goto out;
   }
-  ACCESS_ONCE(root->fs_info->last_trans_log_full_commit) =
-        trans->transid;
   btrfs_wait_marked_extents(log, &log->dirty_log_pages, mark);
   btrfs_free_logged_extents(log, log_transid);
   mutex_unlock(&log_root_tree->log_mutex);
@@ -2629,6 +2637,8 @@ int btrfs_sync_log(struct btrfs_trans_handle *trans,
       EXTENT_DIRTY | EXTENT_NEW);
  blk_finish_plug(&plug);
  if (ret) {
+  ACCESS_ONCE(root->fs_info->last_trans_log_full_commit) =
+        trans->transid;
   btrfs_abort_transaction(trans, root, ret);
   btrfs_free_logged_extents(log, log_transid);
   mutex_unlock(&log_root_tree->log_mutex);
@@ -2657,6 +2667,8 @@ int btrfs_sync_log(struct btrfs_trans_handle *trans,
   */
  ret = write_ctree_super(trans, root->fs_info->tree_root, 1);
  if (ret) {
+  ACCESS_ONCE(root->fs_info->last_trans_log_full_commit) =
+        trans->transid;
   btrfs_abort_transaction(trans, root, ret);
   goto out_wake_log_root;
  }
-- 
1.7.1