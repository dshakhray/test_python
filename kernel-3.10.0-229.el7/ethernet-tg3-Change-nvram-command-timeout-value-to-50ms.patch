From 30639b0e7223ee784f32768e733f8065495a56b2 Mon Sep 17 00:00:00 2001
From: Ivan Vecera <ivecera@redhat.com>
Date: Fri, 27 Jun 2014 15:04:40 -0400
Subject: [ethernet] tg3: Change nvram command timeout value to 50ms

Message-id: <1403881480-9738-3-git-send-email-ivecera@redhat.com>
Patchwork-id: 85062
O-Subject: [RHEL7.1 PATCH 2/2] tg3: Change nvram command timeout value to 50ms
Bugzilla: 1086397
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>

BZ: #1086397

Upstream commit(s):
commit 66c965f5e1b702da2b5871a909b47034c62195d8
Author: Prashant Sreedharan <prashant@broadcom.com>
Date:   Fri Jun 20 23:28:15 2014 -0700

    tg3: Change nvram command timeout value to 50ms

    Commit 506724c463fcd63477a5e404728a980b71f80bb7 "tg3: Override clock,
    link aware and link idle mode during NVRAM dump" changed the timeout
    value for nvram command execution from 100ms to 1ms. But the 1ms
    timeout value was only sufficient for nvram read operations but not
    write operations for most of the devices supported by tg3 driver.
    This patch sets the MAX to 50ms. Also it uses usleep_range instead
    of udelay.

    Signed-off-by: Prashant Sreedharan <prashant@broadcom.com>
    Signed-off-by: Michael Chan <mchan@broadcom.com>
    Suggested-by: David Miller <davem@davemloft.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Ivan Vecera <ivecera@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/broadcom/tg3.c b/drivers/net/ethernet/broadcom/tg3.c
index d0aea12..43b5b58 100644
--- a/drivers/net/ethernet/broadcom/tg3.c
+++ b/drivers/net/ethernet/broadcom/tg3.c
@@ -3230,7 +3230,7 @@ static int tg3_nvram_read_using_eeprom(struct tg3 *tp,
  return 0;
 }
 
-#define NVRAM_CMD_TIMEOUT 100
+#define NVRAM_CMD_TIMEOUT 5000
 
 static int tg3_nvram_exec_cmd(struct tg3 *tp, u32 nvram_cmd)
 {
@@ -3238,7 +3238,7 @@ static int tg3_nvram_exec_cmd(struct tg3 *tp, u32 nvram_cmd)
 
  tw32(NVRAM_CMD, nvram_cmd);
  for (i = 0; i < NVRAM_CMD_TIMEOUT; i++) {
-  udelay(10);
+  usleep_range(10, 40);
   if (tr32(NVRAM_CMD) & NVRAM_CMD_DONE) {
    udelay(10);
    break;
-- 
1.7.1