From e513bdf4d9e5fe43a6a0750f80e7fd740a4608d7 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:26:33 -0400
Subject: [tools] perf/sched: Make struct perf_sched sched a local variable

Message-id: <1408462094-14194-225-git-send-email-jolsa@redhat.com>
Patchwork-id: 88311
O-Subject: [PATCH RHEL7.1 BZ1131394 224/325] perf sched: Make struct perf_sched sched a local variable
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 8a39df8faa1cb130f136d5e404332c16fbb936c0
Author: Adrian Hunter <adrian.hunter@intel.com>
Date: Tue Oct 22 10:34:15 2013 +0300

description
===========
Change "struct perf_sched sched" from being global to being local.

The build slowdown cured by f36f83f947ed is dealt with in the following
patch, by programatically setting perf_sched.curr_pid.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-sched.c b/tools/perf/builtin-sched.c
index 5a46b10..5a33856 100644
--- a/tools/perf/builtin-sched.c
+++ b/tools/perf/builtin-sched.c
@@ -1655,29 +1655,28 @@ static int __cmd_record(int argc, const char **argv)
  return cmd_record(i, rec_argv, NULL);
 }
 
-static const char default_sort_order[] = "avg, max, switch, runtime";
-static struct perf_sched sched = {
- .tool = {
-  .sample   = perf_sched__process_tracepoint_sample,
-  .comm   = perf_event__process_comm,
-  .lost   = perf_event__process_lost,
-  .fork   = perf_sched__process_fork_event,
-  .ordered_samples = true,
- },
- .cmp_pid       = LIST_HEAD_INIT(sched.cmp_pid),
- .sort_list       = LIST_HEAD_INIT(sched.sort_list),
- .start_work_mutex     = PTHREAD_MUTEX_INITIALIZER,
- .work_done_wait_mutex = PTHREAD_MUTEX_INITIALIZER,
- .curr_pid       = { [0 ... MAX_CPUS - 1] = -1 },
- .sort_order       = default_sort_order,
- .replay_repeat       = 10,
- .profile_cpu       = -1,
- .next_shortname1      = 'A',
- .next_shortname2      = '0',
-};
-
 int cmd_sched(int argc, const char **argv, const char *prefix __maybe_unused)
 {
+ const char default_sort_order[] = "avg, max, switch, runtime";
+ struct perf_sched sched = {
+  .tool = {
+   .sample   = perf_sched__process_tracepoint_sample,
+   .comm   = perf_event__process_comm,
+   .lost   = perf_event__process_lost,
+   .fork   = perf_sched__process_fork_event,
+   .ordered_samples = true,
+  },
+  .cmp_pid       = LIST_HEAD_INIT(sched.cmp_pid),
+  .sort_list       = LIST_HEAD_INIT(sched.sort_list),
+  .start_work_mutex     = PTHREAD_MUTEX_INITIALIZER,
+  .work_done_wait_mutex = PTHREAD_MUTEX_INITIALIZER,
+  .curr_pid       = { [0 ... MAX_CPUS - 1] = -1 },
+  .sort_order       = default_sort_order,
+  .replay_repeat       = 10,
+  .profile_cpu       = -1,
+  .next_shortname1      = 'A',
+  .next_shortname2      = '0',
+ };
  const struct option latency_options[] = {
  OPT_STRING('s', "sort", &sched.sort_order, "key[,key2...]",
      "sort by key(s): runtime, switch, avg, max"),
-- 
1.7.1