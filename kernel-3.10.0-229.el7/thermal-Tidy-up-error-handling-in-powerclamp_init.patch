From 5497a8f5f2c5a9f32ee43760571a74608e140857 Mon Sep 17 00:00:00 2001
From: Steve Best <sbest@redhat.com>
Date: Mon, 2 Jun 2014 15:22:53 -0400
Subject: [thermal] Tidy up error handling in powerclamp_init

Message-id: <20140602152252.16229.36791.sendpatchset@ibm-p7r2-01.lab.bos.redhat.com>
Patchwork-id: 81562
O-Subject: [PATCH RHEL7.1 BZ1103376 2/4] thermal: Tidy up error handling in powerclamp_init
Bugzilla: 1103376
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>

RHBZ#:
------
https://bugzilla.redhat.com/show_bug.cgi?id=1103376

Description:
------------

This patch
 * adds missing kfree() for cpu_clamping_mask
 * adds return value checking for alloc_percpu()
 * unregister hotcpu notifier in exit path

Signed-off-by: Durgadoss R <durgadoss.r@intel.com>
Signed-off-by: Zhang Rui <rui.zhang@intel.com>

RHEL Version Found:
-------------------
7.0

Upstream Status:
----------------
http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=c32a5087b70a6706ebee70c4a56849f89c0503f7

----------------
Steve Best

Proposed Patch:
---------------

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/thermal/intel_powerclamp.c b/drivers/thermal/intel_powerclamp.c
index 6e3b061..8f181b3 100644
--- a/drivers/thermal/intel_powerclamp.c
+++ b/drivers/thermal/intel_powerclamp.c
@@ -763,21 +763,39 @@ static int powerclamp_init(void)
  /* probe cpu features and ids here */
  retval = powerclamp_probe();
  if (retval)
-  return retval;
+  goto exit_free;
+
  /* set default limit, maybe adjusted during runtime based on feedback */
  window_size = 2;
  register_hotcpu_notifier(&powerclamp_cpu_notifier);
+
  powerclamp_thread = alloc_percpu(struct task_struct *);
+ if (!powerclamp_thread) {
+  retval = -ENOMEM;
+  goto exit_unregister;
+ }
+
  cooling_dev = thermal_cooling_device_register("intel_powerclamp", NULL,
       &powerclamp_cooling_ops);
- if (IS_ERR(cooling_dev))
-  return -ENODEV;
+ if (IS_ERR(cooling_dev)) {
+  retval = -ENODEV;
+  goto exit_free_thread;
+ }
 
  if (!duration)
   duration = jiffies_to_msecs(DEFAULT_DURATION_JIFFIES);
+
  powerclamp_create_debug_files();
 
  return 0;
+
+exit_free_thread:
+ free_percpu(powerclamp_thread);
+exit_unregister:
+ unregister_hotcpu_notifier(&powerclamp_cpu_notifier);
+exit_free:
+ kfree(cpu_clamping_mask);
+ return retval;
 }
 module_init(powerclamp_init);
 
-- 
1.7.1