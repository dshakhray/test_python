From cc8a2b43af12368b5681dfaa33590e442085eefc Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:50:11 -0400
Subject: [tools] lib/traceevent: Get rid of die() in pevent_filter_clear_trivial()

Message-id: <1408953210-26343-124-git-send-email-jolsa@redhat.com>
Patchwork-id: 88837
O-Subject: [PATCH RHEL7.1 BZ1133083 123/322] tools lib traceevent: Get rid of die() in pevent_filter_clear_trivial()
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 7ef2e813476273ac9c9138f002d8f4cb28e5adad
Author: Namhyung Kim <namhyung@kernel.org>
Date: Mon Dec 9 14:34:09 2013 +0900

description
===========
Change the function signature to return error code and not call die()
anymore.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/lib/traceevent/event-parse.h b/tools/lib/traceevent/event-parse.h
index 620c27a..6e23f19 100644
--- a/tools/lib/traceevent/event-parse.h
+++ b/tools/lib/traceevent/event-parse.h
@@ -860,7 +860,7 @@ int pevent_event_filtered(struct event_filter *filter,
 
 void pevent_filter_reset(struct event_filter *filter);
 
-void pevent_filter_clear_trivial(struct event_filter *filter,
+int pevent_filter_clear_trivial(struct event_filter *filter,
      enum filter_trivial_type type);
 
 void pevent_filter_free(struct event_filter *filter);
diff --git a/tools/lib/traceevent/parse-filter.c b/tools/lib/traceevent/parse-filter.c
index a4d5bb2..ab402fb 100644
--- a/tools/lib/traceevent/parse-filter.c
+++ b/tools/lib/traceevent/parse-filter.c
@@ -1504,8 +1504,10 @@ int pevent_update_trivial(struct event_filter *dest, struct event_filter *source
  * @type: remove only true, false, or both
  *
  * Removes filters that only contain a TRUE or FALES boolean arg.
+ *
+ * Returns 0 on success and -1 if there was a problem.
  */
-void pevent_filter_clear_trivial(struct event_filter *filter,
+int pevent_filter_clear_trivial(struct event_filter *filter,
      enum filter_trivial_type type)
 {
  struct filter_type *filter_type;
@@ -1514,13 +1516,15 @@ void pevent_filter_clear_trivial(struct event_filter *filter,
  int i;
 
  if (!filter->filters)
-  return;
+  return 0;
 
  /*
   * Two steps, first get all ids with trivial filters.
   *  then remove those ids.
   */
  for (i = 0; i < filter->filters; i++) {
+  int *new_ids;
+
   filter_type = &filter->event_filters[i];
   if (filter_type->filter->type != FILTER_ARG_BOOLEAN)
    continue;
@@ -1535,19 +1539,24 @@ void pevent_filter_clear_trivial(struct event_filter *filter,
    break;
   }
 
-  ids = realloc(ids, sizeof(*ids) * (count + 1));
-  if (!ids)
-   die("Can't allocate ids");
+  new_ids = realloc(ids, sizeof(*ids) * (count + 1));
+  if (!new_ids) {
+   free(ids);
+   return -1;
+  }
+
+  ids = new_ids;
   ids[count++] = filter_type->event_id;
  }
 
  if (!count)
-  return;
+  return 0;
 
  for (i = 0; i < count; i++)
   pevent_filter_remove_event(filter, ids[i]);
 
  free(ids);
+ return 0;
 }
 
 /**
-- 
1.7.1