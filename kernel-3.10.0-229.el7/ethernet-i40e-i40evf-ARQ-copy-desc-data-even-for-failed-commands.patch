From 71ab86c0116537ef09218f9ebdbb7d4e1a5c6b96 Mon Sep 17 00:00:00 2001
From: Stefan Assmann <sassmann@redhat.com>
Date: Tue, 2 Sep 2014 11:40:12 -0400
Subject: [ethernet] i40e/i40evf: ARQ copy desc data even for failed commands

Message-id: <1409658042-22689-252-git-send-email-sassmann@redhat.com>
Patchwork-id: 90433
O-Subject: [RHEL7.1 PATCH 251/281] i40e/i40evf: ARQ copy desc data even for failed commands
Bugzilla: 1091126
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Kamil Krawczyk <kamil.krawczyk@intel.com>

Copy desc and buffer data even for ARQ events which return error status.
Previously, a check for NVM related AQ commands which is done later in this
function would not recognize that such a command was received and would
not clear nvm_busy flag. This would block access to NVM until a driver reset.
This will fix that.

Change-ID: If69ad74e165b56081c0686b97402511d2e2880c0
Signed-off-by: Kamil Krawczyk <kamil.krawczyk@intel.com>
Tested-by: Jim Young <jamesx.m.young@intel.com>
Tested-by: Sibai Li <sibai.li@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: Stefan Assmann <sassmann@redhat.com>
(cherry picked from commit 77813d0a9f750f8d5075bcbb59d30417e51ab605)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/i40e/i40e_adminq.c b/drivers/net/ethernet/intel/i40e/i40e_adminq.c
index 1e21fbb..c6d767c 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_adminq.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_adminq.c
@@ -979,15 +979,15 @@ i40e_status i40e_clean_arq_element(struct i40e_hw *hw,
       I40E_DEBUG_AQ_MESSAGE,
       "AQRX: Event received with error 0x%X.\n",
       hw->aq.arq_last_status);
- } else {
-  e->desc = *desc;
-  datalen = le16_to_cpu(desc->datalen);
-  e->msg_size = min(datalen, e->msg_size);
-  if (e->msg_buf != NULL && (e->msg_size != 0))
-   memcpy(e->msg_buf, hw->aq.arq.r.arq_bi[desc_idx].va,
-          e->msg_size);
  }
 
+ e->desc = *desc;
+ datalen = le16_to_cpu(desc->datalen);
+ e->msg_size = min(datalen, e->msg_size);
+ if (e->msg_buf != NULL && (e->msg_size != 0))
+  memcpy(e->msg_buf, hw->aq.arq.r.arq_bi[desc_idx].va,
+         e->msg_size);
+
  i40e_debug(hw, I40E_DEBUG_AQ_MESSAGE, "AQRX: desc and buffer:\n");
  i40e_debug_aq(hw, I40E_DEBUG_AQ_COMMAND, (void *)desc, e->msg_buf);
 
-- 
1.7.1