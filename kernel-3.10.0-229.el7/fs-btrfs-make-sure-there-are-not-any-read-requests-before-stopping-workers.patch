From a90dfca0c10a5fc8e30461b18000d244f379f10d Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:03:42 -0400
Subject: [fs] btrfs: make sure there are not any read requests before stopping workers

Message-id: <1407179109-13714-336-git-send-email-sandeen@redhat.com>
Patchwork-id: 87325
O-Subject: [RHEL7.1 PATCH 335/422] Btrfs: make sure there are not any read requests before stopping workers
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Wang Shilong <wangsl.fnst@cn.fujitsu.com>

commit de348ee022175401e77d7662b7ca6e231a94e3fd
Author: Wang Shilong <wangsl.fnst@cn.fujitsu.com>
Date:   Wed Apr 9 19:23:22 2014 +0800

    Btrfs: make sure there are not any read requests before stopping workers

    In close_ctree(), after we have stopped all workers,there maybe still
    some read requests(for example readahead) to submit and this *maybe* trigger
    an oops that user reported before:

    kernel BUG at fs/btrfs/async-thread.c:619!

    By hacking codes, i can reproduce this problem with one cpu available.
    We fix this potential problem by invalidating all btree inode pages before
    stopping all workers.

    Thanks to Miao for pointing out this problem.

    Signed-off-by: Wang Shilong <wangsl.fnst@cn.fujitsu.com>
    Reviewed-by: David Sterba <dsterba@suse.cz>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/disk-io.c b/fs/btrfs/disk-io.c
index 20340d1..c2544fd 100644
--- a/fs/btrfs/disk-io.c
+++ b/fs/btrfs/disk-io.c
@@ -3659,6 +3659,11 @@ int close_ctree(struct btrfs_root *root)
 
  btrfs_free_block_groups(fs_info);
 
+ /*
+  * we must make sure there is not any read request to
+  * submit after we stopping all workers.
+  */
+ invalidate_inode_pages2(fs_info->btree_inode->i_mapping);
  btrfs_stop_all_workers(fs_info);
 
  free_root_pointers(fs_info, 1);
-- 
1.7.1