From c6bc624a41c912214d75817b4ac18ac1023422b1 Mon Sep 17 00:00:00 2001
From: Rob Clark <rclark@redhat.com>
Date: Wed, 17 Dec 2014 21:39:14 -0500
Subject: [drm] radeon: Use drm_malloc_ab instead of kmalloc_array

Message-id: <1418852380-13061-64-git-send-email-rclark@redhat.com>
Patchwork-id: 102220
O-Subject: [RHEL7 drm 63/89] drm/radeon: Use drm_malloc_ab instead of kmalloc_array
Bugzilla: 1173317
RH-Acked-by: Jerome Glisse <jglisse@redhat.com>
RH-Acked-by: Dave Airlie <airlied@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1173317
Upstream: since v3.18

commit e5a5fd4df21b9c4acb67e815ec949cce594860f8

Author:     Michel Danzer <michel.daenzer@amd.com>
AuthorDate: Mon Oct 20 18:40:54 2014 +0900
Commit:     Rob Clark <rclark@redhat.com>
CommitDate: Mon Dec 15 14:09:45 2014 -0500

    drm/radeon: Use drm_malloc_ab instead of kmalloc_array

    Should avoid kmalloc failures due to large number of array entries.

    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=81991
    Reviewed-by: Dave Airlie <airlied@redhat.com>
    Reviewed-by: Christian Koenig <christian.koenig@amd.com>
    Signed-off-by: Michel Danzer <michel.daenzer@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org

Signed-off-by: Rob Clark <rclark@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/gpu/drm/radeon/radeon_cs.c b/drivers/gpu/drm/radeon/radeon_cs.c
index 8f7d56f..c50a1da 100644
--- a/drivers/gpu/drm/radeon/radeon_cs.c
+++ b/drivers/gpu/drm/radeon/radeon_cs.c
@@ -418,7 +418,7 @@ static void radeon_cs_parser_fini(struct radeon_cs_parser *parser, int error, bo
  kfree(parser->track);
  kfree(parser->relocs);
  kfree(parser->relocs_ptr);
- kfree(parser->vm_bos);
+ drm_free_large(parser->vm_bos);
  for (i = 0; i < parser->nchunks; i++)
   drm_free_large(parser->chunks[i].kdata);
  kfree(parser->chunks);
diff --git a/drivers/gpu/drm/radeon/radeon_ring.c b/drivers/gpu/drm/radeon/radeon_ring.c
index f8050f5..2d76391 100644
--- a/drivers/gpu/drm/radeon/radeon_ring.c
+++ b/drivers/gpu/drm/radeon/radeon_ring.c
@@ -571,7 +571,7 @@ unsigned radeon_ring_backup(struct radeon_device *rdev, struct radeon_ring *ring
  }
 
  /* and then save the content of the ring */
- *data = kmalloc_array(size, sizeof(uint32_t), GFP_KERNEL);
+ *data = drm_malloc_ab(size, sizeof(uint32_t));
  if (!*data) {
   mutex_unlock(&rdev->ring_lock);
   return 0;
@@ -613,7 +613,7 @@ int radeon_ring_restore(struct radeon_device *rdev, struct radeon_ring *ring,
  }
 
  radeon_ring_unlock_commit(rdev, ring);
- kfree(data);
+ drm_free_large(data);
  return 0;
 }
 
diff --git a/drivers/gpu/drm/radeon/radeon_vm.c b/drivers/gpu/drm/radeon/radeon_vm.c
index 725d366..abf8e2c 100644
--- a/drivers/gpu/drm/radeon/radeon_vm.c
+++ b/drivers/gpu/drm/radeon/radeon_vm.c
@@ -132,8 +132,8 @@ struct radeon_cs_reloc *radeon_vm_get_bos(struct radeon_device *rdev,
  struct radeon_cs_reloc *list;
  unsigned i, idx;
 
- list = kmalloc_array(vm->max_pde_used + 2,
-        sizeof(struct radeon_cs_reloc), GFP_KERNEL);
+ list = drm_malloc_ab(vm->max_pde_used + 2,
+        sizeof(struct radeon_cs_reloc));
  if (!list)
   return NULL;
 
-- 
1.7.1