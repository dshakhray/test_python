From 23b430c96612cf8ff5f0f2693e334bd4eed4f74a Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:24:37 -0400
Subject: [fs] ceph: do not assume r_old_dentry[_dir] always set together
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-171-git-send-email-sweil@redhat.com>
Patchwork-id: 89761
O-Subject: [PATCH 170/303] ceph: do not assume r_old_dentry[_dir] always set together
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Sage Weil <sage@inktank.com>

Do not assume that r_old_dentry implies that r_old_dentry_dir is also
true.  Separate out the ref cleanup and make the debugs dump behave when
it is NULL.

Signed-off-by: Sage Weil <sage@inktank.com>
Reviewed-by: Yan, Zheng <zheng.z.yan@intel.com>
(cherry picked from commit 844d87c3329980e2b1849cf53205d7fa965d8995)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ceph/debugfs.c b/fs/ceph/debugfs.c
index 6d59006..8c6f313 100644
--- a/fs/ceph/debugfs.c
+++ b/fs/ceph/debugfs.c
@@ -102,7 +102,8 @@ static int mdsc_show(struct seq_file *s, void *p)
     path = NULL;
    spin_lock(&req->r_old_dentry->d_lock);
    seq_printf(s, " #%llx/%.*s (%s)",
-      ceph_ino(req->r_old_dentry_dir),
+       req->r_old_dentry_dir ?
+       ceph_ino(req->r_old_dentry_dir) : 0,
        req->r_old_dentry->d_name.len,
        req->r_old_dentry->d_name.name,
        path ? path : "");
diff --git a/fs/ceph/mds_client.c b/fs/ceph/mds_client.c
index f4f050a..f260bd8 100644
--- a/fs/ceph/mds_client.c
+++ b/fs/ceph/mds_client.c
@@ -528,7 +528,9 @@ void ceph_mdsc_release_request(struct kref *kref)
   iput(req->r_target_inode);
  if (req->r_dentry)
   dput(req->r_dentry);
- if (req->r_old_dentry) {
+ if (req->r_old_dentry)
+  dput(req->r_old_dentry);
+ if (req->r_old_dentry_dir) {
   /*
    * track (and drop pins for) r_old_dentry_dir
    * separately, since r_old_dentry's d_parent may have
@@ -537,7 +539,6 @@ void ceph_mdsc_release_request(struct kref *kref)
    */
   ceph_put_cap_refs(ceph_inode(req->r_old_dentry_dir),
       CEPH_CAP_PIN);
-  dput(req->r_old_dentry);
   iput(req->r_old_dentry_dir);
  }
  kfree(req->r_path1);
@@ -2053,7 +2054,7 @@ int ceph_mdsc_do_request(struct ceph_mds_client *mdsc,
   ceph_get_cap_refs(ceph_inode(req->r_inode), CEPH_CAP_PIN);
  if (req->r_locked_dir)
   ceph_get_cap_refs(ceph_inode(req->r_locked_dir), CEPH_CAP_PIN);
- if (req->r_old_dentry)
+ if (req->r_old_dentry_dir)
   ceph_get_cap_refs(ceph_inode(req->r_old_dentry_dir),
       CEPH_CAP_PIN);
 
-- 
1.7.1