From af4c7eb959bd93045116cf7ef0dd6ac3100d9d02 Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Tue, 16 Sep 2014 20:18:40 -0400
Subject: [fs] nfsd: Cleanup - Let nfsd4_lookup_stateid() take a cstate argument

Message-id: <1410898849-22126-37-git-send-email-bfields@redhat.com>
Patchwork-id: 95717
O-Subject: [Patch RHEL7 036/165] nfsd: Cleanup - Let nfsd4_lookup_stateid() take a cstate argument
Bugzilla: 1044798 1123721 1141932
RH-Acked-by: Benjamin Coddington <bcodding@redhat.com>
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Trond Myklebust <trond.myklebust@primarydata.com>

The cstate already holds information about the session, and hence
the client id, so it makes more sense to pass that information
rather than the current practice of passing a 'minor version' number.

Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
Reviewed-by: Christoph Hellwig <hch@lst.de>
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: 2dd6e458c3dc1ae598867130dc618eabbe7ccda5
Bugzilla: 1044798
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4state.c b/fs/nfsd/nfs4state.c
index 29d1ddc..1f8aab8 100644
--- a/fs/nfsd/nfs4state.c
+++ b/fs/nfsd/nfs4state.c
@@ -3781,12 +3781,14 @@ static __be32 nfsd4_validate_stateid(struct nfs4_client *cl, stateid_t *stateid)
  }
 }
 
-static __be32 nfsd4_lookup_stateid(stateid_t *stateid, unsigned char typemask,
-       struct nfs4_stid **s, bool sessions,
-       struct nfsd_net *nn)
+static __be32
+nfsd4_lookup_stateid(struct nfsd4_compound_state *cstate,
+       stateid_t *stateid, unsigned char typemask,
+       struct nfs4_stid **s, struct nfsd_net *nn)
 {
  struct nfs4_client *cl;
  __be32 status;
+ bool sessions = cstate->minorversion != 0;
 
  if (ZERO_STATEID(stateid) || ONE_STATEID(stateid))
   return nfserr_bad_stateid;
@@ -3832,9 +3834,9 @@ nfs4_preprocess_stateid_op(struct net *net, struct nfsd4_compound_state *cstate,
 
  nfs4_lock_state();
 
- status = nfsd4_lookup_stateid(stateid,
+ status = nfsd4_lookup_stateid(cstate, stateid,
     NFS4_DELEG_STID|NFS4_OPEN_STID|NFS4_LOCK_STID,
-    &s, cstate->minorversion, nn);
+    &s, nn);
  if (status)
   goto out;
  status = check_stateid_generation(stateid, &s->sc_stateid, nfsd4_has_session(cstate));
@@ -4004,8 +4006,7 @@ nfs4_preprocess_seqid_op(struct nfsd4_compound_state *cstate, u32 seqid,
   seqid, STATEID_VAL(stateid));
 
  *stpp = NULL;
- status = nfsd4_lookup_stateid(stateid, typemask, &s,
-          cstate->minorversion, nn);
+ status = nfsd4_lookup_stateid(cstate, stateid, typemask, &s, nn);
  if (status)
   return status;
  stp = openlockstateid(s);
@@ -4229,8 +4230,7 @@ nfsd4_delegreturn(struct svc_rqst *rqstp, struct nfsd4_compound_state *cstate,
   return status;
 
  nfs4_lock_state();
- status = nfsd4_lookup_stateid(stateid, NFS4_DELEG_STID, &s,
-          cstate->minorversion, nn);
+ status = nfsd4_lookup_stateid(cstate, stateid, NFS4_DELEG_STID, &s, nn);
  if (status)
   goto out;
  dp = delegstateid(s);
-- 
1.7.1