From d0fa75b33390f619b321ffac4a977912911b6e29 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:00:33 -0400
Subject: [fs] btrfs: fix spin_unlock in check_ref_cleanup

Message-id: <1407179109-13714-147-git-send-email-sandeen@redhat.com>
Patchwork-id: 87096
O-Subject: [RHEL7.1 PATCH 146/422] Btrfs: fix spin_unlock in check_ref_cleanup
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Chris Mason <clm@fb.com>

commit cf93da7bcf450cb4595055d491a0519cb39e68ed
Author: Chris Mason <clm@fb.com>
Date:   Wed Jan 29 07:02:40 2014 -0800

    Btrfs: fix spin_unlock in check_ref_cleanup

    Our goto out should have gone a little farther.

    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/extent-tree.c b/fs/btrfs/extent-tree.c
index 73b55d9..9c9ecc9 100644
--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@ -5893,7 +5893,7 @@ static noinline int check_ref_cleanup(struct btrfs_trans_handle *trans,
  spin_lock(&delayed_refs->lock);
  head = btrfs_find_delayed_ref_head(trans, bytenr);
  if (!head)
-  goto out;
+  goto out_delayed_unlock;
 
  spin_lock(&head->lock);
  if (rb_first(&head->ref_root))
@@ -5942,6 +5942,8 @@ static noinline int check_ref_cleanup(struct btrfs_trans_handle *trans,
  return ret;
 out:
  spin_unlock(&head->lock);
+
+out_delayed_unlock:
  spin_unlock(&delayed_refs->lock);
  return 0;
 }
-- 
1.7.1