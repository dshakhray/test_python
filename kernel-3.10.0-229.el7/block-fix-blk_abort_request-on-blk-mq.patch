From 1ad25a8057113487bcc071c9aae0b6511e034ea5 Mon Sep 17 00:00:00 2001
From: Jeff Moyer <jmoyer@redhat.com>
Date: Fri, 10 Oct 2014 21:03:35 -0400
Subject: [block] fix blk_abort_request on blk-mq

Message-id: <1412975015-5370-35-git-send-email-jmoyer@redhat.com>
Patchwork-id: 97453
O-Subject: [RHEL7 PATCH 34/34] block: fix blk_abort_request on blk-mq
Bugzilla: 1146660
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Mike Snitzer <snitzer@redhat.com>

This is a backport of the following commit.  This resolves bug
1146660.

  commit 90415837659fec54f33584b423dab250eb1e8432
  Author: Christoph Hellwig <hch@lst.de>
  Date:   Mon Sep 22 10:21:48 2014 -0600

    block: fix blk_abort_request on blk-mq

    Signed-off-by: Christoph Hellwig <hch@lst.de>

    Moved blk_mq_rq_timed_out() definition to the private blk-mq.h header.

    Signed-off-by: Jens Axboe <axboe@fb.com>

Signed-off-by: Jeff Moyer <jmoyer@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/block/blk-mq.c b/block/blk-mq.c
index 39dc6e0..27143f6 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -529,7 +529,7 @@ struct blk_mq_timeout_data {
  unsigned int next_set;
 };
 
-static void blk_mq_rq_timed_out(struct request *req, bool reserved)
+void blk_mq_rq_timed_out(struct request *req, bool reserved)
 {
  struct blk_mq_ops *ops = req->q->mq_ops;
  enum blk_eh_timer_return ret = BLK_EH_RESET_TIMER;
diff --git a/block/blk-mq.h b/block/blk-mq.h
index 81e402f..d221fb6 100644
--- a/block/blk-mq.h
+++ b/block/blk-mq.h
@@ -64,6 +64,8 @@ extern int blk_mq_hw_queue_to_node(unsigned int *map, unsigned int);
 extern int blk_mq_sysfs_register(struct request_queue *q);
 extern void blk_mq_sysfs_unregister(struct request_queue *q);
 
+extern void blk_mq_rq_timed_out(struct request *req, bool reserved);
+
 /*
  * Basic implementation of sparser bitmap, allowing the user to spread
  * the bits over more cachelines.
diff --git a/block/blk-timeout.c b/block/blk-timeout.c
index 601d6fa..04131d6 100644
--- a/block/blk-timeout.c
+++ b/block/blk-timeout.c
@@ -7,6 +7,7 @@
 #include <linux/fault-inject.h>
 
 #include "blk.h"
+#include "blk-mq.h"
 
 #ifdef CONFIG_FAIL_IO_TIMEOUT
 
@@ -157,7 +158,10 @@ void blk_abort_request(struct request *req)
  if (blk_mark_rq_complete(req))
   return;
  blk_delete_timer(req);
- blk_rq_timed_out(req);
+ if (req->q->mq_ops)
+  blk_mq_rq_timed_out(req, false);
+ else
+  blk_rq_timed_out(req);
 }
 EXPORT_SYMBOL_GPL(blk_abort_request);
 
-- 
1.7.1