From 1a2c808101d34a1cce0ab3241d46dd69fa466a30 Mon Sep 17 00:00:00 2001
From: Chad Dupuis <cdupuis@redhat.com>
Date: Mon, 18 Aug 2014 19:55:58 -0400
Subject: [scsi] qla2xxx: Don't consider the drivers knocked out of IDC participation for future reset recovery process

Message-id: <1408391817-6389-11-git-send-email-cdupuis@redhat.com>
Patchwork-id: 87909
O-Subject: [PATCH RHEL 7.1 e-stor 10/69] qla2xxx: Don't consider the drivers knocked out of IDC participation for future reset recovery process.
Bugzilla: 1089346
RH-Acked-by: Rob Evers <revers@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Saurav Kashyap <saurav.kashyap@qlogic.com>

scsi commit id 8f476115b2fac206588c11aaa3fc20408d35bb15

Signed-off-by: Giridhar Malavali <giridhar.malavali@qlogic.com>
Signed-off-by: Saurav Kashyap <saurav.kashyap@qlogic.com>
Signed-off-by: James Bottomley <JBottomley@Parallels.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/qla2xxx/qla_nx2.c b/drivers/scsi/qla2xxx/qla_nx2.c
index 8164cc9..6f509f8 100644
--- a/drivers/scsi/qla2xxx/qla_nx2.c
+++ b/drivers/scsi/qla2xxx/qla_nx2.c
@@ -1555,6 +1555,15 @@ qla8044_need_reset_handler(struct scsi_qla_host *vha)
   qla8044_idc_lock(ha);
  }
 
+ drv_state = qla8044_rd_direct(vha,
+     QLA8044_CRB_DRV_STATE_INDEX);
+ drv_active = qla8044_rd_direct(vha,
+     QLA8044_CRB_DRV_ACTIVE_INDEX);
+
+ ql_log(ql_log_info, vha, 0xb0c5,
+     "%s(%ld): drv_state = 0x%x, drv_active = 0x%x\n",
+     __func__, vha->host_no, drv_state, drv_active);
+
  if (!ha->flags.nic_core_reset_owner) {
   ql_dbg(ql_dbg_p3p, vha, 0xb0c3,
       "%s(%ld): reset acknowledged\n",
@@ -1580,23 +1589,15 @@ qla8044_need_reset_handler(struct scsi_qla_host *vha)
 
    dev_state = qla8044_rd_direct(vha,
      QLA8044_CRB_DEV_STATE_INDEX);
-  } while (dev_state == QLA8XXX_DEV_NEED_RESET);
+  } while (((drv_state & drv_active) != drv_active) &&
+      (dev_state == QLA8XXX_DEV_NEED_RESET));
  } else {
   qla8044_set_rst_ready(vha);
 
   /* wait for 10 seconds for reset ack from all functions */
   reset_timeout = jiffies + (ha->fcoe_reset_timeout * HZ);
 
-  drv_state = qla8044_rd_direct(vha,
-      QLA8044_CRB_DRV_STATE_INDEX);
-  drv_active = qla8044_rd_direct(vha,
-      QLA8044_CRB_DRV_ACTIVE_INDEX);
-
-  ql_log(ql_log_info, vha, 0xb0c5,
-      "%s(%ld): drv_state = 0x%x, drv_active = 0x%x\n",
-      __func__, vha->host_no, drv_state, drv_active);
-
-  while (drv_state != drv_active) {
+  while ((drv_state & drv_active) != drv_active) {
    if (time_after_eq(jiffies, reset_timeout)) {
     ql_log(ql_log_info, vha, 0xb0c6,
         "%s: RESET TIMEOUT!"
-- 
1.7.1