From a8abe7d1ebab2069c5df46e4821619b143bd078f Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:25:16 -0400
Subject: [tools] perf/stat: Don't print bogus data on -e cycles

Message-id: <1408462094-14194-148-git-send-email-jolsa@redhat.com>
Patchwork-id: 88113
O-Subject: [PATCH RHEL7.1 BZ1131394 147/325] perf stat: Don't print bogus data on -e cycles
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit c458fe62ca31496664c1211a7906d261220b18f9
Author: Ramkumar Ramachandra <artagnon@gmail.com>
Date: Mon Sep 30 16:43:05 2013 +0530

description
===========
When only the cycles event is requested:

$ perf stat -e cycles dd if=/dev/zero of=/dev/null count=1000000
1000000+0 records in
1000000+0 records out
512000000 bytes (512 MB) copied, 0.26123 s, 2.0 GB/s

 Performance counter stats for 'dd if=/dev/zero of=/dev/null count=1000000':

       911,626,453 cycles                    #    0.000 GHz

       0.262113350 seconds time elapsed

The 0.000 GHz comment in the output is totally bogus and misleading. It
happens because update_shadow_stats() doesn't touch runtime_nsecs_stats;
it is only written when a requested counter matches a SW_TASK_CLOCK. In
our case, since we have only requested HW_CPU_CYCLES,
runtime_nsecs_stats is unavailable. So, omit printing the comment
altogether.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-stat.c b/tools/perf/builtin-stat.c
index 700b478..ce2266c 100644
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@ -997,10 +997,10 @@ static void abs_printout(int cpu, int nr, struct perf_evsel *evsel, double avg)
  } else if (perf_evsel__match(evsel, HARDWARE, HW_CPU_CYCLES)) {
   total = avg_stats(&runtime_nsecs_stats[cpu]);
 
-  if (total)
-   ratio = 1.0 * avg / total;
-
-  fprintf(output, " # %8.3f GHz                    ", ratio);
+  if (total) {
+   ratio = avg / total;
+   fprintf(output, " # %8.3f GHz                    ", ratio);
+  }
  } else if (transaction_run &&
      perf_evsel__cmp(evsel, nth_evsel(T_CYCLES_IN_TX))) {
   total = avg_stats(&runtime_cycles_stats[cpu]);
-- 
1.7.1