From 9f971a601dbb117e37969a43baa792f403d35c18 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:21:56 -0400
Subject: [cpufreq] Use cpufreq_policy_list for iterating over policies

Message-id: <1409235879-1283-23-git-send-email-prarit@redhat.com>
Patchwork-id: 89375
O-Subject: [RHEL7.1 PATCH BZ 1134639 022/185] cpufreq: Use cpufreq_policy_list for iterating over policies
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit 1b27429446f0c37353179544e844dc2086fa2353
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Tue Aug 20 12:08:26 2013 +0530

    cpufreq: Use cpufreq_policy_list for iterating over policies

    To iterate over all policies we currently iterate over all online
    CPUs and then get the policy for each of them which is suboptimal.
    Use the newly created cpufreq_policy_list for this purpose instead.

    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/cpufreq.c b/drivers/cpufreq/cpufreq.c
index c74998f..f790032 100644
--- a/drivers/cpufreq/cpufreq.c
+++ b/drivers/cpufreq/cpufreq.c
@@ -969,8 +969,8 @@ static int __cpufreq_add_dev(struct device *dev, struct subsys_interface *sif,
  struct cpufreq_policy *policy;
  unsigned long flags;
 #ifdef CONFIG_HOTPLUG_CPU
+ struct cpufreq_policy *tpolicy;
  struct cpufreq_governor *gov;
- int sibling;
 #endif
 
  if (cpu_is_offline(cpu))
@@ -993,11 +993,10 @@ static int __cpufreq_add_dev(struct device *dev, struct subsys_interface *sif,
 #ifdef CONFIG_HOTPLUG_CPU
  /* Check if this cpu was hot-unplugged earlier and has siblings */
  read_lock_irqsave(&cpufreq_driver_lock, flags);
- for_each_online_cpu(sibling) {
-  struct cpufreq_policy *cp = per_cpu(cpufreq_cpu_data, sibling);
-  if (cp && cpumask_test_cpu(cpu, cp->related_cpus)) {
+ list_for_each_entry(tpolicy, &cpufreq_policy_list, policy_list) {
+  if (cpumask_test_cpu(cpu, tpolicy->related_cpus)) {
    read_unlock_irqrestore(&cpufreq_driver_lock, flags);
-   ret = cpufreq_add_policy_cpu(cp, cpu, dev, frozen);
+   ret = cpufreq_add_policy_cpu(tpolicy, cpu, dev, frozen);
    up_read(&cpufreq_rwsem);
    return ret;
   }
-- 
1.7.1