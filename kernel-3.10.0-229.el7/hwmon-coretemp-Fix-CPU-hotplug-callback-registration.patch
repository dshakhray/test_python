From e4ec9fd766c4682c52d2a81364a9029613d859e3 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Mon, 14 Jul 2014 13:08:07 -0400
Subject: [hwmon] coretemp: Fix CPU hotplug callback registration

Message-id: <1405343292-21004-31-git-send-email-prarit@redhat.com>
Patchwork-id: 85770
O-Subject: [RHEL7.1 PATCH BZ 1119078 30/35] hwmon, coretemp: Fix CPU hotplug callback registration
Bugzilla: 1119078
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Igor Mammedov <imammedo@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1119078

commit 3289705fe2b429569f37730ecf660719b8924420
Author: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
Date:   Tue Mar 11 02:11:11 2014 +0530

    hwmon, coretemp: Fix CPU hotplug callback registration

    Subsystems that want to register CPU hotplug callbacks, as well as perform
    initialization for the CPUs that are already online, often do it as shown
    below:

     get_online_cpus();

     for_each_online_cpu(cpu)
      init_cpu(cpu);

     register_cpu_notifier(&foobar_cpu_notifier);

     put_online_cpus();

    This is wrong, since it is prone to ABBA deadlocks involving the
    cpu_add_remove_lock and the cpu_hotplug.lock (when running concurrently
    with CPU hotplug operations).

    Instead, the correct and race-free way of performing the callback
    registration is:

     cpu_notifier_register_begin();

     for_each_online_cpu(cpu)
      init_cpu(cpu);

     /* Note the use of the double underscored version of the API */
     __register_cpu_notifier(&foobar_cpu_notifier);

     cpu_notifier_register_done();

    Fix the hwmon coretemp code by using this latter form of callback
    registration.

    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: Jean Delvare <jdelvare@suse.de>
    Cc: Ingo Molnar <mingo@kernel.org>
    Acked-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Dean Nelson <dnelson@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/hwmon/coretemp.c b/drivers/hwmon/coretemp.c
index 2497871..9aad231 100644
--- a/drivers/hwmon/coretemp.c
+++ b/drivers/hwmon/coretemp.c
@@ -813,20 +813,20 @@ static int __init coretemp_init(void)
  if (err)
   goto exit;
 
- get_online_cpus();
+ cpu_notifier_register_begin();
  for_each_online_cpu(i)
   get_core_online(i);
 
 #ifndef CONFIG_HOTPLUG_CPU
  if (list_empty(&pdev_list)) {
-  put_online_cpus();
+  cpu_notifier_register_done();
   err = -ENODEV;
   goto exit_driver_unreg;
  }
 #endif
 
- register_hotcpu_notifier(&coretemp_cpu_notifier);
- put_online_cpus();
+ __register_hotcpu_notifier(&coretemp_cpu_notifier);
+ cpu_notifier_register_done();
  return 0;
 
 #ifndef CONFIG_HOTPLUG_CPU
@@ -841,8 +841,8 @@ static void __exit coretemp_exit(void)
 {
  struct pdev_entry *p, *n;
 
- get_online_cpus();
- unregister_hotcpu_notifier(&coretemp_cpu_notifier);
+ cpu_notifier_register_begin();
+ __unregister_hotcpu_notifier(&coretemp_cpu_notifier);
  mutex_lock(&pdev_list_mutex);
  list_for_each_entry_safe(p, n, &pdev_list, list) {
   platform_device_unregister(p->pdev);
@@ -850,7 +850,7 @@ static void __exit coretemp_exit(void)
   kfree(p);
  }
  mutex_unlock(&pdev_list_mutex);
- put_online_cpus();
+ cpu_notifier_register_done();
  platform_driver_unregister(&coretemp_driver);
 }
 
-- 
1.7.1