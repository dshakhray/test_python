From 81b2175f51c2b8e8105ee69d3d4ef38c09f29450 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:10:15 -0400
Subject: [powerpc] ppc64: Gracefully handle early interrupts

Message-id: <1410545655-205645-387-git-send-email-dzickus@redhat.com>
Patchwork-id: 94394
O-Subject: [RHEL7 PATCH 386/626] powerpc/ppc64: Gracefully handle early interrupts
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit a944a9c40b81a71609692c4909bb57e1d01f4bb7
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Fri Mar 28 13:36:29 2014 +1100

    powerpc/ppc64: Gracefully handle early interrupts

    If we take an interrupt such as a trap caused by a BUG_ON before the
    MMU has been setup, the interrupt handlers try to enable virutal mode
    and cause a recursive crash, making the original problem very hard
    to debug.

    This fixes it by adjusting the "kernel_msr" value in the PACA so that
    it only has MSR_IR and MSR_DR (translation for instruction and data)
    set after the MMU has been initialized for the processor.

    We may still not have a console yet but at least we don't get into
    a recursive fault (and early debug console or memory dump via JTAG
    of the kernel buffer *will* give us the proper error).

    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kernel/paca.c b/arch/powerpc/kernel/paca.c
index 623c356..eaf6ed6 100644
--- a/arch/powerpc/kernel/paca.c
+++ b/arch/powerpc/kernel/paca.c
@@ -152,7 +152,8 @@ void __init initialise_paca(struct paca_struct *new_paca, int cpu)
  new_paca->paca_index = cpu;
  new_paca->kernel_toc = kernel_toc;
  new_paca->kernelbase = (unsigned long) _stext;
- new_paca->kernel_msr = MSR_KERNEL;
+ /* Only set MSR:IR/DR when MMU is initialized */
+ new_paca->kernel_msr = MSR_KERNEL & ~(MSR_IR | MSR_DR);
  new_paca->hw_cpu_id = 0xffff;
  new_paca->kexec_state = KEXEC_STATE_NONE;
  new_paca->__current = &init_task;
diff --git a/arch/powerpc/kernel/setup_64.c b/arch/powerpc/kernel/setup_64.c
index f862f02..d0ccffb 100644
--- a/arch/powerpc/kernel/setup_64.c
+++ b/arch/powerpc/kernel/setup_64.c
@@ -226,6 +226,14 @@ void __init early_setup(unsigned long dt_ptr)
  /* Initialize the hash table or TLB handling */
  early_init_mmu();
 
+ /*
+  * At this point, we can let interrupts switch to virtual mode
+  * (the MMU has been setup), so adjust the MSR in the PACA to
+  * have IR and DR set.
+  */
+ get_paca()->kernel_msr = MSR_KERNEL;
+
+ /* Reserve large chunks of memory for use by CMA for KVM */
  kvm_cma_reserve();
 
  /*
@@ -246,6 +254,13 @@ void early_setup_secondary(void)
 
  /* Initialize the hash table or TLB handling */
  early_init_mmu_secondary();
+
+ /*
+  * At this point, we can let interrupts switch to virtual mode
+  * (the MMU has been setup), so adjust the MSR in the PACA to
+  * have IR and DR set.
+  */
+ get_paca()->kernel_msr = MSR_KERNEL;
 }
 
 #endif /* CONFIG_SMP */
-- 
1.7.1