From e61fd80bf7eeab5c230df5ecc7b624107e9b73e5 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Wed, 6 Aug 2014 03:51:12 -0400
Subject: [powerpc] pci: Fix NULL dereference in sys_pciconfig_iobase() list traversal

Message-id: <20140806035111.1438.40401.stgit@gir.stowe>
Patchwork-id: 87475
O-Subject: [RHEL7.1 PATCH 66/69] powerpc/PCI: Fix NULL dereference in sys_pciconfig_iobase() list traversal
Bugzilla: 1110896
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110896
Upstream Status: 140ab6452c42174d20e2fdd27ed73b889cd86500

commit 140ab6452c42174d20e2fdd27ed73b889cd86500
Author: Mike Qiu <qiudayu@linux.vnet.ibm.com>
Date:   Mon Apr 14 16:12:35 2014 -0600

    powerpc/PCI: Fix NULL dereference in sys_pciconfig_iobase() list traversal

    3bc955987fb3 ("powerpc/PCI: Use list_for_each_entry() for bus traversal")
    caused a NULL pointer dereference because the loop body set the iterator to
    NULL:

      Unable to handle kernel paging request for data at address 0x00000000
      Faulting instruction address: 0xc000000000041d78
      Oops: Kernel access of bad area, sig: 11 [#1]
      ...
      NIP [c000000000041d78] .sys_pciconfig_iobase+0x68/0x1f0
      LR [c000000000041e0c] .sys_pciconfig_iobase+0xfc/0x1f0
      Call Trace:
      [c0000003b4787db0] [c000000000041e0c] .sys_pciconfig_iobase+0xfc/0x1f0 (un
      [c0000003b4787e30] [c000000000009ed8] syscall_exit+0x0/0x98

    Fix it by using a temporary variable for the iterator.

    [bhelgaas: changelog, drop tmp_bus initialization]
    Fixes: 3bc955987fb3 powerpc/PCI: Use list_for_each_entry() for bus traversal
    Signed-off-by: Mike Qiu <qiudayu@linux.vnet.ibm.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kernel/pci_64.c b/arch/powerpc/kernel/pci_64.c
index 97cc4bb..8911c87 100644
--- a/arch/powerpc/kernel/pci_64.c
+++ b/arch/powerpc/kernel/pci_64.c
@@ -208,7 +208,7 @@ long sys_pciconfig_iobase(long which, unsigned long in_bus,
      unsigned long in_devfn)
 {
  struct pci_controller* hose;
- struct pci_bus *bus = NULL;
+ struct pci_bus *tmp_bus, *bus = NULL;
  struct device_node *hose_node;
 
  /* Argh ! Please forgive me for that hack, but that's the
@@ -229,10 +229,12 @@ long sys_pciconfig_iobase(long which, unsigned long in_bus,
   * used on pre-domains setup. We return the first match
   */
 
- list_for_each_entry(bus, &pci_root_buses, node) {
-  if (in_bus >= bus->number && in_bus <= bus->busn_res.end)
+ list_for_each_entry(tmp_bus, &pci_root_buses, node) {
+  if (in_bus >= tmp_bus->number &&
+      in_bus <= tmp_bus->busn_res.end) {
+   bus = tmp_bus;
    break;
-  bus = NULL;
+  }
  }
  if (bus == NULL || bus->dev.of_node == NULL)
   return -ENODEV;
-- 
1.7.1