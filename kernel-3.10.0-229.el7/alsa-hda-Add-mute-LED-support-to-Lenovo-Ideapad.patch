From 12104f869535a0c7fbf85ec3cb10ee7e9f1515a7 Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <jkysela@redhat.com>
Date: Wed, 3 Sep 2014 07:17:01 -0400
Subject: [alsa] hda: Add mute LED support to Lenovo Ideapad

Message-id: <140972823573-81-patchset-jkysela@redhat.com>
Patchwork-id: 90781
O-Subject: [RHEL 7.1 PATCH 080/442] ALSA: hda - Add mute LED support to Lenovo Ideapad
Bugzilla: 1112200
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>

Lenovo Ideapad with ALC272 has a mute LED that is controlled via
GPIO1.  Add a simple vmaster hook for it.

Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=16373
Signed-off-by: Takashi Iwai <tiwai@suse.de>

(picked from kernel: 3e887f379d8a52db8af1c0ac78e328069b7b2eae)
rhbz#1112200
Signed-off-by: Jaroslav Kysela <jkysela@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/sound/pci/hda/patch_realtek.c b/sound/pci/hda/patch_realtek.c
index 56a8f18..cbeb67d 100644
--- a/sound/pci/hda/patch_realtek.c
+++ b/sound/pci/hda/patch_realtek.c
@@ -4861,8 +4861,42 @@ static void alc_fixup_bass_chmap(struct hda_codec *codec,
  }
 }
 
+/* turn on/off mute LED per vmaster hook */
+static void alc662_led_gpio1_mute_hook(void *private_data, int enabled)
+{
+ struct hda_codec *codec = private_data;
+ struct alc_spec *spec = codec->spec;
+ unsigned int oldval = spec->gpio_led;
+
+ if (enabled)
+  spec->gpio_led &= ~0x01;
+ else
+  spec->gpio_led |= 0x01;
+ if (spec->gpio_led != oldval)
+  snd_hda_codec_write(codec, 0x01, 0, AC_VERB_SET_GPIO_DATA,
+        spec->gpio_led);
+}
+
+static void alc662_fixup_led_gpio1(struct hda_codec *codec,
+       const struct hda_fixup *fix, int action)
+{
+ struct alc_spec *spec = codec->spec;
+ static const struct hda_verb gpio_init[] = {
+  { 0x01, AC_VERB_SET_GPIO_MASK, 0x01 },
+  { 0x01, AC_VERB_SET_GPIO_DIRECTION, 0x01 },
+  {}
+ };
+
+ if (action == HDA_FIXUP_ACT_PRE_PROBE) {
+  spec->gen.vmaster_mute.hook = alc662_led_gpio1_mute_hook;
+  spec->gpio_led = 0;
+  snd_hda_add_verbs(codec, gpio_init);
+ }
+}
+
 enum {
  ALC662_FIXUP_ASPIRE,
+ ALC662_FIXUP_LED_GPIO1,
  ALC662_FIXUP_IDEAPAD,
  ALC272_FIXUP_MARIO,
  ALC662_FIXUP_CZC_P10T,
@@ -4895,12 +4929,18 @@ static const struct hda_fixup alc662_fixups[] = {
    { }
   }
  },
+ [ALC662_FIXUP_LED_GPIO1] = {
+  .type = HDA_FIXUP_FUNC,
+  .v.func = alc662_fixup_led_gpio1,
+ },
  [ALC662_FIXUP_IDEAPAD] = {
   .type = HDA_FIXUP_PINS,
   .v.pins = (const struct hda_pintbl[]) {
    { 0x17, 0x99130112 }, /* subwoofer */
    { }
-  }
+  },
+  .chained = true,
+  .chain_id = ALC662_FIXUP_LED_GPIO1,
  },
  [ALC272_FIXUP_MARIO] = {
   .type = HDA_FIXUP_FUNC,
-- 
1.7.1