From 4f893b9020ac0875c6e563dd4d767c1957b70bc5 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:12:08 -0400
Subject: [powerpc] boot: Use prom_arg_t in oflib

Message-id: <1410545655-205645-500-git-send-email-dzickus@redhat.com>
Patchwork-id: 94641
O-Subject: [RHEL7 PATCH 499/626] powerpc/boot: Use prom_arg_t in oflib
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 163bed77b97c2f1e941641f81566da8ea647deda
Author: Cedric Le Goater <clg@fr.ibm.com>
Date:   Thu Apr 24 09:23:27 2014 +0200

    powerpc/boot: Use prom_arg_t in oflib

    This patch updates the wrapper code to converge with the kernel code in
    prom_init.

    Signed-off-by: Cedric Le Goater <clg@fr.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/boot/oflib.c b/arch/powerpc/boot/oflib.c
index c3288a3..3b0c945 100644
--- a/arch/powerpc/boot/oflib.c
+++ b/arch/powerpc/boot/oflib.c
@@ -16,6 +16,8 @@
 
 #include "of.h"
 
+typedef u32 prom_arg_t;
+
 /* The following structure is used to communicate with open firmware.
  * All arguments in and out are in big endian format. */
 struct prom_args {
@@ -46,7 +48,7 @@ int of_call_prom(const char *service, int nargs, int nret, ...)
 
  va_start(list, nret);
  for (i = 0; i < nargs; i++)
-  args.args[i] = va_arg(list, unsigned int);
+  args.args[i] = va_arg(list, prom_arg_t);
  va_end(list);
 
  for (i = 0; i < nret; i++)
@@ -59,7 +61,7 @@ int of_call_prom(const char *service, int nargs, int nret, ...)
 }
 
 static int of_call_prom_ret(const char *service, int nargs, int nret,
-       unsigned int *rets, ...)
+       prom_arg_t *rets, ...)
 {
  int i;
  struct prom_args args;
@@ -71,7 +73,7 @@ static int of_call_prom_ret(const char *service, int nargs, int nret,
 
  va_start(list, rets);
  for (i = 0; i < nargs; i++)
-  args.args[i] = va_arg(list, unsigned int);
+  args.args[i] = va_arg(list, prom_arg_t);
  va_end(list);
 
  for (i = 0; i < nret; i++)
@@ -148,7 +150,7 @@ static int check_of_version(void)
 void *of_claim(unsigned long virt, unsigned long size, unsigned long align)
 {
  int ret;
- unsigned int result;
+ prom_arg_t result;
 
  if (need_map < 0)
   need_map = check_of_version();
-- 
1.7.1