From a5f9e4a409a172735388dc8b570f291baab49561 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:08:09 -0400
Subject: [tools] perf/ui/browser: Add support to accumulated hist stat

Message-id: <1410181752-25631-245-git-send-email-jolsa@redhat.com>
Patchwork-id: 91965
O-Subject: [PATCH RHEL7.1 BZ1134356 244/307] perf ui/browser: Add support to accumulated hist stat
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit 0434ddd21466a61cfc539ffc3a4cb3bdc67d82ec
Author: Namhyung Kim <namhyung@kernel.org>
Date: Wed Oct 30 16:12:59 2013 +0900

description
===========
Print accumulated stat of a hist entry if requested.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/ui/browsers/hists.c b/tools/perf/ui/browsers/hists.c
index 1c331b9..2dcbe3d 100644
--- a/tools/perf/ui/browsers/hists.c
+++ b/tools/perf/ui/browsers/hists.c
@@ -651,13 +651,36 @@ hist_browser__hpp_color_##_type(struct perf_hpp_fmt *fmt __maybe_unused,\
      __hpp__slsmg_color_printf, true);  \
 }
 
+#define __HPP_COLOR_ACC_PERCENT_FN(_type, _field)   \
+static u64 __hpp_get_acc_##_field(struct hist_entry *he)  \
+{         \
+ return he->stat_acc->_field;     \
+}         \
+         \
+static int        \
+hist_browser__hpp_color_##_type(struct perf_hpp_fmt *fmt __maybe_unused,\
+    struct perf_hpp *hpp,   \
+    struct hist_entry *he)   \
+{         \
+ if (!symbol_conf.cumulate_callchain) {    \
+  int ret = scnprintf(hpp->buf, hpp->size, "%8s", "N/A"); \
+  slsmg_printf("%s", hpp->buf);    \
+         \
+  return ret;      \
+ }        \
+ return __hpp__fmt(hpp, he, __hpp_get_acc_##_field, " %6.2f%%", \
+     __hpp__slsmg_color_printf, true);  \
+}
+
 __HPP_COLOR_PERCENT_FN(overhead, period)
 __HPP_COLOR_PERCENT_FN(overhead_sys, period_sys)
 __HPP_COLOR_PERCENT_FN(overhead_us, period_us)
 __HPP_COLOR_PERCENT_FN(overhead_guest_sys, period_guest_sys)
 __HPP_COLOR_PERCENT_FN(overhead_guest_us, period_guest_us)
+__HPP_COLOR_ACC_PERCENT_FN(overhead_acc, period)
 
 #undef __HPP_COLOR_PERCENT_FN
+#undef __HPP_COLOR_ACC_PERCENT_FN
 
 void hist_browser__init_hpp(void)
 {
@@ -671,6 +694,8 @@ void hist_browser__init_hpp(void)
     hist_browser__hpp_color_overhead_guest_sys;
  perf_hpp__format[PERF_HPP__OVERHEAD_GUEST_US].color =
     hist_browser__hpp_color_overhead_guest_us;
+ perf_hpp__format[PERF_HPP__OVERHEAD_ACC].color =
+    hist_browser__hpp_color_overhead_acc;
 }
 
 static int hist_browser__show_entry(struct hist_browser *browser,
-- 
1.7.1