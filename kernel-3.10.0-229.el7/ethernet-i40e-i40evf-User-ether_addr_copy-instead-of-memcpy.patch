From d9e3873684059ea21c6a958c856f7c9f0d0d62bf Mon Sep 17 00:00:00 2001
From: Stefan Assmann <sassmann@redhat.com>
Date: Tue, 2 Sep 2014 13:12:23 -0400
Subject: [ethernet] i40e/i40evf: User ether_addr_copy instead of memcpy

Message-id: <1409663591-32531-101-git-send-email-sassmann@redhat.com>
Patchwork-id: 90580
O-Subject: [RHEL7.1 PATCH 100/148] i40e/i40evf: User ether_addr_copy instead of memcpy
Bugzilla: 1091127
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Greg Rose <gregory.v.rose@intel.com>

Linux gives us a function to copy Ethernet MAC addresses, let's use it.

Change-ID: I0c861900029ca5ea65a53ca39565852fb633f6fd
Signed-off-by: Greg Rose <gregory.v.rose@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: Stefan Assmann <sassmann@redhat.com>
(cherry picked from commit 9a173901d9969ddd527f8e6de36f4c1b11ce9fb3)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/i40evf/i40evf_main.c b/drivers/net/ethernet/intel/i40evf/i40evf_main.c
index f454b58..8f681ca 100644
--- a/drivers/net/ethernet/intel/i40evf/i40evf_main.c
+++ b/drivers/net/ethernet/intel/i40evf/i40evf_main.c
@@ -772,7 +772,7 @@ i40evf_mac_filter *i40evf_add_filter(struct i40evf_adapter *adapter,
    return NULL;
   }
 
-  memcpy(f->macaddr, macaddr, ETH_ALEN);
+  ether_addr_copy(f->macaddr, macaddr);
 
   list_add(&f->list, &adapter->mac_filter_list);
   f->add = true;
@@ -805,9 +805,8 @@ static int i40evf_set_mac(struct net_device *netdev, void *p)
 
  f = i40evf_add_filter(adapter, addr->sa_data);
  if (f) {
-  memcpy(hw->mac.addr, addr->sa_data, netdev->addr_len);
-  memcpy(netdev->dev_addr, adapter->hw.mac.addr,
-         netdev->addr_len);
+  ether_addr_copy(hw->mac.addr, addr->sa_data);
+  ether_addr_copy(netdev->dev_addr, adapter->hw.mac.addr);
  }
 
  return (f == NULL) ? -ENOMEM : 0;
@@ -2059,8 +2058,8 @@ static void i40evf_init_task(struct work_struct *work)
     adapter->hw.mac.addr);
   random_ether_addr(adapter->hw.mac.addr);
  }
- memcpy(netdev->dev_addr, adapter->hw.mac.addr, netdev->addr_len);
- memcpy(netdev->perm_addr, adapter->hw.mac.addr, netdev->addr_len);
+ ether_addr_copy(netdev->dev_addr, adapter->hw.mac.addr);
+ ether_addr_copy(netdev->perm_addr, adapter->hw.mac.addr);
 
  INIT_LIST_HEAD(&adapter->mac_filter_list);
  INIT_LIST_HEAD(&adapter->vlan_filter_list);
@@ -2068,7 +2067,7 @@ static void i40evf_init_task(struct work_struct *work)
  if (NULL == f)
   goto err_sw_init;
 
- memcpy(f->macaddr, adapter->hw.mac.addr, ETH_ALEN);
+ ether_addr_copy(f->macaddr, adapter->hw.mac.addr);
  f->add = true;
  adapter->aq_required |= I40EVF_FLAG_AQ_ADD_MAC_FILTER;
 
diff --git a/drivers/net/ethernet/intel/i40evf/i40evf_virtchnl.c b/drivers/net/ethernet/intel/i40evf/i40evf_virtchnl.c
index 6d76f29..2dc0bac 100644
--- a/drivers/net/ethernet/intel/i40evf/i40evf_virtchnl.c
+++ b/drivers/net/ethernet/intel/i40evf/i40evf_virtchnl.c
@@ -407,7 +407,7 @@ void i40evf_add_ether_addrs(struct i40evf_adapter *adapter)
  veal->num_elements = count;
  list_for_each_entry(f, &adapter->mac_filter_list, list) {
   if (f->add) {
-   memcpy(veal->list[i].addr, f->macaddr, ETH_ALEN);
+   ether_addr_copy(veal->list[i].addr, f->macaddr);
    i++;
    f->add = false;
   }
@@ -468,7 +468,7 @@ void i40evf_del_ether_addrs(struct i40evf_adapter *adapter)
  veal->num_elements = count;
  list_for_each_entry_safe(f, ftmp, &adapter->mac_filter_list, list) {
   if (f->remove) {
-   memcpy(veal->list[i].addr, f->macaddr, ETH_ALEN);
+   ether_addr_copy(veal->list[i].addr, f->macaddr);
    i++;
    list_del(&f->list);
    kfree(f);
-- 
1.7.1