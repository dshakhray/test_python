From 661c7e3cd55aaa7d62bb83cadfdd8a95f35c9333 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 01:48:53 -0400
Subject: [iommu] vt-d: Pass iommu to domain_context_mapping_one() and iommu_support_dev_iotlb()

Message-id: <20140905014853.31297.49562.stgit@gir.stowe>
Patchwork-id: 91324
O-Subject: [RHEL7.1 PATCH 31/65] iommu/vt-d: Pass iommu to domain_context_mapping_one() and iommu_support_dev_iotlb()
Bugzilla: 1129880 1087643
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1087643
Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1129880
Upstream Status: 64ae892bfee37c0f982710363c39474218028e33

commit 64ae892bfee37c0f982710363c39474218028e33
Author: David Woodhouse <David.Woodhouse@intel.com>
Date:   Sun Mar 9 12:52:30 2014 -0700

    iommu/vt-d: Pass iommu to domain_context_mapping_one() and iommu_support_dev_iotlb()

    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c
index dc84147..1c43a7b 100644
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@ -1240,13 +1240,13 @@ static void __iommu_flush_iotlb(struct intel_iommu *iommu, u16 did,
    (unsigned long long)DMA_TLB_IAIG(val));
 }
 
-static struct device_domain_info *iommu_support_dev_iotlb(
- struct dmar_domain *domain, int segment, u8 bus, u8 devfn)
+static struct device_domain_info *
+iommu_support_dev_iotlb (struct dmar_domain *domain, struct intel_iommu *iommu,
+    u8 bus, u8 devfn)
 {
  int found = 0;
  unsigned long flags;
  struct device_domain_info *info;
- struct intel_iommu *iommu = device_to_iommu(segment, bus, devfn);
  struct pci_dev *pdev;
 
  if (!ecap_dev_iotlb_support(iommu->ecap))
@@ -1700,12 +1700,12 @@ static void domain_exit(struct dmar_domain *domain)
  free_domain_mem(domain);
 }
 
-static int domain_context_mapping_one(struct dmar_domain *domain, int segment,
-     u8 bus, u8 devfn, int translation)
+static int domain_context_mapping_one(struct dmar_domain *domain,
+          struct intel_iommu *iommu,
+          u8 bus, u8 devfn, int translation)
 {
  struct context_entry *context;
  unsigned long flags;
- struct intel_iommu *iommu;
  struct dma_pte *pgd;
  unsigned long num;
  unsigned long ndomains;
@@ -1720,10 +1720,6 @@ static int domain_context_mapping_one(struct dmar_domain *domain, int segment,
  BUG_ON(translation != CONTEXT_TT_PASS_THROUGH &&
         translation != CONTEXT_TT_MULTI_LEVEL);
 
- iommu = device_to_iommu(segment, bus, devfn);
- if (!iommu)
-  return -ENODEV;
-
  context = device_to_context_entry(iommu, bus, devfn);
  if (!context)
   return -ENOMEM;
@@ -1781,7 +1777,7 @@ static int domain_context_mapping_one(struct dmar_domain *domain, int segment,
  context_set_domain_id(context, id);
 
  if (translation != CONTEXT_TT_PASS_THROUGH) {
-  info = iommu_support_dev_iotlb(domain, segment, bus, devfn);
+  info = iommu_support_dev_iotlb(domain, iommu, bus, devfn);
   translation = info ? CONTEXT_TT_DEV_IOTLB :
          CONTEXT_TT_MULTI_LEVEL;
  }
@@ -1836,8 +1832,14 @@ domain_context_mapping(struct dmar_domain *domain, struct pci_dev *pdev,
 {
  int ret;
  struct pci_dev *tmp, *parent;
+ struct intel_iommu *iommu;
+
+ iommu = device_to_iommu(pci_domain_nr(pdev->bus), pdev->bus->number,
+    pdev->devfn);
+ if (!iommu)
+  return -ENODEV;
 
- ret = domain_context_mapping_one(domain, pci_domain_nr(pdev->bus),
+ ret = domain_context_mapping_one(domain, iommu,
       pdev->bus->number, pdev->devfn,
       translation);
  if (ret)
@@ -1850,8 +1852,7 @@ domain_context_mapping(struct dmar_domain *domain, struct pci_dev *pdev,
  /* Secondary interface's bus number and devfn 0 */
  parent = pdev->bus->self;
  while (parent != tmp) {
-  ret = domain_context_mapping_one(domain,
-       pci_domain_nr(parent->bus),
+  ret = domain_context_mapping_one(domain, iommu,
        parent->bus->number,
        parent->devfn, translation);
   if (ret)
@@ -1859,13 +1860,11 @@ domain_context_mapping(struct dmar_domain *domain, struct pci_dev *pdev,
   parent = parent->bus->self;
  }
  if (pci_is_pcie(tmp)) /* this is a PCIe-to-PCI bridge */
-  return domain_context_mapping_one(domain,
-     pci_domain_nr(tmp->subordinate),
+  return domain_context_mapping_one(domain, iommu,
      tmp->subordinate->number, 0,
      translation);
  else /* this is a legacy PCI bridge */
-  return domain_context_mapping_one(domain,
-        pci_domain_nr(tmp->bus),
+  return domain_context_mapping_one(domain, iommu,
         tmp->bus->number,
         tmp->devfn,
         translation);
-- 
1.7.1