From ac330aecc3bbdbf72fc82e81d47df695966e8c55 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:04:24 -0400
Subject: [kernel] perf: Ensure consistent inherit state in groups

Message-id: <1410181752-25631-20-git-send-email-jolsa@redhat.com>
Patchwork-id: 91693
O-Subject: [PATCH RHEL7.1 BZ1134356 019/307] perf: Ensure consistent inherit state in groups
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit 1f4ee5038f0c1ef95f8e6d47ad6623e006b5bce1
Author: Peter Zijlstra <peterz@infradead.org>
Date: Tue May 6 09:59:34 2014 +0200

description
===========
Make sure all events in a group have the same inherit state. It was
possible for group leaders to have inherit set while sibling events
would not have inherit set.

In this case we'd still inherit the siblings, leading to some
non-fatal weirdness.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/kernel/events/core.c b/kernel/events/core.c
index 781cc5b..2e9df23 100644
--- a/kernel/events/core.c
+++ b/kernel/events/core.c
@@ -7097,20 +7097,26 @@ SYSCALL_DEFINE5(perf_event_open,
   }
  }
 
+ if (task && group_leader &&
+     group_leader->attr.inherit != attr.inherit) {
+  err = -EINVAL;
+  goto err_task;
+ }
+
  get_online_cpus();
 
  event = perf_event_alloc(&attr, cpu, task, group_leader, NULL,
      NULL, NULL);
  if (IS_ERR(event)) {
   err = PTR_ERR(event);
-  goto err_task;
+  goto err_cpus;
  }
 
  if (flags & PERF_FLAG_PID_CGROUP) {
   err = perf_cgroup_connect(pid, event, &attr, group_leader);
   if (err) {
    __free_event(event);
-   goto err_task;
+   goto err_cpus;
   }
  }
 
@@ -7272,8 +7278,9 @@ err_context:
  put_ctx(ctx);
 err_alloc:
  free_event(event);
-err_task:
+err_cpus:
  put_online_cpus();
+err_task:
  if (task)
   put_task_struct(task);
 err_group_fd:
-- 
1.7.1