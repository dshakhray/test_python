From 5ac55913eb49e020cd4d5eaa935b9f8881ef32c1 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:07:05 -0400
Subject: [tools] perf: Handle EINTR error for readn/writen

Message-id: <1410181752-25631-181-git-send-email-jolsa@redhat.com>
Patchwork-id: 91810
O-Subject: [PATCH RHEL7.1 BZ1134356 180/307] perf tools: Handle EINTR error for readn/writen
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit e148c76083dc06ce618d768c0bee0a0edda96a54
Author: Namhyung Kim <namhyung@kernel.org>
Date: Thu Apr 24 22:27:32 2014 +0900

description
===========
Those readn/writen functions are to ensure read/write does I/O for
a given size exactly.  But ion() - its implementation - does not
handle in case it returns prematurely due to a signal.  As it's not
an error itself so just retry the operation.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/util.c b/tools/perf/util/util.c
index 9f66549..7fff6be 100644
--- a/tools/perf/util/util.c
+++ b/tools/perf/util/util.c
@@ -166,6 +166,8 @@ static ssize_t ion(bool is_read, int fd, void *buf, size_t n)
   ssize_t ret = is_read ? read(fd, buf, left) :
      write(fd, buf, left);
 
+  if (ret < 0 && errno == EINTR)
+   continue;
   if (ret <= 0)
    return ret;
 
-- 
1.7.1