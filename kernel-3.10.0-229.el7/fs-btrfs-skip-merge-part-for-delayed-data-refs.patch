From 85b8e573e32007167e540ec21e7eefabb949811e Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 18:58:14 -0400
Subject: [fs] btrfs: skip merge part for delayed data refs

Message-id: <1407179109-13714-8-git-send-email-sandeen@redhat.com>
Patchwork-id: 86961
O-Subject: [RHEL7.1 PATCH 007/422] Btrfs: skip merge part for delayed data refs
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Liu Bo <bo.li.liu@oracle.com>

commit 9e5ac13acbb9e806a54f131432501bf462248c35
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Mon Oct 14 12:59:43 2013 +0800

    Btrfs: skip merge part for delayed data refs

    When we have data deduplication on, we'll hang on the merge part
    because it needs to verify every queued delayed data refs related to
    this disk offset but we may have millions refs.

    And in the case of delayed data refs, we don't usually have too much
    data refs to merge.

    So it's safe to shut it down for data refs.

    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Signed-off-by: Josef Bacik <jbacik@fusionio.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/delayed-ref.c b/fs/btrfs/delayed-ref.c
index 9bbac6d..fab60c1 100644
--- a/fs/btrfs/delayed-ref.c
+++ b/fs/btrfs/delayed-ref.c
@@ -352,6 +352,13 @@ void btrfs_merge_delayed_refs(struct btrfs_trans_handle *trans,
  struct rb_node *node;
  u64 seq = 0;
 
+ /*
+  * We don't have too much refs to merge in the case of delayed data
+  * refs.
+  */
+ if (head->is_data)
+  return;
+
  spin_lock(&fs_info->tree_mod_seq_lock);
  if (!list_empty(&fs_info->tree_mod_seq_list)) {
   struct seq_list *elem;
-- 
1.7.1