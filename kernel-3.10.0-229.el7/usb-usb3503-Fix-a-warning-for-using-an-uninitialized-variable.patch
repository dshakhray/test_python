From 6d1889a888c95f694fb29295104904c48d936ac0 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Thu, 2 Oct 2014 18:03:48 -0400
Subject: [usb] usb3503: Fix a warning for using an uninitialized variable

Message-id: <1412273028-93134-1-git-send-email-dzickus@redhat.com>
Patchwork-id: 96887
O-Subject: [RHEL7 PATCH] usb, misc: Fix a warning for using an uninitialized variable
Bugzilla: 1148954
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Kyle McMartin <kmcmarti@redhat.com>
RH-Acked-by: Jarod Wilson <jarod@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

Compiled: Locally and Jarod compiled it in Brew
Tested:  don't have hardware
Upstream: http://www.spinics.net/lists/linux-usb/msg114797.html

For some reason Brew changed its behaviour and my recently committed usb
patchset is failing now on a warn turned error.  I quickly fixed this and
pushed it upstream yesterday.  No response so far.

Sadly Jarod is blocked on this unless he reverts my whole usb patchset or
chunks of it. :-/

Recently our build environment changed and started turning some warnings into
errors.  One of the fallouts is this warning:

  CC [M]  drivers/usb/misc/usb3503.o
drivers/usb/misc/usb3503.c: In function 'usb3503_probe':
drivers/usb/misc/usb3503.c:195: warning: 'err' may be used uninitialized in this function

Fixed it by using the proper error.  Compiled only as I don't have the hardware
to test correctly.

Signed-off-by: Don Zickus <dzickus@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/misc/usb3503.c b/drivers/usb/misc/usb3503.c
index 750a5a1..6fbe9f7 100644
--- a/drivers/usb/misc/usb3503.c
+++ b/drivers/usb/misc/usb3503.c
@@ -192,7 +192,8 @@ static int usb3503_probe(struct usb3503 *hub)
 
   clk = devm_clk_get(dev, "refclk");
   if (IS_ERR(clk) && PTR_ERR(clk) != -ENOENT) {
-   dev_err(dev, "unable to request refclk (%d)\n", err);
+   dev_err(dev, "unable to request refclk (%ld)\n",
+     PTR_ERR(clk));
    return PTR_ERR(clk);
   }
 
-- 
1.7.1