From 29f4ba399ec0638c93418ea5a273c773b23826f5 Mon Sep 17 00:00:00 2001
From: Vivek Goyal <vgoyal@redhat.com>
Date: Fri, 5 Sep 2014 18:55:57 -0400
Subject: [kernel] kexec: make kexec_segment user buffer pointer a union

Message-id: <1409943373-12669-23-git-send-email-vgoyal@redhat.com>
Patchwork-id: 91535
O-Subject: [RHEL7.1 PATCH 22/38] kexec: make kexec_segment user buffer pointer a union
Bugzilla: 852066
RH-Acked-by: Dave Anderson <anderson@redhat.com>
RH-Acked-by: Baoquan He <bhe@redhat.com>
RH-Acked-by: Dave Young <dyoung@redhat.com>
RH-Acked-by: Chao WANG <chaowang@redhat.com>

BZ:852066

commit 815d5704a337a662bf960757edbff7a0680d40fd
Author: Vivek Goyal <vgoyal@redhat.com>
Date: Fri, 8 Aug 2014 14:25:52 -0700

So far kexec_segment->buf was always a user space pointer as user space
passed the array of kexec_segment structures and kernel copied it.

But with new system call, list of kexec segments will be prepared by
kernel and kexec_segment->buf will point to a kernel memory.

So while I was adding code where I made assumption that ->buf is pointing
to kernel memory, sparse started giving warning.

Make ->buf a union.  And where a user space pointer is expected, access it
using ->buf and where a kernel space pointer is expected, access it using
->kbuf.  That takes care of sparse warnings.

Signed-off-by: Vivek Goyal <vgoyal@redhat.com>
Cc: Borislav Petkov <bp@suse.de>
Cc: Michael Kerrisk <mtk.manpages@gmail.com>
Cc: Yinghai Lu <yinghai@kernel.org>
Cc: Eric Biederman <ebiederm@xmission.com>
Cc: H. Peter Anvin <hpa@zytor.com>
Cc: Matthew Garrett <mjg59@srcf.ucam.org>
Cc: Greg Kroah-Hartman <greg@kroah.com>
Cc: Dave Young <dyoung@redhat.com>
Cc: WANG Chao <chaowang@redhat.com>
Cc: Baoquan He <bhe@redhat.com>
Cc: Andy Lutomirski <luto@amacapital.net>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/linux/kexec.h b/include/linux/kexec.h
index d9bb0a5..66d56ac 100644
--- a/include/linux/kexec.h
+++ b/include/linux/kexec.h
@@ -69,7 +69,18 @@ typedef unsigned long kimage_entry_t;
 #define IND_SOURCE       0x8
 
 struct kexec_segment {
- void __user *buf;
+ /*
+  * This pointer can point to user memory if kexec_load() system
+  * call is used or will point to kernel memory if
+  * kexec_file_load() system call is used.
+  *
+  * Use ->buf when expecting to deal with user memory and use ->kbuf
+  * when expecting to deal with kernel memory.
+  */
+ union {
+  void __user *buf;
+  void *kbuf;
+ };
  size_t bufsz;
  unsigned long mem;
  size_t memsz;
-- 
1.7.1