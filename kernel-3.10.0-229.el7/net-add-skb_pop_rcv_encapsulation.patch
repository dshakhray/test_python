From 4687b8f94ce62d63ab95d044ec253e9f472d6325 Mon Sep 17 00:00:00 2001
From: Florian Westphal <fwestpha@redhat.com>
Date: Tue, 2 Sep 2014 10:15:00 -0400
Subject: [net] add skb_pop_rcv_encapsulation

Message-id: <1409652920-431-38-git-send-email-fwestpha@redhat.com>
Patchwork-id: 90175
O-Subject: [PATCH 37/57] [RHEL7.1 net] net: add skb_pop_rcv_encapsulation
Bugzilla: 1131999
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: Vlad Yasevich <vyasevic@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>
RH-Acked-by: Jiri Benc <jbenc@redhat.com>

commit e5eb4e30a51236079fb22bb9f75fcd31915b03c6
Author: Tom Herbert <therbert@google.com>
Date:   Sat Jun 14 23:24:28 2014 -0700

    net: add skb_pop_rcv_encapsulation

    This function is used by UDP encapsulation protocols in RX when
    crossing encapsulation boundary. If ip_summed is set to
    CHECKSUM_UNNECESSARY and encapsulation is not set, change to
    CHECKSUM_NONE since the checksum has not been validated within the
    encapsulation. Clears csum_valid by the same rationale.

    Signed-off-by: Tom Herbert <therbert@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
index 7a93934..a1bfcc9 100644
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -1780,6 +1780,18 @@ static inline int pskb_network_may_pull(struct sk_buff *skb, unsigned int len)
  return pskb_may_pull(skb, skb_network_offset(skb) + len);
 }
 
+static inline void skb_pop_rcv_encapsulation(struct sk_buff *skb)
+{
+ /* Only continue with checksum unnecessary if device indicated
+  * it is valid across encapsulation (skb->encapsulation was set).
+  */
+ if (skb->ip_summed == CHECKSUM_UNNECESSARY && !skb->encapsulation)
+  skb->ip_summed = CHECKSUM_NONE;
+
+ skb->encapsulation = 0;
+ skb->csum_valid = 0;
+}
+
 /*
  * CPUs often take a performance hit when accessing unaligned memory
  * locations. The actual performance hit varies, it can be small if the
-- 
1.7.1