From e3b7a438341bcd8b6a9361c3f5534dc36ca4544e Mon Sep 17 00:00:00 2001
From: Stefan Assmann <sassmann@redhat.com>
Date: Tue, 2 Sep 2014 14:38:16 -0400
Subject: [ethernet] enic: Use pci_enable_msix_range() instead of pci_enable_msix()

Message-id: <1409668716-4814-5-git-send-email-sassmann@redhat.com>
Patchwork-id: 90631
O-Subject: [RHEL7.1 PATCH 04/24] enic: Use pci_enable_msix_range() instead of pci_enable_msix()
Bugzilla: 1107934
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

From: Alexander Gordeev <agordeev@redhat.com>

As result of deprecation of MSI-X/MSI enablement functions
pci_enable_msix() and pci_enable_msi_block() all drivers
using these two interfaces need to be updated to use the
new pci_enable_msi_range() and pci_enable_msix_range()
interfaces.

Signed-off-by: Alexander Gordeev <agordeev@redhat.com>
Cc: Christian Benvenuti <benve@cisco.com>
Cc: Sujith Sankar <ssujith@cisco.com>
Cc: Govindarajulu Varadarajan <govindarajulu90@gmail.com>
Cc: Neel Patel <neepatel@cisco.com>
Cc: netdev@vger.kernel.org
Cc: linux-pci@vger.kernel.org
Acked-by: Govindarajulu Varadarajan <govindarajulu90@gmail.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Stefan Assmann <sassmann@redhat.com>
(cherry picked from commit abbb6a373ad9bf3a169135cb09494af35f02dbd9)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/cisco/enic/enic_main.c b/drivers/net/ethernet/cisco/enic/enic_main.c
index b740bfc..dcd58f2 100644
--- a/drivers/net/ethernet/cisco/enic/enic_main.c
+++ b/drivers/net/ethernet/cisco/enic/enic_main.c
@@ -1796,7 +1796,8 @@ static int enic_set_intr_mode(struct enic *enic)
      enic->cq_count >= n + m &&
      enic->intr_count >= n + m + 2) {
 
-  if (!pci_enable_msix(enic->pdev, enic->msix_entry, n + m + 2)) {
+  if (pci_enable_msix_range(enic->pdev, enic->msix_entry,
+       n + m + 2, n + m + 2) > 0) {
 
    enic->rq_count = n;
    enic->wq_count = m;
@@ -1815,7 +1816,8 @@ static int enic_set_intr_mode(struct enic *enic)
      enic->wq_count >= m &&
      enic->cq_count >= 1 + m &&
      enic->intr_count >= 1 + m + 2) {
-  if (!pci_enable_msix(enic->pdev, enic->msix_entry, 1 + m + 2)) {
+  if (pci_enable_msix_range(enic->pdev, enic->msix_entry,
+       1 + m + 2, 1 + m + 2) > 0) {
 
    enic->rq_count = 1;
    enic->wq_count = m;
-- 
1.7.1