From 3f9a4a747559afe4402de4c5916129bb0636382d Mon Sep 17 00:00:00 2001
From: Marcelo Leitner <mleitner@redhat.com>
Date: Tue, 21 Oct 2014 16:18:38 -0400
Subject: [net] netfilter: nf_tables: release objects in reverse order in the abort path

Message-id: <20141021161838.22888.38378.stgit@localhost.localdomain>
Patchwork-id: 97960
O-Subject: [RHEL7 net PATCH 064/124] netfilter: nf_tables: release objects in reverse order in the abort path
Bugzilla: 1148041 1155088
RH-Acked-by: Florian Westphal <fwestpha@redhat.com>

Backport of upstream commit: a1cee076f4d4774504c62e0f1846a11a6fcb6be3

 commit a1cee076f4d4774504c62e0f1846a11a6fcb6be3
 Author: Pablo Neira Ayuso <pablo@netfilter.org>
 Date:   Fri May 23 11:09:42 2014 +0200

    netfilter: nf_tables: release objects in reverse order in the abort path

    The patch c7c32e7 ("netfilter: nf_tables: defer all object release via
    rcu") indicates that we always release deleted objects in the reverse
    order, but that is only needed in the abort path. These are the two
    possible scenarios when releasing objects:

    1) Deletion scenario in the commit path: no need to release objects in
    the reverse order since userspace already ensures that dependencies are
    fulfilled), ie. userspace tells us to delete rule -> ... -> rule ->
    chain -> table. In this case, we have to release the objects in the
    *same order* as userspace provided.

    2) Deletion scenario in the abort path: we have to iterate in the reverse
    order to undo what it cannot be added, ie. userspace sent us a batch
    that includes: table -> chain -> rule -> ... -> rule, and that needs to
    be partially undone. In this case, we have to release objects in the
    reverse order to ensure that the set and chain objects point to valid
    rule and table objects.

    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

Signed-off-by: Marcelo Ricardo Leitner <mleitner@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/netfilter/nf_tables_api.c b/net/netfilter/nf_tables_api.c
index 9365531..4fffa36 100644
--- a/net/netfilter/nf_tables_api.c
+++ b/net/netfilter/nf_tables_api.c
@@ -3527,7 +3527,8 @@ static int nf_tables_abort(struct sk_buff *skb)
   }
  }
 
- list_for_each_entry_safe(trans, next, &net->nft.commit_list, list) {
+ list_for_each_entry_safe_reverse(trans, next,
+      &net->nft.commit_list, list) {
   list_del(&trans->list);
   trans->ctx.nla = NULL;
   call_rcu(&trans->rcu_head, nf_tables_abort_release_rcu);
-- 
1.7.1