From 2f2ca2398f5f17ef228831dd6db59a7f5b0d24cc Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <jkysela@redhat.com>
Date: Wed, 3 Sep 2014 07:27:46 -0400
Subject: [alsa] echoaudio: use after free on error

Message-id: <140972823573-230-patchset-jkysela@redhat.com>
Patchwork-id: 90930
O-Subject: [RHEL 7.1 PATCH 229/442] ALSA: echoaudio: use after free on error
Bugzilla: 1112200
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>

There are some places where we dereference "chip" in the error message
but we've already freed it.

Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
Signed-off-by: Takashi Iwai <tiwai@suse.de>

(picked from kernel: 4f50b41fa3deb541364462f3014e0b9d09b91f75)
rhbz#1112200
Signed-off-by: Jaroslav Kysela <jkysela@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/sound/pci/echoaudio/echoaudio.c b/sound/pci/echoaudio/echoaudio.c
index 166ec0c..9f10c9e 100644
--- a/sound/pci/echoaudio/echoaudio.c
+++ b/sound/pci/echoaudio/echoaudio.c
@@ -1990,8 +1990,8 @@ static int snd_echo_create(struct snd_card *card,
 
  if ((chip->iores = request_mem_region(chip->dsp_registers_phys, sz,
            ECHOCARD_NAME)) == NULL) {
-  snd_echo_free(chip);
   dev_err(chip->card->dev, "cannot get memory region\n");
+  snd_echo_free(chip);
   return -EBUSY;
  }
  chip->dsp_registers = (volatile u32 __iomem *)
@@ -1999,8 +1999,8 @@ static int snd_echo_create(struct snd_card *card,
 
  if (request_irq(pci->irq, snd_echo_interrupt, IRQF_SHARED,
    KBUILD_MODNAME, chip)) {
-  snd_echo_free(chip);
   dev_err(chip->card->dev, "cannot grab irq\n");
+  snd_echo_free(chip);
   return -EBUSY;
  }
  chip->irq = pci->irq;
@@ -2012,8 +2012,8 @@ static int snd_echo_create(struct snd_card *card,
  if (snd_dma_alloc_pages(SNDRV_DMA_TYPE_DEV, snd_dma_pci_data(chip->pci),
     sizeof(struct comm_page),
     &chip->commpage_dma_buf) < 0) {
-  snd_echo_free(chip);
   dev_err(chip->card->dev, "cannot allocate the comm page\n");
+  snd_echo_free(chip);
   return -ENOMEM;
  }
  chip->comm_page_phys = chip->commpage_dma_buf.addr;
@@ -2291,8 +2291,8 @@ static int snd_echo_resume(struct device *dev)
 
  if (request_irq(pci->irq, snd_echo_interrupt, IRQF_SHARED,
    KBUILD_MODNAME, chip)) {
-  snd_echo_free(chip);
   dev_err(chip->card->dev, "cannot grab irq\n");
+  snd_echo_free(chip);
   return -EBUSY;
  }
  chip->irq = pci->irq;
-- 
1.7.1