From 98777f6834cf5e84c4e8e013a476a99e97be3454 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Sat, 19 Jul 2014 04:29:52 -0400
Subject: [pci] Check parent kobject in pci_destroy_dev()

Message-id: <20140719042952.19438.76459.stgit@gir.stowe>
Patchwork-id: 86030
O-Subject: [RHEL7.1 PATCH 68/81] PCI: Check parent kobject in pci_destroy_dev()
Bugzilla: 1110895
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110895
Upstream Status: 8a4c5c329de716996eea03d93753ccbb5406072b

commit 8a4c5c329de716996eea03d93753ccbb5406072b
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Jan 14 12:04:51 2014 -0700

    PCI: Check parent kobject in pci_destroy_dev()

    If pci_stop_and_remove_bus_device() is run concurrently for a device and
    its parent bridge via remove_callback(), both code paths attempt to acquire
    pci_rescan_remove_lock.  If the child device removal acquires it first,
    there will be no problems.  However, if the parent bridge removal acquires
    it first, it will eventually execute pci_destroy_dev() for the child
    device, but that device object will not be freed yet due to the reference
    held by the concurrent child removal.  Consequently, both
    pci_stop_bus_device() and pci_remove_bus_device() will be executed for that
    device unnecessarily and pci_destroy_dev() will see a corrupted list head
    in that object.  Moreover, an excess put_device() will be executed for that
    device in that case which may lead to a use-after-free in the final
    kobject_put() done by sysfs_schedule_callback_work().

    To avoid that problem, make pci_destroy_dev() check if the device's parent
    kobject is NULL, which only happens after device_del() has already run for
    it.  Make pci_destroy_dev() return immediately whithout doing anything in
    that case.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/remove.c b/drivers/pci/remove.c
index 10fa13f..4ff36bf 100644
--- a/drivers/pci/remove.c
+++ b/drivers/pci/remove.c
@@ -20,6 +20,9 @@ static void pci_stop_dev(struct pci_dev *dev)
 
 static void pci_destroy_dev(struct pci_dev *dev)
 {
+ if (!dev->dev.kobj.parent)
+  return;
+
  device_del(&dev->dev);
 
  put_device(&dev->dev);
-- 
1.7.1