From 25cbc206722e826b16dd469ff29063bd55d786c6 Mon Sep 17 00:00:00 2001
From: Ivan Vecera <ivecera@redhat.com>
Date: Mon, 8 Sep 2014 16:13:54 -0400
Subject: [ethernet] be2net: use MCCQ instead of MBOX in be_cmd_rss_config()

Message-id: <1410192881-30702-32-git-send-email-ivecera@redhat.com>
Patchwork-id: 92446
O-Subject: [RHEL7.1 PATCH 31/78] be2net: use MCCQ instead of MBOX in be_cmd_rss_config()
Bugzilla: 1088575
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>

BZ: #1088575

Upstream commit(s):
commit b51aa36725909369c7c0c8e4dcb697efb2d31265
Author: Kalesh AP <kalesh.purayil@emulex.com>
Date:   Fri May 9 13:29:19 2014 +0530

    be2net: use MCCQ instead of MBOX in be_cmd_rss_config()

    be_cmd_rss_config() is called after the MCCQ is created; so this cmd is
    now modified to use the MCCQ instead of MBOX. Also fixed some indentation
    problem in this routine.

    Signed-off-by: Kalesh AP <kalesh.purayil@emulex.com>
    Signed-off-by: Sathya Perla <sathya.perla@emulex.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Ivan Vecera <ivecera@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/emulex/benet/be_cmds.c b/drivers/net/ethernet/emulex/benet/be_cmds.c
index 91d44c8..7b59da2 100644
--- a/drivers/net/ethernet/emulex/benet/be_cmds.c
+++ b/drivers/net/ethernet/emulex/benet/be_cmds.c
@@ -2042,10 +2042,13 @@ int be_cmd_rss_config(struct be_adapter *adapter, u8 *rsstable,
  if (!(be_if_cap_flags(adapter) & BE_IF_FLAGS_RSS))
   return 0;
 
- if (mutex_lock_interruptible(&adapter->mbox_lock))
-  return -1;
+ spin_lock_bh(&adapter->mcc_lock);
 
- wrb = wrb_from_mbox(adapter);
+ wrb = wrb_from_mccq(adapter);
+ if (!wrb) {
+  status = -EBUSY;
+  goto err;
+ }
  req = embedded_payload(wrb);
 
  be_wrb_cmd_hdr_prepare(&req->hdr, CMD_SUBSYSTEM_ETH,
@@ -2055,16 +2058,16 @@ int be_cmd_rss_config(struct be_adapter *adapter, u8 *rsstable,
  req->enable_rss = cpu_to_le16(rss_hash_opts);
  req->cpu_table_size_log2 = cpu_to_le16(fls(table_size) - 1);
 
- if (lancer_chip(adapter) || skyhawk_chip(adapter))
+ if (!BEx_chip(adapter))
   req->hdr.version = 1;
 
  memcpy(req->cpu_table, rsstable, table_size);
  memcpy(req->hash, rss_hkey, RSS_HASH_KEY_LEN);
  be_dws_cpu_to_le(req->hash, sizeof(req->hash));
 
- status = be_mbox_notify_wait(adapter);
-
- mutex_unlock(&adapter->mbox_lock);
+ status = be_mcc_notify_wait(adapter);
+err:
+ spin_unlock_bh(&adapter->mcc_lock);
  return status;
 }
 
-- 
1.7.1