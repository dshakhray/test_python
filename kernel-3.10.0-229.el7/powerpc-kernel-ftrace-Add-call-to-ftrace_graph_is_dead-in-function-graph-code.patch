From 464f08d9748d1bd176b37c1ad0972da5049b4944 Mon Sep 17 00:00:00 2001
From: Josh Poimboeuf <jpoimboe@redhat.com>
Date: Thu, 4 Sep 2014 18:54:34 -0400
Subject: [powerpc] kernel/ftrace: Add call to ftrace_graph_is_dead() in function graph code

Message-id: <b668cf9288a03d2aa86a4bb61469f7de30de3c93.1409856554.git.jpoimboe@redhat.com>
Patchwork-id: 91253
O-Subject: [RHEL7.1 PATCH 15/23] powerpc/ftrace: Add call to ftrace_graph_is_dead() in function graph code
Bugzilla: 1113829
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1113829

commit 96d4f43e3d012824f7e61920a340a1c03b6aacb0
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Wed Jun 25 10:27:30 2014 -0400

    powerpc/ftrace: Add call to ftrace_graph_is_dead() in function graph code

    ftrace_stop() is going away as it disables parts of function tracing
    that affects users that should not be affected. But ftrace_graph_stop()
    is built on ftrace_stop(). Here's another example of killing all of
    function tracing because something went wrong with function graph
    tracing.

    Instead of disabling all users of function tracing on function graph
    error, disable only function graph tracing. To do this, the arch code
    must call ftrace_graph_is_dead() before it implements function graph.

    Cc: Anton Blanchard <anton@samba.org>
    Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kernel/ftrace.c b/arch/powerpc/kernel/ftrace.c
index 1fb7856..f8648d5 100644
--- a/arch/powerpc/kernel/ftrace.c
+++ b/arch/powerpc/kernel/ftrace.c
@@ -586,6 +586,9 @@ void prepare_ftrace_return(unsigned long *parent, unsigned long self_addr)
  struct ftrace_graph_ent trace;
  unsigned long return_hooker = (unsigned long)&return_to_handler;
 
+ if (unlikely(ftrace_graph_is_dead()))
+  return;
+
  if (unlikely(atomic_read(&current->tracing_graph_pause)))
   return;
 
-- 
1.7.1