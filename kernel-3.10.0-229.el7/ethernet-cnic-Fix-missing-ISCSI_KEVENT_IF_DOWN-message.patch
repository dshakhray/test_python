From da7e42ef2db9d0642ab4e1f21c78fe1483b49f45 Mon Sep 17 00:00:00 2001
From: Maurizio Lombardi <mlombard@redhat.com>
Date: Mon, 8 Sep 2014 11:07:50 -0400
Subject: [ethernet] cnic: Fix missing ISCSI_KEVENT_IF_DOWN message

Message-id: <1410174472-14981-16-git-send-email-mlombard@redhat.com>
Patchwork-id: 91645
O-Subject: [RHEL7.1 e-stor PATCH 15/17] cnic: Fix missing ISCSI_KEVENT_IF_DOWN message
Bugzilla: 1089401
RH-Acked-by: Ewan Milne <emilne@redhat.com>
RH-Acked-by: Rob Evers <revers@redhat.com>

From: Michael Chan <mchan@broadcom.com>

The iSCSI netlink message needs to be sent before the ulp_ops is cleared
as it is sent through a function pointer in the ulp_ops.  This bug
causes iscsid to not get the message when the bnx2i driver is unloaded.

Signed-off-by: Michael Chan <mchan@broadcom.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5943691442ae248977a2e3cac814ed5ac606903c)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/broadcom/cnic.c b/drivers/net/ethernet/broadcom/cnic.c
index 1b4d895..7467697 100644
--- a/drivers/net/ethernet/broadcom/cnic.c
+++ b/drivers/net/ethernet/broadcom/cnic.c
@@ -608,6 +608,10 @@ static int cnic_unregister_device(struct cnic_dev *dev, int ulp_type)
   pr_err("%s: Bad type %d\n", __func__, ulp_type);
   return -EINVAL;
  }
+
+ if (ulp_type == CNIC_ULP_ISCSI)
+  cnic_send_nlmsg(cp, ISCSI_KEVENT_IF_DOWN, NULL);
+
  mutex_lock(&cnic_lock);
  if (rcu_dereference(cp->ulp_ops[ulp_type])) {
   RCU_INIT_POINTER(cp->ulp_ops[ulp_type], NULL);
@@ -620,9 +624,7 @@ static int cnic_unregister_device(struct cnic_dev *dev, int ulp_type)
  }
  mutex_unlock(&cnic_lock);
 
- if (ulp_type == CNIC_ULP_ISCSI)
-  cnic_send_nlmsg(cp, ISCSI_KEVENT_IF_DOWN, NULL);
- else if (ulp_type == CNIC_ULP_FCOE)
+ if (ulp_type == CNIC_ULP_FCOE)
   dev->fcoe_cap = NULL;
 
  synchronize_rcu();
-- 
1.7.1