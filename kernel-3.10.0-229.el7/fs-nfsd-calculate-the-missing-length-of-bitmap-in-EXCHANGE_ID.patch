From 63d7bd0b31e8064144837b4b26898794c244c0e3 Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Mon, 23 Jun 2014 21:49:23 -0400
Subject: [fs] nfsd: calculate the missing length of bitmap in EXCHANGE_ID

Message-id: <1403560314-32525-22-git-send-email-bfields@redhat.com>
Patchwork-id: 84455
O-Subject: [Patch RHEL7 021/172] nfsd: calculate the missing length of bitmap in EXCHANGE_ID
Bugzilla: 1111719
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Kinglong Mee <kinglongmee@gmail.com>

commit 58cd57bfd9db3bc213bf9d6a10920f82095f0114
"nfsd: Fix SP4_MACH_CRED negotiation in EXCHANGE_ID"
miss calculating the length of bitmap for spo_must_enforce and spo_must_allow.

Signed-off-by: Kinglong Mee <kinglongmee@gmail.com>
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: a8bb84bc9e57ad214024425d480a722f304df9e8
Bugzilla: 1111719
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4proc.c b/fs/nfsd/nfs4proc.c
index 827fa1d..99e7ac5 100644
--- a/fs/nfsd/nfs4proc.c
+++ b/fs/nfsd/nfs4proc.c
@@ -1531,7 +1531,8 @@ static inline u32 nfsd4_write_rsize(struct svc_rqst *rqstp, struct nfsd4_op *op)
 static inline u32 nfsd4_exchange_id_rsize(struct svc_rqst *rqstp, struct nfsd4_op *op)
 {
  return (op_encode_hdr_size + 2 + 1 + /* eir_clientid, eir_sequenceid */\
-  1 + 1 + 2 + /* eir_flags, spr_how, spo_must_enforce & _allow */\
+  1 + 1 + /* eir_flags, spr_how */\
+  4 + /* spo_must_enforce & _allow with bitmap */\
   2 + /*eir_server_owner.so_minor_id */\
   /* eir_server_owner.so_major_id<> */\
   XDR_QUADLEN(NFS4_OPAQUE_LIMIT) + 1 +\
diff --git a/fs/nfsd/nfs4xdr.c b/fs/nfsd/nfs4xdr.c
index 7975413..1dface0 100644
--- a/fs/nfsd/nfs4xdr.c
+++ b/fs/nfsd/nfs4xdr.c
@@ -3398,35 +3398,43 @@ nfsd4_encode_exchange_id(struct nfsd4_compoundres *resp, __be32 nfserr,
   8 /* eir_clientid */ +
   4 /* eir_sequenceid */ +
   4 /* eir_flags */ +
-  4 /* spr_how */ +
-  8 /* spo_must_enforce, spo_must_allow */ +
-  8 /* so_minor_id */ +
-  4 /* so_major_id.len */ +
-  (XDR_QUADLEN(major_id_sz) * 4) +
-  4 /* eir_server_scope.len */ +
-  (XDR_QUADLEN(server_scope_sz) * 4) +
-  4 /* eir_server_impl_id.count (0) */);
+  4 /* spr_how */);
 
  WRITEMEM(&exid->clientid, 8);
  WRITE32(exid->seqid);
  WRITE32(exid->flags);
 
  WRITE32(exid->spa_how);
+ ADJUST_ARGS();
+
  switch (exid->spa_how) {
  case SP4_NONE:
   break;
  case SP4_MACH_CRED:
+  /* spo_must_enforce, spo_must_allow */
+  RESERVE_SPACE(16);
+
   /* spo_must_enforce bitmap: */
   WRITE32(2);
   WRITE32(nfs4_minimal_spo_must_enforce[0]);
   WRITE32(nfs4_minimal_spo_must_enforce[1]);
   /* empty spo_must_allow bitmap: */
   WRITE32(0);
+
+  ADJUST_ARGS();
   break;
  default:
   WARN_ON_ONCE(1);
  }
 
+ RESERVE_SPACE(
+  8 /* so_minor_id */ +
+  4 /* so_major_id.len */ +
+  (XDR_QUADLEN(major_id_sz) * 4) +
+  4 /* eir_server_scope.len */ +
+  (XDR_QUADLEN(server_scope_sz) * 4) +
+  4 /* eir_server_impl_id.count (0) */);
+
  /* The server_owner struct */
  WRITE64(minor_id);      /* Minor id */
  /* major id */
-- 
1.7.1