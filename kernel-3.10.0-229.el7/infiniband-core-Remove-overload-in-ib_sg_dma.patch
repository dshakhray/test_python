From c0bde8841e7aebdd589e96d6b80b78550aab7401 Mon Sep 17 00:00:00 2001
From: Amir Vadai <avadai@redhat.com>
Date: Thu, 11 Sep 2014 11:59:16 -0400
Subject: [infiniband] core: Remove overload in ib_sg_dma*

Message-id: <d74a3b463d7ce405cab02ff5bdd6376eba3b2036.1410425016.git.avadai@redhat.com>
Patchwork-id: 93647
O-Subject: [Patch RHEL7.1 V1 020/197] IB/core: Remove overload in ib_sg_dma*
Bugzilla: 1107617 1107618 1107619 1107620
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

From: Mike Marciniszyn <mike.marciniszyn@intel.com>

The code is replaced by driver specific changes and avoids the pointer
NULL test for drivers that don't overload these operations.

Suggested-by: <Bart Van Assche <bvanassche@acm.org>
Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
Tested-by: Vinod Kumar <vinod.kumar@intel.com>
Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
Signed-off-by: Roland Dreier <roland@purestorage.com>
(cherry picked from commit ea58a595657db88f55b5159442fdf0e34e1b4d95)
Signed-off-by: Amir Vadai <amirv@mellanox.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/rdma/ib_verbs.h b/include/rdma/ib_verbs.h
index 82ab5c1..acd8251 100644
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@ -1412,10 +1412,6 @@ struct ib_dma_mapping_ops {
  void  (*unmap_sg)(struct ib_device *dev,
         struct scatterlist *sg, int nents,
         enum dma_data_direction direction);
- u64  (*dma_address)(struct ib_device *dev,
-           struct scatterlist *sg);
- unsigned int (*dma_len)(struct ib_device *dev,
-       struct scatterlist *sg);
  void  (*sync_single_for_cpu)(struct ib_device *dev,
             u64 dma_handle,
             size_t size,
@@ -2240,12 +2236,13 @@ static inline void ib_dma_unmap_sg_attrs(struct ib_device *dev,
  * ib_sg_dma_address - Return the DMA address from a scatter/gather entry
  * @dev: The device for which the DMA addresses were created
  * @sg: The scatter/gather entry
+ *
+ * Note: this function is obsolete. To do: change all occurrences of
+ * ib_sg_dma_address() into sg_dma_address().
  */
 static inline u64 ib_sg_dma_address(struct ib_device *dev,
         struct scatterlist *sg)
 {
- if (dev->dma_ops)
-  return dev->dma_ops->dma_address(dev, sg);
  return sg_dma_address(sg);
 }
 
@@ -2253,12 +2250,13 @@ static inline u64 ib_sg_dma_address(struct ib_device *dev,
  * ib_sg_dma_len - Return the DMA length from a scatter/gather entry
  * @dev: The device for which the DMA addresses were created
  * @sg: The scatter/gather entry
+ *
+ * Note: this function is obsolete. To do: change all occurrences of
+ * ib_sg_dma_len() into sg_dma_len().
  */
 static inline unsigned int ib_sg_dma_len(struct ib_device *dev,
       struct scatterlist *sg)
 {
- if (dev->dma_ops)
-  return dev->dma_ops->dma_len(dev, sg);
  return sg_dma_len(sg);
 }
 
-- 
1.7.1