From 9388f358b4cfd099673ae6169c7d868a7af5179d Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:13:34 -0400
Subject: [powerpc] ftrace: Fix inverted check of create_branch()

Message-id: <1410545655-205645-586-git-send-email-dzickus@redhat.com>
Patchwork-id: 94576
O-Subject: [RHEL7 PATCH 585/626] powerpc/ftrace: Fix inverted check of create_branch()
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit b7b348c682fac04cade7b860c49d4a17f158dad4
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Jun 17 16:15:34 2014 +1000

    powerpc/ftrace: Fix inverted check of create_branch()

    In commit 24a1bdc35, "Fix ABIv2 issues with __ftrace_make_call", Anton
    changed the logic that creates and patches the branch, and added a
    thinko in the check of create_branch(). create_branch() returns the
    instruction that was generated, so if we get zero then it succeeded.

    The result is we can't ftrace modules:

      Branch out of range
      WARNING: at ../kernel/trace/ftrace.c:1638
      ftrace failed to modify [<d000000004ba001c>] fuse_req_init_context+0x1c/0x90 [fuse]

    We should probably fix patch_instruction() to do that check and make the
    API saner, but that's a separate patch. For now just invert the test.

    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kernel/ftrace.c b/arch/powerpc/kernel/ftrace.c
index 8261f1d..9bbeb0c 100644
--- a/arch/powerpc/kernel/ftrace.c
+++ b/arch/powerpc/kernel/ftrace.c
@@ -320,7 +320,7 @@ __ftrace_make_call(struct dyn_ftrace *rec, unsigned long addr)
  }
 
  /* Ensure branch is within 24 bits */
- if (create_branch(ip, rec->arch.mod->arch.tramp, BRANCH_SET_LINK)) {
+ if (!create_branch(ip, rec->arch.mod->arch.tramp, BRANCH_SET_LINK)) {
   printk(KERN_ERR "Branch out of range");
   return -EINVAL;
  }
-- 
1.7.1