From daa744d2849d54a7af991248b3eec9c9f978ec68 Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:24:59 -0400
Subject: [net] libceph: refer to osdmap directly in osdmap_show()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-193-git-send-email-sweil@redhat.com>
Patchwork-id: 89731
O-Subject: [PATCH 192/303] libceph: refer to osdmap directly in osdmap_show()
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Ilya Dryomov <ilya.dryomov@inktank.com>

To make it more readable and save screen space.

Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>
Reviewed-by: Alex Elder <elder@linaro.org>
(cherry picked from commit 35fea3a18a1df8f981f292b492c2de3a9e4e5fc2)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ceph/debugfs.c b/net/ceph/debugfs.c
index 258a382..d225842 100644
--- a/net/ceph/debugfs.c
+++ b/net/ceph/debugfs.c
@@ -53,34 +53,36 @@ static int osdmap_show(struct seq_file *s, void *p)
 {
  int i;
  struct ceph_client *client = s->private;
+ struct ceph_osdmap *map = client->osdc.osdmap;
  struct rb_node *n;
 
- if (client->osdc.osdmap == NULL)
+ if (map == NULL)
   return 0;
- seq_printf(s, "epoch %d\n", client->osdc.osdmap->epoch);
+
+ seq_printf(s, "epoch %d\n", map->epoch);
  seq_printf(s, "flags%s%s\n",
-     (client->osdc.osdmap->flags & CEPH_OSDMAP_NEARFULL) ?
-     " NEARFULL" : "",
-     (client->osdc.osdmap->flags & CEPH_OSDMAP_FULL) ?
-     " FULL" : "");
- for (n = rb_first(&client->osdc.osdmap->pg_pools); n; n = rb_next(n)) {
+     (map->flags & CEPH_OSDMAP_NEARFULL) ?  " NEARFULL" : "",
+     (map->flags & CEPH_OSDMAP_FULL) ?  " FULL" : "");
+
+ for (n = rb_first(&map->pg_pools); n; n = rb_next(n)) {
   struct ceph_pg_pool_info *pool =
    rb_entry(n, struct ceph_pg_pool_info, node);
+
   seq_printf(s, "pg_pool %llu pg_num %d / %d\n",
       (unsigned long long)pool->id, pool->pg_num,
       pool->pg_num_mask);
  }
- for (i = 0; i < client->osdc.osdmap->max_osd; i++) {
-  struct ceph_entity_addr *addr =
-   &client->osdc.osdmap->osd_addr[i];
-  int state = client->osdc.osdmap->osd_state[i];
+ for (i = 0; i < map->max_osd; i++) {
+  struct ceph_entity_addr *addr = &map->osd_addr[i];
+  int state = map->osd_state[i];
   char sb[64];
 
   seq_printf(s, "\tosd%d\t%s\t%3d%%\t(%s)\n",
       i, ceph_pr_addr(&addr->in_addr),
-      ((client->osdc.osdmap->osd_weight[i]*100) >> 16),
+      ((map->osd_weight[i]*100) >> 16),
       ceph_osdmap_state_str(sb, sizeof(sb), state));
  }
+
  return 0;
 }
 
-- 
1.7.1