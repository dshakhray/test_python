From 265a785edcf21917a54bd6c237c61b9ca79762e9 Mon Sep 17 00:00:00 2001
From: Ivan Vecera <ivecera@redhat.com>
Date: Mon, 8 Sep 2014 16:14:24 -0400
Subject: [ethernet] be2net: Issue shutdown event to ocrdma driver

Message-id: <1410192881-30702-62-git-send-email-ivecera@redhat.com>
Patchwork-id: 92473
O-Subject: [RHEL7.1 PATCH 61/78] be2net: Issue shutdown event to ocrdma driver
Bugzilla: 1088575
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>

BZ: #1088575

Upstream commit(s):
commit d114f99a29b7f9c7a5e001ca1ef9c93db70d8668
Author: Devesh Sharma <devesh.sharma@emulex.com>
Date:   Tue Jun 10 19:32:15 2014 +0530

    be2net: Issue shutdown event to ocrdma driver

    In the shutdown path, when be2net calls pci_disable_msix(), it
    complains (BUG_ON) that irqs requested by ocrdma driver are still in
    use.  This patch fixes this problem by issuing shutdown event to
    ocrdma from be2net shutdown path.  As part of shutdown event
    processing, ocrdma driver will free up all the resources and free
    irqs.  Once this completes be2net completes pci_disable_msix
    successfully.

    Signed-off-by: Devesh Sharma <devesh.sharma@emulex.com>
    Signed-off-by: Selvin Xavier <selvin.xavier@emulex.com>
    Signed-off-by: Roland Dreier <roland@purestorage.com>

Signed-off-by: Ivan Vecera <ivecera@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/emulex/benet/be.h b/drivers/net/ethernet/emulex/benet/be.h
index af39bea..ed37494 100644
--- a/drivers/net/ethernet/emulex/benet/be.h
+++ b/drivers/net/ethernet/emulex/benet/be.h
@@ -894,5 +894,6 @@ void be_roce_dev_remove(struct be_adapter *);
  */
 void be_roce_dev_open(struct be_adapter *);
 void be_roce_dev_close(struct be_adapter *);
+void be_roce_dev_shutdown(struct be_adapter *);
 
 #endif    /* BE_H */
diff --git a/drivers/net/ethernet/emulex/benet/be_main.c b/drivers/net/ethernet/emulex/benet/be_main.c
index fe696d5..eadd852 100644
--- a/drivers/net/ethernet/emulex/benet/be_main.c
+++ b/drivers/net/ethernet/emulex/benet/be_main.c
@@ -4997,6 +4997,7 @@ static void be_shutdown(struct pci_dev *pdev)
  if (!adapter)
   return;
 
+ be_roce_dev_shutdown(adapter);
  cancel_delayed_work_sync(&adapter->work);
  cancel_delayed_work_sync(&adapter->func_recovery_work);
 
diff --git a/drivers/net/ethernet/emulex/benet/be_roce.c b/drivers/net/ethernet/emulex/benet/be_roce.c
index 5bf1660..ef4672d 100644
--- a/drivers/net/ethernet/emulex/benet/be_roce.c
+++ b/drivers/net/ethernet/emulex/benet/be_roce.c
@@ -120,7 +120,8 @@ static void _be_roce_dev_open(struct be_adapter *adapter)
 {
  if (ocrdma_drv && adapter->ocrdma_dev &&
      ocrdma_drv->state_change_handler)
-  ocrdma_drv->state_change_handler(adapter->ocrdma_dev, 0);
+  ocrdma_drv->state_change_handler(adapter->ocrdma_dev,
+       BE_DEV_UP);
 }
 
 void be_roce_dev_open(struct be_adapter *adapter)
@@ -136,7 +137,8 @@ static void _be_roce_dev_close(struct be_adapter *adapter)
 {
  if (ocrdma_drv && adapter->ocrdma_dev &&
      ocrdma_drv->state_change_handler)
-  ocrdma_drv->state_change_handler(adapter->ocrdma_dev, 1);
+  ocrdma_drv->state_change_handler(adapter->ocrdma_dev,
+       BE_DEV_DOWN);
 }
 
 void be_roce_dev_close(struct be_adapter *adapter)
@@ -148,6 +150,18 @@ void be_roce_dev_close(struct be_adapter *adapter)
  }
 }
 
+void be_roce_dev_shutdown(struct be_adapter *adapter)
+{
+ if (be_roce_supported(adapter)) {
+  mutex_lock(&be_adapter_list_lock);
+  if (ocrdma_drv && adapter->ocrdma_dev &&
+      ocrdma_drv->state_change_handler)
+   ocrdma_drv->state_change_handler(adapter->ocrdma_dev,
+        BE_DEV_SHUTDOWN);
+  mutex_unlock(&be_adapter_list_lock);
+ }
+}
+
 int be_roce_register_driver(struct ocrdma_driver *drv)
 {
  struct be_adapter *dev;
diff --git a/drivers/net/ethernet/emulex/benet/be_roce.h b/drivers/net/ethernet/emulex/benet/be_roce.h
index a3d9e96..e6f7eb1 100644
--- a/drivers/net/ethernet/emulex/benet/be_roce.h
+++ b/drivers/net/ethernet/emulex/benet/be_roce.h
@@ -62,7 +62,8 @@ struct ocrdma_driver {
 
 enum {
  BE_DEV_UP = 0,
- BE_DEV_DOWN = 1
+ BE_DEV_DOWN = 1,
+ BE_DEV_SHUTDOWN = 2
 };
 
 /* APIs for RoCE driver to register callback handlers,
-- 
1.7.1