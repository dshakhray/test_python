From 02c367b13be55a10b391ccf7ba7df1a2f1ee7d74 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Fri, 13 Jun 2014 14:36:18 -0400
Subject: [block] blk-mq: do not use blk_mq_alloc_request_pinned in blk_mq_map_request

Message-id: <1402670238-13916-91-git-send-email-snitzer@redhat.com>
Patchwork-id: 83831
O-Subject: [RHEL7.1 PATCH 090/150] blk-mq: do not use blk_mq_alloc_request_pinned in blk_mq_map_request
Bugzilla: 1105204
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Jeff Moyer <jmoyer@redhat.com>

BZ: 1105204

Upstream commit 793597a6a95675f4f85671cf747c1d92e7dbc295
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue May 27 20:59:49 2014 +0200

    blk-mq: do not use blk_mq_alloc_request_pinned in blk_mq_map_request

    We already do a non-blocking allocation in blk_mq_map_request, no need
    to repeat it.  Just call __blk_mq_alloc_request to wait directly.

    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@fb.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/block/blk-mq.c b/block/blk-mq.c
index 3224888..43f0c8f 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -1179,12 +1179,14 @@ static struct request *blk_mq_map_request(struct request_queue *q,
  trace_block_getrq(q, bio, rw);
  rq = __blk_mq_alloc_request(q, hctx, ctx, rw, GFP_ATOMIC, false);
  if (unlikely(!rq)) {
+  __blk_mq_run_hw_queue(hctx);
   blk_mq_put_ctx(ctx);
   trace_block_sleeprq(q, bio, rw);
-  rq = blk_mq_alloc_request_pinned(q, rw, __GFP_WAIT|GFP_ATOMIC,
-       false);
-  ctx = rq->mq_ctx;
+
+  ctx = blk_mq_get_ctx(q);
   hctx = q->mq_ops->map_queue(q, ctx->cpu);
+  rq = __blk_mq_alloc_request(q, hctx, ctx, rw,
+         __GFP_WAIT|GFP_ATOMIC, false);
  }
 
  hctx->queued++;
-- 
1.7.1