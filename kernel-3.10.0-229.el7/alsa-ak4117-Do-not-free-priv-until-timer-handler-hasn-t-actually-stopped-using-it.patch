From 26df553efb2dfd180d1675a71ef668660719b732 Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <jkysela@redhat.com>
Date: Wed, 3 Sep 2014 07:19:51 -0400
Subject: [alsa] ak4117: Do not free priv until timer handler hasn't actually stopped using it

Message-id: <140972823573-121-patchset-jkysela@redhat.com>
Patchwork-id: 90821
O-Subject: [RHEL 7.1 PATCH 120/442] ALSA: ak4117: Do not free priv until timer handler hasn't actually stopped using it
Bugzilla: 1112200
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>

Function del_timer() does not guarantee that timer was really deleted.
If the timer handler is beeing executed at the moment, the function
does nothing. So, it's possible to use already freed memory in the handler:

[ref: Documentation/DocBook/kernel-locking.tmpl]

This was found using grep and compile-tested only.

Signed-off-by: Kirill Tkhai <ktkhai@parallels.com>
Signed-off-by: Takashi Iwai <tiwai@suse.de>

(picked from kernel: 115b94d51a3ee1b7dfffa74f77e20cd11da70b91)
rhbz#1112200
Signed-off-by: Jaroslav Kysela <jkysela@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/sound/i2c/other/ak4117.c b/sound/i2c/other/ak4117.c
index 40e33c9..88452e8 100644
--- a/sound/i2c/other/ak4117.c
+++ b/sound/i2c/other/ak4117.c
@@ -62,7 +62,7 @@ static void reg_dump(struct ak4117 *ak4117)
 
 static void snd_ak4117_free(struct ak4117 *chip)
 {
- del_timer(&chip->timer);
+ del_timer_sync(&chip->timer);
  kfree(chip);
 }
 
-- 
1.7.1