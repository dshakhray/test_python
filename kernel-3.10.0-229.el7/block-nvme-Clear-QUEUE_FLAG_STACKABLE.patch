From b85e26882b8531ba593566abd5ec38052ef683e2 Mon Sep 17 00:00:00 2001
From: David Milburn <dmilburn@redhat.com>
Date: Tue, 28 Oct 2014 20:19:15 -0400
Subject: [block] nvme: Clear QUEUE_FLAG_STACKABLE

Message-id: <1414527555-17848-1-git-send-email-dmilburn@redhat.com>
Patchwork-id: 98493
O-Subject: [RHEL7.1 PATCH] NVMe: Clear QUEUE_FLAG_STACKABLE
Bugzilla: 1155716
RH-Acked-by: Alasdair Kergon <agk@redhat.com>
RH-Acked-by: Jeff Moyer <jmoyer@redhat.com>

Upstream fix from NVMe maintainer's tree to prevent kernel
panic when loading nvme with dm-mpath, verified by Intel.

This resolves BZ 1155716, please review and ACK.

Thanks,
David

git://git.infradead.org/users/willy/linux-nvme.git

    commit 723a0082a308f27ed25b05a57ba42e25dfcd9c5c
    Author: Keith Busch <keith.busch@intel.com>
    Date:   Tue Sep 23 09:18:50 2014 -0600

    NVMe: Clear QUEUE_FLAG_STACKABLE

    The nvme namespace request_queue's flags are initialized to
    QUEUE_FLAG_DEFAULT, which currently sets QUEUE_FLAG_STACKABLE. The
    device-mapper indicates this flag means the block driver is requset
    based, though this driver is bio-based and problems will occur if an nvme
    namespace is used with a request based dm device. This patch clears the
    stackable flag.

    Signed-off-by: Keith Busch <keith.busch@intel.com>
    Signed-off-by: Matthew Wilcox <matthew.r.wilcox@intel.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/block/nvme-core.c b/drivers/block/nvme-core.c
index fd58bc7..6258d7a 100644
--- a/drivers/block/nvme-core.c
+++ b/drivers/block/nvme-core.c
@@ -1996,6 +1996,7 @@ static struct nvme_ns *nvme_alloc_ns(struct nvme_dev *dev, unsigned nsid,
  if (!ns->queue)
   goto out_free_ns;
  ns->queue->queue_flags = QUEUE_FLAG_DEFAULT;
+ queue_flag_clear_unlocked(QUEUE_FLAG_STACKABLE, ns->queue);
  queue_flag_set_unlocked(QUEUE_FLAG_NOMERGES, ns->queue);
  queue_flag_set_unlocked(QUEUE_FLAG_NONROT, ns->queue);
  queue_flag_clear_unlocked(QUEUE_FLAG_ADD_RANDOM, ns->queue);
-- 
1.7.1