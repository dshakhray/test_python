From 05000293919f894ab5e9f3e293cc63f287ad0657 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Wed, 16 Jul 2014 20:42:08 -0400
Subject: [md] dm: stop using bi_private

Message-id: <1405543364-20901-5-git-send-email-snitzer@redhat.com>
Patchwork-id: 85886
O-Subject: [RHEL7.1 PATCH 04/40] dm: stop using bi_private
Bugzilla: 1117872
RH-Acked-by: Mikulas Patocka <mpatocka@redhat.com>
RH-Acked-by: Heinz Mauelshagen <heinzm@redhat.com>

BZ: 1117872

Upstream commit bfc6d41cee53b2d02edc469fa459000a448a90ab
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Mar 4 18:24:49 2014 -0500

    dm: stop using bi_private

    Device mapper uses the bio structure's bi_private field as a pointer
    to dm_target_io or dm_rq_clone_bio_info.  But a bio structure is
    embedded in the dm_target_io and dm_rq_clone_bio_info structures, so the
    pointer to the structure that contains the bio can be found with the
    container_of() macro.

    Remove the use of bi_private and use container_of() instead.

    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/dm.c b/drivers/md/dm.c
index 3f58797..3bc36c0 100644
--- a/drivers/md/dm.c
+++ b/drivers/md/dm.c
@@ -753,7 +753,7 @@ static void dec_pending(struct dm_io *io, int error)
 static void clone_endio(struct bio *bio, int error)
 {
  int r = 0;
- struct dm_target_io *tio = bio->bi_private;
+ struct dm_target_io *tio = container_of(bio, struct dm_target_io, clone);
  struct dm_io *io = tio->io;
  struct mapped_device *md = tio->io->md;
  dm_endio_fn endio = tio->ti->type->end_io;
@@ -787,7 +787,8 @@ static void clone_endio(struct bio *bio, int error)
  */
 static void end_clone_bio(struct bio *clone, int error)
 {
- struct dm_rq_clone_bio_info *info = clone->bi_private;
+ struct dm_rq_clone_bio_info *info =
+  container_of(clone, struct dm_rq_clone_bio_info, clone);
  struct dm_rq_target_io *tio = info->tio;
  struct bio *bio = info->orig;
  unsigned int nr_bytes = info->orig->bi_size;
@@ -1113,7 +1114,6 @@ static void __map_bio(struct dm_target_io *tio)
  struct dm_target *ti = tio->ti;
 
  clone->bi_end_io = clone_endio;
- clone->bi_private = tio;
 
  /*
   * Map the clone.  If r == 0 we don't need to do
@@ -1655,7 +1655,6 @@ static int dm_rq_bio_constructor(struct bio *bio, struct bio *bio_orig,
  info->orig = bio_orig;
  info->tio = tio;
  bio->bi_end_io = end_clone_bio;
- bio->bi_private = info;
 
  return 0;
 }
-- 
1.7.1