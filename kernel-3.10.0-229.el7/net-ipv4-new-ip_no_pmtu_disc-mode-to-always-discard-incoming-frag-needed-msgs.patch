From 826ddfb18f1a02b141e235d6606ce5766aecbcec Mon Sep 17 00:00:00 2001
From: Hannes Frederic Sowa <hannes@redhat.com>
Date: Mon, 8 Dec 2014 17:33:02 -0500
Subject: [net] ipv4: new ip_no_pmtu_disc mode to always discard incoming frag needed msgs

Message-id: <319c8b7c41ff3be0aa2ac9c3c8356f743bca38a1.1418058212.git.hannes@redhat.com>
Patchwork-id: 101180
O-Subject: [RHEL7.1 net 06/13] ipv4: new ip_no_pmtu_disc mode to always discard incoming frag needed msgs
Bugzilla: 1170116
RH-Acked-by: Jiri Benc <jbenc@redhat.com>
RH-Acked-by: Flavio Leitner <fbl@redhat.com>
RH-Acked-by: Daniel Borkmann <dborkman@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1170116
Upstream Status: cd174e67a6b312fce9bab502ba2b0583e11f537f
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=8344420

Upstream Commit:
commit cd174e67a6b312fce9bab502ba2b0583e11f537f
Author: Hannes Frederic Sowa <hannes@stressinduktion.org>
Date:   Sat Dec 14 05:13:45 2013 +0100

    ipv4: new ip_no_pmtu_disc mode to always discard incoming frag needed msgs

    This new mode discards all incoming fragmentation-needed notifications
    as I guess was originally intended with this knob. To not break backward
    compatibility too much, I only added a special case for mode 2 in the
    receiving path.

    Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Hannes Frederic Sowa <hannes@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/Documentation/networking/ip-sysctl.txt b/Documentation/networking/ip-sysctl.txt
index 1b34634..f08639b 100644
--- a/Documentation/networking/ip-sysctl.txt
+++ b/Documentation/networking/ip-sysctl.txt
@@ -15,12 +15,18 @@ ip_default_ttl - INTEGER
  forwarded) IP packets. Should be between 1 and 255 inclusive.
  Default: 64 (as recommended by RFC1700)
 
-ip_no_pmtu_disc - BOOLEAN
- Disable Path MTU Discovery. If enabled and a
+ip_no_pmtu_disc - INTEGER
+ Disable Path MTU Discovery. If enabled in mode 1 and a
  fragmentation-required ICMP is received, the PMTU to this
  destination will be set to min_pmtu (see below). You will need
  to raise min_pmtu to the smallest interface MTU on your system
  manually if you want to avoid locally generated fragments.
+
+ In mode 2 incoming Path MTU Discovery messages will be
+ discarded. Outgoing frames are handled the same as in mode 1,
+ implicitly setting IP_PMTUDISC_DONT on every created socket.
+
+ Possible values: 0-2
  Default: FALSE
 
 min_pmtu - INTEGER
diff --git a/net/ipv4/icmp.c b/net/ipv4/icmp.c
index 463b2b1..f4c7171 100644
--- a/net/ipv4/icmp.c
+++ b/net/ipv4/icmp.c
@@ -698,7 +698,9 @@ static void icmp_unreach(struct sk_buff *skb)
   case ICMP_PORT_UNREACH:
    break;
   case ICMP_FRAG_NEEDED:
-   if (net->sysctl_ip_no_pmtu_disc) {
+   if (net->sysctl_ip_no_pmtu_disc == 2) {
+    goto out;
+   } else if (net->sysctl_ip_no_pmtu_disc) {
     LIMIT_NETDEBUG(KERN_INFO pr_fmt("%pI4: fragmentation needed and DF set\n"),
             &iph->daddr);
    } else {
-- 
1.7.1