From c345327ee7769e483e9085e2db6fa469d13aa6ca Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:06:44 -0400
Subject: [tools] perf: Use cpu/possible instead of cpu/kernel_max

Message-id: <1410181752-25631-160-git-send-email-jolsa@redhat.com>
Patchwork-id: 91901
O-Subject: [PATCH RHEL7.1 BZ1134356 159/307] perf tools: Use cpu/possible instead of cpu/kernel_max
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit f5b1f4e483d55a88ed120e2c62b45ba5b939fa72
Author: Don Zickus <dzickus@redhat.com>
Date: Mon Apr 7 14:55:22 2014 -0400

description
===========
The system's max configuration is represented by cpu/possible and
cpu/kernel_max can be huge (4096 vs. 128), so save space by keeping
smaller structures.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/cpumap.c b/tools/perf/util/cpumap.c
index 526da02..c4e55b7 100644
--- a/tools/perf/util/cpumap.c
+++ b/tools/perf/util/cpumap.c
@@ -365,7 +365,7 @@ static void set_max_cpu_num(void)
   goto out;
 
  /* get the highest possible cpu number for a sparse allocation */
- ret = snprintf(path, PATH_MAX, "%s/devices/system/cpu/kernel_max", mnt);
+ ret = snprintf(path, PATH_MAX, "%s/devices/system/cpu/possible", mnt);
  if (ret == PATH_MAX) {
   pr_err("sysfs path crossed PATH_MAX(%d) size\n", PATH_MAX);
   goto out;
-- 
1.7.1