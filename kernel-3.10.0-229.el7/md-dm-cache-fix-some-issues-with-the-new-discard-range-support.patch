From 56fd6ace1777035bb5343a3e6182aeebd7d8d41f Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Fri, 28 Nov 2014 16:18:32 -0500
Subject: [md] dm-cache: fix some issues with the new discard range support

Message-id: <1417191518-16689-4-git-send-email-snitzer@redhat.com>
Patchwork-id: 101006
O-Subject: [RHEL7.1 PATCH 3/9] dm cache: fix some issues with the new discard range support
Bugzilla: 1165050
RH-Acked-by: Joe Thornber <thornber@redhat.com>
RH-Acked-by: Heinz Mauelshagen <heinzm@redhat.com>

BZ: 1165050

Upstream linux-dm.git commit 1c319b3023320735c89cf7ab1b3453def7b42efd
Author: Joe Thornber <ejt@redhat.com>
Date:   Mon Nov 24 14:05:16 2014 +0000

    dm cache: fix some issues with the new discard range support

    Commit 7ae34e777 ("dm cache: improve discard support") needed to also:
    - discontinue having DM core split the discard bios on cache block
      boundaries
    - calculate the cache's discard_nr_blocks relative to the determined
      discard_block_size rather than using oblock_to_dblock()

    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/dm-cache-target.c b/drivers/md/dm-cache-target.c
index ea6c35a..51c68ad 100644
--- a/drivers/md/dm-cache-target.c
+++ b/drivers/md/dm-cache-target.c
@@ -2332,8 +2332,7 @@ static int cache_create(struct cache_args *ca, struct cache **result)
  ti->num_discard_bios = 1;
  ti->discards_supported = true;
  ti->discard_zeroes_data_unsupported = true;
- /* Discard bios must be split on a block boundary */
- ti->split_discard_bios = true;
+ ti->split_discard_bios = false;
 
  cache->features = ca->features;
  ti->per_bio_data_size = get_per_bio_data_size(cache);
@@ -2434,7 +2433,8 @@ static int cache_create(struct cache_args *ca, struct cache **result)
  cache->discard_block_size =
   calculate_discard_block_size(cache->sectors_per_block,
           cache->origin_sectors);
- cache->discard_nr_blocks = oblock_to_dblock(cache, cache->origin_blocks);
+ cache->discard_nr_blocks = to_dblock(dm_sector_div_up(cache->origin_sectors,
+             cache->discard_block_size));
  cache->discard_bitset = alloc_bitset(from_dblock(cache->discard_nr_blocks));
  if (!cache->discard_bitset) {
   *error = "could not allocate discard bitset";
-- 
1.7.1