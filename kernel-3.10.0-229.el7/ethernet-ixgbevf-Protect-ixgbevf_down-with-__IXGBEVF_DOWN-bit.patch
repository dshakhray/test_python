From 7cd8b441f4aeb7c2e8b96701702914cac064e10d Mon Sep 17 00:00:00 2001
From: John Greene <jogreene@redhat.com>
Date: Mon, 8 Sep 2014 15:07:49 -0400
Subject: [ethernet] ixgbevf: Protect ixgbevf_down with __IXGBEVF_DOWN bit

Message-id: <1410188883-6595-35-git-send-email-jogreene@redhat.com>
Patchwork-id: 92371
O-Subject: [RHEL7.1 PATCH 34/48] ixgbevf: Protect ixgbevf_down with __IXGBEVF_DOWN bit
Bugzilla: 1091124
RH-Acked-by: Neil Horman <nhorman@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: John Linville <linville@redhat.com>

BZ: 1091124
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7919168
Tested: In beaker. See BZ for details

The ixgbevf_down function can now prevent multiple executions by
doing test_and_set_bit on __IXGBEVF_DOWN. This did not work before
introduction of the __IXGBEVF_REMOVING bit, because of overloading
of __IXGBEVF_DOWN. Also add smp_mb__before_clear_bit call before
clearing the __IXGBEVF_DOWN bit.

Signed-off-by: Mark Rustad <mark.d.rustad@intel.com>
Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 5b346dc97567270a5c0f02a390a1d1bb65237cea)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c b/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
index b02534b..5c41dc3 100644
--- a/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
+++ b/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
@@ -1620,6 +1620,7 @@ static void ixgbevf_up_complete(struct ixgbevf_adapter *adapter)
 
  spin_unlock_bh(&adapter->mbx_lock);
 
+ smp_mb__before_clear_bit();
  clear_bit(__IXGBEVF_DOWN, &adapter->state);
  ixgbevf_napi_enable_all(adapter);
 
@@ -1744,7 +1745,8 @@ void ixgbevf_down(struct ixgbevf_adapter *adapter)
  int i;
 
  /* signal that we are down to the interrupt handler */
- set_bit(__IXGBEVF_DOWN, &adapter->state);
+ if (test_and_set_bit(__IXGBEVF_DOWN, &adapter->state))
+  return; /* do nothing if already down */
 
  /* disable all enabled rx queues */
  for (i = 0; i < adapter->num_rx_queues; i++)
-- 
1.7.1