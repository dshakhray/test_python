From 79c014b9294dd4e1cc0eec7126320ba7fff8b035 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 28 Aug 2014 03:03:48 -0400
Subject: [acpi] Move acpi_bus_get_device() from bus.c to scan.c

Message-id: <20140828030347.2117.98021.stgit@gir.stowe>
Patchwork-id: 89290
O-Subject: [RHEL7.1 PATCH 02/30] ACPI: Move acpi_bus_get_device() from bus.c to scan.c
Bugzilla: 1128632
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1128632
Upstream Status: caf5c03f17c33a14ef0e7033000f89e4d0910f5a

commit caf5c03f17c33a14ef0e7033000f89e4d0910f5a
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Jul 30 14:38:34 2013 +0200

    ACPI: Move acpi_bus_get_device() from bus.c to scan.c

    Move acpi_bus_get_device() from bus.c to scan.c which allows
    acpi_bus_data_handler() to become static and clean up the latter.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/acpi/bus.c b/drivers/acpi/bus.c
index 24a2445..36180ee 100644
--- a/drivers/acpi/bus.c
+++ b/drivers/acpi/bus.c
@@ -89,27 +89,6 @@ static struct dmi_system_id dsdt_dmi_table[] __initdata = {
                                 Device Management
    -------------------------------------------------------------------------- */
 
-int acpi_bus_get_device(acpi_handle handle, struct acpi_device **device)
-{
- acpi_status status;
-
- if (!device)
-  return -EINVAL;
-
- /* TBD: Support fixed-feature devices */
-
- status = acpi_get_data(handle, acpi_bus_data_handler, (void **)device);
- if (ACPI_FAILURE(status) || !*device) {
-  ACPI_DEBUG_PRINT((ACPI_DB_INFO, "No context for object [%p]\n",
-      handle));
-  return -ENODEV;
- }
-
- return 0;
-}
-
-EXPORT_SYMBOL(acpi_bus_get_device);
-
 acpi_status acpi_bus_get_status_handle(acpi_handle handle,
            unsigned long long *sta)
 {
diff --git a/drivers/acpi/scan.c b/drivers/acpi/scan.c
index 7ab2380..e76b523 100644
--- a/drivers/acpi/scan.c
+++ b/drivers/acpi/scan.c
@@ -907,6 +907,28 @@ struct bus_type acpi_bus_type = {
  .uevent  = acpi_device_uevent,
 };
 
+static void acpi_bus_data_handler(acpi_handle handle, void *context)
+{
+ /* Intentionally empty. */
+}
+
+int acpi_bus_get_device(acpi_handle handle, struct acpi_device **device)
+{
+ acpi_status status;
+
+ if (!device)
+  return -EINVAL;
+
+ status = acpi_get_data(handle, acpi_bus_data_handler, (void **)device);
+ if (ACPI_FAILURE(status) || !*device) {
+  ACPI_DEBUG_PRINT((ACPI_DB_INFO, "No context for object [%p]\n",
+      handle));
+  return -ENODEV;
+ }
+ return 0;
+}
+EXPORT_SYMBOL_GPL(acpi_bus_get_device);
+
 int acpi_device_add(struct acpi_device *device,
       void (*release)(struct device *))
 {
@@ -1118,14 +1140,6 @@ acpi_bus_get_ejd(acpi_handle handle, acpi_handle *ejd)
 }
 EXPORT_SYMBOL_GPL(acpi_bus_get_ejd);
 
-void acpi_bus_data_handler(acpi_handle handle, void *context)
-{
-
- /* TBD */
-
- return;
-}
-
 static int acpi_bus_extract_wakeup_device_power_package(acpi_handle handle,
      struct acpi_device_wakeup *wakeup)
 {
diff --git a/include/acpi/acpi_bus.h b/include/acpi/acpi_bus.h
index 57042d3..6e9ccd2 100644
--- a/include/acpi/acpi_bus.h
+++ b/include/acpi/acpi_bus.h
@@ -353,7 +353,6 @@ extern int unregister_acpi_notifier(struct notifier_block *);
  */
 
 int acpi_bus_get_device(acpi_handle handle, struct acpi_device **device);
-void acpi_bus_data_handler(acpi_handle handle, void *context);
 acpi_status acpi_bus_get_status_handle(acpi_handle handle,
            unsigned long long *sta);
 int acpi_bus_get_status(struct acpi_device *device);
-- 
1.7.1