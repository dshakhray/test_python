From 86f3e4da9518449c527038d32ff7320956550fc4 Mon Sep 17 00:00:00 2001
From: Chad Dupuis <cdupuis@redhat.com>
Date: Thu, 21 Aug 2014 13:05:44 -0400
Subject: [ethernet] qlcnic: Fix resource allocation for TX queues

Message-id: <1408626422-3941-61-git-send-email-cdupuis@redhat.com>
Patchwork-id: 88593
O-Subject: [PATCH RHEL 7.1 060/138] qlcnic: Fix resource allocation for TX queues
Bugzilla: 1089352
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Manish Chopra <manish.chopra@qlogic.com>

Bug 1089352 (https://bugzilla.redhat.com/show_bug.cgi?id=1089352)

net commit id f3e3ccf83bab261c5b55623bd3e9d1147b1c2e19

o TX queues allocation was getting distributed equally among all the
  functions of the port including VFs and PF. Which was leading to failure
  in PF's multiple TX queues creation.

o Instead of dividing queues equally allocate one TX queue for each VF as VF
  doesn't support multiple TX queues.

Signed-off-by: Manish Chopra <manish.chopra@qlogic.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_sriov_pf.c b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_sriov_pf.c
index 98b621f..f135888 100644
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_sriov_pf.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_sriov_pf.c
@@ -76,7 +76,6 @@ static int qlcnic_sriov_pf_cal_res_limit(struct qlcnic_adapter *adapter,
  num_vfs = sriov->num_vfs;
  max = num_vfs + 1;
  info->bit_offsets = 0xffff;
- info->max_tx_ques = res->num_tx_queues / max;
 
  if (qlcnic_83xx_pf_check(adapter))
   num_macs = 1;
@@ -91,7 +90,7 @@ static int qlcnic_sriov_pf_cal_res_limit(struct qlcnic_adapter *adapter,
   temp = num_macs * num_vfs * QLCNIC_SRIOV_VF_MAX_MAC;
   temp = res->num_rx_mcast_mac_filters - temp;
   info->max_rx_mcast_mac_filters = temp;
-
+  info->max_tx_ques = res->num_tx_queues - sriov->num_vfs;
  } else {
   id = qlcnic_sriov_func_to_index(adapter, func);
   if (id < 0)
@@ -103,6 +102,7 @@ static int qlcnic_sriov_pf_cal_res_limit(struct qlcnic_adapter *adapter,
   info->max_tx_mac_filters = num_macs;
   temp = num_macs * QLCNIC_SRIOV_VF_MAX_MAC;
   info->max_rx_mcast_mac_filters = temp;
+  info->max_tx_ques = QLCNIC_SINGLE_RING;
  }
 
  info->max_rx_ip_addr = res->num_destip / max;
-- 
1.7.1