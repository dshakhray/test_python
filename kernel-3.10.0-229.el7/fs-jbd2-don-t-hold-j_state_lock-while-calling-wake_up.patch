From 9047db6d57e9f6db0a219ad172c2fd5f0cfebf17 Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 23 Oct 2014 09:54:38 -0400
Subject: [fs] jbd2: don't hold j_state_lock while calling wake_up()

Message-id: <1414058125-4183-125-git-send-email-lczerner@redhat.com>
Patchwork-id: 98219
O-Subject: [RHEL 7.1 PATCH v2 124/171] jbd2: don't hold j_state_lock while calling wake_up()
Bugzilla: 1150139
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Theodore Ts'o <tytso@mit.edu>

BZ 1150139
https://bugzilla.redhat.com/show_bug.cgi?id=1150139

BREW 8142710
https://brewweb.devel.redhat.com/taskinfo?taskID=8142710

Upstream commit 3469a32a1e948c54204b5dd6f7476a7d11349e9e

 The j_state_lock is one of the hottest locks in the jbd2 layer and
 thus one of its scalability bottlenecks.

 We don't need to be holding the j_state_lock while we are calling
 wake_up(&journal->j_wait_commit), so release the lock a little bit
 earlier.

 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/jbd2/journal.c b/fs/jbd2/journal.c
index 244b6f6..67b8e30 100644
--- a/fs/jbd2/journal.c
+++ b/fs/jbd2/journal.c
@@ -302,8 +302,8 @@ static void journal_kill_thread(journal_t *journal)
  journal->j_flags |= JBD2_UNMOUNT;
 
  while (journal->j_task) {
-  wake_up(&journal->j_wait_commit);
   write_unlock(&journal->j_state_lock);
+  wake_up(&journal->j_wait_commit);
   wait_event(journal->j_wait_done_commit, journal->j_task == NULL);
   write_lock(&journal->j_state_lock);
  }
@@ -710,8 +710,8 @@ int jbd2_log_wait_commit(journal_t *journal, tid_t tid)
  while (tid_gt(tid, journal->j_commit_sequence)) {
   jbd_debug(1, "JBD2: want %d, j_commit_sequence=%d\n",
       tid, journal->j_commit_sequence);
-  wake_up(&journal->j_wait_commit);
   read_unlock(&journal->j_state_lock);
+  wake_up(&journal->j_wait_commit);
   wait_event(journal->j_wait_done_commit,
     !tid_gt(tid, journal->j_commit_sequence));
   read_lock(&journal->j_state_lock);
-- 
1.7.1