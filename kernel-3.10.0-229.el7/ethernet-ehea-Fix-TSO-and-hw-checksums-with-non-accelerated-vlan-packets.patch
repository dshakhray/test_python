From 9609cc0951f6ff8e8fe89dfaa7ce828ca31feea9 Mon Sep 17 00:00:00 2001
From: Vlad Yasevich <vyasevic@redhat.com>
Date: Fri, 29 Aug 2014 21:23:19 -0400
Subject: [ethernet] ehea: Fix TSO and hw checksums with non-accelerated vlan packets

Message-id: <1409347403-2401-9-git-send-email-vyasevic@redhat.com>
Patchwork-id: 89924
O-Subject: [RHEL7 PATCH 08/12] ehea: Fix TSO and hw checksums with non-accelerated vlan packets.
Bugzilla: 1135619
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: John Linville <linville@redhat.com>

From: Vlad Yasevich <vyasevich@gmail.com>

The driver claims that it can do TSO and IP checksums on vlan
devices and also allows user to control vlan acceleration offloading.
This makes it possible to push traffic to this driver that has TSO or
partial checksums set, but also have a non-accelearted vlan
header.  In this case, the driver will fail to correctly
identify such traffic and will not correctly perform
segmentation and checksum calculation.

Fix this by using vlan_get_protocol() helper instead of
assuming skb->protocol always has this information.

CC: Thadeu Lima de Souza Cascardo <cascardo@linux.vnet.ibm.com>
Signed-off-by: Vladislav Yasevich <vyasevic@redhat.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit be1d1486122092f5a323539ee4cc328d06083f63)
Signed-off-by: Vladislav Yasevich <vyasevic@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/ibm/ehea/ehea_main.c b/drivers/net/ethernet/ibm/ehea/ehea_main.c
index 90ea0b1..c0f0f29 100644
--- a/drivers/net/ethernet/ibm/ehea/ehea_main.c
+++ b/drivers/net/ethernet/ibm/ehea/ehea_main.c
@@ -1983,7 +1983,7 @@ static void xmit_common(struct sk_buff *skb, struct ehea_swqe *swqe)
 {
  swqe->tx_control |= EHEA_SWQE_IMM_DATA_PRESENT | EHEA_SWQE_CRC;
 
- if (skb->protocol != htons(ETH_P_IP))
+ if (vlan_get_protocol(skb) != htons(ETH_P_IP))
   return;
 
  if (skb->ip_summed == CHECKSUM_PARTIAL)
-- 
1.7.1