From d766c5fa66394dcce391999008d12aa9c824272c Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:12:34 -0400
Subject: [powerpc] Drop return value from set_breakpoint as it is unused

Message-id: <1410545655-205645-526-git-send-email-dzickus@redhat.com>
Patchwork-id: 94620
O-Subject: [RHEL7 PATCH 525/626] powerpc: Drop return value from set_breakpoint as it is unused
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 04c32a516806ec74b62048baf4cddcbb840927db
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Tue Apr 29 15:25:16 2014 -0400

    powerpc: Drop return value from set_breakpoint as it is unused

    None of the callers check the return value, so it might as
    well not have one at all.

    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/debug.h b/arch/powerpc/include/asm/debug.h
index d251630..1d7f966 100644
--- a/arch/powerpc/include/asm/debug.h
+++ b/arch/powerpc/include/asm/debug.h
@@ -46,7 +46,7 @@ static inline int debugger_break_match(struct pt_regs *regs) { return 0; }
 static inline int debugger_fault_handler(struct pt_regs *regs) { return 0; }
 #endif
 
-int set_breakpoint(struct arch_hw_breakpoint *brk);
+void set_breakpoint(struct arch_hw_breakpoint *brk);
 #ifdef CONFIG_PPC_ADV_DEBUG_REGS
 extern void do_send_trap(struct pt_regs *regs, unsigned long address,
     unsigned long error_code, int signal_code, int brkpt);
diff --git a/arch/powerpc/kernel/process.c b/arch/powerpc/kernel/process.c
index 6798dd5..a74acda 100644
--- a/arch/powerpc/kernel/process.c
+++ b/arch/powerpc/kernel/process.c
@@ -496,14 +496,14 @@ static inline int set_dawr(struct arch_hw_breakpoint *brk)
  return 0;
 }
 
-int set_breakpoint(struct arch_hw_breakpoint *brk)
+void set_breakpoint(struct arch_hw_breakpoint *brk)
 {
  __get_cpu_var(current_brk) = *brk;
 
  if (cpu_has_feature(CPU_FTR_DAWR))
-  return set_dawr(brk);
-
- return set_dabr(brk);
+  set_dawr(brk);
+ else
+  set_dabr(brk);
 }
 
 #ifdef CONFIG_PPC64
-- 
1.7.1