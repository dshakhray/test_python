From c0019588c2693f17d2fa99f319e809305f913ef4 Mon Sep 17 00:00:00 2001
From: Jiri Benc <jbenc@redhat.com>
Date: Fri, 12 Sep 2014 14:29:56 -0400
Subject: [net] openvswitch: Clarify locking

Message-id: <235023f73a4890e81eb4917bcdae2d4514b19c50.1410531783.git.jbenc@redhat.com>
Patchwork-id: 94012
O-Subject: [RHEL7.1 net PATCH 23/50] openvswitch: Clarify locking.
Bugzilla: 1110384
RH-Acked-by: Flavio Leitner <fbl@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110384
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7948291

commit bb6f9a708d4067713afae2e9eb2637f6b4c01ecb
Author: Jarno Rajahalme <jrajahalme@nicira.com>
Date:   Mon May 5 11:32:17 2014 -0700

    openvswitch: Clarify locking.

    Remove unnecessary locking from functions that are always called with
    appropriate locking.

    Signed-off-by: Jarno Rajahalme <jrajahalme@nicira.com>
    Signed-off-by: Thomas Graf <tgraf@redhat.com>
    Signed-off-by: Pravin B Shelar <pshelar@nicira.com>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/openvswitch/datapath.c b/net/openvswitch/datapath.c
index 8e04ce0..c0556f6 100644
--- a/net/openvswitch/datapath.c
+++ b/net/openvswitch/datapath.c
@@ -173,6 +173,7 @@ static struct hlist_head *vport_hash_bucket(const struct datapath *dp,
  return &dp->ports[port_no & (DP_VPORT_HASH_BUCKETS - 1)];
 }
 
+/* Called with ovs_mutex or RCU read lock. */
 struct vport *ovs_lookup_vport(const struct datapath *dp, u16 port_no)
 {
  struct vport *vport;
@@ -654,7 +655,7 @@ static size_t ovs_flow_cmd_msg_size(const struct sw_flow_actions *acts)
   + nla_total_size(acts->actions_len); /* OVS_FLOW_ATTR_ACTIONS */
 }
 
-/* Called with ovs_mutex. */
+/* Called with ovs_mutex or RCU read lock. */
 static int ovs_flow_cmd_fill_info(struct sw_flow *flow, struct datapath *dp,
       struct sk_buff *skb, u32 portid,
       u32 seq, u32 flags, u8 cmd)
@@ -745,6 +746,7 @@ error:
  return err;
 }
 
+/* Must be called with ovs_mutex. */
 static struct sk_buff *ovs_flow_cmd_alloc_info(struct sw_flow *flow,
             struct genl_info *info)
 {
@@ -755,6 +757,7 @@ static struct sk_buff *ovs_flow_cmd_alloc_info(struct sw_flow *flow,
  return genlmsg_new_unicast(len, info, GFP_KERNEL);
 }
 
+/* Must be called with ovs_mutex. */
 static struct sk_buff *ovs_flow_cmd_build_info(struct sw_flow *flow,
             struct datapath *dp,
             struct genl_info *info,
@@ -1096,6 +1099,7 @@ static size_t ovs_dp_cmd_msg_size(void)
  return msgsize;
 }
 
+/* Called with ovs_mutex or RCU read lock. */
 static int ovs_dp_cmd_fill_info(struct datapath *dp, struct sk_buff *skb,
     u32 portid, u32 seq, u32 flags, u8 cmd)
 {
@@ -1111,9 +1115,7 @@ static int ovs_dp_cmd_fill_info(struct datapath *dp, struct sk_buff *skb,
 
  ovs_header->dp_ifindex = get_dpifindex(dp);
 
- rcu_read_lock();
  err = nla_put_string(skb, OVS_DP_ATTR_NAME, ovs_dp_name(dp));
- rcu_read_unlock();
  if (err)
   goto nla_put_failure;
 
@@ -1138,6 +1140,7 @@ error:
  return -EMSGSIZE;
 }
 
+/* Must be called with ovs_mutex. */
 static struct sk_buff *ovs_dp_cmd_build_info(struct datapath *dp,
           struct genl_info *info, u8 cmd)
 {
@@ -1156,7 +1159,7 @@ static struct sk_buff *ovs_dp_cmd_build_info(struct datapath *dp,
  return skb;
 }
 
-/* Called with ovs_mutex. */
+/* Called with rcu_read_lock or ovs_mutex. */
 static struct datapath *lookup_datapath(struct net *net,
      struct ovs_header *ovs_header,
      struct nlattr *a[OVS_DP_ATTR_MAX + 1])
@@ -1168,10 +1171,8 @@ static struct datapath *lookup_datapath(struct net *net,
  else {
   struct vport *vport;
 
-  rcu_read_lock();
   vport = ovs_vport_locate(net, nla_data(a[OVS_DP_ATTR_NAME]));
   dp = vport && vport->port_no == OVSP_LOCAL ? vport->dp : NULL;
-  rcu_read_unlock();
  }
  return dp ? dp : ERR_PTR(-ENODEV);
 }
diff --git a/net/openvswitch/flow.c b/net/openvswitch/flow.c
index 6d8d2da..1019fc1 100644
--- a/net/openvswitch/flow.c
+++ b/net/openvswitch/flow.c
@@ -122,6 +122,7 @@ unlock:
  spin_unlock(&stats->lock);
 }
 
+/* Called with ovs_mutex. */
 void ovs_flow_stats_get(struct sw_flow *flow, struct ovs_flow_stats *ovs_stats,
    unsigned long *used, __be16 *tcp_flags)
 {
@@ -132,7 +133,7 @@ void ovs_flow_stats_get(struct sw_flow *flow, struct ovs_flow_stats *ovs_stats,
  memset(ovs_stats, 0, sizeof(*ovs_stats));
 
  for_each_node(node) {
-  struct flow_stats *stats = rcu_dereference(flow->stats[node]);
+  struct flow_stats *stats = ovsl_dereference(flow->stats[node]);
 
   if (stats) {
    /* Local CPU may write on non-local stats, so we must
-- 
1.7.1