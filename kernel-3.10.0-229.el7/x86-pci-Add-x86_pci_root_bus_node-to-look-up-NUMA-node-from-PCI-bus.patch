From b7342e189d82921c45ba88ff03383cee4a1c2bba Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Wed, 6 Aug 2014 03:44:57 -0400
Subject: [x86] pci: Add x86_pci_root_bus_node() to look up NUMA node from PCI bus

Message-id: <20140806034456.1438.9451.stgit@gir.stowe>
Patchwork-id: 87417
O-Subject: [RHEL7.1 PATCH 08/69] x86/PCI: Add x86_pci_root_bus_node() to look up NUMA node from PCI bus
Bugzilla: 1110896
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110896
Upstream Status: afcf21c2beca6604dbdc24fed1624c2499a85e7d

commit afcf21c2beca6604dbdc24fed1624c2499a85e7d
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Fri Jan 24 11:54:36 2014 -0700

    x86/PCI: Add x86_pci_root_bus_node() to look up NUMA node from PCI bus

    The AMD early_fill_mp_bus_info() already allocates a struct pci_root_info
    for each PCI host bridge it finds, and that structure contains the NUMA
    node number.  We don't need to keep the same information in the
    mp_bus_to_node[] table.

    This adds x86_pci_root_bus_node(), which returns the NUMA node number, or
    NUMA_NO_NODE if the node is unknown.

    Note that unlike get_mp_bus_to_node(), x86_pci_root_bus_node() only works
    for root buses.  For example, if amd_bus.c finds a host bridge on node 1 to
    [bus 00-0f], get_mp_bus_to_node() returns 1 for any bus between 00 and 0f,
    but x86_pci_root_bus_node() returns 1 for bus 00 and NUMA_NO_NODE for buses
    01-0f.

    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/include/asm/topology.h b/arch/x86/include/asm/topology.h
index 095b215..bbbd41a 100644
--- a/arch/x86/include/asm/topology.h
+++ b/arch/x86/include/asm/topology.h
@@ -134,6 +134,7 @@ static inline void arch_fix_phys_package_id(int num, u32 slot)
 }
 
 struct pci_bus;
+int x86_pci_root_bus_node(int bus);
 void x86_pci_root_bus_resources(int bus, struct list_head *resources);
 
 #ifdef CONFIG_SMP
diff --git a/arch/x86/pci/bus_numa.c b/arch/x86/pci/bus_numa.c
index c2735fe..2e36a44 100644
--- a/arch/x86/pci/bus_numa.c
+++ b/arch/x86/pci/bus_numa.c
@@ -20,6 +20,16 @@ static struct pci_root_info *x86_find_pci_root_info(int bus)
  return NULL;
 }
 
+int x86_pci_root_bus_node(int bus)
+{
+ struct pci_root_info *info = x86_find_pci_root_info(bus);
+
+ if (!info)
+  return NUMA_NO_NODE;
+
+ return info->node;
+}
+
 void x86_pci_root_bus_resources(int bus, struct list_head *resources)
 {
  struct pci_root_info *info = x86_find_pci_root_info(bus);
-- 
1.7.1