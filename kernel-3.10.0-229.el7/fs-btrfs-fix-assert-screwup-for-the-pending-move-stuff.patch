From 81e07bb2ab2968c6eaa58215c3716ffb79848310 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:00:37 -0400
Subject: [fs] btrfs: fix assert screwup for the pending move stuff

Message-id: <1407179109-13714-151-git-send-email-sandeen@redhat.com>
Patchwork-id: 87083
O-Subject: [RHEL7.1 PATCH 150/422] Btrfs: fix assert screwup for the pending move stuff
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Josef Bacik <jbacik@fb.com>

commit 6cc98d90f8d14f8ebce2391323929024d7eef39f
Author: Josef Bacik <jbacik@fb.com>
Date:   Wed Feb 5 16:19:21 2014 -0500

    Btrfs: fix assert screwup for the pending move stuff

    Wang noticed that he was failing btrfs/030 even though me and Filipe couldn't
    reproduce.  Turns out this is because Wang didn't have CONFIG_BTRFS_ASSERT set,
    which meant that a key part of Filipe's original patch was not being built in.
    This appears to be a mess up with merging Filipe's patch as it does not exist in
    his original patch.  Fix this by changing how we make sure del_waiting_dir_move
    asserts that it did not error and take the function out of the ifdef check.
    This makes btrfs/030 pass with the assert on or off.  Thanks,

    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Reviewed-by: Filipe Manana <fdmanana@gmail.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/send.c b/fs/btrfs/send.c
index cf9107a..9c8d1a3 100644
--- a/fs/btrfs/send.c
+++ b/fs/btrfs/send.c
@@ -2774,8 +2774,6 @@ static int add_waiting_dir_move(struct send_ctx *sctx, u64 ino)
  return 0;
 }
 
-#ifdef CONFIG_BTRFS_ASSERT
-
 static int del_waiting_dir_move(struct send_ctx *sctx, u64 ino)
 {
  struct rb_node *n = sctx->waiting_dir_moves.rb_node;
@@ -2796,8 +2794,6 @@ static int del_waiting_dir_move(struct send_ctx *sctx, u64 ino)
  return -ENOENT;
 }
 
-#endif
-
 static int add_pending_dir_move(struct send_ctx *sctx, u64 parent_ino)
 {
  struct rb_node **p = &sctx->pending_dir_moves.rb_node;
@@ -2902,7 +2898,9 @@ static int apply_dir_move(struct send_ctx *sctx, struct pending_dir_move *pm)
  }
 
  sctx->send_progress = sctx->cur_ino + 1;
- ASSERT(del_waiting_dir_move(sctx, pm->ino) == 0);
+ ret = del_waiting_dir_move(sctx, pm->ino);
+ ASSERT(ret == 0);
+
  ret = get_cur_path(sctx, pm->ino, pm->gen, to_path);
  if (ret < 0)
   goto out;
-- 
1.7.1