From 2be97ff8717fde5b2074d57393ec7b4a73cda2f4 Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Fri, 23 Jan 2015 11:43:00 -0500
Subject: [fs] Revert: ext4: revert Disable punch hole on non-extent mapped files

Message-id: <1422013380-8351-1-git-send-email-lczerner@redhat.com>
Patchwork-id: 103421
O-Subject: [RHEL 7.1 fs PATCH] Revert "[fs] ext4: revert Disable punch hole on non-extent mapped files"
Bugzilla: 1176840
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

BZ 1176840
https://bugzilla.redhat.com/show_bug.cgi?id=1176840

BREW

This commit does not have its upstream counterpart.

This reverts commit 553ba13ed86f192a575bd028c74d5687a6b1db62.

This reverts the previous revert, so that punch hole is again disabled
on non-extent mapped files as it turns out there are still some problems
with indirect punch hole.

Signed-off-by: Lukas Czerner <lczerner@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/extents.c b/fs/ext4/extents.c
index a88ae22..80760fd 100644
--- a/fs/ext4/extents.c
+++ b/fs/ext4/extents.c
@@ -4915,6 +4915,13 @@ long ext4_fallocate(struct file *file, int mode, loff_t offset, loff_t len)
  ext4_lblk_t lblk;
  unsigned int blkbits = inode->i_blkbits;
 
+ /*
+  * currently supporting (pre)allocate mode for extent-based
+  * files _only_
+  */
+ if (!(ext4_test_inode_flag(inode, EXT4_INODE_EXTENTS)))
+  return -EOPNOTSUPP;
+
  /* Return error if mode is not supported */
  if (mode & ~(FALLOC_FL_KEEP_SIZE | FALLOC_FL_PUNCH_HOLE |
        FALLOC_FL_COLLAPSE_RANGE | FALLOC_FL_ZERO_RANGE))
@@ -4927,13 +4934,6 @@ long ext4_fallocate(struct file *file, int mode, loff_t offset, loff_t len)
  if (ret)
   return ret;
 
- /*
-  * currently supporting (pre)allocate mode for extent-based
-  * files _only_
-  */
- if (!(ext4_test_inode_flag(inode, EXT4_INODE_EXTENTS)))
-  return -EOPNOTSUPP;
-
  if (mode & FALLOC_FL_COLLAPSE_RANGE)
   return ext4_collapse_range(inode, offset, len);
 
-- 
1.7.1