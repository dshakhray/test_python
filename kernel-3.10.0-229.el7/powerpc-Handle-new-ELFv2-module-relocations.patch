From 0c01009db836ed46cf6bd5aaeff848786922eadf Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:11:01 -0400
Subject: [powerpc] Handle new ELFv2 module relocations

Message-id: <1410545655-205645-433-git-send-email-dzickus@redhat.com>
Patchwork-id: 94339
O-Subject: [RHEL7 PATCH 432/626] powerpc: Handle new ELFv2 module relocations
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 0906584a0a4b689f6e80307f699247621321670a
Author: Rusty Russell <rusty@rustcorp.com.au>
Date:   Tue Mar 18 19:59:27 2014 +1030

    powerpc: Handle new ELFv2 module relocations

    The new ELF ABI tends to use R_PPC64_REL16_LO and R_PPC64_REL16_HA
    relocations (PC-relative), so implement them.

    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/uapi/asm/elf.h b/arch/powerpc/include/uapi/asm/elf.h
index 0341109..59dad11 100644
--- a/arch/powerpc/include/uapi/asm/elf.h
+++ b/arch/powerpc/include/uapi/asm/elf.h
@@ -295,8 +295,13 @@ do {         \
 #define R_PPC64_TLSLD  108
 #define R_PPC64_TOCSAVE  109
 
+#define R_PPC64_REL16  249
+#define R_PPC64_REL16_LO 250
+#define R_PPC64_REL16_HI 251
+#define R_PPC64_REL16_HA 252
+
 /* Keep this the last entry.  */
-#define R_PPC64_NUM  110
+#define R_PPC64_NUM  253
 
 /* There's actually a third entry here, but it's unused */
 struct ppc64_opd_entry
diff --git a/arch/powerpc/kernel/module_64.c b/arch/powerpc/kernel/module_64.c
index f6544d7..34ba326 100644
--- a/arch/powerpc/kernel/module_64.c
+++ b/arch/powerpc/kernel/module_64.c
@@ -491,6 +491,23 @@ int apply_relocate_add(Elf64_Shdr *sechdrs,
     */
    break;
 
+  case R_PPC64_REL16_HA:
+   /* Subtract location pointer */
+   value -= (unsigned long)location;
+   value = ((value + 0x8000) >> 16);
+   *((uint16_t *) location)
+    = (*((uint16_t *) location) & ~0xffff)
+    | (value & 0xffff);
+   break;
+
+  case R_PPC64_REL16_LO:
+   /* Subtract location pointer */
+   value -= (unsigned long)location;
+   *((uint16_t *) location)
+    = (*((uint16_t *) location) & ~0xffff)
+    | (value & 0xffff);
+   break;
+
   default:
    printk("%s: Unknown ADD relocation: %lu\n",
           me->name,
-- 
1.7.1