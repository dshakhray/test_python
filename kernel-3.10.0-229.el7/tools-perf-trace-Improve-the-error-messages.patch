From 3621bc26c7d9598beff1f6c8f1e1f557de42218f Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:25:38 -0400
Subject: [tools] perf/trace: Improve the error messages

Message-id: <1408462094-14194-170-git-send-email-jolsa@redhat.com>
Patchwork-id: 88144
O-Subject: [PATCH RHEL7.1 BZ1131394 169/325] perf trace: Improve the error messages
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 87f918685a452be514d060a09eeb4e0c91422e86
Author: Ramkumar Ramachandra <artagnon@gmail.com>
Date: Fri Oct 4 10:47:31 2013 +0530

description
===========
Currently, execution of 'perf trace' reports the following cryptic
message to the user:

$ perf trace
Couldn't read the raw_syscalls tracepoints information!

Typically this happens because the user does not have permissions to
read the debugfs filesystem. Also handle the case when the kernel was
not compiled with debugfs support or when it isn't mounted.

Now, the tool prints detailed error messages:

$ perf trace
Error: Unable to find debugfs
Hint: Was your kernel was compiled with debugfs support?
Hint: Is the debugfs filesystem mounted?
Hint: Try 'sudo mount -t debugfs nodev /sys/kernel/debug'

$ perf trace
Error: No permissions to read /sys/kernel/debug//tracing/events/raw_syscalls
Hint: Try 'sudo mount -o remount,mode=755 /sys/kernel/debug/'

[ Added ready to use commands to fix the issues as extra hints, use the
  current debugfs mount point when reporting permission error, use
  strerror_r instead of the deprecated sys_errlist, as reported by David Ahern ]
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-trace.c b/tools/perf/builtin-trace.c
index e7076b3..26d4dd0 100644
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@ -1590,17 +1590,13 @@ static int trace__run(struct trace *trace, int argc, const char **argv)
  }
 
  if (perf_evlist__add_newtp(evlist, "raw_syscalls", "sys_enter", trace__sys_enter) ||
-     perf_evlist__add_newtp(evlist, "raw_syscalls", "sys_exit", trace__sys_exit)) {
-  fprintf(trace->output, "Couldn't read the raw_syscalls tracepoints information!\n");
-  goto out_delete_evlist;
- }
+  perf_evlist__add_newtp(evlist, "raw_syscalls", "sys_exit", trace__sys_exit))
+  goto out_error_tp;
 
  if (trace->sched &&
-     perf_evlist__add_newtp(evlist, "sched", "sched_stat_runtime",
-       trace__sched_stat_runtime)) {
-  fprintf(trace->output, "Couldn't read the sched_stat_runtime tracepoint information!\n");
-  goto out_delete_evlist;
- }
+  perf_evlist__add_newtp(evlist, "sched", "sched_stat_runtime",
+    trace__sched_stat_runtime))
+  goto out_error_tp;
 
  err = perf_evlist__create_maps(evlist, &trace->opts.target);
  if (err < 0) {
@@ -1719,6 +1715,29 @@ out_delete_evlist:
 out:
  trace->live = false;
  return err;
+out_error_tp:
+ switch(errno) {
+ case ENOENT:
+  fputs("Error:\tUnable to find debugfs\n"
+        "Hint:\tWas your kernel was compiled with debugfs support?\n"
+        "Hint:\tIs the debugfs filesystem mounted?\n"
+        "Hint:\tTry 'sudo mount -t debugfs nodev /sys/kernel/debug'\n",
+        trace->output);
+  break;
+ case EACCES:
+  fprintf(trace->output,
+   "Error:\tNo permissions to read %s/tracing/events/raw_syscalls\n"
+   "Hint:\tTry 'sudo mount -o remount,mode=755 %s'\n",
+   debugfs_mountpoint, debugfs_mountpoint);
+  break;
+ default: {
+  char bf[256];
+  fprintf(trace->output, "Can't trace: %s\n",
+   strerror_r(errno, bf, sizeof(bf)));
+ }
+  break;
+ }
+ goto out_delete_evlist;
 }
 
 static int trace__replay(struct trace *trace)
-- 
1.7.1