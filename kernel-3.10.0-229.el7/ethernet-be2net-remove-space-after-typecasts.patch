From 2df346ba463ad5f1825d44eb31a3a56b45908363 Mon Sep 17 00:00:00 2001
From: Ivan Vecera <ivecera@redhat.com>
Date: Wed, 19 Nov 2014 16:13:05 -0500
Subject: [ethernet] be2net: remove space after typecasts

Message-id: <1416413587-12091-18-git-send-email-ivecera@redhat.com>
Patchwork-id: 100339
O-Subject: [RHEL7.1 PATCH 17/19] be2net: remove space after typecasts
Bugzilla: 1165755
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

BZ: #1165755

Upstream commit(s):
commit 504fbf1e4f1a0f9c1586dfa22ef0eb20521f9df3
Author: Kalesh AP <kalesh.purayil@emulex.com>
Date:   Fri Sep 19 15:47:00 2014 +0530

    be2net: remove space after typecasts

    This patch removes unnecessary spaces after typecasts as per checkpatch warnings.
    Signed-off-by: Kalesh AP <kalesh.purayil@emulex.com>
    Signed-off-by: Sathya Perla <sathya.perla@emulex.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Ivan Vecera <ivecera@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/emulex/benet/be_cmds.c b/drivers/net/ethernet/emulex/benet/be_cmds.c
index 9ec09a8..48f4be3 100644
--- a/drivers/net/ethernet/emulex/benet/be_cmds.c
+++ b/drivers/net/ethernet/emulex/benet/be_cmds.c
@@ -316,7 +316,7 @@ static void be_async_dbg_evt_process(struct be_adapter *adapter,
          struct be_mcc_compl *cmp)
 {
  u8 event_type = 0;
- struct be_async_event_qnq *evt = (struct be_async_event_qnq *) cmp;
+ struct be_async_event_qnq *evt = (struct be_async_event_qnq *)cmp;
 
  event_type = (cmp->flags >> ASYNC_EVENT_TYPE_SHIFT) &
    ASYNC_EVENT_TYPE_MASK;
@@ -956,7 +956,7 @@ int be_cmd_mac_addr_query(struct be_adapter *adapter, u8 *mac_addr,
  if (permanent) {
   req->permanent = 1;
  } else {
-  req->if_id = cpu_to_le16((u16) if_handle);
+  req->if_id = cpu_to_le16((u16)if_handle);
   req->pmac_id = cpu_to_le32(pmac_id);
   req->permanent = 0;
  }
@@ -3280,7 +3280,7 @@ int be_cmd_get_acpi_wol_cap(struct be_adapter *adapter)
  if (!status) {
   struct be_cmd_resp_acpi_wol_magic_config_v1 *resp;
 
-  resp = (struct be_cmd_resp_acpi_wol_magic_config_v1 *) cmd.va;
+  resp = (struct be_cmd_resp_acpi_wol_magic_config_v1 *)cmd.va;
 
   adapter->wol_cap = resp->wol_settings;
   if (adapter->wol_cap & BE_WOL_CAP)
@@ -4127,7 +4127,7 @@ int be_roce_mcc_cmd(void *netdev_handle, void *wrb_payload,
 {
  struct be_adapter *adapter = netdev_priv(netdev_handle);
  struct be_mcc_wrb *wrb;
- struct be_cmd_req_hdr *hdr = (struct be_cmd_req_hdr *) wrb_payload;
+ struct be_cmd_req_hdr *hdr = (struct be_cmd_req_hdr *)wrb_payload;
  struct be_cmd_req_hdr *req;
  struct be_cmd_resp_hdr *resp;
  int status;
diff --git a/drivers/net/ethernet/emulex/benet/be_main.c b/drivers/net/ethernet/emulex/benet/be_main.c
index 3707544..cefa65a 100644
--- a/drivers/net/ethernet/emulex/benet/be_main.c
+++ b/drivers/net/ethernet/emulex/benet/be_main.c
@@ -918,7 +918,7 @@ static bool be_ipv6_exthdr_check(struct sk_buff *skb)
   if (ip6h->nexthdr != NEXTHDR_TCP &&
       ip6h->nexthdr != NEXTHDR_UDP) {
    struct ipv6_opt_hdr *ehdr =
-    (struct ipv6_opt_hdr *) (skb->data + offset);
+    (struct ipv6_opt_hdr *)(skb->data + offset);
 
    /* offending pkt: 2nd byte following IPv6 hdr is 0xff */
    if (ehdr->hdrlen == 0xff)
-- 
1.7.1