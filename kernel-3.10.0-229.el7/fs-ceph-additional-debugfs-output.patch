From 8ea6d3fcb49eea8e4eb79005f3c87b7a6fa7f1a0 Mon Sep 17 00:00:00 2001
From: Ilya Dryomov <ilya.dryomov@inktank.com>
Date: Tue, 18 Nov 2014 15:49:48 -0500
Subject: [fs] ceph: additional debugfs output
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1416325805-26490-34-git-send-email-idryomov@redhat.com>
Patchwork-id: 100225
O-Subject: [RHEL7.1 PATCH 33/50] ceph: additional debugfs output
Bugzilla: 1165232
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Sage Weil <sweil@redhat.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>

From: John Spray <john.spray@redhat.com>

MDS session state and client global ID is
useful instrumentation when testing.

Signed-off-by: John Spray <john.spray@redhat.com>
(cherry picked from commit 14ed97033dac4cc5fd516bfe3e37d2fc74804684)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ceph/debugfs.c b/fs/ceph/debugfs.c
index 5a743ac..5d5a4c8 100644
--- a/fs/ceph/debugfs.c
+++ b/fs/ceph/debugfs.c
@@ -158,10 +158,47 @@ static int dentry_lru_show(struct seq_file *s, void *ptr)
  return 0;
 }
 
+static int mds_sessions_show(struct seq_file *s, void *ptr)
+{
+ struct ceph_fs_client *fsc = s->private;
+ struct ceph_mds_client *mdsc = fsc->mdsc;
+ struct ceph_auth_client *ac = fsc->client->monc.auth;
+ struct ceph_options *opt = fsc->client->options;
+ int mds = -1;
+
+ mutex_lock(&mdsc->mutex);
+
+ /* The 'num' portion of an 'entity name' */
+ seq_printf(s, "global_id %llu\n", ac->global_id);
+
+ /* The -o name mount argument */
+ seq_printf(s, "name \"%s\"\n", opt->name ? opt->name : "");
+
+ /* The list of MDS session rank+state */
+ for (mds = 0; mds < mdsc->max_sessions; mds++) {
+  struct ceph_mds_session *session =
+   __ceph_lookup_mds_session(mdsc, mds);
+  if (!session) {
+   continue;
+  }
+  mutex_unlock(&mdsc->mutex);
+  seq_printf(s, "mds.%d %s\n",
+    session->s_mds,
+    ceph_session_state_name(session->s_state));
+
+  ceph_put_mds_session(session);
+  mutex_lock(&mdsc->mutex);
+ }
+ mutex_unlock(&mdsc->mutex);
+
+ return 0;
+}
+
 CEPH_DEFINE_SHOW_FUNC(mdsmap_show)
 CEPH_DEFINE_SHOW_FUNC(mdsc_show)
 CEPH_DEFINE_SHOW_FUNC(caps_show)
 CEPH_DEFINE_SHOW_FUNC(dentry_lru_show)
+CEPH_DEFINE_SHOW_FUNC(mds_sessions_show)
 
 
 /*
@@ -193,6 +230,7 @@ void ceph_fs_debugfs_cleanup(struct ceph_fs_client *fsc)
  debugfs_remove(fsc->debugfs_bdi);
  debugfs_remove(fsc->debugfs_congestion_kb);
  debugfs_remove(fsc->debugfs_mdsmap);
+ debugfs_remove(fsc->debugfs_mds_sessions);
  debugfs_remove(fsc->debugfs_caps);
  debugfs_remove(fsc->debugfs_mdsc);
  debugfs_remove(fsc->debugfs_dentry_lru);
@@ -231,6 +269,14 @@ int ceph_fs_debugfs_init(struct ceph_fs_client *fsc)
  if (!fsc->debugfs_mdsmap)
   goto out;
 
+ fsc->debugfs_mds_sessions = debugfs_create_file("mds_sessions",
+     0600,
+     fsc->client->debugfs_dir,
+     fsc,
+     &mds_sessions_show_fops);
+ if (!fsc->debugfs_mds_sessions)
+  goto out;
+
  fsc->debugfs_mdsc = debugfs_create_file("mdsc",
       0600,
       fsc->client->debugfs_dir,
diff --git a/fs/ceph/super.h b/fs/ceph/super.h
index 36abc4f..45b446f 100644
--- a/fs/ceph/super.h
+++ b/fs/ceph/super.h
@@ -89,6 +89,7 @@ struct ceph_fs_client {
  struct dentry *debugfs_congestion_kb;
  struct dentry *debugfs_bdi;
  struct dentry *debugfs_mdsc, *debugfs_mdsmap;
+ struct dentry *debugfs_mds_sessions;
 #endif
 };
 
-- 
1.7.1