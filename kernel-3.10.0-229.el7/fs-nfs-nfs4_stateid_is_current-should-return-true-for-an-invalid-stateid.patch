From 1ad2a29f44b1cf794a517353c2e18cc48b548ef7 Mon Sep 17 00:00:00 2001
From: Steve Dickson <SteveD@redhat.com>
Date: Thu, 26 Jun 2014 15:33:09 -0400
Subject: [fs] nfs: nfs4_stateid_is_current should return 'true' for an invalid stateid

Message-id: <1403796815-28580-4-git-send-email-steved@redhat.com>
Patchwork-id: 84842
O-Subject: [RHEL7.1 PATCH 03/29] NFSv4: nfs4_stateid_is_current should return 'true' for an invalid stateid
Bugzilla: 1111170
RH-Acked-by: J. Bruce Fields <bfields@redhat.com>

From: Trond Myklebust <trond.myklebust@primarydata.com>

When nfs4_set_rw_stateid() can fails by returning EIO to indicate that
the stateid is completely invalid, then it makes no sense to have it
trigger a retry of the READ or WRITE operation. Instead, we should just
have it fall through and attempt a recovery.

This fixes an infinite loop in which the client keeps replaying the same
bad stateid back to the server.

Reported-by: Andy Adamson <andros@netapp.com>
Link: http://lkml.kernel.org/r/1393954269-3974-1-git-send-email-andros@netapp.com
Cc: stable@vger.kernel.org # 3.10+
Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
Upstream Id: e1253be0ece1a95a02c7f5843194877471af8179
Bugzilla: 1111170
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfs/nfs4proc.c b/fs/nfs/nfs4proc.c
index 31b03b9..8541347 100644
--- a/fs/nfs/nfs4proc.c
+++ b/fs/nfs/nfs4proc.c
@@ -3969,8 +3969,9 @@ static bool nfs4_stateid_is_current(nfs4_stateid *stateid,
 {
  nfs4_stateid current_stateid;
 
- if (nfs4_set_rw_stateid(&current_stateid, ctx, l_ctx, fmode))
-  return false;
+ /* If the current stateid represents a lost lock, then exit */
+ if (nfs4_set_rw_stateid(&current_stateid, ctx, l_ctx, fmode) == -EIO)
+  return true;
  return nfs4_stateid_match(stateid, &current_stateid);
 }
 
-- 
1.7.1