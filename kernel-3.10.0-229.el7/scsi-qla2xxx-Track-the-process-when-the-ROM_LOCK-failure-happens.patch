From 5b08db1dde601bae04181514d9310a9d21794640 Mon Sep 17 00:00:00 2001
From: Chad Dupuis <cdupuis@redhat.com>
Date: Mon, 18 Aug 2014 19:56:38 -0400
Subject: [scsi] qla2xxx: Track the process when the ROM_LOCK failure happens

Message-id: <1408391817-6389-51-git-send-email-cdupuis@redhat.com>
Patchwork-id: 87956
O-Subject: [PATCH RHEL 7.1 e-stor 50/69] qla2xxx: Track the process when the ROM_LOCK failure happens
Bugzilla: 1089346
RH-Acked-by: Rob Evers <revers@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Hiral Patel <hiral.patel@qlogic.com>

scsi commit id 4babb90e5744a56c01ce886cbed9a968a6258ba7

Signed-off-by: Hiral Patel <hiral.patel@qlogic.com>
Signed-off-by: Saurav Kashyap <saurav.kashyap@qlogic.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/qla2xxx/qla_nx.c b/drivers/scsi/qla2xxx/qla_nx.c
index a67f264..7e33337 100644
--- a/drivers/scsi/qla2xxx/qla_nx.c
+++ b/drivers/scsi/qla2xxx/qla_nx.c
@@ -860,13 +860,14 @@ qla82xx_rom_lock(struct qla_hw_data *ha)
   }
   timeout++;
  }
- qla82xx_wr_32(ha, QLA82XX_ROM_LOCK_ID, ROM_LOCK_DRIVER);
+ qla82xx_wr_32(ha, QLA82XX_ROM_LOCK_ID, ha->portnum);
  return 0;
 }
 
 static void
 qla82xx_rom_unlock(struct qla_hw_data *ha)
 {
+ qla82xx_wr_32(ha, QLA82XX_ROM_LOCK_ID, 0xffffffff);
  qla82xx_rd_32(ha, QLA82XX_PCIE_REG(PCIE_SEM2_UNLOCK));
 }
 
@@ -950,6 +951,7 @@ static int
 qla82xx_rom_fast_read(struct qla_hw_data *ha, int addr, int *valp)
 {
  int ret, loops = 0;
+ uint32_t lock_owner = 0;
  scsi_qla_host_t *vha = pci_get_drvdata(ha->pdev);
 
  while ((qla82xx_rom_lock(ha) != 0) && (loops < 50000)) {
@@ -958,8 +960,10 @@ qla82xx_rom_fast_read(struct qla_hw_data *ha, int addr, int *valp)
   loops++;
  }
  if (loops >= 50000) {
+  lock_owner = qla82xx_rd_32(ha, QLA82XX_ROM_LOCK_ID);
   ql_log(ql_log_fatal, vha, 0x00b9,
-      "Failed to acquire SEM2 lock.\n");
+      "Failed to acquire SEM2 lock, Lock Owner %u.\n",
+      lock_owner);
   return -1;
  }
  ret = qla82xx_do_rom_fast_read(ha, addr, valp);
@@ -1057,6 +1061,7 @@ static int
 ql82xx_rom_lock_d(struct qla_hw_data *ha)
 {
  int loops = 0;
+ uint32_t lock_owner = 0;
  scsi_qla_host_t *vha = pci_get_drvdata(ha->pdev);
 
  while ((qla82xx_rom_lock(ha) != 0) && (loops < 50000)) {
@@ -1065,8 +1070,9 @@ ql82xx_rom_lock_d(struct qla_hw_data *ha)
   loops++;
  }
  if (loops >= 50000) {
+  lock_owner = qla82xx_rd_32(ha, QLA82XX_ROM_LOCK_ID);
   ql_log(ql_log_warn, vha, 0xb010,
-      "ROM lock failed.\n");
+      "ROM lock failed, Lock Owner %u.\n", lock_owner);
   return -1;
  }
  return 0;
@@ -2797,12 +2803,14 @@ static void
 qla82xx_rom_lock_recovery(struct qla_hw_data *ha)
 {
  scsi_qla_host_t *vha = pci_get_drvdata(ha->pdev);
+ uint32_t lock_owner = 0;
 
- if (qla82xx_rom_lock(ha))
+ if (qla82xx_rom_lock(ha)) {
+  lock_owner = qla82xx_rd_32(ha, QLA82XX_ROM_LOCK_ID);
   /* Someone else is holding the lock. */
   ql_log(ql_log_info, vha, 0xb022,
-      "Resetting rom_lock.\n");
-
+      "Resetting rom_lock, Lock Owner %u.\n", lock_owner);
+ }
  /*
   * Either we got the lock, or someone
   * else died while holding it.
diff --git a/drivers/scsi/qla2xxx/qla_nx.h b/drivers/scsi/qla2xxx/qla_nx.h
index d57f6fe..d978a5d 100644
--- a/drivers/scsi/qla2xxx/qla_nx.h
+++ b/drivers/scsi/qla2xxx/qla_nx.h
@@ -333,9 +333,6 @@
 #define QLA82XX_ROMUSB_ROM_INSTR_OPCODE  (ROMUSB_ROM + 0x0004)
 #define QLA82XX_ROMUSB_GLB_CAS_RST  (ROMUSB_GLB + 0x0038)
 
-/* Lock IDs for ROM lock */
-#define ROM_LOCK_DRIVER       0x0d417340
-
 #define QLA82XX_PCI_CRB_WINDOWSIZE 0x00100000  /* all are 1MB windows */
 #define QLA82XX_PCI_CRB_WINDOW(A) \
  (QLA82XX_PCI_CRBSPACE + (A)*QLA82XX_PCI_CRB_WINDOWSIZE)
-- 
1.7.1