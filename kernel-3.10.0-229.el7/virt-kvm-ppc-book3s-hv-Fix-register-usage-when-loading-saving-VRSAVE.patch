From 46f13237ab14036422d360bbf8c232ed7e736f38 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:09:37 -0400
Subject: [virt] kvm/ppc: book3s hv - Fix register usage when loading/saving VRSAVE

Message-id: <1410545655-205645-349-git-send-email-dzickus@redhat.com>
Patchwork-id: 94377
O-Subject: [RHEL7 PATCH 348/626] KVM: PPC: Book3S HV: Fix register usage when loading/saving VRSAVE
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit e724f080f5dd03881bc6d378750c37f7374cae7e
Author: Paul Mackerras <paulus@samba.org>
Date:   Thu Mar 13 20:02:48 2014 +1100

    KVM: PPC: Book3S HV: Fix register usage when loading/saving VRSAVE

    Commit 595e4f7e697e ("KVM: PPC: Book3S HV: Use load/store_fp_state
    functions in HV guest entry/exit") changed the register usage in
    kvmppc_save_fp() and kvmppc_load_fp() but omitted changing the
    instructions that load and save VRSAVE.  The result is that the
    VRSAVE value was loaded from a constant address, and saved to a
    location past the end of the vcpu struct, causing host kernel
    memory corruption and various kinds of host kernel crashes.

    This fixes the problem by using register r31, which contains the
    vcpu pointer, instead of r3 and r4.

    Signed-off-by: Paul Mackerras <paulus@samba.org>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kvm/book3s_hv_rmhandlers.S b/arch/powerpc/kvm/book3s_hv_rmhandlers.S
index 334668d..7660051 100644
--- a/arch/powerpc/kvm/book3s_hv_rmhandlers.S
+++ b/arch/powerpc/kvm/book3s_hv_rmhandlers.S
@@ -2181,7 +2181,7 @@ BEGIN_FTR_SECTION
 END_FTR_SECTION_IFSET(CPU_FTR_ALTIVEC)
 #endif
  mfspr r6,SPRN_VRSAVE
- stw r6,VCPU_VRSAVE(r3)
+ stw r6,VCPU_VRSAVE(r31)
  mtlr r30
  mtmsrd r5
  isync
@@ -2218,7 +2218,7 @@ BEGIN_FTR_SECTION
  bl .load_vr_state
 END_FTR_SECTION_IFSET(CPU_FTR_ALTIVEC)
 #endif
- lwz r7,VCPU_VRSAVE(r4)
+ lwz r7,VCPU_VRSAVE(r31)
  mtspr SPRN_VRSAVE,r7
  mtlr r30
  mr r4,r31
-- 
1.7.1