From 8bb14db79591e7b8c325affa9a273d1e18b1d9ff Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:12:14 -0400
Subject: [powerpc] boot: Define byteswapping routines for little endian

Message-id: <1410545655-205645-506-git-send-email-dzickus@redhat.com>
Patchwork-id: 94530
O-Subject: [RHEL7 PATCH 505/626] powerpc/boot: Define byteswapping routines for little endian
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 98fd433aa6b02ba1612f9a9b73b8eb2f7e9d3419
Author: Cedric Le Goater <clg@fr.ibm.com>
Date:   Thu Apr 24 09:23:33 2014 +0200

    powerpc/boot: Define byteswapping routines for little endian

    These are not the most efficient versions of swab but the wrapper does
    not do much byte swapping. On a big endian cpu, these routines are
    a no-op.

    Signed-off-by: Cedric Le Goater <clg@fr.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/boot/of.h b/arch/powerpc/boot/of.h
index e1ef620..c8c1750 100644
--- a/arch/powerpc/boot/of.h
+++ b/arch/powerpc/boot/of.h
@@ -1,6 +1,8 @@
 #ifndef _PPC_BOOT_OF_H_
 #define _PPC_BOOT_OF_H_
 
+#include "swab.h"
+
 typedef void *phandle;
 typedef u32 ihandle;
 
@@ -21,8 +23,13 @@ void of_console_init(void);
 
 typedef u32   __be32;
 
+#ifdef __LITTLE_ENDIAN__
+#define cpu_to_be32(x) swab32(x)
+#define be32_to_cpu(x) swab32(x)
+#else
 #define cpu_to_be32(x) (x)
 #define be32_to_cpu(x) (x)
+#endif
 
 #define PROM_ERROR (-1u)
 
diff --git a/arch/powerpc/boot/swab.h b/arch/powerpc/boot/swab.h
new file mode 100644
index 0000000..d0e1431
--- /dev/null
+++ b/arch/powerpc/boot/swab.h
@@ -0,0 +1,29 @@
+#ifndef _PPC_BOOT_SWAB_H_
+#define _PPC_BOOT_SWAB_H_
+
+static inline u16 swab16(u16 x)
+{
+ return  ((x & (u16)0x00ffU) << 8) |
+  ((x & (u16)0xff00U) >> 8);
+}
+
+static inline u32 swab32(u32 x)
+{
+ return  ((x & (u32)0x000000ffUL) << 24) |
+  ((x & (u32)0x0000ff00UL) <<  8) |
+  ((x & (u32)0x00ff0000UL) >>  8) |
+  ((x & (u32)0xff000000UL) >> 24);
+}
+
+static inline u64 swab64(u64 x)
+{
+ return  (u64)((x & (u64)0x00000000000000ffULL) << 56) |
+  (u64)((x & (u64)0x000000000000ff00ULL) << 40) |
+  (u64)((x & (u64)0x0000000000ff0000ULL) << 24) |
+  (u64)((x & (u64)0x00000000ff000000ULL) <<  8) |
+  (u64)((x & (u64)0x000000ff00000000ULL) >>  8) |
+  (u64)((x & (u64)0x0000ff0000000000ULL) >> 24) |
+  (u64)((x & (u64)0x00ff000000000000ULL) >> 40) |
+  (u64)((x & (u64)0xff00000000000000ULL) >> 56);
+}
+#endif /* _PPC_BOOT_SWAB_H_ */
-- 
1.7.1