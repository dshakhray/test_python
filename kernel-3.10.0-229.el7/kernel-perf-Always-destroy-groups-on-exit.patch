From e7536a08be332dc7e877d4d735b1fb0d5a60f4ff Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:04:25 -0400
Subject: [kernel] perf: Always destroy groups on exit

Message-id: <1410181752-25631-21-git-send-email-jolsa@redhat.com>
Patchwork-id: 91703
O-Subject: [PATCH RHEL7.1 BZ1134356 020/307] perf: Always destroy groups on exit
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit 15a2d4de0eab533a76bee9e68d7e1063dd25401c
Author: Peter Zijlstra <peterz@infradead.org>
Date: Mon May 5 11:41:02 2014 +0200

description
===========
Commit 38b435b16c36 ("perf: Fix tear-down of inherited group events")
states that we need to destroy groups for inherited events, but it
doesn't make any sense to not also destroy groups for normal events.

And while it usually makes no difference (the normal events won't
leak, and its very likely all the group events will die in quick
succession) it does make the code more consistent and closes a
potential hole for trouble.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/kernel/events/core.c b/kernel/events/core.c
index 2e9df23..04fce87 100644
--- a/kernel/events/core.c
+++ b/kernel/events/core.c
@@ -7416,7 +7416,7 @@ __perf_event_exit_task(struct perf_event *child_event,
     struct perf_event_context *child_ctx,
     struct task_struct *child)
 {
- perf_remove_from_context(child_event, !!child_event->parent);
+ perf_remove_from_context(child_event, true);
 
  /*
   * It can happen that the parent exits first, and has events
-- 
1.7.1