From d39fa7c28f1a78275e697673ceb61b737373f3e3 Mon Sep 17 00:00:00 2001
From: Rob Clark <rclark@redhat.com>
Date: Wed, 17 Dec 2014 21:38:15 -0500
Subject: [drm] nouveau: Dis/Enable vblank irqs during suspend/resume

Message-id: <1418852380-13061-5-git-send-email-rclark@redhat.com>
Patchwork-id: 102147
O-Subject: [RHEL7 drm 04/89] drm/nouveau: Dis/Enable vblank irqs during suspend/resume.
Bugzilla: 1173317
RH-Acked-by: Jerome Glisse <jglisse@redhat.com>
RH-Acked-by: Dave Airlie <airlied@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1173317
Upstream: since v3.16.3

commit a82fd71283780f4026125f647f1b1d39ebfcb7c2

Author:     Mario Kleiner <mario.kleiner.de@gmail.com>
AuthorDate: Tue Jul 29 02:36:44 2014 +0200
Commit:     Rob Clark <rclark@redhat.com>
CommitDate: Wed Dec 10 17:04:23 2014 -0500

    drm/nouveau: Dis/Enable vblank irqs during suspend/resume.

    commit 9cba5efab5a8145ae6c52ea273553f069c294482 upstream.

    Vblank irqs don't get disabled during suspend or driver
    unload, which causes irq delivery after "suspend" or
    driver unload, at least until the gpu is powered off.
    This could race with drm_vblank_cleanup() in the case
    of nouveau and cause a use-after-free bug if the driver
    is unloaded.

    More annoyingly during everyday use, at least on nv50
    display engine (likely also others), vblank irqs are
    off after a resume from suspend, but the drm doesn't
    know this, so all vblank related functionality is dead
    after a resume. E.g., all windowed OpenGL clients will
    hang at swapbuffers time, as well as many fullscreen
    clients in many cases. This makes suspend/resume useless
    if one wants to use any OpenGL apps after the resume.

    In Linux 3.16, drm_vblank_on() was added, complementing
    the older drm_vblank_off()  to solve these problems
    elegantly, so use those calls in nouveaus suspend/resume
    code.

    For kernels 3.8 - 3.15, we need to cherry-pick the
    drm_vblank_on() patch to support this patch.

    Signed-off-by: Mario Kleiner <mario.kleiner.de@gmail.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Signed-off-by: Rob Clark <rclark@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nouveau_display.c b/drivers/gpu/drm/nouveau/nouveau_display.c
index 47ad742..dd469db 100644
--- a/drivers/gpu/drm/nouveau/nouveau_display.c
+++ b/drivers/gpu/drm/nouveau/nouveau_display.c
@@ -404,6 +404,11 @@ nouveau_display_fini(struct drm_device *dev)
 {
  struct nouveau_display *disp = nouveau_display(dev);
  struct drm_connector *connector;
+ int head;
+
+ /* Make sure that drm and hw vblank irqs get properly disabled. */
+ for (head = 0; head < dev->mode_config.num_crtc; head++)
+  drm_vblank_off(dev, head);
 
  /* disable hotplug interrupts */
  list_for_each_entry(connector, &dev->mode_config.connector_list, head) {
@@ -620,6 +625,8 @@ void
 nouveau_display_resume(struct drm_device *dev)
 {
  struct drm_crtc *crtc;
+ int head;
+
  nouveau_display_init(dev);
 
  /* Force CLUT to get re-loaded during modeset */
@@ -629,6 +636,10 @@ nouveau_display_resume(struct drm_device *dev)
   nv_crtc->lut.depth = 0;
  }
 
+ /* Make sure that drm and hw vblank irqs get resumed if needed. */
+ for (head = 0; head < dev->mode_config.num_crtc; head++)
+  drm_vblank_on(dev, head);
+
  drm_helper_resume_force_mode(dev);
 
  list_for_each_entry(crtc, &dev->mode_config.crtc_list, head) {
-- 
1.7.1