From 53a4f680fbb18b0086e145b8cdc0ff7f484d248d Mon Sep 17 00:00:00 2001
From: Ivan Vecera <ivecera@redhat.com>
Date: Mon, 8 Sep 2014 16:13:28 -0400
Subject: [ethernet] be2net: Use pci_enable_msix_range() instead of pci_enable_msix()

Message-id: <1410192881-30702-6-git-send-email-ivecera@redhat.com>
Patchwork-id: 92403
O-Subject: [RHEL7.1 PATCH 05/78] benet: Use pci_enable_msix_range() instead of pci_enable_msix()
Bugzilla: 1088575
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>

BZ: #1088575

Upstream commit(s):
commit 7dc4c064943314e1228c8aa0ff7644c7c87b0c8d
Author: Alexander Gordeev <agordeev@redhat.com>
Date:   Tue Feb 18 11:11:40 2014 +0100

    benet: Use pci_enable_msix_range() instead of pci_enable_msix()

    As result of deprecation of MSI-X/MSI enablement functions
    pci_enable_msix() and pci_enable_msi_block() all drivers
    using these two interfaces need to be updated to use the
    new pci_enable_msi_range() and pci_enable_msix_range()
    interfaces.

    Signed-off-by: Alexander Gordeev <agordeev@redhat.com>
    Cc: Sathya Perla <sathya.perla@emulex.com>
    Cc: Subbu Seetharaman <subbu.seetharaman@emulex.com>
    Cc: Ajit Khaparde <ajit.khaparde@emulex.com>
    Cc: netdev@vger.kernel.org
    Cc: linux-pci@vger.kernel.org
    Acked-by: Sathya Perla <sathya.perla@emulex.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Ivan Vecera <ivecera@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/emulex/benet/be_main.c b/drivers/net/ethernet/emulex/benet/be_main.c
index 294a9e9..5912a74 100644
--- a/drivers/net/ethernet/emulex/benet/be_main.c
+++ b/drivers/net/ethernet/emulex/benet/be_main.c
@@ -2507,7 +2507,7 @@ static void be_msix_disable(struct be_adapter *adapter)
 
 static int be_msix_enable(struct be_adapter *adapter)
 {
- int i, status, num_vec;
+ int i, num_vec;
  struct device *dev = &adapter->pdev->dev;
 
  /* If RoCE is supported, program the max number of NIC vectors that
@@ -2523,24 +2523,11 @@ static int be_msix_enable(struct be_adapter *adapter)
  for (i = 0; i < num_vec; i++)
   adapter->msix_entries[i].entry = i;
 
- status = pci_enable_msix(adapter->pdev, adapter->msix_entries, num_vec);
- if (status == 0) {
-  goto done;
- } else if (status >= MIN_MSIX_VECTORS) {
-  num_vec = status;
-  status = pci_enable_msix(adapter->pdev, adapter->msix_entries,
-      num_vec);
-  if (!status)
-   goto done;
- }
+ num_vec = pci_enable_msix_range(adapter->pdev, adapter->msix_entries,
+     MIN_MSIX_VECTORS, num_vec);
+ if (num_vec < 0)
+  goto fail;
 
- dev_warn(dev, "MSIx enable failed\n");
-
- /* INTx is not supported in VFs, so fail probe if enable_msix fails */
- if (!be_physfn(adapter))
-  return status;
- return 0;
-done:
  if (be_roce_supported(adapter) && num_vec > MIN_MSIX_VECTORS) {
   adapter->num_msix_roce_vec = num_vec / 2;
   dev_info(dev, "enabled %d MSI-x vector(s) for RoCE\n",
@@ -2552,6 +2539,14 @@ done:
  dev_info(dev, "enabled %d MSI-x vector(s) for NIC\n",
    adapter->num_msix_vec);
  return 0;
+
+fail:
+ dev_warn(dev, "MSIx enable failed\n");
+
+ /* INTx is not supported in VFs, so fail probe if enable_msix fails */
+ if (!be_physfn(adapter))
+  return num_vec;
+ return 0;
 }
 
 static inline int be_msix_vec_get(struct be_adapter *adapter,
-- 
1.7.1