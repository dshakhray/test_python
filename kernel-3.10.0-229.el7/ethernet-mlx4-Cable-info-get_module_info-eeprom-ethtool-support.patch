From 2bcd83aa75a416e5a29a47460a447b562be7f55b Mon Sep 17 00:00:00 2001
From: Amir Vadai <avadai@redhat.com>
Date: Wed, 29 Oct 2014 15:54:54 -0400
Subject: [ethernet] mlx4: Cable info, get_module_info/eeprom ethtool support

Message-id: <b33057c6d3f0a77212bcec6347d9d7aed526ada4.1414597479.git.avadai@redhat.com>
Patchwork-id: 98509
O-Subject: [Patch RHEL7.1 3/9] ethtool, net/mlx4_en: Cable info, get_module_info/eeprom ethtool support
Bugzilla: 1060221
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

From: Saeed Mahameed <saeedm@mellanox.com>

Added support for get_module_info/get_module_eeprom ethtool support for cable info reading.

Added new cable types enum in include/uapi/linux/ethtool.h for ethtool use.
+#define ETH_MODULE_SFF_8636            0x3
+#define ETH_MODULE_SFF_8636_LEN        256
+#define ETH_MODULE_SFF_8436            0x4
+#define ETH_MODULE_SFF_8436_LEN        256

Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
Signed-off-by: Amir Vadai <amirv@mellanox.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7202da8b7f7131d25411d81aa557e28cd941c5b6)
Signed-off-by: Amir Vadai <avadai@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

Conflicts:
 drivers/net/ethernet/mellanox/mlx4/en_ethtool.c

diff --git a/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c b/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c
index 7979f98..142f0c3 100644
--- a/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c
+++ b/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c
@@ -35,6 +35,7 @@
 #include <linux/ethtool.h>
 #include <linux/netdevice.h>
 #include <linux/mlx4/driver.h>
+#include <linux/mlx4/device.h>
 #include <linux/in.h>
 #include <net/ip.h>
 
@@ -1266,6 +1267,86 @@ static u32 mlx4_en_get_priv_flags(struct net_device *dev)
  return priv->pflags;
 }
 
+static int mlx4_en_get_module_info(struct net_device *dev,
+       struct ethtool_modinfo *modinfo)
+{
+ struct mlx4_en_priv *priv = netdev_priv(dev);
+ struct mlx4_en_dev *mdev = priv->mdev;
+ int ret;
+ u8 data[4];
+
+ /* Read first 2 bytes to get Module & REV ID */
+ ret = mlx4_get_module_info(mdev->dev, priv->port,
+       0/*offset*/, 2/*size*/, data);
+ if (ret < 2)
+  return -EIO;
+
+ switch (data[0] /* identifier */) {
+ case MLX4_MODULE_ID_QSFP:
+  modinfo->type = ETH_MODULE_SFF_8436;
+  modinfo->eeprom_len = ETH_MODULE_SFF_8436_LEN;
+  break;
+ case MLX4_MODULE_ID_QSFP_PLUS:
+  if (data[1] >= 0x3) { /* revision id */
+   modinfo->type = ETH_MODULE_SFF_8636;
+   modinfo->eeprom_len = ETH_MODULE_SFF_8636_LEN;
+  } else {
+   modinfo->type = ETH_MODULE_SFF_8436;
+   modinfo->eeprom_len = ETH_MODULE_SFF_8436_LEN;
+  }
+  break;
+ case MLX4_MODULE_ID_QSFP28:
+  modinfo->type = ETH_MODULE_SFF_8636;
+  modinfo->eeprom_len = ETH_MODULE_SFF_8636_LEN;
+  break;
+ case MLX4_MODULE_ID_SFP:
+  modinfo->type = ETH_MODULE_SFF_8472;
+  modinfo->eeprom_len = ETH_MODULE_SFF_8472_LEN;
+  break;
+ default:
+  return -ENOSYS;
+ }
+
+ return 0;
+}
+
+static int mlx4_en_get_module_eeprom(struct net_device *dev,
+         struct ethtool_eeprom *ee,
+         u8 *data)
+{
+ struct mlx4_en_priv *priv = netdev_priv(dev);
+ struct mlx4_en_dev *mdev = priv->mdev;
+ int offset = ee->offset;
+ int i = 0, ret;
+
+ if (ee->len == 0)
+  return -EINVAL;
+
+ memset(data, 0, ee->len);
+
+ while (i < ee->len) {
+  en_dbg(DRV, priv,
+         "mlx4_get_module_info i(%d) offset(%d) len(%d)\n",
+         i, offset, ee->len - i);
+
+  ret = mlx4_get_module_info(mdev->dev, priv->port,
+        offset, ee->len - i, data + i);
+
+  if (!ret) /* Done reading */
+   return 0;
+
+  if (ret < 0) {
+   en_err(priv,
+          "mlx4_get_module_info i(%d) offset(%d) bytes_to_read(%d) - FAILED (0x%x)\n",
+          i, offset, ee->len - i, ret);
+   return 0;
+  }
+
+  i += ret;
+  offset += ret;
+ }
+ return 0;
+}
 
 const struct ethtool_ops mlx4_en_ethtool_ops = {
  .get_drvinfo = mlx4_en_get_drvinfo,
@@ -1296,6 +1377,8 @@ const struct ethtool_ops mlx4_en_ethtool_ops = {
  .get_ts_info = mlx4_en_get_ts_info,
  .set_priv_flags = mlx4_en_set_priv_flags,
  .get_priv_flags = mlx4_en_get_priv_flags,
+ .get_module_info = mlx4_en_get_module_info,
+ .get_module_eeprom = mlx4_en_get_module_eeprom
 };
 
 
diff --git a/include/uapi/linux/ethtool.h b/include/uapi/linux/ethtool.h
index c51382e..33e7d12 100644
--- a/include/uapi/linux/ethtool.h
+++ b/include/uapi/linux/ethtool.h
@@ -1101,6 +1101,10 @@ enum ethtool_sfeatures_retval_bits {
 #define ETH_MODULE_SFF_8079_LEN  256
 #define ETH_MODULE_SFF_8472  0x2
 #define ETH_MODULE_SFF_8472_LEN  512
+#define ETH_MODULE_SFF_8636  0x3
+#define ETH_MODULE_SFF_8636_LEN  256
+#define ETH_MODULE_SFF_8436  0x4
+#define ETH_MODULE_SFF_8436_LEN  256
 
 /* Reset flags */
 /* The reset() operation must clear the flags for the components which
-- 
1.7.1