From fa7dd442e2fd14551bcf1569255d9a88525d0e9e Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Mon, 23 Jun 2014 21:49:52 -0400
Subject: [net] svcrpc: explicitly reject compounds that are not padded out to 4-byte multiple

Message-id: <1403560314-32525-51-git-send-email-bfields@redhat.com>
Patchwork-id: 84461
O-Subject: [Patch RHEL7 050/172] svcrpc: explicitly reject compounds that are not padded out to 4-byte multiple
Bugzilla: 1111719
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Jeff Layton <jlayton@redhat.com>

We have a WARN_ON in the nfsd4_decode_write() that tells us when the
client has sent a request that is not padded out properly according to
RFC4506. A WARN_ON really isn't appropriate in this case though since
this indicates a client bug, not a server one.

Move this check out to the top-level compound decoder and have it just
explicitly return an error. Also add a dprintk() that shows the client
address and xid to help track down clients and frames that trigger it.

Signed-off-by: Jeff Layton <jlayton@redhat.com>
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: e874f9f8e04cb67351893894dfb9fbcd25e62fa2
Bugzilla: 1111719
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4xdr.c b/fs/nfsd/nfs4xdr.c
index aa04a6a..93b50ba 100644
--- a/fs/nfsd/nfs4xdr.c
+++ b/fs/nfsd/nfs4xdr.c
@@ -1222,7 +1222,6 @@ nfsd4_decode_write(struct nfsd4_compoundargs *argp, struct nfsd4_write *write)
  }
  write->wr_head.iov_base = p;
  write->wr_head.iov_len = avail;
- WARN_ON(avail != (XDR_QUADLEN(avail) << 2));
  write->wr_pagelist = argp->pagelist;
 
  len = XDR_QUADLEN(write->wr_buflen) << 2;
@@ -3696,6 +3695,12 @@ int nfsd4_release_compoundargs(void *rq, __be32 *p, void *resp)
 int
 nfs4svc_decode_compoundargs(struct svc_rqst *rqstp, __be32 *p, struct nfsd4_compoundargs *args)
 {
+ if (rqstp->rq_arg.head[0].iov_len % 4) {
+  /* client is nuts */
+  dprintk("%s: compound not properly padded! (peeraddr=%pISc xid=0x%x)",
+   __func__, svc_addr(rqstp), be32_to_cpu(rqstp->rq_xid));
+  return 0;
+ }
  args->p = p;
  args->end = rqstp->rq_arg.head[0].iov_base + rqstp->rq_arg.head[0].iov_len;
  args->pagelist = rqstp->rq_arg.pages;
-- 
1.7.1