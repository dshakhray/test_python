From e9fc12d1b02b7d8a8d43c735d046e44716ecb9db Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Tue, 16 Sep 2014 16:30:08 -0400
Subject: [fs] quota: avoid unnecessary dqget()/dqput() calls

Message-id: <1410885010-4200-2-git-send-email-lczerner@redhat.com>
Patchwork-id: 95091
O-Subject: [RHEL 7.1 PATCH 2/4] quota: avoid unnecessary dqget()/dqput() calls
Bugzilla: 1053111
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Niu Yawei <yawei.niu@gmail.com>

BZ 1053111
https://bugzilla.redhat.com/show_bug.cgi?id=1053111

BREW 7965550
https://brewweb.devel.redhat.com/taskinfo?taskID=7965550

Upstream commit 1ea06bec78a128adc995ca32bd906a6c9bb9cf91

 Avoid unnecessary dqget()/dqput() calls in __dquot_initialize(),
 that will introduce global lock contention otherwise.

 Signed-off-by: Lai Siyao <lai.siyao@intel.com>
 Signed-off-by: Niu Yawei <yawei.niu@intel.com>
 Signed-off-by: Jan Kara <jack@suse.cz>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/quota/dquot.c b/fs/quota/dquot.c
index a6d992d..5601647 100644
--- a/fs/quota/dquot.c
+++ b/fs/quota/dquot.c
@@ -1400,7 +1400,7 @@ static int dquot_active(const struct inode *inode)
  */
 static void __dquot_initialize(struct inode *inode, int type)
 {
- int cnt;
+ int cnt, init_needed = 0;
  struct dquot *got[MAXQUOTAS];
  struct super_block *sb = inode->i_sb;
  qsize_t rsv;
@@ -1416,6 +1416,15 @@ static void __dquot_initialize(struct inode *inode, int type)
   got[cnt] = NULL;
   if (type != -1 && cnt != type)
    continue;
+  /*
+   * The i_dquot should have been initialized in most cases,
+   * we check it without locking here to avoid unnecessary
+   * dqget()/dqput() calls.
+   */
+  if (inode->i_dquot[cnt])
+   continue;
+  init_needed = 1;
+
   switch (cnt) {
   case USRQUOTA:
    qid = make_kqid_uid(inode->i_uid);
@@ -1427,6 +1436,10 @@ static void __dquot_initialize(struct inode *inode, int type)
   got[cnt] = dqget(sb, qid);
  }
 
+ /* All required i_dquot has been initialized */
+ if (!init_needed)
+  return;
+
  down_write(&sb_dqopt(sb)->dqptr_sem);
  if (IS_NOQUOTA(inode))
   goto out_err;
-- 
1.7.1