From 7068e2b4e606248343a349f120088ac2e758ee21 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:09:29 -0400
Subject: [virt] kvm/ppc: book3s hv - Add handler for HV facility unavailable

Message-id: <1410545655-205645-341-git-send-email-dzickus@redhat.com>
Patchwork-id: 94642
O-Subject: [RHEL7 PATCH 340/626] KVM: PPC: Book3S HV: Add handler for HV facility unavailable
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit bd3048b80caace9cf0ae9ad22b2fbb8333b44a97
Author: Michael Ellerman <michael@ellerman.id.au>
Date:   Wed Jan 8 21:25:23 2014 +1100

    KVM: PPC: Book3S HV: Add handler for HV facility unavailable

    At present this should never happen, since the host kernel sets
    HFSCR to allow access to all facilities.  It's better to be prepared
    to handle it cleanly if it does ever happen, though.

    Signed-off-by: Michael Ellerman <michael@ellerman.id.au>
    Signed-off-by: Paul Mackerras <paulus@samba.org>
    Signed-off-by: Alexander Graf <agraf@suse.de>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/kvm_asm.h b/arch/powerpc/include/asm/kvm_asm.h
index 1bd92fd..dba8fb2 100644
--- a/arch/powerpc/include/asm/kvm_asm.h
+++ b/arch/powerpc/include/asm/kvm_asm.h
@@ -99,6 +99,7 @@
 #define BOOK3S_INTERRUPT_PERFMON 0xf00
 #define BOOK3S_INTERRUPT_ALTIVEC 0xf20
 #define BOOK3S_INTERRUPT_VSX  0xf40
+#define BOOK3S_INTERRUPT_H_FAC_UNAVAIL 0xf80
 
 #define BOOK3S_IRQPRIO_SYSTEM_RESET  0
 #define BOOK3S_IRQPRIO_DATA_SEGMENT  1
diff --git a/arch/powerpc/kvm/book3s_hv.c b/arch/powerpc/kvm/book3s_hv.c
index 8811056..5146188 100644
--- a/arch/powerpc/kvm/book3s_hv.c
+++ b/arch/powerpc/kvm/book3s_hv.c
@@ -706,7 +706,16 @@ static int kvmppc_handle_exit_hv(struct kvm_run *run, struct kvm_vcpu *vcpu,
   * we don't emulate any guest instructions at this stage.
   */
  case BOOK3S_INTERRUPT_H_EMUL_ASSIST:
-  kvmppc_core_queue_program(vcpu, 0x80000);
+  kvmppc_core_queue_program(vcpu, SRR1_PROGILL);
+  r = RESUME_GUEST;
+  break;
+ /*
+  * This occurs if the guest (kernel or userspace), does something that
+  * is prohibited by HFSCR.  We just generate a program interrupt to
+  * the guest.
+  */
+ case BOOK3S_INTERRUPT_H_FAC_UNAVAIL:
+  kvmppc_core_queue_program(vcpu, SRR1_PROGILL);
   r = RESUME_GUEST;
   break;
  default:
-- 
1.7.1