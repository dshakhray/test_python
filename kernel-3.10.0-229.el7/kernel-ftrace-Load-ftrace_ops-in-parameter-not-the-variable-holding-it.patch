From 91ea1fa16c5b090a79c453ad203813454ff8a27b Mon Sep 17 00:00:00 2001
From: Josh Poimboeuf <jpoimboe@redhat.com>
Date: Thu, 4 Sep 2014 18:54:27 -0400
Subject: [kernel] ftrace: Load ftrace_ops in parameter not the variable holding it

Message-id: <d5510e3e4af3381185ceaa8527dc2ac55997183d.1409856554.git.jpoimboe@redhat.com>
Patchwork-id: 91243
O-Subject: [RHEL7.1 PATCH 08/23] ftrace/x86: Load ftrace_ops in parameter not the variable holding it
Bugzilla: 1113829
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1113829

commit 1739f09e33d8f66bf48ddbc3eca615574da6c4f6
Author: Steven Rostedt <rostedt@goodmis.org>
Date:   Wed Nov 13 15:20:04 2013 -0500

    ftrace/x86: Load ftrace_ops in parameter not the variable holding it

    Function tracing callbacks expect to have the ftrace_ops that registered it
    passed to them, not the address of the variable that holds the ftrace_ops
    that registered it.

    Use a mov instead of a lea to store the ftrace_ops into the parameter
    of the function tracing callback.

    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Reviewed-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
    Link: http://lkml.kernel.org/r/20131113152004.459787f9@gandalf.local.home
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Cc: <stable@vger.kernel.org> # v3.8+

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kernel/entry_32.S b/arch/x86/kernel/entry_32.S
index c9eb4e2..788c4f9 100644
--- a/arch/x86/kernel/entry_32.S
+++ b/arch/x86/kernel/entry_32.S
@@ -1085,7 +1085,7 @@ ENTRY(ftrace_caller)
  pushl $0 /* Pass NULL as regs pointer */
  movl 4*4(%esp), %eax
  movl 0x4(%ebp), %edx
- leal function_trace_op, %ecx
+ movl function_trace_op, %ecx
  subl $MCOUNT_INSN_SIZE, %eax
 
 .globl ftrace_call
@@ -1143,7 +1143,7 @@ ENTRY(ftrace_regs_caller)
  movl 12*4(%esp), %eax /* Load ip (1st parameter) */
  subl $MCOUNT_INSN_SIZE, %eax /* Adjust ip */
  movl 0x4(%ebp), %edx /* Load parent ip (2nd parameter) */
- leal function_trace_op, %ecx /* Save ftrace_pos in 3rd parameter */
+ movl function_trace_op, %ecx /* Save ftrace_pos in 3rd parameter */
  pushl %esp  /* Save pt_regs as 4th parameter */
 
 GLOBAL(ftrace_regs_call)
diff --git a/arch/x86/kernel/entry_64.S b/arch/x86/kernel/entry_64.S
index 5136404..7f8b571 100644
--- a/arch/x86/kernel/entry_64.S
+++ b/arch/x86/kernel/entry_64.S
@@ -88,7 +88,7 @@ END(function_hook)
  MCOUNT_SAVE_FRAME \skip
 
  /* Load the ftrace_ops into the 3rd parameter */
- leaq function_trace_op, %rdx
+ movq function_trace_op(%rip), %rdx
 
  /* Load ip into the first parameter */
  movq RIP(%rsp), %rdi
-- 
1.7.1