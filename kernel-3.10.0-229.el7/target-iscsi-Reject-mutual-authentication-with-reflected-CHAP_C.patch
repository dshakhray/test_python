From cf7602dee98aacfeca21e9993729c9f767f8789b Mon Sep 17 00:00:00 2001
From: Andy Grover <agrover@redhat.com>
Date: Fri, 5 Sep 2014 16:36:17 -0400
Subject: [target] iscsi: Reject mutual authentication with reflected CHAP_C

Message-id: <1409934989-29941-20-git-send-email-agrover@redhat.com>
Patchwork-id: 91475
O-Subject: [RHEL7.1 PATCH e-stor 19/31] iscsi-target: Reject mutual authentication with reflected CHAP_C
Bugzilla: 1129387
RH-Acked-by: Chris Leech <cleech@redhat.com>
RH-Acked-by: Rob Evers <revers@redhat.com>

From: Nicholas Bellinger <nab@linux-iscsi.org>

commit 1d2b60a5545942b1376cb48c1d55843d71e3a08f upstream.

This patch adds an explicit check in chap_server_compute_md5() to ensure
the CHAP_C value received from the initiator during mutual authentication
does not match the original CHAP_C provided by the target.

This is in line with RFC-3720, section 8.2.1:

   Originators MUST NOT reuse the CHAP challenge sent by the Responder
   for the other direction of a bidirectional authentication.
   Responders MUST check for this condition and close the iSCSI TCP
   connection if it occurs.

Reported-by: Tejas Vaykole <tejas.vaykole@calsoftinc.com>
Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/target/iscsi/iscsi_target_auth.c b/drivers/target/iscsi/iscsi_target_auth.c
index 130a1e4..3c9a8df 100644
--- a/drivers/target/iscsi/iscsi_target_auth.c
+++ b/drivers/target/iscsi/iscsi_target_auth.c
@@ -316,6 +316,16 @@ static int chap_server_compute_md5(
   goto out;
  }
  /*
+  * During mutual authentication, the CHAP_C generated by the
+  * initiator must not match the original CHAP_C generated by
+  * the target.
+  */
+ if (!memcmp(challenge_binhex, chap->challenge, CHAP_CHALLENGE_LENGTH)) {
+  pr_err("initiator CHAP_C matches target CHAP_C, failing"
+         " login attempt\n");
+  goto out;
+ }
+ /*
   * Generate CHAP_N and CHAP_R for mutual authentication.
   */
  tfm = crypto_alloc_hash("md5", 0, CRYPTO_ALG_ASYNC);
-- 
1.7.1