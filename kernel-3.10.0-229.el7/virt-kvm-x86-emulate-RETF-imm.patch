From 4721fbf659f381547bfe3fd99dffc12c9a8fbb00 Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:37:51 -0400
Subject: [virt] kvm/x86: emulate RETF imm

Message-id: <1406040016-3289-77-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86155
O-Subject: [RHEL7 PATCH v2 076/221] KVM: x86 emulator: emulate RETF imm
Bugzilla: 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Bruce Rogers <brogers@suse.com>

Opcode CA

This gets used by a DOS based NetWare guest.

Signed-off-by: Bruce Rogers <brogers@suse.com>
Reviewed-by: Gleb Natapov <gleb@redhat.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 3261107ebfd8f6bba57cfcdb89385779fd149a00)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kvm/emulate.c b/arch/x86/kvm/emulate.c
index 7974420..ef99302 100644
--- a/arch/x86/kvm/emulate.c
+++ b/arch/x86/kvm/emulate.c
@@ -2025,6 +2025,17 @@ static int em_ret_far(struct x86_emulate_ctxt *ctxt)
  return rc;
 }
 
+static int em_ret_far_imm(struct x86_emulate_ctxt *ctxt)
+{
+        int rc;
+
+        rc = em_ret_far(ctxt);
+        if (rc != X86EMUL_CONTINUE)
+                return rc;
+        rsp_increment(ctxt, ctxt->src.val);
+        return X86EMUL_CONTINUE;
+}
+
 static int em_cmpxchg(struct x86_emulate_ctxt *ctxt)
 {
  /* Save real source value, then compare EAX against destination. */
@@ -3780,7 +3791,8 @@ static const struct opcode opcode_table[256] = {
  G(ByteOp, group11), G(0, group11),
  /* 0xC8 - 0xCF */
  I(Stack | SrcImmU16 | Src2ImmByte, em_enter), I(Stack, em_leave),
- N, I(ImplicitOps | Stack, em_ret_far),
+ I(ImplicitOps | Stack | SrcImmU16, em_ret_far_imm),
+ I(ImplicitOps | Stack, em_ret_far),
  D(ImplicitOps), DI(SrcImmByte, intn),
  D(ImplicitOps | No64), II(ImplicitOps, em_iret, iret),
  /* 0xD0 - 0xD7 */
-- 
1.7.1