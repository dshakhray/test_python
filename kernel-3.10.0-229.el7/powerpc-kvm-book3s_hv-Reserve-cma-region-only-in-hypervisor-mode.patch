From bd05b4535e585018c968d1c0b56ce5348af0192b Mon Sep 17 00:00:00 2001
From: Gustavo Duarte <gduarte@redhat.com>
Date: Fri, 5 Dec 2014 14:58:30 -0500
Subject: [powerpc] kvm: book3s_hv - Reserve cma region only in hypervisor mode

Message-id: <1417791510-14765-1-git-send-email-gduarte@redhat.com>
Patchwork-id: 101159
O-Subject: [RHEL7.1 PATCH BZ 1147740] KVM: PPC: BOOK3S: HV: CMA: Reserve cma region only in hypervisor mode
Bugzilla: 1147740
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

BZ 1147740
Upstream Status: cec26bc3c125b5dd12a02f04133cd91eae3f1622
Build Info: https://brewweb.devel.redhat.com/taskinfo?taskID=8332140
ppc4le: https://brewweb.devel.redhat.com/taskinfo?taskID=8332154
Tested: Sanity checks on ppc64 and ppc64le.

commit cec26bc3c125b5dd12a02f04133cd91eae3f1622
Author: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
Date:   Mon Sep 29 13:32:38 2014 +0530

    KVM: PPC: BOOK3S: HV: CMA: Reserve cma region only in hypervisor mode

    We use cma reserved area for creating guest hash page table.
    Don't do the reservation in non-hypervisor mode. This avoids unnecessary
    CMA reservation when booting with limited memory configs like
    fadump and kdump.

    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Reviewed-by: Alexander Graf <agraf@suse.de>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kvm/book3s_hv_builtin.c b/arch/powerpc/kvm/book3s_hv_builtin.c
index 3b41447..f719a14 100644
--- a/arch/powerpc/kvm/book3s_hv_builtin.c
+++ b/arch/powerpc/kvm/book3s_hv_builtin.c
@@ -157,6 +157,12 @@ void __init kvm_cma_reserve(void)
  unsigned long align_size;
  struct memblock_region *reg;
  phys_addr_t selected_size = 0;
+
+ /*
+  * We need CMA reservation only when we are in HV mode
+  */
+ if (!cpu_has_feature(CPU_FTR_HVMODE))
+  return;
  /*
   * We cannot use memblock_phys_mem_size() here, because
   * memblock_analyze() has not been called yet.
-- 
1.7.1