From b0e37f821a408b23984bf6f4259ceed95b1721e1 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 10 Jul 2014 01:05:55 -0400
Subject: [acpi] hotplug/pci: Don't trim devices before scanning the namespace

Message-id: <20140710010555.22146.61497.stgit@gir.stowe>
Patchwork-id: 85613
O-Subject: [RHEL7.1 PATCH 074/105] ACPI / hotplug / PCI: Don't trim devices before scanning the namespace
Bugzilla: 1114228
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1114228
Upstream Status: 89ec2f2ee104970329139e6526a075113c92f650

commit 89ec2f2ee104970329139e6526a075113c92f650
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Sep 5 23:39:20 2013 +0200

    ACPI / hotplug / PCI: Don't trim devices before scanning the namespace

    In acpiphp_bus_add() we first remove device objects corresponding to
    the given handle and the ACPI namespace branch below it, which are
    then re-created by acpi_bus_scan().  This used to be done to clean
    up after surprise removals, but now we do the cleanup through
    trim_stale_devices() which checks if the devices in question are
    actually gone before removing them, so the device hierarchy trimming
    in acpiphp_bus_add() is not necessary any more and, moreover, it may
    lead to problems if it removes device objects corresponding to
    devices that are actually present.

    For this reason, remove the leftover acpiphp_bus_trim() from
    acpiphp_bus_add().

    Reported-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/hotplug/acpiphp_glue.c b/drivers/pci/hotplug/acpiphp_glue.c
index 13c7fa2..b757beb 100644
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@ -487,7 +487,6 @@ static void acpiphp_bus_add(acpi_handle handle)
 {
  struct acpi_device *adev = NULL;
 
- acpiphp_bus_trim(handle);
  acpi_bus_scan(handle);
  acpi_bus_get_device(handle, &adev);
  if (adev)
-- 
1.7.1