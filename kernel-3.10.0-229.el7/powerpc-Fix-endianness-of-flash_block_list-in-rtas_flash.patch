From 0e26f5ba15cce33a3848acb39666df85bfe22d2f Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:13:54 -0400
Subject: [powerpc] Fix endianness of flash_block_list in rtas_flash

Message-id: <1410545655-205645-606-git-send-email-dzickus@redhat.com>
Patchwork-id: 94668
O-Subject: [RHEL7 PATCH 605/626] powerpc: Fix endianness of flash_block_list in rtas_flash
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 396a34340cdf7373c00e3977db27d1a20ea65ebc
Author: Thomas Falcon <tlfalcon@linux.vnet.ibm.com>
Date:   Fri Jul 25 12:47:42 2014 -0500

    powerpc: Fix endianness of flash_block_list in rtas_flash

    The function rtas_flash_firmware passes the address of a data structure,
    flash_block_list, when making the update-flash-64-and-reboot rtas call.
    While the endianness of the address is handled correctly, the endianness
    of the data is not.  This patch ensures that the data in flash_block_list
    is big endian when passed to rtas on little endian hosts.

    Signed-off-by: Thomas Falcon <tlfalcon@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kernel/rtas_flash.c b/arch/powerpc/kernel/rtas_flash.c
index 658e89d..db2b482 100644
--- a/arch/powerpc/kernel/rtas_flash.c
+++ b/arch/powerpc/kernel/rtas_flash.c
@@ -611,17 +611,19 @@ static void rtas_flash_firmware(int reboot_type)
  for (f = flist; f; f = next) {
   /* Translate data addrs to absolute */
   for (i = 0; i < f->num_blocks; i++) {
-   f->blocks[i].data = (char *)__pa(f->blocks[i].data);
+   f->blocks[i].data = (char *)cpu_to_be64(__pa(f->blocks[i].data));
    image_size += f->blocks[i].length;
+   f->blocks[i].length = cpu_to_be64(f->blocks[i].length);
   }
   next = f->next;
   /* Don't translate NULL pointer for last entry */
   if (f->next)
-   f->next = (struct flash_block_list *)__pa(f->next);
+   f->next = (struct flash_block_list *)cpu_to_be64(__pa(f->next));
   else
    f->next = NULL;
   /* make num_blocks into the version/length field */
   f->num_blocks = (FLASH_BLOCK_LIST_VERSION << 56) | ((f->num_blocks+1)*16);
+  f->num_blocks = cpu_to_be64(f->num_blocks);
  }
 
  printk(KERN_ALERT "FLASH: flash image is %ld bytes\n", image_size);
-- 
1.7.1