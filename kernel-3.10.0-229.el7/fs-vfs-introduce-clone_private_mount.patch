From fabef3780300da220e964d8a3f34aa3f26507866 Mon Sep 17 00:00:00 2001
From: David Howells <dhowells@redhat.com>
Date: Tue, 25 Nov 2014 16:34:44 -0500
Subject: [fs] vfs: introduce clone_private_mount()

Message-id: <20141125163444.18115.3580.stgit@warthog.procyon.org.uk>
Patchwork-id: 100925
O-Subject: [PATCH 25/47] vfs: introduce clone_private_mount()
Bugzilla: 985875
RH-Acked-by: Steve Best <sbest@redhat.com>

From: Miklos Szeredi <mszeredi@suse.cz>

Overlayfs needs a private clone of the mount, so create a function for
this and export to modules.

Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
Original-commit: c771d683a62e5d36bc46036f5c07f4f5bb7dda61
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/namespace.c b/fs/namespace.c
index 6b3a48e..dc1a97c 100644
--- a/fs/namespace.c
+++ b/fs/namespace.c
@@ -1474,6 +1474,33 @@ void drop_collected_mounts(struct vfsmount *mnt)
  namespace_unlock();
 }
 
+/**
+ * clone_private_mount - create a private clone of a path
+ *
+ * This creates a new vfsmount, which will be the clone of @path.  The new will
+ * not be attached anywhere in the namespace and will be private (i.e. changes
+ * to the originating mount won't be propagated into this).
+ *
+ * Release with mntput().
+ */
+struct vfsmount *clone_private_mount(struct path *path)
+{
+ struct mount *old_mnt = real_mount(path->mnt);
+ struct mount *new_mnt;
+
+ if (IS_MNT_UNBINDABLE(old_mnt))
+  return ERR_PTR(-EINVAL);
+
+ down_read(&namespace_sem);
+ new_mnt = clone_mnt(old_mnt, path->dentry, CL_PRIVATE);
+ up_read(&namespace_sem);
+ if (IS_ERR(new_mnt))
+  return ERR_CAST(new_mnt);
+
+ return &new_mnt->mnt;
+}
+EXPORT_SYMBOL_GPL(clone_private_mount);
+
 int iterate_mounts(int (*f)(struct vfsmount *, void *), void *arg,
      struct vfsmount *root)
 {
diff --git a/include/linux/mount.h b/include/linux/mount.h
index e915c10..61b196b 100644
--- a/include/linux/mount.h
+++ b/include/linux/mount.h
@@ -72,6 +72,9 @@ extern void mnt_pin(struct vfsmount *mnt);
 extern void mnt_unpin(struct vfsmount *mnt);
 extern int __mnt_is_readonly(struct vfsmount *mnt);
 
+struct path;
+extern struct vfsmount *clone_private_mount(struct path *path);
+
 struct file_system_type;
 extern struct vfsmount *vfs_kern_mount(struct file_system_type *type,
           int flags, const char *name,
-- 
1.7.1