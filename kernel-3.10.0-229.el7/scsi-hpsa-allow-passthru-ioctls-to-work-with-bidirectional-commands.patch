From 476dcd2970b5b3d4b79260ae5a3cde2e559f7623 Mon Sep 17 00:00:00 2001
From: Tomas Henzl <thenzl@redhat.com>
Date: Mon, 8 Sep 2014 14:31:48 -0400
Subject: [scsi] hpsa: allow passthru ioctls to work with bidirectional commands

Message-id: <1410186734-19986-58-git-send-email-thenzl@redhat.com>
Patchwork-id: 92060
O-Subject: [RHEL6.6 e-stor PATCH 57/83] hpsa: allow passthru ioctls to work with bidirectional commands
Bugzilla: 1069185
RH-Acked-by: Maurizio Lombardi <mlombard@redhat.com>
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Ewan Milne <emilne@redhat.com>

Treat the the data direction bits as a bit mask allowing both
READ and WRITE at the same time instead of testing for equality
to see if it's a exclusively a READ or a WRITE.

Signed-off-by: Stephen M. Cameron <scameron@beardog.cce.hp.com>
Reviewed-by: Mike Miller <michael.miller@canonical.com>
Reviewed-by: Webb Scales <webb.scales@hp.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 9233fb10f35ab523f788e635ff07c355bb31bbdd)
---
 drivers/scsi/hpsa.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/hpsa.c b/drivers/scsi/hpsa.c
index 1c21ad5..022b59c 100644
--- a/drivers/scsi/hpsa.c
+++ b/drivers/scsi/hpsa.c
@@ -4969,7 +4969,7 @@ static int hpsa_passthru_ioctl(struct ctlr_info *h, void __user *argp)
   buff = kmalloc(iocommand.buf_size, GFP_KERNEL);
   if (buff == NULL)
    return -EFAULT;
-  if (iocommand.Request.Type.Direction == XFER_WRITE) {
+  if (iocommand.Request.Type.Direction & XFER_WRITE) {
    /* Copy the data into the buffer we created */
    if (copy_from_user(buff, iocommand.buf,
     iocommand.buf_size)) {
@@ -5032,7 +5032,7 @@ static int hpsa_passthru_ioctl(struct ctlr_info *h, void __user *argp)
   rc = -EFAULT;
   goto out;
  }
- if (iocommand.Request.Type.Direction == XFER_READ &&
+ if ((iocommand.Request.Type.Direction & XFER_READ) &&
   iocommand.buf_size > 0) {
   /* Copy the data out of the buffer we created */
   if (copy_to_user(iocommand.buf, buff, iocommand.buf_size)) {
@@ -5109,7 +5109,7 @@ static int hpsa_big_passthru_ioctl(struct ctlr_info *h, void __user *argp)
    status = -ENOMEM;
    goto cleanup1;
   }
-  if (ioc->Request.Type.Direction == XFER_WRITE) {
+  if (ioc->Request.Type.Direction & XFER_WRITE) {
    if (copy_from_user(buff[sg_used], data_ptr, sz)) {
     status = -ENOMEM;
     goto cleanup1;
@@ -5161,7 +5161,7 @@ static int hpsa_big_passthru_ioctl(struct ctlr_info *h, void __user *argp)
   status = -EFAULT;
   goto cleanup0;
  }
- if (ioc->Request.Type.Direction == XFER_READ && ioc->buf_size > 0) {
+ if ((ioc->Request.Type.Direction & XFER_READ) && ioc->buf_size > 0) {
   /* Copy the data out of the buffer we created */
   BYTE __user *ptr = ioc->buf;
   for (i = 0; i < sg_used; i++) {
-- 
1.7.1