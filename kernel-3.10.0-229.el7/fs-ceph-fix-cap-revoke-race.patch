From c3a50ab97b0d79fbe5782dc2df8edcfa9abf2bdf Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:22:18 -0400
Subject: [fs] ceph: fix cap revoke race
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-32-git-send-email-sweil@redhat.com>
Patchwork-id: 89576
O-Subject: [PATCH 031/303] ceph: fix cap revoke race
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: "Yan, Zheng" <zheng.z.yan@intel.com>

If caps are been revoking by the auth MDS, don't consider them as
issued even they are still issued by non-auth MDS. The non-auth
MDS should also be revoking/exporting these caps, the client just
hasn't received the cap revoke/export message.

The race I encountered is: When caps are exporting to new MDS, the
client receives cap import message and cap revoke message from the
new MDS, then receives cap export message from the old MDS. When
the client receives cap revoke message from the new MDS, the revoking
caps are still issued by the old MDS, so the client does nothing.
Later when the cap export message is received, the client removes
the caps issued by the old MDS. (Another way to fix the race is
calling ceph_check_caps() in handle_cap_export())

Signed-off-by: Yan, Zheng <zheng.z.yan@intel.com>
Reviewed-by: Sage Weil <sage@inktank.com>
(cherry picked from commit b1530f57042297f85330a140a6921b6f95fe74d3)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ceph/caps.c b/fs/ceph/caps.c
index 16266f3..7045a8d 100644
--- a/fs/ceph/caps.c
+++ b/fs/ceph/caps.c
@@ -690,6 +690,15 @@ int __ceph_caps_issued(struct ceph_inode_info *ci, int *implemented)
   if (implemented)
    *implemented |= cap->implemented;
  }
+ /*
+  * exclude caps issued by non-auth MDS, but are been revoking
+  * by the auth MDS. The non-auth MDS should be revoking/exporting
+  * these caps, but the message is delayed.
+  */
+ if (ci->i_auth_cap) {
+  cap = ci->i_auth_cap;
+  have &= ~cap->implemented | cap->issued;
+ }
  return have;
 }
 
-- 
1.7.1