From 3d2d4e2ebc514debf7f5b616fe2917c493d0a5e0 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:07:43 -0400
Subject: [powerpc] powernv: Fix OPAL LPC access in Little Endian

Message-id: <1410545655-205645-235-git-send-email-dzickus@redhat.com>
Patchwork-id: 94321
O-Subject: [RHEL7 PATCH 234/626] powerpc/powernv: Fix OPAL LPC access in Little Endian
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 803c2d2f84da9dc2619449994af34d27148ab20d
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Fri Dec 13 15:56:06 2013 +1100

    powerpc/powernv: Fix OPAL LPC access in Little Endian

    We are passing pointers to the firmware for reads, we need to properly
    convert the result as OPAL is always BE.

    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/opal.h b/arch/powerpc/include/asm/opal.h
index 9873a26..a4041e9 100644
--- a/arch/powerpc/include/asm/opal.h
+++ b/arch/powerpc/include/asm/opal.h
@@ -817,7 +817,7 @@ int64_t opal_xscom_write(uint32_t gcid, uint32_t pcb_addr, uint64_t val);
 int64_t opal_lpc_write(uint32_t chip_id, enum OpalLPCAddressType addr_type,
          uint32_t addr, uint32_t data, uint32_t sz);
 int64_t opal_lpc_read(uint32_t chip_id, enum OpalLPCAddressType addr_type,
-        uint32_t addr, uint32_t *data, uint32_t sz);
+        uint32_t addr, __be32 *data, uint32_t sz);
 int64_t opal_validate_flash(uint64_t buffer, uint32_t *size, uint32_t *result);
 int64_t opal_manage_flash(uint8_t op);
 int64_t opal_update_flash(uint64_t blk_list);
diff --git a/arch/powerpc/platforms/powernv/opal-lpc.c b/arch/powerpc/platforms/powernv/opal-lpc.c
index e7e59e4..79d83ca 100644
--- a/arch/powerpc/platforms/powernv/opal-lpc.c
+++ b/arch/powerpc/platforms/powernv/opal-lpc.c
@@ -24,25 +24,25 @@ static int opal_lpc_chip_id = -1;
 static u8 opal_lpc_inb(unsigned long port)
 {
  int64_t rc;
- uint32_t data;
+ __be32 data;
 
  if (opal_lpc_chip_id < 0 || port > 0xffff)
   return 0xff;
  rc = opal_lpc_read(opal_lpc_chip_id, OPAL_LPC_IO, port, &data, 1);
- return rc ? 0xff : data;
+ return rc ? 0xff : be32_to_cpu(data);
 }
 
 static __le16 __opal_lpc_inw(unsigned long port)
 {
  int64_t rc;
- uint32_t data;
+ __be32 data;
 
  if (opal_lpc_chip_id < 0 || port > 0xfffe)
   return 0xffff;
  if (port & 1)
   return (__le16)opal_lpc_inb(port) << 8 | opal_lpc_inb(port + 1);
  rc = opal_lpc_read(opal_lpc_chip_id, OPAL_LPC_IO, port, &data, 2);
- return rc ? 0xffff : data;
+ return rc ? 0xffff : be32_to_cpu(data);
 }
 static u16 opal_lpc_inw(unsigned long port)
 {
@@ -52,7 +52,7 @@ static u16 opal_lpc_inw(unsigned long port)
 static __le32 __opal_lpc_inl(unsigned long port)
 {
  int64_t rc;
- uint32_t data;
+ __be32 data;
 
  if (opal_lpc_chip_id < 0 || port > 0xfffc)
   return 0xffffffff;
@@ -62,7 +62,7 @@ static __le32 __opal_lpc_inl(unsigned long port)
          (__le32)opal_lpc_inb(port + 2) <<  8 |
           opal_lpc_inb(port + 3);
  rc = opal_lpc_read(opal_lpc_chip_id, OPAL_LPC_IO, port, &data, 4);
- return rc ? 0xffffffff : data;
+ return rc ? 0xffffffff : be32_to_cpu(data);
 }
 
 static u32 opal_lpc_inl(unsigned long port)
-- 
1.7.1