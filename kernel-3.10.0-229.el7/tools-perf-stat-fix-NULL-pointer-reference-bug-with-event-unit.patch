From fa7f476a1fb9e83e5f8a2db8ddb55cd5a9311079 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:52:57 -0400
Subject: [tools] perf/stat: fix NULL pointer reference bug with event unit

Message-id: <1408953210-26343-290-git-send-email-jolsa@redhat.com>
Patchwork-id: 89037
O-Subject: [PATCH RHEL7.1 BZ1133083 289/322] perf stat: fix NULL pointer reference bug with event unit
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 8a398897ff21f73cb8b15a19514660f032926882
Author: Stephane Eranian <eranian@google.com>
Date: Fri Jan 17 16:34:05 2014 +0100

description
===========
This patch fixes a problem with the handling of the newly introduced
optional event unit. The following cmdline caused a segfault:

 $ perf stat -e cpu/event-0x3c/ ls

This patch fixes the problem with the default setting for alias->unit
which was eventually causing the segfault.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/parse-events.c b/tools/perf/util/parse-events.c
index a7f1b6a..d248fca 100644
--- a/tools/perf/util/parse-events.c
+++ b/tools/perf/util/parse-events.c
@@ -635,7 +635,7 @@ int parse_events_add_pmu(struct list_head *list, int *idx,
  struct perf_event_attr attr;
  struct perf_pmu *pmu;
  struct perf_evsel *evsel;
- char *unit;
+ const char *unit;
  double scale;
 
  pmu = perf_pmu__find(name);
diff --git a/tools/perf/util/pmu.c b/tools/perf/util/pmu.c
index d9cab4d..b752ecb 100644
--- a/tools/perf/util/pmu.c
+++ b/tools/perf/util/pmu.c
@@ -105,7 +105,7 @@ static int perf_pmu__parse_scale(struct perf_pmu_alias *alias, char *dir, char *
  char scale[128];
  int fd, ret = -1;
  char path[PATH_MAX];
- char *lc;
+ const char *lc;
 
  snprintf(path, PATH_MAX, "%s/%s.scale", dir, name);
 
@@ -609,7 +609,7 @@ static struct perf_pmu_alias *pmu_find_alias(struct perf_pmu *pmu,
 
 
 static int check_unit_scale(struct perf_pmu_alias *alias,
-       char **unit, double *scale)
+       const char **unit, double *scale)
 {
  /*
   * Only one term in event definition can
@@ -634,14 +634,18 @@ static int check_unit_scale(struct perf_pmu_alias *alias,
  * defined for the alias
  */
 int perf_pmu__check_alias(struct perf_pmu *pmu, struct list_head *head_terms,
-     char **unit, double *scale)
+     const char **unit, double *scale)
 {
  struct parse_events_term *term, *h;
  struct perf_pmu_alias *alias;
  int ret;
 
+ /*
+  * Mark unit and scale as not set
+  * (different from default values, see below)
+  */
  *unit   = NULL;
- *scale  = 0;
+ *scale  = 0.0;
 
  list_for_each_entry_safe(term, h, head_terms, list) {
   alias = pmu_find_alias(pmu, term);
@@ -658,6 +662,18 @@ int perf_pmu__check_alias(struct perf_pmu *pmu, struct list_head *head_terms,
   list_del(&term->list);
   free(term);
  }
+
+ /*
+  * if no unit or scale foundin aliases, then
+  * set defaults as for evsel
+  * unit cannot left to NULL
+  */
+ if (*unit == NULL)
+  *unit   = "";
+
+ if (*scale == 0.0)
+  *scale  = 1.0;
+
  return 0;
 }
 
diff --git a/tools/perf/util/pmu.h b/tools/perf/util/pmu.h
index 9183380..8b64125 100644
--- a/tools/perf/util/pmu.h
+++ b/tools/perf/util/pmu.h
@@ -29,7 +29,7 @@ int perf_pmu__config_terms(struct list_head *formats,
       struct perf_event_attr *attr,
       struct list_head *head_terms);
 int perf_pmu__check_alias(struct perf_pmu *pmu, struct list_head *head_terms,
-     char **unit, double *scale);
+     const char **unit, double *scale);
 struct list_head *perf_pmu__alias(struct perf_pmu *pmu,
       struct list_head *head_terms);
 int perf_pmu_wrap(void);
-- 
1.7.1