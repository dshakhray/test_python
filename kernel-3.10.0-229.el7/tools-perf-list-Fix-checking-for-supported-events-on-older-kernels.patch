From d0be0477b3b52d69846683be9b91e6abfe7428f0 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:53:18 -0400
Subject: [tools] perf/list: Fix checking for supported events on older kernels

Message-id: <1408953210-26343-311-git-send-email-jolsa@redhat.com>
Patchwork-id: 89019
O-Subject: [PATCH RHEL7.1 BZ1133083 310/322] perf list: Fix checking for supported events on older kernels
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 88fee52e58ca14d8465b614774ed0bf08e1a7790
Author: Vince Weaver <vincent.weaver@maine.edu>
Date: Mon Dec 30 15:39:45 2013 -0500

description
===========
"perf list" listing of hardware events doesn't work on older ARM devices.
The change enabling event detection:

 commit b41f1cec91c37eeea6fdb15effbfa24ea0a5536b
 Author: Namhyung Kim <namhyung.kim@lge.com>
 Date:   Tue Aug 27 11:41:53 2013 +0900

     perf list: Skip unsupported events

uses the following code in tools/perf/util/parse-events.c:

        struct perf_event_attr attr = {
                .type = type,
                .config = config,
                .disabled = 1,
                .exclude_kernel = 1,
        };

On ARM machines pre-dating the Cortex-A15 this doesn't work, as these
machines don't support .exclude_kernel.  So starting with 3.12 "perf
list" does not report any hardware events at all on older machines (seen
on Rasp-Pi, Pandaboard, Beagleboard, etc).

This version of the patch makes changes suggested by Namhyung Kim to
check for EACCESS and retry (instead of just dropping the
exclude_kernel) so we can properly handle machines where
/proc/sys/kernel/perf_event_paranoid is set to 2.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/parse-events.c b/tools/perf/util/parse-events.c
index d248fca..1e15df1 100644
--- a/tools/perf/util/parse-events.c
+++ b/tools/perf/util/parse-events.c
@@ -1091,12 +1091,12 @@ int is_valid_tracepoint(const char *event_string)
 static bool is_event_supported(u8 type, unsigned config)
 {
  bool ret = true;
+ int open_return;
  struct perf_evsel *evsel;
  struct perf_event_attr attr = {
   .type = type,
   .config = config,
   .disabled = 1,
-  .exclude_kernel = 1,
  };
  struct {
   struct thread_map map;
@@ -1108,7 +1108,20 @@ static bool is_event_supported(u8 type, unsigned config)
 
  evsel = perf_evsel__new(&attr);
  if (evsel) {
-  ret = perf_evsel__open(evsel, NULL, &tmap.map) >= 0;
+  open_return = perf_evsel__open(evsel, NULL, &tmap.map);
+  ret = open_return >= 0;
+
+  if (open_return == -EACCES) {
+   /*
+    * This happens if the paranoid value
+    * /proc/sys/kernel/perf_event_paranoid is set to 2
+    * Re-run with exclude_kernel set; we don't do that
+    * by default as some ARM machines do not support it.
+    *
+    */
+   evsel->attr.exclude_kernel = 1;
+   ret = perf_evsel__open(evsel, NULL, &tmap.map) >= 0;
+  }
   perf_evsel__delete(evsel);
  }
 
-- 
1.7.1