From 0369058cf3542697b465b60fff30bbc6f2b354ec Mon Sep 17 00:00:00 2001
From: Stefan Assmann <sassmann@redhat.com>
Date: Tue, 2 Sep 2014 11:39:25 -0400
Subject: [ethernet] i40e: allow user to set LAA again

Message-id: <1409658042-22689-205-git-send-email-sassmann@redhat.com>
Patchwork-id: 90403
O-Subject: [RHEL7.1 PATCH 204/281] i40e: allow user to set LAA again
Bugzilla: 1091126
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Shannon Nelson <shannon.nelson@intel.com>

Don't short-circuit the LAA assignment when the driver thinks it has
already been done - it is possible that the user might want to force
the address setting again.  At the same time, this requires a little
re-ordering of the filter management.

Change-ID: Ia0d71e3bc04edd7b68cf67edecc00abe7b9f6639
Signed-off-by: Shannon Nelson <shannon.nelson@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: Stefan Assmann <sassmann@redhat.com>
(cherry picked from commit 6c8ad1ba1650e6c22dcaa5fe288c6236c3b25ae5)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/i40e/i40e_main.c b/drivers/net/ethernet/intel/i40e/i40e_main.c
index ae9622a..e0b2ebf 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_main.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_main.c
@@ -1327,9 +1327,6 @@ static int i40e_set_mac(struct net_device *netdev, void *p)
 
  netdev_info(netdev, "set mac address=%pM\n", addr->sa_data);
 
- if (ether_addr_equal(netdev->dev_addr, addr->sa_data))
-  return 0;
-
  if (test_bit(__I40E_DOWN, &vsi->back->state) ||
      test_bit(__I40E_RESET_RECOVERY_PENDING, &vsi->back->state))
   return -EADDRNOTAVAIL;
@@ -1345,22 +1342,26 @@ static int i40e_set_mac(struct net_device *netdev, void *p)
         ret);
    return -EADDRNOTAVAIL;
   }
-
-  ether_addr_copy(vsi->back->hw.mac.addr, addr->sa_data);
  }
 
- /* In order to be sure to not drop any packets, add the new address
-  * then delete the old one.
-  */
- f = i40e_add_filter(vsi, addr->sa_data, I40E_VLAN_ANY, false, false);
- if (!f)
-  return -ENOMEM;
+ if (!i40e_find_mac(vsi, addr->sa_data, false, true)) {
 
- i40e_sync_vsi_filters(vsi);
- i40e_del_filter(vsi, netdev->dev_addr, I40E_VLAN_ANY, false, false);
- i40e_sync_vsi_filters(vsi);
+  /* In order to be sure to not drop any packets, add the
+   * new address first then delete the old one.
+   */
+  f = i40e_add_filter(vsi, addr->sa_data, I40E_VLAN_ANY,
+        false, false);
+  if (!f)
+   return -ENOMEM;
+
+  i40e_sync_vsi_filters(vsi);
+  i40e_del_filter(vsi, netdev->dev_addr, I40E_VLAN_ANY,
+    false, false);
+  i40e_sync_vsi_filters(vsi);
+ }
 
- ether_addr_copy(netdev->dev_addr, addr->sa_data);
+ if (!ether_addr_equal(netdev->dev_addr, addr->sa_data))
+  ether_addr_copy(netdev->dev_addr, addr->sa_data);
 
  return 0;
 }
-- 
1.7.1