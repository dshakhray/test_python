From 9d7879fae16ba82c19983f6fec759d8f33da5805 Mon Sep 17 00:00:00 2001
From: Ivan Vecera <ivecera@redhat.com>
Date: Mon, 8 Sep 2014 12:25:57 -0400
Subject: [ethernet] tg3: cleanup an error path in tg3_phy_reset_5703_4_5()

Message-id: <1410179173-14304-4-git-send-email-ivecera@redhat.com>
Patchwork-id: 91679
O-Subject: [RHEL7.1 PATCH 03/19] tg3: cleanup an error path in tg3_phy_reset_5703_4_5()
Bugzilla: 1088637
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

BZ: #1088637

Upstream commit(s):
commit c6e27f2f3cf2631aae6f1f6fae1a7ab083fdb024
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Feb 5 16:29:21 2014 +0300

    tg3: cleanup an error path in tg3_phy_reset_5703_4_5()

    In the original code, if tg3_readphy() fails then it does an unnecessary
    check to verify "err" is still zero and then returns -EBUSY.

    My static checker complains about the unnecessary "if (!err)" check and
    anyway it is better to propagate the -EBUSY error code from
    tg3_readphy() instead of hard coding it here.  And really the original
    code is confusing to look at.

    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Nithin Nayak Sujir <nsujir@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Ivan Vecera <ivecera@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/broadcom/tg3.c b/drivers/net/ethernet/broadcom/tg3.c
index 2581eaf..a422b7e 100644
--- a/drivers/net/ethernet/broadcom/tg3.c
+++ b/drivers/net/ethernet/broadcom/tg3.c
@@ -2609,13 +2609,14 @@ static int tg3_phy_reset_5703_4_5(struct tg3 *tp)
 
  tg3_writephy(tp, MII_CTRL1000, phy9_orig);
 
- if (!tg3_readphy(tp, MII_TG3_EXT_CTRL, &reg32)) {
-  reg32 &= ~0x3000;
-  tg3_writephy(tp, MII_TG3_EXT_CTRL, reg32);
- } else if (!err)
-  err = -EBUSY;
+ err = tg3_readphy(tp, MII_TG3_EXT_CTRL, &reg32);
+ if (err)
+  return err;
 
- return err;
+ reg32 &= ~0x3000;
+ tg3_writephy(tp, MII_TG3_EXT_CTRL, reg32);
+
+ return 0;
 }
 
 static void tg3_carrier_off(struct tg3 *tp)
-- 
1.7.1