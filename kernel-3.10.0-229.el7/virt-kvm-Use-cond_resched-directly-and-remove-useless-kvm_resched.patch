From af0ca5d580a75edb848e5eacd689eaefc9c9d3df Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:37:00 -0400
Subject: [virt] kvm: Use cond_resched() directly and remove useless kvm_resched()

Message-id: <1406040016-3289-26-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86104
O-Subject: [RHEL7 PATCH v2 025/221] KVM: Use cond_resched() directly and remove useless kvm_resched()
Bugzilla: 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Takuya Yoshikawa <yoshikawa_takuya_b1@lab.ntt.co.jp>

Since the commit 15ad7146 ("KVM: Use the scheduler preemption notifiers
to make kvm preemptible"), the remaining stuff in this function is a
simple cond_resched() call with an extra need_resched() check which was
there to avoid dropping VCPUs unnecessarily.  Now it is meaningless.

Signed-off-by: Takuya Yoshikawa <yoshikawa_takuya_b1@lab.ntt.co.jp>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit c08ac06ab3f3cdb8d34376c3a8a5e46a31a62c8f)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/ia64/kvm/kvm-ia64.c b/arch/ia64/kvm/kvm-ia64.c
index fc00e09..688824a 100644
--- a/arch/ia64/kvm/kvm-ia64.c
+++ b/arch/ia64/kvm/kvm-ia64.c
@@ -703,7 +703,7 @@ again:
 out:
  srcu_read_unlock(&vcpu->kvm->srcu, idx);
  if (r > 0) {
-  kvm_resched(vcpu);
+  cond_resched();
   idx = srcu_read_lock(&vcpu->kvm->srcu);
   goto again;
  }
diff --git a/arch/powerpc/kvm/book3s_hv.c b/arch/powerpc/kvm/book3s_hv.c
index dbec1de..a555148 100644
--- a/arch/powerpc/kvm/book3s_hv.c
+++ b/arch/powerpc/kvm/book3s_hv.c
@@ -1253,7 +1253,7 @@ static void kvmppc_run_core(struct kvmppc_vcore *vc)
  kvm_guest_exit();
 
  preempt_enable();
- kvm_resched(vcpu);
+ cond_resched();
 
  spin_lock(&vc->lock);
  now = get_tb();
diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index ffbeff8..ec568ee 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -6022,7 +6022,7 @@ static int __vcpu_run(struct kvm_vcpu *vcpu)
   }
   if (need_resched()) {
    srcu_read_unlock(&kvm->srcu, vcpu->srcu_idx);
-   kvm_resched(vcpu);
+   cond_resched();
    vcpu->srcu_idx = srcu_read_lock(&kvm->srcu);
   }
  }
diff --git a/include/linux/kvm_host.h b/include/linux/kvm_host.h
index b41b4e5..dbf513c 100644
--- a/include/linux/kvm_host.h
+++ b/include/linux/kvm_host.h
@@ -581,7 +581,6 @@ void kvm_vcpu_block(struct kvm_vcpu *vcpu);
 void kvm_vcpu_kick(struct kvm_vcpu *vcpu);
 bool kvm_vcpu_yield_to(struct kvm_vcpu *target);
 void kvm_vcpu_on_spin(struct kvm_vcpu *vcpu);
-void kvm_resched(struct kvm_vcpu *vcpu);
 void kvm_load_guest_fpu(struct kvm_vcpu *vcpu);
 void kvm_put_guest_fpu(struct kvm_vcpu *vcpu);
 
diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index a2a2dd7..31a74de 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -1699,14 +1699,6 @@ void kvm_vcpu_kick(struct kvm_vcpu *vcpu)
 EXPORT_SYMBOL_GPL(kvm_vcpu_kick);
 #endif /* !CONFIG_S390 */
 
-void kvm_resched(struct kvm_vcpu *vcpu)
-{
- if (!need_resched())
-  return;
- cond_resched();
-}
-EXPORT_SYMBOL_GPL(kvm_resched);
-
 bool kvm_vcpu_yield_to(struct kvm_vcpu *target)
 {
  struct pid *pid;
-- 
1.7.1