From e17df342d50ca9d5d905cf2a6987edb6515f6eaa Mon Sep 17 00:00:00 2001
From: Tomas Henzl <thenzl@redhat.com>
Date: Mon, 18 Aug 2014 12:26:34 -0400
Subject: [scsi] mpt2sas: Remove use of DEF_SCSI_QCMD

Message-id: <1408364797-18588-5-git-send-email-thenzl@redhat.com>
Patchwork-id: 87850
O-Subject: [RHEL7.1 e-stor PATCH 4/7] mpt2sas: Remove use of DEF_SCSI_QCMD
Bugzilla: 1041675
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Milburn <dmilburn@redhat.com>

Removing the host_lock from the I/O submission path gives a huge
scalability improvement.

Signed-off-by: Matthew Wilcox <matthew.r.wilcox@intel.com>
Reviewed-by: Nicholas Bellinger <nab@linux-iscsi.org>
Reviewed-by: Praveen Krishnamoorthy <Praveen.krishnamoorthy@lsi.com>
Acked-by: Sreekanth Reddy <Sreekanth.reddy@lsi.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 90f951edb702c887ea392aee8a3e42bdabd27803)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/mpt2sas/mpt2sas_scsih.c b/drivers/scsi/mpt2sas/mpt2sas_scsih.c
index 33586a3..7351843 100644
--- a/drivers/scsi/mpt2sas/mpt2sas_scsih.c
+++ b/drivers/scsi/mpt2sas/mpt2sas_scsih.c
@@ -3950,9 +3950,9 @@ _scsih_setup_direct_io(struct MPT2SAS_ADAPTER *ioc, struct scsi_cmnd *scmd,
  * SCSI_MLQUEUE_HOST_BUSY if the entire host queue is full
  */
 static int
-_scsih_qcmd_lck(struct scsi_cmnd *scmd, void (*done)(struct scsi_cmnd *))
+_scsih_qcmd(struct Scsi_Host *shost, struct scsi_cmnd *scmd)
 {
- struct MPT2SAS_ADAPTER *ioc = shost_priv(scmd->device->host);
+ struct MPT2SAS_ADAPTER *ioc = shost_priv(shost);
  struct MPT2SAS_DEVICE *sas_device_priv_data;
  struct MPT2SAS_TARGET *sas_target_priv_data;
  struct _raid_device *raid_device;
@@ -3960,7 +3960,6 @@ _scsih_qcmd_lck(struct scsi_cmnd *scmd, void (*done)(struct scsi_cmnd *))
  u32 mpi_control;
  u16 smid;
 
- scmd->scsi_done = done;
  sas_device_priv_data = scmd->device->hostdata;
  if (!sas_device_priv_data || !sas_device_priv_data->sas_target) {
   scmd->result = DID_NO_CONNECT << 16;
@@ -4036,7 +4035,7 @@ _scsih_qcmd_lck(struct scsi_cmnd *scmd, void (*done)(struct scsi_cmnd *))
      MPT_TARGET_FLAGS_RAID_COMPONENT)
   mpi_request->Function = MPI2_FUNCTION_RAID_SCSI_IO_PASSTHROUGH;
  else
-  mpi_request->Function = MPI2_FUNCTION_SCSI_IO_REQUEST;
+ mpi_request->Function = MPI2_FUNCTION_SCSI_IO_REQUEST;
  mpi_request->DevHandle =
      cpu_to_le16(sas_device_priv_data->sas_target->handle);
  mpi_request->DataLength = cpu_to_le32(scsi_bufflen(scmd));
@@ -4080,8 +4079,6 @@ _scsih_qcmd_lck(struct scsi_cmnd *scmd, void (*done)(struct scsi_cmnd *))
  return SCSI_MLQUEUE_HOST_BUSY;
 }
 
-static DEF_SCSI_QCMD(_scsih_qcmd)
-
 /**
  * _scsih_normalize_sense - normalize descriptor and fixed format sense data
  * @sense_buffer: sense data returned by target
-- 
1.7.1