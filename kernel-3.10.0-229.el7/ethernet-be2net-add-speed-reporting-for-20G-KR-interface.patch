From 66bbb5db78178eb052fd4b5ea18c63613e1d5adc Mon Sep 17 00:00:00 2001
From: Ivan Vecera <ivecera@redhat.com>
Date: Wed, 19 Nov 2014 16:12:59 -0500
Subject: [ethernet] be2net: add speed reporting for 20G-KR interface

Message-id: <1416413587-12091-12-git-send-email-ivecera@redhat.com>
Patchwork-id: 100344
O-Subject: [RHEL7.1 PATCH 11/19] be2net: add speed reporting for 20G-KR interface
Bugzilla: 1165755
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

BZ: #1165755

Upstream commit(s):
commit d6b7a9b7e77ae4d2a7652cdfbd65f2de0a1053b0
Author: Vasundhara Volam <vasundhara.volam@emulex.com>
Date:   Fri Sep 19 15:46:54 2014 +0530

    be2net: add speed reporting for 20G-KR interface

    This patch adds speed reporting via ethtool for 20G KR2 interface on the
    Skyhawk-R chip.

    Signed-off-by: Vasundhara Volam <vasundhara.volam@emulex.com>
    Signed-off-by: Sathya Perla <sathya.perla@emulex.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Ivan Vecera <ivecera@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/emulex/benet/be_cmds.h b/drivers/net/ethernet/emulex/benet/be_cmds.h
index b064c50..eb5085d 100644
--- a/drivers/net/ethernet/emulex/benet/be_cmds.h
+++ b/drivers/net/ethernet/emulex/benet/be_cmds.h
@@ -1374,6 +1374,7 @@ enum {
 #define BE_SUPPORTED_SPEED_100MBPS 2
 #define BE_SUPPORTED_SPEED_1GBPS 4
 #define BE_SUPPORTED_SPEED_10GBPS 8
+#define BE_SUPPORTED_SPEED_20GBPS 0x10
 #define BE_SUPPORTED_SPEED_40GBPS 0x20
 
 #define BE_AN_EN   0x2
diff --git a/drivers/net/ethernet/emulex/benet/be_ethtool.c b/drivers/net/ethernet/emulex/benet/be_ethtool.c
index 50b193d..da55e83 100644
--- a/drivers/net/ethernet/emulex/benet/be_ethtool.c
+++ b/drivers/net/ethernet/emulex/benet/be_ethtool.c
@@ -534,6 +534,13 @@ static u32 convert_to_et_setting(struct be_adapter *adapter, u32 if_speeds)
   if (if_speeds & BE_SUPPORTED_SPEED_10GBPS)
    val |= SUPPORTED_10000baseKX4_Full;
   break;
+ case PHY_TYPE_KR2_20GB:
+  val |= SUPPORTED_Backplane;
+  if (if_speeds & BE_SUPPORTED_SPEED_10GBPS)
+   val |= SUPPORTED_10000baseKR_Full;
+  if (if_speeds & BE_SUPPORTED_SPEED_20GBPS)
+   val |= SUPPORTED_20000baseKR2_Full;
+  break;
  case PHY_TYPE_KR_10GB:
   val |= SUPPORTED_Backplane |
     SUPPORTED_10000baseKR_Full;
-- 
1.7.1