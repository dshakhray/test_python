From ed02f450cc324c36a86dc26dc9d76862d8bed304 Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Mon, 23 Jun 2014 21:51:07 -0400
Subject: [fs] nfsd: nfsd4_check_resp_size should check against whole buffer

Message-id: <1403560314-32525-126-git-send-email-bfields@redhat.com>
Patchwork-id: 84590
O-Subject: [Patch RHEL7 125/172] nfsd4: nfsd4_check_resp_size should check against whole buffer
Bugzilla: 1111719
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: 89ff884ebbd0a667253dd61ade8a0e70b787c84a
Bugzilla: 1111719
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4xdr.c b/fs/nfsd/nfs4xdr.c
index 8ce6c8d..0eeba21 100644
--- a/fs/nfsd/nfs4xdr.c
+++ b/fs/nfsd/nfs4xdr.c
@@ -3762,7 +3762,6 @@ __be32 nfsd4_check_resp_size(struct nfsd4_compoundres *resp, u32 respsize)
 {
  struct xdr_buf *buf = &resp->rqstp->rq_res;
  struct nfsd4_session *session = resp->cstate.session;
- int slack_bytes = (char *)resp->xdr.end - (char *)resp->xdr.p;
 
  if (nfsd4_has_session(&resp->cstate)) {
   struct nfsd4_slot *slot = resp->cstate.slot;
@@ -3775,7 +3774,7 @@ __be32 nfsd4_check_resp_size(struct nfsd4_compoundres *resp, u32 respsize)
    return nfserr_rep_too_big_to_cache;
  }
 
- if (respsize > slack_bytes) {
+ if (buf->len + respsize > buf->buflen) {
   WARN_ON_ONCE(nfsd4_has_session(&resp->cstate));
   return nfserr_resource;
  }
-- 
1.7.1