From b0e1cd347668f69ea51c6d6f7edfcbb1283caaa7 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 10 Jul 2014 01:04:16 -0400
Subject: [acpi] hotplug/pci: Fix NULL pointer dereference in cleanup_bridge()

Message-id: <20140710010416.22146.30305.stgit@gir.stowe>
Patchwork-id: 85597
O-Subject: [RHEL7.1 PATCH 058/105] ACPI / hotplug / PCI: Fix NULL pointer dereference in cleanup_bridge()
Bugzilla: 1114228
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1114228
Upstream Status: 1aaac07112f04068d7e2fc47bb435cfd4f9d5468

commit 1aaac07112f04068d7e2fc47bb435cfd4f9d5468
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Sat Aug 17 22:16:33 2013 +0200

    ACPI / hotplug / PCI: Fix NULL pointer dereference in cleanup_bridge()

    After commit bbd34fc (ACPI / hotplug / PCI: Register all devices
    under the given bridge) register_slot() is called for all PCI
    devices under a given bridge that have corresponding objects in
    the ACPI namespace, but it calls acpiphp_register_hotplug_slot()
    only for devices satisfying specific criteria.  Still,
    cleanup_bridge() calls acpiphp_unregister_hotplug_slot() for all
    objects created by register_slot(), although it should only call it
    for the ones that acpiphp_register_hotplug_slot() has been called
    for (successfully).  This causes a NULL pointer to be dereferenced
    by the acpiphp_unregister_hotplug_slot() executed by cleanup_bridge()
    if the object it is called for has not been passed to
    acpiphp_register_hotplug_slot().

    To fix this problem, check if the 'slot' field of the object passed
    to acpiphp_unregister_hotplug_slot() in cleanup_bridge() is not NULL,
    which only is the case if acpiphp_register_hotplug_slot() has been
    executed for that object.  In addition to that, make register_slot()
    reset the 'slot' field to NULL if acpiphp_register_hotplug_slot() has
    failed for the given object to prevent stale pointers from being
    used by acpiphp_unregister_hotplug_slot().

    Reported-and-tested-by: Yinghai Lu <yinghai@kernel.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/hotplug/acpiphp_glue.c b/drivers/pci/hotplug/acpiphp_glue.c
index 649317a..13c7fa2 100644
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@ -340,6 +340,7 @@ static acpi_status register_slot(acpi_handle handle, u32 lvl, void *data,
 
   retval = acpiphp_register_hotplug_slot(slot, sun);
   if (retval) {
+   slot->slot = NULL;
    bridge->nr_slots--;
    if (retval == -EBUSY)
     pr_warn("Slot %llu already registered by another "
@@ -429,7 +430,8 @@ static void cleanup_bridge(struct acpiphp_bridge *bridge)
      pr_err("failed to remove notify handler\n");
    }
   }
-  acpiphp_unregister_hotplug_slot(slot);
+  if (slot->slot)
+   acpiphp_unregister_hotplug_slot(slot);
  }
 
  mutex_lock(&bridge_mutex);
-- 
1.7.1