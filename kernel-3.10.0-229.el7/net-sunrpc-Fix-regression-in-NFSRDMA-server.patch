From 94ffb7f1d139a6cc51c4ff726913cc852245d159 Mon Sep 17 00:00:00 2001
From: Doug Ledford <dledford@redhat.com>
Date: Wed, 24 Sep 2014 17:28:00 -0400
Subject: [net] sunrpc: Fix regression in NFSRDMA server

Message-id: <40959b0fc0c14e204577d159c2da1d14a3d542b2.1411578494.git.dledford@redhat.com>
Patchwork-id: 96666
O-Subject: [Patch RHEL7 07/26] Fix regression in NFSRDMA server
Bugzilla: 1107621
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Tom Tucker <tom@ogc.us>

The server regression was caused by the addition of rq_next_page
(afc59400d6c65bad66d4ad0b2daf879cbff8e23e). There were a few places that
were missed with the update of the rq_respages array.

Signed-off-by: Tom Tucker <tom@ogc.us>
Tested-by: Steve Wise <swise@ogc.us>
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
(cherry picked from commit 7e4359e2611f95a97037e2b6905eab52f28afbeb)
Signed-off-by: Doug Ledford <dledford@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/sunrpc/xprtrdma/svc_rdma_recvfrom.c b/net/sunrpc/xprtrdma/svc_rdma_recvfrom.c
index 0ce7552..8d904e4 100644
--- a/net/sunrpc/xprtrdma/svc_rdma_recvfrom.c
+++ b/net/sunrpc/xprtrdma/svc_rdma_recvfrom.c
@@ -90,6 +90,7 @@ static void rdma_build_arg_xdr(struct svc_rqst *rqstp,
   sge_no++;
  }
  rqstp->rq_respages = &rqstp->rq_pages[sge_no];
+ rqstp->rq_next_page = rqstp->rq_respages + 1;
 
  /* We should never run out of SGE because the limit is defined to
   * support the max allowed RPC data length
@@ -169,6 +170,7 @@ static int map_read_chunks(struct svcxprt_rdma *xprt,
    */
   head->arg.pages[page_no] = rqstp->rq_arg.pages[page_no];
   rqstp->rq_respages = &rqstp->rq_arg.pages[page_no+1];
+  rqstp->rq_next_page = rqstp->rq_respages + 1;
 
   byte_count -= sge_bytes;
   ch_bytes -= sge_bytes;
@@ -276,6 +278,7 @@ static int fast_reg_read_chunks(struct svcxprt_rdma *xprt,
 
  /* rq_respages points one past arg pages */
  rqstp->rq_respages = &rqstp->rq_arg.pages[page_no];
+ rqstp->rq_next_page = rqstp->rq_respages + 1;
 
  /* Create the reply and chunk maps */
  offset = 0;
@@ -520,13 +523,6 @@ next_sge:
  for (ch_no = 0; &rqstp->rq_pages[ch_no] < rqstp->rq_respages; ch_no++)
   rqstp->rq_pages[ch_no] = NULL;
 
- /*
-  * Detach res pages. If svc_release sees any it will attempt to
-  * put them.
-  */
- while (rqstp->rq_next_page != rqstp->rq_respages)
-  *(--rqstp->rq_next_page) = NULL;
-
  return err;
 }
 
@@ -550,7 +546,7 @@ static int rdma_read_complete(struct svc_rqst *rqstp,
 
  /* rq_respages starts after the last arg page */
  rqstp->rq_respages = &rqstp->rq_arg.pages[page_no];
- rqstp->rq_next_page = &rqstp->rq_arg.pages[page_no];
+ rqstp->rq_next_page = rqstp->rq_respages + 1;
 
  /* Rebuild rq_arg head and tail. */
  rqstp->rq_arg.head[0] = head->arg.head[0];
diff --git a/net/sunrpc/xprtrdma/svc_rdma_sendto.c b/net/sunrpc/xprtrdma/svc_rdma_sendto.c
index 5f14609..7e024a5 100644
--- a/net/sunrpc/xprtrdma/svc_rdma_sendto.c
+++ b/net/sunrpc/xprtrdma/svc_rdma_sendto.c
@@ -626,6 +626,7 @@ static int send_reply(struct svcxprt_rdma *rdma,
   if (page_no+1 >= sge_no)
    ctxt->sge[page_no+1].length = 0;
  }
+ rqstp->rq_next_page = rqstp->rq_respages + 1;
  BUG_ON(sge_no > rdma->sc_max_sge);
  memset(&send_wr, 0, sizeof send_wr);
  ctxt->wr_op = IB_WR_SEND;
-- 
1.7.1