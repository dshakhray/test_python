From 6fd696b76b6be4ff06d3f5a95900fe2cd571e7bd Mon Sep 17 00:00:00 2001
From: Florian Westphal <fwestpha@redhat.com>
Date: Sat, 14 Jun 2014 22:58:19 -0400
Subject: [net] ipv6: send pkttoobig immediately if orig frag size > mtu

Message-id: <1402786701-27071-5-git-send-email-fwestpha@redhat.com>
Patchwork-id: 83974
O-Subject: [PATCH 4/6] [RHEL7.1 net] net: ipv6: send pkttoobig immediately if orig frag size > mtu
Bugzilla: 1109214
RH-Acked-by: Vlad Yasevich <vyasevic@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>

BZ: 1109214

commit 418a31561d594a2b636c1e2fa94ecd9e1245abb1
Author: Florian Westphal <fw@strlen.de>
Date:   Mon May 5 00:03:34 2014 +0200

    net: ipv6: send pkttoobig immediately if orig frag size > mtu

    If conntrack defragments incoming ipv6 frags it stores largest original
    frag size in ip6cb and sets ->local_df.

    We must thus first test the largest original frag size vs. mtu, and not
    vice versa.

    Without this patch PKTTOOBIG is still generated in ip6_fragment() later
    in the stack, but

    1) IPSTATS_MIB_INTOOBIGERRORS won't increment
    2) packet did (needlessly) traverse netfilter postrouting hook.

    Fixes: fe6cc55f3a9 ("net: ip, ipv6: handle gso skbs in forwarding path")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Florian Westphal <fwestpha@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ipv6/ip6_output.c b/net/ipv6/ip6_output.c
index 4e25f3d..2c84fe2 100644
--- a/net/ipv6/ip6_output.c
+++ b/net/ipv6/ip6_output.c
@@ -322,12 +322,16 @@ static inline int ip6_forward_finish(struct sk_buff *skb)
 
 static bool ip6_pkt_too_big(const struct sk_buff *skb, unsigned int mtu)
 {
- if (skb->len <= mtu || skb->local_df)
+ if (skb->len <= mtu)
   return false;
 
+ /* ipv6 conntrack defrag sets max_frag_size + local_df */
  if (IP6CB(skb)->frag_max_size && IP6CB(skb)->frag_max_size > mtu)
   return true;
 
+ if (skb->local_df)
+  return false;
+
  if (skb_is_gso(skb) && skb_gso_network_seglen(skb) <= mtu)
   return false;
 
-- 
1.7.1