From ac637ce1f242b6d90014c54b08fcc39f8cd5e7e6 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Fri, 19 Sep 2014 12:29:35 -0400
Subject: [acpi] hotplug: Simplify acpi_set_hp_context()

Message-id: <1411129776-21656-61-git-send-email-prarit@redhat.com>
Patchwork-id: 96388
O-Subject: [RHEL7.1 PATCH BZ 1141846 60/61] ACPI / hotplug: Simplify acpi_set_hp_context()
Bugzilla: 1141846
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Myron Stowe <mstowe@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1141846

commit ba574dc8563c7c1d1d1c5bf3c1c99ec88513402e
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Jul 15 22:03:22 2014 +0200

    ACPI / hotplug: Simplify acpi_set_hp_context()

    Since all of the acpi_set_hp_context() callers pass at least one NULL
    function pointer and one caller passes NULL function pointers only
    to it, drop function pointer arguments from acpi_set_hp_context()
    and make the callers initialize the function pointers in struct
    acpi_hotplug_context by themselves before passing it to
    acpi_set_hp_context().

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
Cc: Tony Camuso <tcamuso@redhat.com>
Cc: Stefan Assmann <sassmann@redhat.com>
Cc: Myron Stowe <mstowe@redhat.com>
Cc: Andy Gospodarek <agospoda@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/acpi/scan.c b/drivers/acpi/scan.c
index e719ed9..3f93e7b 100644
--- a/drivers/acpi/scan.c
+++ b/drivers/acpi/scan.c
@@ -79,7 +79,9 @@ void acpi_initialize_hp_context(struct acpi_device *adev,
     void (*uevent)(struct acpi_device *, u32))
 {
  acpi_lock_hp_context();
- acpi_set_hp_context(adev, hp, notify, uevent, NULL);
+ hp->notify = notify;
+ hp->uevent = uevent;
+ acpi_set_hp_context(adev, hp);
  acpi_unlock_hp_context();
 }
 EXPORT_SYMBOL_GPL(acpi_initialize_hp_context);
diff --git a/drivers/pci/hotplug/acpiphp_glue.c b/drivers/pci/hotplug/acpiphp_glue.c
index 89bfeb7..c55c570 100644
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@ -81,8 +81,9 @@ static struct acpiphp_context *acpiphp_init_context(struct acpi_device *adev)
   return NULL;
 
  context->refcount = 1;
- acpi_set_hp_context(adev, &context->hp, acpiphp_hotplug_notify, NULL,
-       acpiphp_post_dock_fixup);
+ context->hp.notify = acpiphp_hotplug_notify;
+ context->hp.fixup = acpiphp_post_dock_fixup;
+ acpi_set_hp_context(adev, &context->hp);
  return context;
 }
 
@@ -880,7 +881,7 @@ void acpiphp_enumerate_slots(struct pci_bus *bus)
    goto err;
 
   root_context->root_bridge = bridge;
-  acpi_set_hp_context(adev, &root_context->hp, NULL, NULL, NULL);
+  acpi_set_hp_context(adev, &root_context->hp);
  } else {
   struct acpiphp_context *context;
 
diff --git a/include/acpi/acpi_bus.h b/include/acpi/acpi_bus.h
index 839c1e1..325c26e 100644
--- a/include/acpi/acpi_bus.h
+++ b/include/acpi/acpi_bus.h
@@ -341,15 +341,9 @@ static inline void acpi_set_device_status(struct acpi_device *adev, u32 sta)
 }
 
 static inline void acpi_set_hp_context(struct acpi_device *adev,
-           struct acpi_hotplug_context *hp,
-           int (*notify)(struct acpi_device *, u32),
-           void (*uevent)(struct acpi_device *, u32),
-           void (*fixup)(struct acpi_device *))
+           struct acpi_hotplug_context *hp)
 {
  hp->self = adev;
- hp->notify = notify;
- hp->uevent = uevent;
- hp->fixup = fixup;
  adev->hp = hp;
 }
 
-- 
1.7.1