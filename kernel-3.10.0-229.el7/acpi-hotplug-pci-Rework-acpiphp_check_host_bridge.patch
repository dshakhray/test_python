From ca25ba1764e5b53ee3661b528425935f2e4fd820 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Fri, 19 Sep 2014 12:29:14 -0400
Subject: [acpi] hotplug/pci: Rework acpiphp_check_host_bridge()

Message-id: <1411129776-21656-40-git-send-email-prarit@redhat.com>
Patchwork-id: 96371
O-Subject: [RHEL7.1 PATCH BZ 1141846 39/61] ACPI / hotplug / PCI: Rework acpiphp_check_host_bridge()
Bugzilla: 1141846
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Myron Stowe <mstowe@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1141846

commit 1f7c164b6f2a8a028bfc36097fc42bf061c5212e
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Feb 4 00:45:13 2014 +0100

    ACPI / hotplug / PCI: Rework acpiphp_check_host_bridge()

    Since the only existing caller of acpiphp_check_host_bridge(),
    which is acpi_pci_root_scan_dependent(), already has a struct
    acpi_device pointer needed to obtain the ACPIPHP context, it
    doesn't make sense to execute acpi_bus_get_device() on its
    handle in acpiphp_handle_to_bridge() just in order to get that
    pointer back.

    For this reason, modify acpiphp_check_host_bridge() to take
    a struct acpi_device pointer as its argument and rearrange the
    code accordingly.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Mika Westerberg <mika.westerberg@linux.intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
Cc: Stefan Assmann <sassmann@redhat.com>
Cc: Myron Stowe <mstowe@redhat.com>
Cc: Andy Gospodarek <agospoda@redhat.com>
Cc: Tony Camuso <tcamuso@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/acpi/pci_root.c b/drivers/acpi/pci_root.c
index b78bd91..deb4a97 100644
--- a/drivers/acpi/pci_root.c
+++ b/drivers/acpi/pci_root.c
@@ -53,7 +53,7 @@ static void acpi_pci_root_remove(struct acpi_device *device);
 
 static int acpi_pci_root_scan_dependent(struct acpi_device *adev)
 {
- acpiphp_check_host_bridge(adev->handle);
+ acpiphp_check_host_bridge(adev);
  return 0;
 }
 
diff --git a/drivers/pci/hotplug/acpiphp_glue.c b/drivers/pci/hotplug/acpiphp_glue.c
index 74bda9c..55ac45f 100644
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@ -381,15 +381,11 @@ static acpi_status register_slot(acpi_handle handle, u32 lvl, void *data,
  return AE_OK;
 }
 
-static struct acpiphp_bridge *acpiphp_handle_to_bridge(acpi_handle handle)
+static struct acpiphp_bridge *acpiphp_dev_to_bridge(struct acpi_device *adev)
 {
- struct acpi_device *adev = acpi_bus_get_acpi_device(handle);
  struct acpiphp_context *context;
  struct acpiphp_bridge *bridge = NULL;
 
- if (!adev)
-  return NULL;
-
  acpi_lock_hp_context();
  context = acpiphp_get_context(adev);
  if (context) {
@@ -400,7 +396,6 @@ static struct acpiphp_bridge *acpiphp_handle_to_bridge(acpi_handle handle)
   acpiphp_put_context(context);
  }
  acpi_unlock_hp_context();
- acpi_bus_put_acpi_device(adev);
  return bridge;
 }
 
@@ -766,11 +761,11 @@ static void acpiphp_sanitize_bus(struct pci_bus *bus)
  * ACPI event handlers
  */
 
-void acpiphp_check_host_bridge(acpi_handle handle)
+void acpiphp_check_host_bridge(struct acpi_device *adev)
 {
  struct acpiphp_bridge *bridge;
 
- bridge = acpiphp_handle_to_bridge(handle);
+ bridge = acpiphp_dev_to_bridge(adev);
  if (bridge) {
   pci_lock_rescan_remove();
 
diff --git a/include/linux/pci-acpi.h b/include/linux/pci-acpi.h
index d006f0c..4935a1f 100644
--- a/include/linux/pci-acpi.h
+++ b/include/linux/pci-acpi.h
@@ -59,12 +59,12 @@ static inline void acpi_pci_slot_remove(struct pci_bus *bus) { }
 void acpiphp_init(void);
 void acpiphp_enumerate_slots(struct pci_bus *bus);
 void acpiphp_remove_slots(struct pci_bus *bus);
-void acpiphp_check_host_bridge(acpi_handle handle);
+void acpiphp_check_host_bridge(struct acpi_device *adev);
 #else
 static inline void acpiphp_init(void) { }
 static inline void acpiphp_enumerate_slots(struct pci_bus *bus) { }
 static inline void acpiphp_remove_slots(struct pci_bus *bus) { }
-static inline void acpiphp_check_host_bridge(acpi_handle handle) { }
+static inline void acpiphp_check_host_bridge(struct acpi_device *adev) { }
 #endif
 
 #else /* CONFIG_ACPI */
-- 
1.7.1