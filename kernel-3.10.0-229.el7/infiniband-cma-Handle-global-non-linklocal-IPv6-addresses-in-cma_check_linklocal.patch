From 08a480cff070cbfaba13e478bceb36f802b1448b Mon Sep 17 00:00:00 2001
From: Amir Vadai <avadai@redhat.com>
Date: Thu, 11 Sep 2014 11:59:07 -0400
Subject: [infiniband] cma: Handle global/non-linklocal IPv6 addresses in cma_check_linklocal()

Message-id: <b64ef813336ba6c3dac63a645446066385327c2f.1410425016.git.avadai@redhat.com>
Patchwork-id: 93575
O-Subject: [Patch RHEL7.1 V1 011/197] RDMA/cma: Handle global/non-linklocal IPv6 addresses in cma_check_linklocal()
Bugzilla: 1107617 1107618 1107619 1107620
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

From: Somnath Kotur <somnath.kotur@emulex.com>

If addr is not a linklocal address, the code incorrectly fails to
return and ends up assigning the scope ID to the scope id of the
address, which is wrong.  Fix by checking if it's a link local address
first, and immediately return 0 if not.

Signed-off-by: Somnath Kotur <somnath.kotur@emulex.com>
Signed-off-by: Roland Dreier <roland@purestorage.com>
(cherry picked from commit 5462eddd7a78131ccb514d52473625d99769215e)
Signed-off-by: Amir Vadai <avadai@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/infiniband/core/cma.c b/drivers/infiniband/core/cma.c
index b1fb3b6..9977f0a 100644
--- a/drivers/infiniband/core/cma.c
+++ b/drivers/infiniband/core/cma.c
@@ -2501,8 +2501,11 @@ static int cma_check_linklocal(struct rdma_dev_addr *dev_addr,
   return 0;
 
  sin6 = (struct sockaddr_in6 *) addr;
- if ((ipv6_addr_type(&sin6->sin6_addr) & IPV6_ADDR_LINKLOCAL) &&
-     !sin6->sin6_scope_id)
+
+ if (!(ipv6_addr_type(&sin6->sin6_addr) & IPV6_ADDR_LINKLOCAL))
+  return 0;
+
+ if (!sin6->sin6_scope_id)
    return -EINVAL;
 
  dev_addr->bound_dev_if = sin6->sin6_scope_id;
-- 
1.7.1