From 44eafa93ac14a11b6b0a94ab12f74bcbf2236fc8 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 01:46:09 -0400
Subject: [iommu] vt-d: Avoid caching stale domain_device_info and fix memory leak

Message-id: <20140905014609.31297.79530.stgit@gir.stowe>
Patchwork-id: 91295
O-Subject: [RHEL7.1 PATCH 03/65] iommu/vt-d: Avoid caching stale domain_device_info and fix memory leak
Bugzilla: 1129880 1087643
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1087643
Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1129880
Upstream Status: 816997d03bca9fabcee65f3481eb0297103eceb7

commit 816997d03bca9fabcee65f3481eb0297103eceb7
Author: Jiang Liu <jiang.liu@linux.intel.com>
Date:   Wed Feb 19 14:07:22 2014 +0800

    iommu/vt-d: Avoid caching stale domain_device_info and fix memory leak

    Function device_notifier() in intel-iommu.c fails to remove
    device_domain_info data structures for PCI devices if they are
    associated with si_domain because iommu_no_mapping() returns true
    for those PCI devices. This will cause memory leak and caching of
    stale information in domain->devices list.

    So fix the issue by not calling iommu_no_mapping() and skipping check
    of iommu_pass_through.

    Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
    Signed-off-by: Joerg Roedel <joro@8bytes.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c
index 52be755..f75d3ae 100644
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@ -3600,14 +3600,14 @@ static int device_notifier(struct notifier_block *nb,
  struct pci_dev *pdev = to_pci_dev(dev);
  struct dmar_domain *domain;
 
- if (iommu_no_mapping(dev))
+ if (iommu_dummy(pdev))
   return 0;
 
  domain = find_domain(pdev);
  if (!domain)
   return 0;
 
- if (action == BUS_NOTIFY_UNBOUND_DRIVER && !iommu_pass_through) {
+ if (action == BUS_NOTIFY_UNBOUND_DRIVER) {
   domain_remove_one_dev_info(domain, pdev);
 
   if (!(domain->flags & DOMAIN_FLAG_VIRTUAL_MACHINE) &&
-- 
1.7.1