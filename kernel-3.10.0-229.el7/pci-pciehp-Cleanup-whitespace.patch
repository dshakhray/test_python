From 5dd56c2c5abd23f396da8e05e0194eb10e43aa39 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Wed, 6 Aug 2014 03:49:01 -0400
Subject: [pci] pciehp: Cleanup whitespace

Message-id: <20140806034901.1438.87152.stgit@gir.stowe>
Patchwork-id: 87455
O-Subject: [RHEL7.1 PATCH 46/69] PCI: pciehp: Cleanup whitespace
Bugzilla: 1110896
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110896
Upstream Status: 9cad7f582055513fe13a93fee3ddb213656a6a5d

commit 9cad7f582055513fe13a93fee3ddb213656a6a5d
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Tue Feb 11 15:26:29 2014 -0700

    PCI: pciehp: Cleanup whitespace

    Minor whitespace cleanup; no functional change.

    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/hotplug/pciehp_acpi.c b/drivers/pci/hotplug/pciehp_acpi.c
index 55ea2a0..5cbee98 100644
--- a/drivers/pci/hotplug/pciehp_acpi.c
+++ b/drivers/pci/hotplug/pciehp_acpi.c
@@ -112,6 +112,7 @@ static struct pcie_port_service_driver __initdata dummy_driver = {
 static int __init select_detection_mode(void)
 {
  struct dummy_slot *slot, *tmp;
+
  if (pcie_port_service_register(&dummy_driver))
   return PCIEHP_DETECT_ACPI;
  pcie_port_service_unregister(&dummy_driver);
diff --git a/drivers/pci/hotplug/pciehp_core.c b/drivers/pci/hotplug/pciehp_core.c
index 23b4bde..0e0a2ff 100644
--- a/drivers/pci/hotplug/pciehp_core.c
+++ b/drivers/pci/hotplug/pciehp_core.c
@@ -108,6 +108,7 @@ static int init_slot(struct controller *ctrl)
  ops = kzalloc(sizeof(*ops), GFP_KERNEL);
  if (!ops)
   goto out;
+
  ops->enable_slot = enable_slot;
  ops->disable_slot = disable_slot;
  ops->get_power_status = get_power_status;
diff --git a/drivers/pci/hotplug/pciehp_ctrl.c b/drivers/pci/hotplug/pciehp_ctrl.c
index 0c2e524..c75e6a6 100644
--- a/drivers/pci/hotplug/pciehp_ctrl.c
+++ b/drivers/pci/hotplug/pciehp_ctrl.c
@@ -399,11 +399,10 @@ static void handle_button_press_event(struct slot *p_slot)
    */
   ctrl_info(ctrl, "Button cancel on Slot(%s)\n", slot_name(p_slot));
   cancel_delayed_work(&p_slot->work);
-  if (p_slot->state == BLINKINGOFF_STATE) {
+  if (p_slot->state == BLINKINGOFF_STATE)
    pciehp_green_led_on(p_slot);
-  } else {
+  else
    pciehp_green_led_off(p_slot);
-  }
   pciehp_set_attention_status(p_slot, 0);
   ctrl_info(ctrl, "PCI slot #%s - action canceled "
      "due to button press\n", slot_name(p_slot));
@@ -595,9 +594,9 @@ int pciehp_enable_slot(struct slot *p_slot)
  pciehp_get_latch_status(p_slot, &getstatus);
 
  rc = board_added(p_slot);
- if (rc) {
+ if (rc)
   pciehp_get_latch_status(p_slot, &getstatus);
- }
+
  return rc;
 }
 
-- 
1.7.1