From cea49cc0eb50172746bc8110fd5f7e82171f9f1f Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:11:57 -0400
Subject: [powerpc] powernv: Fix endless reporting frozen PE

Message-id: <1410545655-205645-489-git-send-email-dzickus@redhat.com>
Patchwork-id: 94479
O-Subject: [RHEL7 PATCH 488/626] powerpc/powernv: Fix endless reporting frozen PE
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 63796558d469d72ab081b266466d115755ba7085
Author: Gavin Shan <gwshan@linux.vnet.ibm.com>
Date:   Thu Apr 24 18:00:20 2014 +1000

    powerpc/powernv: Fix endless reporting frozen PE

    Once one specific PE has been marked as EEH_PE_ISOLATED, it's in
    the middile of recovery or removed permenently. We needn't report
    the frozen PE again. Otherwise, we will have endless reporting
    same frozen PE.

    Signed-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/platforms/powernv/eeh-ioda.c b/arch/powerpc/platforms/powernv/eeh-ioda.c
index b0f320d..3b76e58 100644
--- a/arch/powerpc/platforms/powernv/eeh-ioda.c
+++ b/arch/powerpc/platforms/powernv/eeh-ioda.c
@@ -762,6 +762,11 @@ static int ioda_eeh_next_error(struct eeh_pe **pe)
     * If we can't find the corresponding PE, the
     * PEEV / PEST would be messy. So we force an
     * fenced PHB so that it can be recovered.
+    *
+    * If the PE has been marked as isolated, that
+    * should have been removed permanently or in
+    * progress with recovery. We needn't report
+    * it again.
     */
    if (ioda_eeh_get_pe(hose, frozen_pe_no, pe)) {
     *pe = phb_pe;
@@ -770,6 +775,8 @@ static int ioda_eeh_next_error(struct eeh_pe **pe)
      hose->global_number,
      frozen_pe_no);
     ret = EEH_NEXT_ERR_FENCED_PHB;
+   } else if ((*pe)->state & EEH_PE_ISOLATED) {
+    ret = EEH_NEXT_ERR_NONE;
    } else {
     pr_err("EEH: Frozen PE#%x on PHB#%x detected\n",
      (*pe)->addr, (*pe)->phb->global_number);
-- 
1.7.1