From da08cbfb7b612f0a03c80afaff1aaab360f48399 Mon Sep 17 00:00:00 2001
From: Jes Sorensen <Jes.Sorensen@redhat.com>
Date: Mon, 1 Sep 2014 09:25:09 -0400
Subject: [md] Don't test all of mddev->flags at once

Message-id: <1409563584-9000-8-git-send-email-Jes.Sorensen@redhat.com>
Patchwork-id: 89943
O-Subject: [RHEL7.1 PATCH 07/82] md: Don't test all of mddev->flags at once.
Bugzilla: 1085530
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

From: NeilBrown <neilb@suse.de>

mddev->flags is mostly used to record if an update of the
metadata is needed.  Sometimes the whole field is tested
instead of just the important bits.  This makes it difficult
to introduce more state bits.

So replace all bare tests of mddev->flags with tests for the bits
that actually need testing.

Signed-off-by: NeilBrown <neilb@suse.de>
(cherry picked from commit 7a0a5355cbc71efa430c3730ffbd67ae04abfe31)
Signed-off-by: Jes Sorensen <Jes.Sorensen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/md.c b/drivers/md/md.c
index 7ee2b6c..985117f 100644
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@ -5157,7 +5157,7 @@ int md_run(struct mddev *mddev)
  
  set_bit(MD_RECOVERY_NEEDED, &mddev->recovery);
  
- if (mddev->flags)
+ if (mddev->flags & MD_UPDATE_SB_FLAGS)
   md_update_sb(mddev, 0);
 
  md_new_event(mddev);
@@ -5302,7 +5302,7 @@ static void __md_stop_writes(struct mddev *mddev)
  md_super_wait(mddev);
 
  if (mddev->ro == 0 &&
-     (!mddev->in_sync || mddev->flags)) {
+     (!mddev->in_sync || (mddev->flags & MD_UPDATE_SB_FLAGS))) {
   /* mark array as shutdown cleanly */
   mddev->in_sync = 1;
   md_update_sb(mddev, 1);
@@ -7844,7 +7844,7 @@ void md_check_recovery(struct mddev *mddev)
     sysfs_notify_dirent_safe(mddev->sysfs_state);
   }
 
-  if (mddev->flags)
+  if (mddev->flags & MD_UPDATE_SB_FLAGS)
    md_update_sb(mddev, 0);
 
   if (test_bit(MD_RECOVERY_RUNNING, &mddev->recovery) &&
diff --git a/drivers/md/md.h b/drivers/md/md.h
index ca40cc5..608050c 100644
--- a/drivers/md/md.h
+++ b/drivers/md/md.h
@@ -204,11 +204,12 @@ struct mddev {
  struct md_personality  *pers;
  dev_t    unit;
  int    md_minor;
- struct list_head   disks;
+ struct list_head  disks;
  unsigned long   flags;
 #define MD_CHANGE_DEVS 0 /* Some device status has changed */
 #define MD_CHANGE_CLEAN 1 /* transition to or from 'clean' */
 #define MD_CHANGE_PENDING 2 /* switch from 'clean' to 'active' in progress */
+#define MD_UPDATE_SB_FLAGS (1 | 2 | 4) /* If these are set, md_update_sb needed */
 #define MD_ARRAY_FIRST_USE 3    /* First use of array, needs initialization */
 #define MD_STILL_CLOSED 4 /* If set, then array has not been opened since
      * md_ioctl checked on it.
@@ -221,7 +222,7 @@ struct mddev {
              * are happening, so run/
              * takeover/stop are not safe
              */
- int    ready; /* See when safe to pass 
+ int    ready; /* See when safe to pass
       * IO requests down */
  struct gendisk   *gendisk;
 
-- 
1.7.1