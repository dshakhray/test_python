From f6c03e54c84fd203f1020183dae00afa0ac3797d Mon Sep 17 00:00:00 2001
From: Amir Vadai <avadai@redhat.com>
Date: Thu, 11 Sep 2014 12:00:30 -0400
Subject: [ethernet] mlx4: USe one wrapper that returns -EPERM

Message-id: <8ee980b12f4ea0e61798fd50e13b7bff0a012c9c.1410425016.git.avadai@redhat.com>
Patchwork-id: 93656
O-Subject: [Patch RHEL7.1 V1 094/197] net/mlx4: USe one wrapper that returns -EPERM
Bugzilla: 1107617 1107618 1107619 1107620
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

From: Or Gerlitz <ogerlitz@mellanox.com>

When a VF issues a firmware command which is disallowed for them, the PF
rerturns -EPERM from that command wrapper. Move to use one such wrapper
instance, instead of repeating the same code on such commands.

Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b74757944d69f8cd7de5284fc7e8649d965361ab)
Signed-off-by: Amir Vadai <avadai@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/mellanox/mlx4/cmd.c b/drivers/net/ethernet/mellanox/mlx4/cmd.c
index 516c1dd..2fd61b6 100644
--- a/drivers/net/ethernet/mellanox/mlx4/cmd.c
+++ b/drivers/net/ethernet/mellanox/mlx4/cmd.c
@@ -800,16 +800,7 @@ static int mlx4_MAD_IFC_wrapper(struct mlx4_dev *dev, int slave,
         vhcr->op, MLX4_CMD_TIME_CLASS_C, MLX4_CMD_NATIVE);
 }
 
-static int MLX4_CMD_UPDATE_QP_wrapper(struct mlx4_dev *dev, int slave,
-       struct mlx4_vhcr *vhcr,
-       struct mlx4_cmd_mailbox *inbox,
-       struct mlx4_cmd_mailbox *outbox,
-       struct mlx4_cmd_info *cmd)
-{
- return -EPERM;
-}
-
-static int MLX4_CMD_GET_OP_REQ_wrapper(struct mlx4_dev *dev, int slave,
+static int mlx4_CMD_EPERM_wrapper(struct mlx4_dev *dev, int slave,
        struct mlx4_vhcr *vhcr,
        struct mlx4_cmd_mailbox *inbox,
        struct mlx4_cmd_mailbox *outbox,
@@ -1258,7 +1249,7 @@ static struct mlx4_cmd_info cmd_info[] = {
   .out_is_imm = false,
   .encode_slave_id = false,
   .verify = NULL,
-  .wrapper = MLX4_CMD_UPDATE_QP_wrapper
+  .wrapper = mlx4_CMD_EPERM_wrapper
  },
  {
   .opcode = MLX4_CMD_GET_OP_REQ,
@@ -1267,7 +1258,7 @@ static struct mlx4_cmd_info cmd_info[] = {
   .out_is_imm = false,
   .encode_slave_id = false,
   .verify = NULL,
-  .wrapper = MLX4_CMD_GET_OP_REQ_wrapper,
+  .wrapper = mlx4_CMD_EPERM_wrapper,
  },
  {
   .opcode = MLX4_CMD_CONF_SPECIAL_QP,
@@ -1378,7 +1369,7 @@ static struct mlx4_cmd_info cmd_info[] = {
   .out_is_imm = false,
   .encode_slave_id = false,
   .verify = NULL,
-  .wrapper = mlx4_FLOW_STEERING_IB_UC_QP_RANGE_wrapper
+  .wrapper = mlx4_CMD_EPERM_wrapper
  },
 };
 
diff --git a/drivers/net/ethernet/mellanox/mlx4/mlx4.h b/drivers/net/ethernet/mellanox/mlx4/mlx4.h
index 9fca6c1..cf8be41 100644
--- a/drivers/net/ethernet/mellanox/mlx4/mlx4.h
+++ b/drivers/net/ethernet/mellanox/mlx4/mlx4.h
@@ -1247,11 +1247,6 @@ int mlx4_QP_FLOW_STEERING_DETACH_wrapper(struct mlx4_dev *dev, int slave,
       struct mlx4_cmd_mailbox *inbox,
       struct mlx4_cmd_mailbox *outbox,
       struct mlx4_cmd_info *cmd);
-int mlx4_FLOW_STEERING_IB_UC_QP_RANGE_wrapper(struct mlx4_dev *dev, int slave,
-           struct mlx4_vhcr *vhcr,
-           struct mlx4_cmd_mailbox *inbox,
-           struct mlx4_cmd_mailbox *outbox,
-           struct mlx4_cmd_info *cmd);
 
 int mlx4_get_mgm_entry_size(struct mlx4_dev *dev);
 int mlx4_get_qp_per_mgm(struct mlx4_dev *dev);
diff --git a/drivers/net/ethernet/mellanox/mlx4/resource_tracker.c b/drivers/net/ethernet/mellanox/mlx4/resource_tracker.c
index 2a33513..3b5f53e 100644
--- a/drivers/net/ethernet/mellanox/mlx4/resource_tracker.c
+++ b/drivers/net/ethernet/mellanox/mlx4/resource_tracker.c
@@ -4015,16 +4015,6 @@ int mlx4_QUERY_IF_STAT_wrapper(struct mlx4_dev *dev, int slave,
  return err;
 }
 
-int mlx4_FLOW_STEERING_IB_UC_QP_RANGE_wrapper(struct mlx4_dev *dev, int slave,
-           struct mlx4_vhcr *vhcr,
-           struct mlx4_cmd_mailbox *inbox,
-           struct mlx4_cmd_mailbox *outbox,
-           struct mlx4_cmd_info *cmd)
-{
- return -EPERM;
-}
-
-
 static void detach_qp(struct mlx4_dev *dev, int slave, struct res_qp *rqp)
 {
  struct res_gid *rgid;
-- 
1.7.1