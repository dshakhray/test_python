From a2a7ef3f6a1f508af428005e12a3cf60aff744ed Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 10 Jul 2014 00:59:49 -0400
Subject: [acpi] dock: Simplify dock_init_hotplug() and dock_release_hotplug()

Message-id: <20140710005949.22146.84882.stgit@gir.stowe>
Patchwork-id: 85554
O-Subject: [RHEL7.1 PATCH 015/105] ACPI / dock: Simplify dock_init_hotplug() and dock_release_hotplug()
Bugzilla: 1114228
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1114228
Upstream Status: 4ec24065a65b4debfdeb591cc01a4aa092651f53

commit 4ec24065a65b4debfdeb591cc01a4aa092651f53
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Sun Jun 30 23:47:14 2013 +0200

    ACPI / dock: Simplify dock_init_hotplug() and dock_release_hotplug()

    Make dock_init_hotplug() and dock_release_hotplug() slightly simpler
    and move some checks in those functions to the code paths where they
    are needed.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Acked-by: Yinghai Lu <yinghai@kernel.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/acpi/dock.c b/drivers/acpi/dock.c
index 41c5d04..b1170d6 100644
--- a/drivers/acpi/dock.c
+++ b/drivers/acpi/dock.c
@@ -130,19 +130,16 @@ static int dock_init_hotplug(struct dock_dependent_device *dd,
  int ret = 0;
 
  mutex_lock(&hotplug_lock);
-
- if (dd->hp_context) {
+ if (WARN_ON(dd->hp_context)) {
   ret = -EEXIST;
  } else {
   dd->hp_refcount = 1;
   dd->hp_ops = ops;
   dd->hp_context = context;
   dd->hp_release = release;
+  if (init)
+   init(context);
  }
-
- if (!WARN_ON(ret) && init)
-  init(context);
-
  mutex_unlock(&hotplug_lock);
  return ret;
 }
@@ -157,22 +154,17 @@ static int dock_init_hotplug(struct dock_dependent_device *dd,
  */
 static void dock_release_hotplug(struct dock_dependent_device *dd)
 {
- void (*release)(void *) = NULL;
- void *context = NULL;
-
  mutex_lock(&hotplug_lock);
-
  if (dd->hp_context && !--dd->hp_refcount) {
+  void (*release)(void *) = dd->hp_release;
+  void *context = dd->hp_context;
+
   dd->hp_ops = NULL;
-  context = dd->hp_context;
   dd->hp_context = NULL;
-  release = dd->hp_release;
   dd->hp_release = NULL;
+  if (release)
+   release(context);
  }
-
- if (release && context)
-  release(context);
-
  mutex_unlock(&hotplug_lock);
 }
 
-- 
1.7.1