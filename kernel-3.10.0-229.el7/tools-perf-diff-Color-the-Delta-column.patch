From 02628eff4cc1b6b3f34d5bec110a3820f73d13a2 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:52:17 -0400
Subject: [tools] perf/diff: Color the Delta column

Message-id: <1408953210-26343-250-git-send-email-jolsa@redhat.com>
Patchwork-id: 88999
O-Subject: [PATCH RHEL7.1 BZ1133083 249/322] perf diff: Color the Delta column
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 01f10bc85f538cd681d0a3338b97a33f308d944b
Author: Ramkumar Ramachandra <artagnon@gmail.com>
Date: Mon Dec 30 13:04:19 2013 +0530

description
===========
Color the numbers in the Delta column using percent_color_snprintf().

Generalize the coloring function so that we can accommodate all three
comparison methods in future patches: delta, ratio, and wdiff.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-diff.c b/tools/perf/builtin-diff.c
index 987cac3..6c3f220 100644
--- a/tools/perf/builtin-diff.c
+++ b/tools/perf/builtin-diff.c
@@ -770,6 +770,45 @@ static int hpp__entry_baseline(struct hist_entry *he, char *buf, size_t size)
  return ret;
 }
 
+static int __hpp__color_compare(struct perf_hpp_fmt *fmt,
+    struct perf_hpp *hpp, struct hist_entry *he,
+    int comparison_method)
+{
+ struct diff_hpp_fmt *dfmt =
+  container_of(fmt, struct diff_hpp_fmt, fmt);
+ struct hist_entry *pair = get_pair_fmt(he, dfmt);
+ double diff;
+ char pfmt[20] = " ";
+
+ if (!pair)
+  goto dummy_print;
+
+ switch (comparison_method) {
+ case COMPUTE_DELTA:
+  if (pair->diff.computed)
+   diff = pair->diff.period_ratio_delta;
+  else
+   diff = compute_delta(he, pair);
+
+  if (fabs(diff) < 0.01)
+   goto dummy_print;
+  scnprintf(pfmt, 20, "%%%+d.2f%%%%", dfmt->header_width - 1);
+  return percent_color_snprintf(hpp->buf, hpp->size,
+     pfmt, diff);
+ default:
+  BUG_ON(1);
+ }
+dummy_print:
+ return scnprintf(hpp->buf, hpp->size, "%*s",
+   dfmt->header_width, pfmt);
+}
+
+static int hpp__color_delta(struct perf_hpp_fmt *fmt,
+   struct perf_hpp *hpp, struct hist_entry *he)
+{
+ return __hpp__color_compare(fmt, hpp, he, COMPUTE_DELTA);
+}
+
 static void
 hpp__entry_unpair(struct hist_entry *he, int idx, char *buf, size_t size)
 {
@@ -941,8 +980,16 @@ static void data__hpp_register(struct data__file *d, int idx)
  fmt->entry  = hpp__entry_global;
 
  /* TODO more colors */
- if (idx == PERF_HPP_DIFF__BASELINE)
+ switch (idx) {
+ case PERF_HPP_DIFF__BASELINE:
   fmt->color = hpp__color_baseline;
+  break;
+ case PERF_HPP_DIFF__DELTA:
+  fmt->color = hpp__color_delta;
+  break;
+ default:
+  break;
+ }
 
  init_header(d, dfmt);
  perf_hpp__column_register(fmt);
-- 
1.7.1