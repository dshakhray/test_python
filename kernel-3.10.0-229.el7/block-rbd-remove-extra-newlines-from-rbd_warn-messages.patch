From 04cb7a02819c43001be023d6c84247551f184053 Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:26:48 -0400
Subject: [block] rbd: remove extra newlines from rbd_warn() messages
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-302-git-send-email-sweil@redhat.com>
Patchwork-id: 89687
O-Subject: [PATCH 301/303] rbd: remove extra newlines from rbd_warn() messages
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Ilya Dryomov <ilya.dryomov@inktank.com>

rbd_warn() string should be a single line - rbd_warn() appends \n.

Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>
(cherry picked from commit 9584d5082653429ea219f9739a08566478b39f16)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/block/rbd.c b/drivers/block/rbd.c
index 5d04dde..4b6e0ff 100644
--- a/drivers/block/rbd.c
+++ b/drivers/block/rbd.c
@@ -1414,7 +1414,7 @@ static void obj_request_img_data_set(struct rbd_obj_request *obj_request)
   struct rbd_device *rbd_dev;
 
   rbd_dev = obj_request->img_request->rbd_dev;
-  rbd_warn(rbd_dev, "obj_request %p already marked img_data\n",
+  rbd_warn(rbd_dev, "obj_request %p already marked img_data",
    obj_request);
  }
 }
@@ -1432,7 +1432,7 @@ static void obj_request_done_set(struct rbd_obj_request *obj_request)
 
   if (obj_request_img_data_test(obj_request))
    rbd_dev = obj_request->img_request->rbd_dev;
-  rbd_warn(rbd_dev, "obj_request %p already marked done\n",
+  rbd_warn(rbd_dev, "obj_request %p already marked done",
    obj_request);
  }
 }
@@ -1823,7 +1823,7 @@ static void rbd_osd_req_callback(struct ceph_osd_request *osd_req,
   rbd_osd_trivial_callback(obj_request);
   break;
  default:
-  rbd_warn(NULL, "%s: unsupported op %hu\n",
+  rbd_warn(NULL, "%s: unsupported op %hu",
    obj_request->object_name, (unsigned short) opcode);
   break;
  }
@@ -2058,7 +2058,7 @@ static void rbd_dev_parent_put(struct rbd_device *rbd_dev)
  if (!counter)
   rbd_dev_unparent(rbd_dev);
  else
-  rbd_warn(rbd_dev, "parent reference underflow\n");
+  rbd_warn(rbd_dev, "parent reference underflow");
 }
 
 /*
@@ -2088,7 +2088,7 @@ static bool rbd_dev_parent_get(struct rbd_device *rbd_dev)
  /* Image was flattened, but parent is not yet torn down */
 
  if (counter < 0)
-  rbd_warn(rbd_dev, "parent reference overflow\n");
+  rbd_warn(rbd_dev, "parent reference overflow");
 
  return false;
 }
@@ -2221,11 +2221,11 @@ static bool rbd_img_obj_end_request(struct rbd_obj_request *obj_request)
  if (result) {
   struct rbd_device *rbd_dev = img_request->rbd_dev;
 
-  rbd_warn(rbd_dev, "%s %llx at %llx (%llx)\n",
+  rbd_warn(rbd_dev, "%s %llx at %llx (%llx)",
    img_request_write_test(img_request) ? "write" : "read",
    obj_request->length, obj_request->img_offset,
    obj_request->offset);
-  rbd_warn(rbd_dev, "  result %d xferred %x\n",
+  rbd_warn(rbd_dev, "  result %d xferred %x",
    result, xferred);
   if (!img_request->result)
    img_request->result = result;
@@ -3014,11 +3014,11 @@ static void rbd_watch_cb(u64 ver, u64 notify_id, u8 opcode, void *data)
   */
  ret = rbd_dev_refresh(rbd_dev);
  if (ret)
-  rbd_warn(rbd_dev, "refresh failed: %d\n", ret);
+  rbd_warn(rbd_dev, "refresh failed: %d", ret);
 
  ret = rbd_obj_notify_ack_sync(rbd_dev, notify_id);
  if (ret)
-  rbd_warn(rbd_dev, "notify_ack ret %d\n", ret);
+  rbd_warn(rbd_dev, "notify_ack ret %d", ret);
 }
 
 /*
@@ -4134,7 +4134,7 @@ static int rbd_dev_v2_parent_info(struct rbd_device *rbd_dev)
 
  ret = -EIO;
  if (pool_id > (u64)U32_MAX) {
-  rbd_warn(NULL, "parent pool id too large (%llu > %u)\n",
+  rbd_warn(NULL, "parent pool id too large (%llu > %u)",
    (unsigned long long)pool_id, U32_MAX);
   goto out_err;
  }
@@ -4187,8 +4187,7 @@ static int rbd_dev_v2_parent_info(struct rbd_device *rbd_dev)
     * overlap is zero we just pretend there was
     * no parent image.
     */
-   rbd_warn(rbd_dev, "ignoring parent of "
-      "clone with overlap 0\n");
+   rbd_warn(rbd_dev, "ignoring parent with overlap 0");
   }
  }
 out:
@@ -5327,7 +5326,7 @@ static ssize_t do_rbd_add(struct bus_type *bus,
  /* The ceph file layout needs to fit pool id in 32 bits */
 
  if (spec->pool_id > (u64)U32_MAX) {
-  rbd_warn(NULL, "pool id too large (%llu > %u)\n",
+  rbd_warn(NULL, "pool id too large (%llu > %u)",
     (unsigned long long)spec->pool_id, U32_MAX);
   rc = -EIO;
   goto err_out_client;
-- 
1.7.1