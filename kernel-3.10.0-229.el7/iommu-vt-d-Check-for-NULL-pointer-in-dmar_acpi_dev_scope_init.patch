From 83a3922426f50cbd720568e48d4cb8e35b3b3e6c Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 01:51:29 -0400
Subject: [iommu] vt-d: Check for NULL pointer in dmar_acpi_dev_scope_init()

Message-id: <20140905015129.31297.37514.stgit@gir.stowe>
Patchwork-id: 91350
O-Subject: [RHEL7.1 PATCH 57/65] iommu/vt-d: Check for NULL pointer in dmar_acpi_dev_scope_init()
Bugzilla: 1129880 1087643
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1087643
Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1129880
Upstream Status: 11f1a7768cb9179b1f1ce6b8027df7531e0704e7

commit 11f1a7768cb9179b1f1ce6b8027df7531e0704e7
Author: Joerg Roedel <joro@8bytes.org>
Date:   Tue Mar 25 20:16:40 2014 +0100

    iommu/vt-d: Check for NULL pointer in dmar_acpi_dev_scope_init()

    When ir_dev_scope_init() is called via a rootfs initcall it
    will check for irq_remapping_enabled before it calls
    (indirectly) into dmar_acpi_dev_scope_init() which uses the
    dmar_tbl pointer without any checks.

    The AMD IOMMU driver also sets the irq_remapping_enabled
    flag which causes the dmar_acpi_dev_scope_init() function to
    be called on systems with AMD IOMMU hardware too, causing a
    boot-time kernel crash.

    Signed-off-by: Joerg Roedel <joro@8bytes.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/dmar.c b/drivers/iommu/dmar.c
index c38a44f..d3d1dca 100644
--- a/drivers/iommu/dmar.c
+++ b/drivers/iommu/dmar.c
@@ -657,7 +657,12 @@ static void __init dmar_acpi_insert_dev_scope(u8 device_number,
 
 static int __init dmar_acpi_dev_scope_init(void)
 {
- struct acpi_dmar_andd *andd = (void *)dmar_tbl + sizeof(struct acpi_table_dmar);
+ struct acpi_dmar_andd *andd;
+
+ if (dmar_tbl == NULL)
+  return -ENODEV;
+
+ andd = (void *)dmar_tbl + sizeof(struct acpi_table_dmar);
 
  while (((unsigned long)andd) <
         ((unsigned long)dmar_tbl) + dmar_tbl->length) {
-- 
1.7.1