From 3b7b2bba32850a1811101e28b68d6840a8d810d4 Mon Sep 17 00:00:00 2001
From: Dave Young <dyoung@redhat.com>
Date: Thu, 22 May 2014 02:43:18 -0400
Subject: [x86] efi: Delete superfluous global variables

Message-id: <1400726607-13717-27-git-send-email-dyoung@redhat.com>
Patchwork-id: 80127
O-Subject: [RHEL7.1 PATCH 26/35] x86/efi: Delete superfluous global variables
Bugzilla: 1080109
RH-Acked-by: Chao WANG <chaowang@redhat.com>
RH-Acked-by: Vivek Goyal <vgoyal@redhat.com>

Resolves: bz1080109

Brew build:
https://brewweb.devel.redhat.com/taskinfo?taskID=7480539

Test: Tested kexec/kdump on HP workstation and qemu.

Upstream commit:
commit 518548abd61808ea1e31614ccbdae34d3c32dfa4
Author: Matt Fleming <matt.fleming@intel.com>
Date:   Sat Dec 21 16:09:46 2013 +0000

    x86/efi: Delete superfluous global variables

    There's no need to save the runtime map details in global variables, the
    values are only required to pass to efi_runtime_map_setup().

    And because 'nr_efi_runtime_map' isn't needed, get_nr_runtime_map() can
    be deleted along with 'efi_data_len'.

    Cc: Dave Young <dyoung@redhat.com>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/platform/efi/efi.c b/arch/x86/platform/efi/efi.c
index 9965ff4..7ed3ecf 100644
--- a/arch/x86/platform/efi/efi.c
+++ b/arch/x86/platform/efi/efi.c
@@ -76,10 +76,7 @@ static __initdata efi_config_table_type_t arch_tables[] = {
  {NULL_GUID, NULL, NULL},
 };
 
-static void *efi_runtime_map;
-static int nr_efi_runtime_map;
 u64 efi_setup;  /* efi setup_data physical address */
-u32 efi_data_len; /* efi setup_data payload length */
 
 /*
  * Returns 1 if 'facility' is enabled, 0 otherwise.
@@ -702,15 +699,6 @@ out:
  return ret;
 }
 
-static void get_nr_runtime_map(void)
-{
- if (!efi_setup)
-  return;
-
- nr_efi_runtime_map = (efi_data_len - sizeof(struct efi_setup_data)) /
-        sizeof(efi_memory_desc_t);
-}
-
 void __init efi_init(void)
 {
  efi_char16_t *c16;
@@ -718,7 +706,6 @@ void __init efi_init(void)
  int i = 0;
  void *tmp;
 
- get_nr_runtime_map();
 #ifdef CONFIG_X86_32
  if (boot_params.efi_info.efi_systab_hi ||
      boot_params.efi_info.efi_memmap_hi) {
@@ -933,10 +920,7 @@ static int __init save_runtime_map(void)
   count++;
  }
 
- efi_runtime_map = q;
- nr_efi_runtime_map = count;
- efi_runtime_map_setup(efi_runtime_map, nr_efi_runtime_map,
-         boot_params.efi_info.efi_memdesc_size);
+ efi_runtime_map_setup(q, count, memmap.desc_size);
 
  return 0;
 out:
diff --git a/arch/x86/platform/efi/efi_64.c b/arch/x86/platform/efi/efi_64.c
index 324b651..6284f15 100644
--- a/arch/x86/platform/efi/efi_64.c
+++ b/arch/x86/platform/efi/efi_64.c
@@ -232,5 +232,4 @@ void __iomem *__init efi_ioremap(unsigned long phys_addr, unsigned long size,
 void __init parse_efi_setup(u64 phys_addr, u32 data_len)
 {
  efi_setup = phys_addr + sizeof(struct setup_data);
- efi_data_len = data_len - sizeof(struct setup_data);
 }
-- 
1.7.1