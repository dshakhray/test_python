From 4e89395bf260b741f3a4d6dde9279d28abaa5e36 Mon Sep 17 00:00:00 2001
From: Doug Ledford <dledford@redhat.com>
Date: Wed, 24 Sep 2014 17:33:12 -0400
Subject: [infiniband] ipath: Add P_Key change event support

Message-id: <c652e674f94704c263c132d0cc9accaf518ec4d8.1411579814.git.dledford@redhat.com>
Patchwork-id: 96697
O-Subject: [Patch RHEL7 19/19] IB/ipath: Add P_Key change event support
Bugzilla: 1085961
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

From: Or Gerlitz <ogerlitz@mellanox.com>

Deliver P_Key_CHANGE event through the relevant IB device when
the local pkey table changes.

Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
Signed-off-by: Roland Dreier <roland@purestorage.com>
(cherry picked from commit e316453301f02bfcaabcb86e628f3dbef2e96c7e)
Signed-off-by: Doug Ledford <dledford@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/infiniband/hw/ipath/ipath_mad.c b/drivers/infiniband/hw/ipath/ipath_mad.c
index 43f2d04..e890e5b 100644
--- a/drivers/infiniband/hw/ipath/ipath_mad.c
+++ b/drivers/infiniband/hw/ipath/ipath_mad.c
@@ -726,7 +726,7 @@ bail:
  * @dd: the infinipath device
  * @pkeys: the PKEY table
  */
-static int set_pkeys(struct ipath_devdata *dd, u16 *pkeys)
+static int set_pkeys(struct ipath_devdata *dd, u16 *pkeys, u8 port)
 {
  struct ipath_portdata *pd;
  int i;
@@ -759,6 +759,7 @@ static int set_pkeys(struct ipath_devdata *dd, u16 *pkeys)
  }
  if (changed) {
   u64 pkey;
+  struct ib_event event;
 
   pkey = (u64) dd->ipath_pkeys[0] |
    ((u64) dd->ipath_pkeys[1] << 16) |
@@ -768,12 +769,17 @@ static int set_pkeys(struct ipath_devdata *dd, u16 *pkeys)
       (unsigned long long) pkey);
   ipath_write_kreg(dd, dd->ipath_kregs->kr_partitionkey,
      pkey);
+
+  event.event = IB_EVENT_PKEY_CHANGE;
+  event.device = &dd->verbs_dev->ibdev;
+  event.element.port_num = port;
+  ib_dispatch_event(&event);
  }
  return 0;
 }
 
 static int recv_subn_set_pkeytable(struct ib_smp *smp,
-       struct ib_device *ibdev)
+       struct ib_device *ibdev, u8 port)
 {
  u32 startpx = 32 * (be32_to_cpu(smp->attr_mod) & 0xffff);
  __be16 *p = (__be16 *) smp->data;
@@ -784,7 +790,7 @@ static int recv_subn_set_pkeytable(struct ib_smp *smp,
  for (i = 0; i < n; i++)
   q[i] = be16_to_cpu(p[i]);
 
- if (startpx != 0 || set_pkeys(dev->dd, q) != 0)
+ if (startpx != 0 || set_pkeys(dev->dd, q, port) != 0)
   smp->status |= IB_SMP_INVALID_FIELD;
 
  return recv_subn_get_pkeytable(smp, ibdev);
@@ -1342,7 +1348,7 @@ static int process_subn(struct ib_device *ibdev, int mad_flags,
    ret = recv_subn_set_portinfo(smp, ibdev, port_num);
    goto bail;
   case IB_SMP_ATTR_PKEY_TABLE:
-   ret = recv_subn_set_pkeytable(smp, ibdev);
+   ret = recv_subn_set_pkeytable(smp, ibdev, port_num);
    goto bail;
   case IB_SMP_ATTR_SM_INFO:
    if (dev->port_cap_flags & IB_PORT_SM_DISABLED) {
-- 
1.7.1