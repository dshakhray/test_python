From c73ad689c4c6a771c47567478d6245be15b5fee0 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:12:12 -0400
Subject: [powerpc] boot: Define typedef ihandle as u32

Message-id: <1410545655-205645-504-git-send-email-dzickus@redhat.com>
Patchwork-id: 94482
O-Subject: [RHEL7 PATCH 503/626] powerpc/boot: Define typedef ihandle as u32
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 6413010936bac13a965792fa0d0140bdd3b85f3c
Author: Cedric Le Goater <clg@fr.ibm.com>
Date:   Thu Apr 24 09:23:31 2014 +0200

    powerpc/boot: Define typedef ihandle as u32

    This makes ihandle 64bit friendly.

    Signed-off-by: Cedric Le Goater <clg@fr.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/boot/of.h b/arch/powerpc/boot/of.h
index 504a0a3..e1ef620 100644
--- a/arch/powerpc/boot/of.h
+++ b/arch/powerpc/boot/of.h
@@ -2,7 +2,7 @@
 #define _PPC_BOOT_OF_H_
 
 typedef void *phandle;
-typedef void *ihandle;
+typedef u32 ihandle;
 
 void of_init(void *promptr);
 int of_call_prom(const char *service, int nargs, int nret, ...);
diff --git a/arch/powerpc/boot/oflib.c b/arch/powerpc/boot/oflib.c
index 329437d..956443f 100644
--- a/arch/powerpc/boot/oflib.c
+++ b/arch/powerpc/boot/oflib.c
@@ -106,7 +106,7 @@ static int string_match(const char *s1, const char *s2)
  */
 static int need_map = -1;
 static ihandle chosen_mmu;
-static phandle memory;
+static ihandle memory;
 
 static int check_of_version(void)
 {
@@ -135,10 +135,10 @@ static int check_of_version(void)
   printf("no mmu\n");
   return 0;
  }
- memory = (ihandle) of_call_prom("open", 1, 1, "/memory");
- if (memory == (ihandle) -1) {
-  memory = (ihandle) of_call_prom("open", 1, 1, "/memory@0");
-  if (memory == (ihandle) -1) {
+ memory = of_call_prom("open", 1, 1, "/memory");
+ if (memory == PROM_ERROR) {
+  memory = of_call_prom("open", 1, 1, "/memory@0");
+  if (memory == PROM_ERROR) {
    printf("no memory node\n");
    return 0;
   }
-- 
1.7.1