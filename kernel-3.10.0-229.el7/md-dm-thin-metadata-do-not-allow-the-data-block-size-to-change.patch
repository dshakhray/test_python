From ecc2e6c9b4621b9070399bca3c5b4379875b0e29 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Wed, 16 Jul 2014 20:42:24 -0400
Subject: [md] dm-thin-metadata: do not allow the data block size to change

Message-id: <1405543364-20901-21-git-send-email-snitzer@redhat.com>
Patchwork-id: 85910
O-Subject: [RHEL7.1 PATCH 20/40] dm thin metadata: do not allow the data block size to change
Bugzilla: 1117872
RH-Acked-by: Mikulas Patocka <mpatocka@redhat.com>
RH-Acked-by: Heinz Mauelshagen <heinzm@redhat.com>
RH-Acked-by: Joe Thornber <thornber@redhat.com>

BZ: 1117872

Upstream commit 9aec8629ec829fc9403788cd959e05dd87988bd1
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Mon Jul 14 16:35:54 2014 -0400

    dm thin metadata: do not allow the data block size to change

    The block size for the thin-pool's data device must remained fixed for
    the life of the thin-pool.  Disallow any attempt to change the
    thin-pool's data block size.

    It should be noted that attempting to change the data block size via
    thin-pool table reload will be ignored as a side-effect of the thin-pool
    handover that the thin-pool target does during thin-pool table reload.

    Here is an example outcome of attempting to load a thin-pool table that
    reduced the thin-pool's data block size from 1024K to 512K.

    Before:
    kernel: device-mapper: thin: 253:4: growing the data device from 204800 to 409600 blocks

    After:
    kernel: device-mapper: thin metadata: changing the data block size (from 2048 to 1024) is not supported
    kernel: device-mapper: table: 253:4: thin-pool: Error creating metadata object
    kernel: device-mapper: ioctl: error adding target to table

    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Acked-by: Joe Thornber <ejt@redhat.com>
    Cc: stable@vger.kernel.org

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/dm-thin-metadata.c b/drivers/md/dm-thin-metadata.c
index b086a94..e9d33ad 100644
--- a/drivers/md/dm-thin-metadata.c
+++ b/drivers/md/dm-thin-metadata.c
@@ -613,6 +613,15 @@ static int __open_metadata(struct dm_pool_metadata *pmd)
 
  disk_super = dm_block_data(sblock);
 
+ /* Verify the data block size hasn't changed */
+ if (le32_to_cpu(disk_super->data_block_size) != pmd->data_block_size) {
+  DMERR("changing the data block size (from %u to %llu) is not supported",
+        le32_to_cpu(disk_super->data_block_size),
+        (unsigned long long)pmd->data_block_size);
+  r = -EINVAL;
+  goto bad_unlock_sblock;
+ }
+
  r = __check_incompat_features(disk_super, pmd);
  if (r < 0)
   goto bad_unlock_sblock;
-- 
1.7.1