From 50f69f89dc970c92e9dd63c1c702be40278c937b Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:12:29 -0400
Subject: [powerpc] Use 64k io pages when we never see an HEA

Message-id: <1410545655-205645-521-git-send-email-dzickus@redhat.com>
Patchwork-id: 94563
O-Subject: [RHEL7 PATCH 520/626] powerpc: Use 64k io pages when we never see an HEA
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 9048e648bc22d7b59093f8ca1978c5767893aaa5
Author: Alexander Graf <agraf@suse.de>
Date:   Tue Apr 1 15:46:05 2014 +0200

    powerpc: Use 64k io pages when we never see an HEA

    When we never get around to seeing an HEA ethernet adapter, there's
    no point in restricting ourselves to 4k IO page size.

    This speeds up IO maps when CONFIG_IBMEBUS is disabled.

    [ Updated the test to also lift the restriction on arch 2.07
      (Power 8) which cannot have an HEA
     -- BenH ]

    Signed-off-by: Alexander Graf <agraf@suse.de>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

    foo
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/mm/hash_utils_64.c b/arch/powerpc/mm/hash_utils_64.c
index 2e62b7b..b435e22 100644
--- a/arch/powerpc/mm/hash_utils_64.c
+++ b/arch/powerpc/mm/hash_utils_64.c
@@ -445,6 +445,24 @@ static void mmu_psize_set_default_penc(void)
    mmu_psize_defs[bpsize].penc[apsize] = -1;
 }
 
+#ifdef CONFIG_PPC_64K_PAGES
+
+static bool might_have_hea(void)
+{
+ /*
+  * The HEA ethernet adapter requires awareness of the
+  * GX bus. Without that awareness we can easily assume
+  * we will never see an HEA ethernet device.
+  */
+#ifdef CONFIG_IBMEBUS
+ return !cpu_has_feature(CPU_FTR_ARCH_207S);
+#else
+ return false;
+#endif
+}
+
+#endif /* #ifdef CONFIG_PPC_64K_PAGES */
+
 static void __init htab_init_page_sizes(void)
 {
  int rc;
@@ -499,10 +517,11 @@ static void __init htab_init_page_sizes(void)
    mmu_linear_psize = MMU_PAGE_64K;
   if (mmu_has_feature(MMU_FTR_CI_LARGE_PAGE)) {
    /*
-    * Don't use 64k pages for ioremap on pSeries, since
-    * that would stop us accessing the HEA ethernet.
+    * When running on pSeries using 64k pages for ioremap
+    * would stop us accessing the HEA ethernet. So if we
+    * have the chance of ever seeing one, stay at 4k.
     */
-   if (!machine_is(pseries))
+   if (!might_have_hea() || !machine_is(pseries))
     mmu_io_psize = MMU_PAGE_64K;
   } else
    mmu_ci_restrictions = 1;
-- 
1.7.1