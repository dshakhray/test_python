From c4ba4261401a2b9563f2f372402b5e1f0c3ad0ec Mon Sep 17 00:00:00 2001
From: Ivan Vecera <ivecera@redhat.com>
Date: Mon, 8 Sep 2014 16:13:57 -0400
Subject: [ethernet] be2net: skip multicast promiscuos setting in already set

Message-id: <1410192881-30702-35-git-send-email-ivecera@redhat.com>
Patchwork-id: 92421
O-Subject: [RHEL7.1 PATCH 34/78] be2net: skip multicast promiscuos setting in already set
Bugzilla: 1088575
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>

BZ: #1088575

Upstream commit(s):
commit a0794885702eeab80471d8e5bdd2bfb00e6eb94f
Author: Kalesh AP <kalesh.purayil@emulex.com>
Date:   Fri May 30 19:06:23 2014 +0530

    be2net: skip multicast promiscuos setting in already set

    Set mc-promisc (multicast promiscuous) mode on an interface, only if it is
    *not already* in that mode.

    Also removed logs that report interface being set to multicast
    promiscous mode. In an earlier comment on the netdev list such log messages
    were deemed unnecessary as this behaviour is common across most of the
    ethernet drivers.

    Signed-off-by: Kalesh AP <kalesh.purayil@emulex.com>
    Signed-off-by: Sathya Perla <sathya.perla@emulex.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Ivan Vecera <ivecera@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/emulex/benet/be.h b/drivers/net/ethernet/emulex/benet/be.h
index a1187ea..b435f44 100644
--- a/drivers/net/ethernet/emulex/benet/be.h
+++ b/drivers/net/ethernet/emulex/benet/be.h
@@ -374,6 +374,7 @@ enum vf_state {
 #define BE_FLAGS_LINK_STATUS_INIT  1
 #define BE_FLAGS_WORKER_SCHEDULED  (1 << 3)
 #define BE_FLAGS_VLAN_PROMISC   (1 << 4)
+#define BE_FLAGS_MCAST_PROMISC   (1 << 5)
 #define BE_FLAGS_NAPI_ENABLED   (1 << 9)
 #define BE_FLAGS_QNQ_ASYNC_EVT_RCVD  (1 << 11)
 #define BE_FLAGS_VXLAN_OFFLOADS   (1 << 12)
diff --git a/drivers/net/ethernet/emulex/benet/be_main.c b/drivers/net/ethernet/emulex/benet/be_main.c
index a8121a6..020f63c 100644
--- a/drivers/net/ethernet/emulex/benet/be_main.c
+++ b/drivers/net/ethernet/emulex/benet/be_main.c
@@ -1190,7 +1190,7 @@ ret:
 static void be_clear_promisc(struct be_adapter *adapter)
 {
  adapter->promiscuous = false;
- adapter->flags &= ~BE_FLAGS_VLAN_PROMISC;
+ adapter->flags &= ~(BE_FLAGS_VLAN_PROMISC | BE_FLAGS_MCAST_PROMISC);
 
  be_cmd_rx_filter(adapter, IFF_PROMISC, OFF);
 }
@@ -1215,10 +1215,8 @@ static void be_set_rx_mode(struct net_device *netdev)
 
  /* Enable multicast promisc if num configured exceeds what we support */
  if (netdev->flags & IFF_ALLMULTI ||
-     netdev_mc_count(netdev) > be_max_mc(adapter)) {
-  be_cmd_rx_filter(adapter, IFF_ALLMULTI, ON);
-  goto done;
- }
+     netdev_mc_count(netdev) > be_max_mc(adapter))
+  goto set_mcast_promisc;
 
  if (netdev_uc_count(netdev) != adapter->uc_macs) {
   struct netdev_hw_addr *ha;
@@ -1244,15 +1242,22 @@ static void be_set_rx_mode(struct net_device *netdev)
  }
 
  status = be_cmd_rx_filter(adapter, IFF_MULTICAST, ON);
-
- /* Set to MCAST promisc mode if setting MULTICAST address fails */
- if (status) {
-  dev_info(&adapter->pdev->dev,
-    "Exhausted multicast HW filters.\n");
-  dev_info(&adapter->pdev->dev,
-    "Disabling HW multicast filtering.\n");
-  be_cmd_rx_filter(adapter, IFF_ALLMULTI, ON);
+ if (!status) {
+  if (adapter->flags & BE_FLAGS_MCAST_PROMISC)
+   adapter->flags &= ~BE_FLAGS_MCAST_PROMISC;
+  goto done;
  }
+
+set_mcast_promisc:
+ if (adapter->flags & BE_FLAGS_MCAST_PROMISC)
+  return;
+
+ /* Set to MCAST promisc mode if setting MULTICAST address fails
+  * or if num configured exceeds what we support
+  */
+ status = be_cmd_rx_filter(adapter, IFF_ALLMULTI, ON);
+ if (!status)
+  adapter->flags |= BE_FLAGS_MCAST_PROMISC;
 done:
  return;
 }
-- 
1.7.1