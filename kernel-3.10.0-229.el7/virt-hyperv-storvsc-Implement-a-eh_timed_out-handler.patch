From 9a4648d12dc34a8771ab12234941acd1c6629a15 Mon Sep 17 00:00:00 2001
From: Fam Zheng <famz@redhat.com>
Date: Mon, 4 Aug 2014 09:48:47 -0400
Subject: [virt] hyperv/storvsc: Implement a eh_timed_out handler

Message-id: <1407145729-25017-6-git-send-email-famz@redhat.com>
Patchwork-id: 86956
O-Subject: [RHEL-7 PATCH 5/7] Drivers: scsi: storvsc: Implement a eh_timed_out handler
Bugzilla: 1122317
RH-Acked-by: Jason Wang <jasowang@redhat.com>
RH-Acked-by: Paolo Bonzini <pbonzini@redhat.com>

From: K. Y. Srinivasan <kys@microsoft.com>

On Azure, we have seen instances of unbounded I/O latencies. To deal with
this issue, implement handler that can reset the timeout. Note that the
host gaurantees that it will respond to each command that has been issued.

Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
Reviewed-by: Hannes Reinecke <hare@suse.de>
Cc: <stable@vger.kernel.org>
[hch: added a better comment explaining the issue]
Signed-off-by: Christoph Hellwig <hch@lst.de>

(cherry picked from commit 56b26e69c8283121febedd12b3cc193384af46b9)
Signed-off-by: Fam Zheng <famz@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/storvsc_drv.c b/drivers/scsi/storvsc_drv.c
index 6f8d76e..0a1a31c 100644
--- a/drivers/scsi/storvsc_drv.c
+++ b/drivers/scsi/storvsc_drv.c
@@ -33,6 +33,7 @@
 #include <linux/device.h>
 #include <linux/hyperv.h>
 #include <linux/mempool.h>
+#include <linux/blkdev.h>
 #include <scsi/scsi.h>
 #include <scsi/scsi_cmnd.h>
 #include <scsi/scsi_host.h>
@@ -1515,6 +1516,16 @@ static int storvsc_host_reset_handler(struct scsi_cmnd *scmnd)
  return SUCCESS;
 }
 
+/*
+ * The host guarantees to respond to each command, although I/O latencies might
+ * be unbounded on Azure.  Reset the timer unconditionally to give the host a
+ * chance to perform EH.
+ */
+static enum blk_eh_timer_return storvsc_eh_timed_out(struct scsi_cmnd *scmnd)
+{
+ return BLK_EH_RESET_TIMER;
+}
+
 static bool storvsc_scsi_cmd_ok(struct scsi_cmnd *scmnd)
 {
  bool allowed = true;
@@ -1694,6 +1705,7 @@ static struct scsi_host_template scsi_driver = {
  .bios_param =  storvsc_get_chs,
  .queuecommand =  storvsc_queuecommand,
  .eh_host_reset_handler = storvsc_host_reset_handler,
+ .eh_timed_out =  storvsc_eh_timed_out,
  .slave_alloc =  storvsc_device_alloc,
  .slave_destroy = storvsc_device_destroy,
  .slave_configure = storvsc_device_configure,
-- 
1.7.1