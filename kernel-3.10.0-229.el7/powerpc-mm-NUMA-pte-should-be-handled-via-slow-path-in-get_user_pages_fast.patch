From 3f6479541e660c621cb850bc01495cb2cf86d480 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:10:20 -0400
Subject: [powerpc] mm: NUMA pte should be handled via slow path in get_user_pages_fast()

Message-id: <1410545655-205645-392-git-send-email-dzickus@redhat.com>
Patchwork-id: 94290
O-Subject: [RHEL7 PATCH 391/626] powerpc/mm: NUMA pte should be handled via slow path in get_user_pages_fast()
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 1dc954bd2f85144b9a2959139d41a5f6b9b34712
Author: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
Date:   Wed Apr 2 21:37:39 2014 +0530

    powerpc/mm: NUMA pte should be handled via slow path in get_user_pages_fast()

    We need to handle numa pte via the slow path

    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/mm/gup.c b/arch/powerpc/mm/gup.c
index c5f734e..d874668 100644
--- a/arch/powerpc/mm/gup.c
+++ b/arch/powerpc/mm/gup.c
@@ -36,6 +36,11 @@ static noinline int gup_pte_range(pmd_t pmd, unsigned long addr,
  do {
   pte_t pte = ACCESS_ONCE(*ptep);
   struct page *page;
+  /*
+   * Similar to the PMD case, NUMA hinting must take slow path
+   */
+  if (pte_numa(pte))
+   return 0;
 
   if ((pte_val(pte) & mask) != result)
    return 0;
@@ -75,6 +80,14 @@ static int gup_pmd_range(pud_t pud, unsigned long addr, unsigned long end,
   if (pmd_none(pmd) || pmd_trans_splitting(pmd))
    return 0;
   if (pmd_huge(pmd) || pmd_large(pmd)) {
+   /*
+    * NUMA hinting faults need to be handled in the GUP
+    * slowpath for accounting purposes and so that they
+    * can be serialised against THP migration.
+    */
+   if (pmd_numa(pmd))
+    return 0;
+
    if (!gup_hugepte((pte_t *)pmdp, PMD_SIZE, addr, next,
       write, pages, nr))
     return 0;
-- 
1.7.1