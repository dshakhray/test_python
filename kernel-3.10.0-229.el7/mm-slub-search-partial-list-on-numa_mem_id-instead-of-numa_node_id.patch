From c087b3bd2a05c66d8c7a48deac9150f95d90aa44 Mon Sep 17 00:00:00 2001
From: Gustavo Duarte <gduarte@redhat.com>
Date: Tue, 9 Dec 2014 20:01:36 -0500
Subject: [mm] slub: search partial list on numa_mem_id(), instead of numa_node_id()

Message-id: <1418155299-17945-3-git-send-email-gduarte@redhat.com>
Patchwork-id: 101207
O-Subject: [RHEL7.1 PATCH BZ 953583 2/5] slub: search partial list on numa_mem_id(), instead of numa_node_id()
Bugzilla: 953583
RH-Acked-by: David Gibson <dgibson@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

BZ 953583
Upstream Status: 844e4d66f4ec3b6b6d3bcfcfba3ade2b962771e2

commit 844e4d66f4ec3b6b6d3bcfcfba3ade2b962771e2
Author: Joonsoo Kim <iamjoonsoo.kim@lge.com>
Date:   Fri Jun 6 14:35:36 2014 -0700

    slub: search partial list on numa_mem_id(), instead of numa_node_id()

    Currently, if allocation constraint to node is NUMA_NO_NODE, we search a
    partial slab on numa_node_id() node.  This doesn't work properly on a
    system having memoryless nodes, since it can have no memory on that node
    so there must be no partial slab on that node.

    On that node, page allocation always falls back to numa_mem_id() first.
    So searching a partial slab on numa_node_id() in that case is the proper
    solution for the memoryless node case.

    Signed-off-by: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Acked-by: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>
    Acked-by: David Rientjes <rientjes@google.com>
    Acked-by: Christoph Lameter <cl@linux.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: Wanpeng Li <liwanp@linux.vnet.ibm.com>
    Cc: Han Pingtian <hanpt@linux.vnet.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/mm/slub.c b/mm/slub.c
index 1f51a23..f1d07b9 100644
--- a/mm/slub.c
+++ b/mm/slub.c
@@ -1669,7 +1669,7 @@ static void *get_partial(struct kmem_cache *s, gfp_t flags, int node,
   struct kmem_cache_cpu *c)
 {
  void *object;
- int searchnode = (node == NUMA_NO_NODE) ? numa_node_id() : node;
+ int searchnode = (node == NUMA_NO_NODE) ? numa_mem_id() : node;
 
  object = get_partial_node(s, get_node(s, searchnode), c, flags);
  if (object || node != NUMA_NO_NODE)
-- 
1.7.1