From e417a469f74c6945a5f1f48978512f5c8c9c32be Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 23 Oct 2014 09:54:17 -0400
Subject: [fs] ext4: don't try to modify s_flags if the the file system is read-only

Message-id: <1414058125-4183-104-git-send-email-lczerner@redhat.com>
Patchwork-id: 98236
O-Subject: [RHEL 7.1 PATCH v2 103/171] ext4: don't try to modify s_flags if the the file system is read-only
Bugzilla: 1150139
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Theodore Ts'o <tytso@mit.edu>

BZ 1150139
https://bugzilla.redhat.com/show_bug.cgi?id=1150139

BREW 8142710
https://brewweb.devel.redhat.com/taskinfo?taskID=8142710

Upstream commit 23301410972330c0ae9a8afc379ba2005e249cc6

 If an ext4 file system is created by some tool other than mke2fs
 (perhaps by someone who has a pathalogical fear of the GPL) that
 doesn't set one or the other of the EXT2_FLAGS_{UN}SIGNED_HASH flags,
 and that file system is then mounted read-only, don't try to modify
 the s_flags field.  Otherwise, if dm_verity is in use, the superblock
 will change, causing an dm_verity failure.

 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
 Cc: stable@vger.kernel.org
 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/super.c b/fs/ext4/super.c
index 8bfe34d..55b733f 100644
--- a/fs/ext4/super.c
+++ b/fs/ext4/super.c
@@ -3699,16 +3699,22 @@ static int ext4_fill_super(struct super_block *sb, void *data, int silent)
  for (i = 0; i < 4; i++)
   sbi->s_hash_seed[i] = le32_to_cpu(es->s_hash_seed[i]);
  sbi->s_def_hash_version = es->s_def_hash_version;
- i = le32_to_cpu(es->s_flags);
- if (i & EXT2_FLAGS_UNSIGNED_HASH)
-  sbi->s_hash_unsigned = 3;
- else if ((i & EXT2_FLAGS_SIGNED_HASH) == 0) {
+ if (EXT4_HAS_COMPAT_FEATURE(sb, EXT4_FEATURE_COMPAT_DIR_INDEX)) {
+  i = le32_to_cpu(es->s_flags);
+  if (i & EXT2_FLAGS_UNSIGNED_HASH)
+   sbi->s_hash_unsigned = 3;
+  else if ((i & EXT2_FLAGS_SIGNED_HASH) == 0) {
 #ifdef __CHAR_UNSIGNED__
-  es->s_flags |= cpu_to_le32(EXT2_FLAGS_UNSIGNED_HASH);
-  sbi->s_hash_unsigned = 3;
+   if (!(sb->s_flags & MS_RDONLY))
+    es->s_flags |=
+     cpu_to_le32(EXT2_FLAGS_UNSIGNED_HASH);
+   sbi->s_hash_unsigned = 3;
 #else
-  es->s_flags |= cpu_to_le32(EXT2_FLAGS_SIGNED_HASH);
+   if (!(sb->s_flags & MS_RDONLY))
+    es->s_flags |=
+     cpu_to_le32(EXT2_FLAGS_SIGNED_HASH);
 #endif
+  }
  }
 
  /* Handle clustersize */
-- 
1.7.1