From f34bd682194e13b5b6f66cce87ea17afb921ccd3 Mon Sep 17 00:00:00 2001
From: Sai Vemuri <svemuri@redhat.com>
Date: Thu, 11 Sep 2014 22:42:38 -0400
Subject: [ethernet] cxgb4: Updates for T5 SGE's Egress Congestion Threshold

Message-id: <1410475447-94392-20-git-send-email-svemuri@redhat.com>
Patchwork-id: 93886
O-Subject: [RHEL7.1 PATCH BZ 1124947 019/108] cxgb4: Updates for T5 SGE's Egress Congestion Threshold
Bugzilla: 1124947
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Based on original work by Casey Leedom <leedom@chelsio.com>

Signed-off-by: Kumar Sanghvi <kumaras@chelsio.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c2b955e0063411826d2c4540c96a8f2c4e1c2cb0)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/chelsio/cxgb4/sge.c b/drivers/net/ethernet/chelsio/cxgb4/sge.c
index 37c65e9..ffb6e11 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/sge.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/sge.c
@@ -2774,8 +2774,8 @@ static int t4_sge_init_hard(struct adapter *adap)
 int t4_sge_init(struct adapter *adap)
 {
  struct sge *s = &adap->sge;
- u32 sge_control;
- int ret;
+ u32 sge_control, sge_conm_ctrl;
+ int ret, egress_threshold;
 
  /*
   * Ingress Padding Boundary and Egress Status Page Size are set up by
@@ -2800,10 +2800,18 @@ int t4_sge_init(struct adapter *adap)
   * SGE's Egress Congestion Threshold.  If it isn't, then we can get
   * stuck waiting for new packets while the SGE is waiting for us to
   * give it more Free List entries.  (Note that the SGE's Egress
-  * Congestion Threshold is in units of 2 Free List pointers.)
+  * Congestion Threshold is in units of 2 Free List pointers.) For T4,
+  * there was only a single field to control this.  For T5 there's the
+  * original field which now only applies to Unpacked Mode Free List
+  * buffers and a new field which only applies to Packed Mode Free List
+  * buffers.
   */
- s->fl_starve_thres
-  = EGRTHRESHOLD_GET(t4_read_reg(adap, SGE_CONM_CTRL))*2 + 1;
+ sge_conm_ctrl = t4_read_reg(adap, SGE_CONM_CTRL);
+ if (is_t4(adap->params.chip))
+  egress_threshold = EGRTHRESHOLD_GET(sge_conm_ctrl);
+ else
+  egress_threshold = EGRTHRESHOLDPACKING_GET(sge_conm_ctrl);
+ s->fl_starve_thres = 2*egress_threshold + 1;
 
  setup_timer(&s->rx_timer, sge_rx_timer_cb, (unsigned long)adap);
  setup_timer(&s->tx_timer, sge_tx_timer_cb, (unsigned long)adap);
diff --git a/drivers/net/ethernet/chelsio/cxgb4/t4_regs.h b/drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
index 33cf9ef..225ad8a 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
@@ -230,6 +230,12 @@
 #define  EGRTHRESHOLD(x)     ((x) << EGRTHRESHOLDshift)
 #define  EGRTHRESHOLD_GET(x) (((x) & EGRTHRESHOLD_MASK) >> EGRTHRESHOLDshift)
 
+#define EGRTHRESHOLDPACKING_MASK 0x3fU
+#define EGRTHRESHOLDPACKING_SHIFT 14
+#define EGRTHRESHOLDPACKING(x)  ((x) << EGRTHRESHOLDPACKING_SHIFT)
+#define EGRTHRESHOLDPACKING_GET(x) (((x) >> EGRTHRESHOLDPACKING_SHIFT) & \
+       EGRTHRESHOLDPACKING_MASK)
+
 #define SGE_DBFIFO_STATUS 0x10a4
 #define  HP_INT_THRESH_SHIFT 28
 #define  HP_INT_THRESH_MASK  0xfU
-- 
1.7.1