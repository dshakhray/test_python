From 82f01b1425c0c662fa07d978e8cdbe28052b9a7f Mon Sep 17 00:00:00 2001
From: Oleg Nesterov <oleg@redhat.com>
Date: Wed, 15 Oct 2014 16:57:41 -0400
Subject: [x86] fpu: __restore_xstate_sig()->math_state_restore() needs preempt_disable()

Message-id: <20141015165741.GB29829@redhat.com>
Patchwork-id: 97578
O-Subject: [PATCH RHEL7 BZ 1121784 2/2] x86, fpu: __restore_xstate_sig()->math_state_restore() needs preempt_disable()
Bugzilla: 1121784
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

RHBZ: 1121784

Upstream commit df24fb859a4e200d9324e2974229fbb7adf00aef
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Tue, 2 Sep 2014 19:57:17 +0200

Add preempt_disable() + preempt_enable() around math_state_restore() in
__restore_xstate_sig(). Otherwise __switch_to() after __thread_fpu_begin()
can overwrite fpu->state we are going to restore.

Signed-off-by: Oleg Nesterov <oleg@redhat.com>
Link: http://lkml.kernel.org/r/20140902175717.GA21649@redhat.com
Cc: <stable@vger.kernel.org> # v3.7+
Reviewed-by: Suresh Siddha <sbsiddha@gmail.com>
Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kernel/xsave.c b/arch/x86/kernel/xsave.c
index 3a1acc9..7a510b2 100644
--- a/arch/x86/kernel/xsave.c
+++ b/arch/x86/kernel/xsave.c
@@ -398,8 +398,11 @@ int __restore_xstate_sig(void __user *buf, void __user *buf_fx, int size)
    set_used_math();
   }
 
-  if (use_eager_fpu())
+  if (use_eager_fpu()) {
+   preempt_disable();
    math_state_restore();
+   preempt_enable();
+  }
 
   return err;
  } else {
-- 
1.7.1