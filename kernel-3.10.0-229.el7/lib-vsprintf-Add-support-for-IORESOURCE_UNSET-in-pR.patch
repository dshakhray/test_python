From ede2981bf96e3b1f24a466e9f241ffc67ca5b077 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Wed, 6 Aug 2014 03:49:39 -0400
Subject: [lib] vsprintf: Add support for IORESOURCE_UNSET in %pR

Message-id: <20140806034939.1438.46898.stgit@gir.stowe>
Patchwork-id: 87461
O-Subject: [RHEL7.1 PATCH 52/69] vsprintf: Add support for IORESOURCE_UNSET in %pR
Bugzilla: 1110896
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110896
Upstream Status: d19cb803a2ff85d1b64b9628e1aec2aa76a9260b

commit d19cb803a2ff85d1b64b9628e1aec2aa76a9260b
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Wed Feb 26 11:25:56 2014 -0700

    vsprintf: Add support for IORESOURCE_UNSET in %pR

    Sometimes we have a struct resource where we know the type (MEM/IO/etc.)
    and the size, but we haven't assigned address space for it.  The
    IORESOURCE_UNSET flag is a way to indicate this situation.  For these
    "unset" resources, the start address is meaningless, so print only the
    size, e.g.,

      - pci 0000:0c:00.0: reg 184: [mem 0x00000000-0x00001fff 64bit]
      + pci 0000:0c:00.0: reg 184: [mem size 0x2000 64bit]

    For %pr (printing with raw flags), we still print the address range,
    because %pr is mostly used for debugging anyway.

    Thanks to Fengguang Wu <fengguang.wu@intel.com> for suggesting
    resource_size().

    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/linux/ioport.h b/include/linux/ioport.h
index 9fcaac8..5e3a906 100644
--- a/include/linux/ioport.h
+++ b/include/linux/ioport.h
@@ -51,7 +51,7 @@ struct resource {
 
 #define IORESOURCE_EXCLUSIVE 0x08000000 /* Userland may not map this resource */
 #define IORESOURCE_DISABLED 0x10000000
-#define IORESOURCE_UNSET 0x20000000
+#define IORESOURCE_UNSET 0x20000000 /* No address assigned yet */
 #define IORESOURCE_AUTO  0x40000000
 #define IORESOURCE_BUSY  0x80000000 /* Driver has marked this resource busy */
 
diff --git a/lib/vsprintf.c b/lib/vsprintf.c
index d69c3dc..34a0892 100644
--- a/lib/vsprintf.c
+++ b/lib/vsprintf.c
@@ -720,10 +720,15 @@ char *resource_string(char *buf, char *end, struct resource *res,
   specp = &mem_spec;
   decode = 0;
  }
- p = number(p, pend, res->start, *specp);
- if (res->start != res->end) {
-  *p++ = '-';
-  p = number(p, pend, res->end, *specp);
+ if (decode && res->flags & IORESOURCE_UNSET) {
+  p = string(p, pend, "size ", str_spec);
+  p = number(p, pend, resource_size(res), *specp);
+ } else {
+  p = number(p, pend, res->start, *specp);
+  if (res->start != res->end) {
+   *p++ = '-';
+   p = number(p, pend, res->end, *specp);
+  }
  }
  if (decode) {
   if (res->flags & IORESOURCE_MEM_64)
-- 
1.7.1