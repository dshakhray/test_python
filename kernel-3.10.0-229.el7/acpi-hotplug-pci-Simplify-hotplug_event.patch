From 081d53c35e6548a59267244859e7589692fbb388 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Fri, 19 Sep 2014 12:29:06 -0400
Subject: [acpi] hotplug/pci: Simplify hotplug_event()

Message-id: <1411129776-21656-32-git-send-email-prarit@redhat.com>
Patchwork-id: 96384
O-Subject: [RHEL7.1 PATCH BZ 1141846 31/61] ACPI / hotplug / PCI: Simplify hotplug_event()
Bugzilla: 1141846
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Myron Stowe <mstowe@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1141846

commit b75cece1a79a6259185442004e040511ed3a7341
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Feb 4 00:40:46 2014 +0100

    ACPI / hotplug / PCI: Simplify hotplug_event()

    A few lines of code can be cut from hotplug_event() by defining
    and initializing the slot variable at the top of the function,
    so do that.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Mika Westerberg <mika.westerberg@linux.intel.com>

Cc: Myron Stowe <mstowe@redhat.com>
Cc: Andy Gospodarek <agospoda@redhat.com>
Cc: Tony Camuso <tcamuso@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/hotplug/acpiphp_glue.c b/drivers/pci/hotplug/acpiphp_glue.c
index 3f4c022..2779b63 100644
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@ -817,6 +817,7 @@ static void hotplug_event(acpi_handle handle, u32 type, void *data)
 {
  struct acpiphp_context *context = data;
  struct acpiphp_func *func = &context->func;
+ struct acpiphp_slot *slot = func->slot;
  struct acpiphp_bridge *bridge;
  char objname[64];
  struct acpi_buffer buffer = { .length = sizeof(objname),
@@ -838,14 +839,11 @@ static void hotplug_event(acpi_handle handle, u32 type, void *data)
   pr_debug("%s: Bus check notify on %s\n", __func__, objname);
   pr_debug("%s: re-enumerating slots under %s\n",
     __func__, objname);
-  if (bridge) {
+  if (bridge)
    acpiphp_check_bridge(bridge);
-  } else {
-   struct acpiphp_slot *slot = func->slot;
+  else if (!(slot->flags & SLOT_IS_GOING_AWAY))
+   enable_slot(slot);
 
-   if (!(slot->flags & SLOT_IS_GOING_AWAY))
-    enable_slot(slot);
-  }
   break;
 
  case ACPI_NOTIFY_DEVICE_CHECK:
@@ -853,12 +851,7 @@ static void hotplug_event(acpi_handle handle, u32 type, void *data)
   pr_debug("%s: Device check notify on %s\n", __func__, objname);
   if (bridge) {
    acpiphp_check_bridge(bridge);
-  } else {
-   struct acpiphp_slot *slot = func->slot;
-
-   if (slot->flags & SLOT_IS_GOING_AWAY)
-    break;
-
+  } else if (!(slot->flags & SLOT_IS_GOING_AWAY)) {
    /*
     * Check if anything has changed in the slot and rescan
     * from the parent if that's the case.
@@ -871,7 +864,7 @@ static void hotplug_event(acpi_handle handle, u32 type, void *data)
  case ACPI_NOTIFY_EJECT_REQUEST:
   /* request device eject */
   pr_debug("%s: Device eject notify on %s\n", __func__, objname);
-  acpiphp_disable_and_eject_slot(func->slot);
+  acpiphp_disable_and_eject_slot(slot);
   break;
  }
 
-- 
1.7.1