From bc14104c418eb249679c0fd89bb3d79115f1dddc Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Fri, 13 Jun 2014 14:35:20 -0400
Subject: [block] blk-mq: don't use preempt_count() to check for right CPU

Message-id: <1402670238-13916-33-git-send-email-snitzer@redhat.com>
Patchwork-id: 83806
O-Subject: [RHEL7.1 PATCH 032/150] blk-mq: don't use preempt_count() to check for right CPU
Bugzilla: 1105204
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Jeff Moyer <jmoyer@redhat.com>

BZ: 1105204

Upstream commit fd1270d5df6a005e1248e87042159a799cc4b2c9
Author: Jens Axboe <axboe@fb.com>
Date:   Wed Apr 16 09:23:48 2014 -0600

    blk-mq: don't use preempt_count() to check for right CPU

    UP or CONFIG_PREEMPT_NONE will return 0, and what we really
    want to check is whether or not we are on the right CPU.
    So don't make PREEMPT part of this, just test the CPU in
    the mask directly.

    Signed-off-by: Jens Axboe <axboe@fb.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/block/blk-mq.c b/block/blk-mq.c
index 9180052..1fa01ff 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -534,7 +534,7 @@ static void __blk_mq_run_hw_queue(struct blk_mq_hw_ctx *hctx)
  LIST_HEAD(rq_list);
  int bit, queued;
 
- WARN_ON(!preempt_count());
+ WARN_ON(!cpumask_test_cpu(raw_smp_processor_id(), hctx->cpumask));
 
  if (unlikely(test_bit(BLK_MQ_S_STOPPED, &hctx->state)))
   return;
-- 
1.7.1