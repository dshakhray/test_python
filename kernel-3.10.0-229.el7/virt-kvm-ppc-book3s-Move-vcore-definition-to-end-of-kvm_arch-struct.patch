From 2bb1f9fedd726cd2ced5238fdf07d61d3ae62b2d Mon Sep 17 00:00:00 2001
From: David Gibson <dgibson@redhat.com>
Date: Mon, 15 Sep 2014 07:12:25 -0400
Subject: [virt] kvm/ppc: book3s - Move vcore definition to end of kvm_arch struct

Message-id: <1410765214-16377-10-git-send-email-dgibson@redhat.com>
Patchwork-id: 94739
O-Subject: [PATCH 09/78] KVM: PPC: Book3S: Move vcore definition to end of kvm_arch struct
Bugzilla: 1123145 1123133 1123367
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1123145

Without this 1aba3042e5b5303ddfe0a1a8e13166192d676bc0 "KVM: PPC: Book3S:
Controls for in-kernel sPAPR hypercall handling" will break compile with
the RHEL configuration because the KVM_ENABLE_HCALLS asm-offset will
exceed immediate offset range, as agraf describes.

Signed-off-by: David Gibson <dgibson@redhat.com>

commit 1287cb3fa85cd4a0d18402f6a23e1d4c6a9d7b8b
Author: Alexander Graf <agraf@suse.de>
Date:   Fri Jul 4 12:52:51 2014 +0200

    KVM: PPC: Book3S: Move vcore definition to end of kvm_arch struct

    When building KVM with a lot of vcores (NR_CPUS is big), we can potentially
    get out of the ld immediate range for dereferences inside that struct.

    Move the array to the end of our kvm_arch struct. This fixes compilation
    issues with NR_CPUS=2048 for me.

    Signed-off-by: Alexander Graf <agraf@suse.de>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/kvm_host.h b/arch/powerpc/include/asm/kvm_host.h
index f173046..7d3c741 100644
--- a/arch/powerpc/include/asm/kvm_host.h
+++ b/arch/powerpc/include/asm/kvm_host.h
@@ -259,7 +259,6 @@ struct kvm_arch {
  atomic_t hpte_mod_interest;
  spinlock_t slot_phys_lock;
  cpumask_t need_tlb_flush;
- struct kvmppc_vcore *vcores[KVM_MAX_VCORES];
  int hpt_cma_alloc;
 #endif /* CONFIG_KVM_BOOK3S_HV_POSSIBLE */
 #ifdef CONFIG_KVM_BOOK3S_PR_POSSIBLE
@@ -276,6 +275,10 @@ struct kvm_arch {
  struct kvmppc_xics *xics;
 #endif
  struct kvmppc_ops *kvm_ops;
+#ifdef CONFIG_KVM_BOOK3S_HV_POSSIBLE
+ /* This array can grow quite large, keep it at the end */
+ struct kvmppc_vcore *vcores[KVM_MAX_VCORES];
+#endif
 };
 
 /*
-- 
1.7.1