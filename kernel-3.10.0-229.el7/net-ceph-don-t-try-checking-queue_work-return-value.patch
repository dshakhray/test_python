From bcd6f4cc5e783d0ccc4e28d8ea8bed97cfcd177d Mon Sep 17 00:00:00 2001
From: Ilya Dryomov <ilya.dryomov@inktank.com>
Date: Tue, 18 Nov 2014 15:49:26 -0500
Subject: [net] ceph: don't try checking queue_work() return value
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1416325805-26490-12-git-send-email-idryomov@redhat.com>
Patchwork-id: 100203
O-Subject: [RHEL7.1 PATCH 11/50] libceph: don't try checking queue_work() return value
Bugzilla: 1165232
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Sage Weil <sweil@redhat.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>

From: Ilya Dryomov <ilya.dryomov@inktank.com>

queue_work() doesn't "fail to queue", it returns false if work was
already on a queue, which can't happen here since we allocate
event_work right before we queue it.  So don't bother at all.

Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>
Reviewed-by: Alex Elder <elder@linaro.org>
(cherry picked from commit 91883cd27c4e2523dd53e2bd6f71a1c5e0be5a38)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ceph/osd_client.c b/net/ceph/osd_client.c
index aca8557..5dd54d4 100644
--- a/net/ceph/osd_client.c
+++ b/net/ceph/osd_client.c
@@ -2359,24 +2359,19 @@ static void handle_watch_notify(struct ceph_osd_client *osdc,
  if (event) {
   event_work = kmalloc(sizeof(*event_work), GFP_NOIO);
   if (!event_work) {
-   dout("ERROR: could not allocate event_work\n");
-   goto done_err;
+   pr_err("couldn't allocate event_work\n");
+   ceph_osdc_put_event(event);
+   return;
   }
   INIT_WORK(&event_work->work, do_event_work);
   event_work->event = event;
   event_work->ver = ver;
   event_work->notify_id = notify_id;
   event_work->opcode = opcode;
-  if (!queue_work(osdc->notify_wq, &event_work->work)) {
-   dout("WARNING: failed to queue notify event work\n");
-   goto done_err;
-  }
- }
 
- return;
+  queue_work(osdc->notify_wq, &event_work->work);
+ }
 
-done_err:
- ceph_osdc_put_event(event);
  return;
 
 bad:
-- 
1.7.1