From bb3cc6d2d07e55b1a8a63af7cd5e532d98d41061 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:51:01 -0400
Subject: [tools] perf/hists: Leave symbol addr hist bucket auto alloc to symbol layer

Message-id: <1408953210-26343-174-git-send-email-jolsa@redhat.com>
Patchwork-id: 88826
O-Subject: [PATCH RHEL7.1 BZ1133083 173/322] perf hists: Leave symbol addr hist bucket auto alloc to symbol layer
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 00e55218642b91c152917e170c8387c631467460
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date: Wed Dec 18 15:46:32 2013 -0300

description
===========
Since now symbol__addr_inc_samples() does the auto alloc, no need to do
it prior to calling hist_entry__inc_addr_samples.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-annotate.c b/tools/perf/builtin-annotate.c
index 6fd52c8..4136f99 100644
--- a/tools/perf/builtin-annotate.c
+++ b/tools/perf/builtin-annotate.c
@@ -69,15 +69,7 @@ static int perf_evsel__add_sample(struct perf_evsel *evsel,
  if (he == NULL)
   return -ENOMEM;
 
- ret = 0;
- if (he->ms.sym != NULL) {
-  struct annotation *notes = symbol__annotation(he->ms.sym);
-  if (notes->src == NULL && symbol__alloc_hist(he->ms.sym) < 0)
-   return -ENOMEM;
-
-  ret = hist_entry__inc_addr_samples(he, evsel->idx, al->addr);
- }
-
+ ret = hist_entry__inc_addr_samples(he, evsel->idx, al->addr);
  evsel->hists.stats.total_period += sample->period;
  hists__inc_nr_events(&evsel->hists, PERF_RECORD_SAMPLE);
  return ret;
diff --git a/tools/perf/builtin-report.c b/tools/perf/builtin-report.c
index b75fc36..0615a63 100644
--- a/tools/perf/builtin-report.c
+++ b/tools/perf/builtin-report.c
@@ -122,23 +122,9 @@ static int perf_report__add_mem_hist_entry(struct perf_tool *tool,
  if (!he)
   return -ENOMEM;
 
- /*
-  * In the TUI browser, we are doing integrated annotation,
-  * so we don't allocate the extra space needed because the stdio
-  * code will not use it.
-  */
- if (sort__has_sym && he->ms.sym && use_browser > 0) {
-  struct annotation *notes = symbol__annotation(he->ms.sym);
-
-  assert(evsel != NULL);
-
-  if (notes->src == NULL && symbol__alloc_hist(he->ms.sym) < 0)
-   goto out;
-
-  err = hist_entry__inc_addr_samples(he, evsel->idx, al->addr);
-  if (err)
-   goto out;
- }
+ err = hist_entry__inc_addr_samples(he, evsel->idx, al->addr);
+ if (err)
+  goto out;
 
  mx = he->mem_info;
  err = symbol__inc_addr_samples(mx->daddr.sym, mx->daddr.map,
@@ -259,26 +245,10 @@ static int perf_evsel__add_hist_entry(struct perf_tool *tool,
   if (err)
    return err;
  }
- /*
-  * Only in the TUI browser we are doing integrated annotation,
-  * so we don't allocated the extra space needed because the stdio
-  * code will not use it.
-  */
- if (he->ms.sym != NULL && use_browser == 1 && sort__has_sym) {
-  struct annotation *notes = symbol__annotation(he->ms.sym);
-
-  assert(evsel != NULL);
-
-  err = -ENOMEM;
-  if (notes->src == NULL && symbol__alloc_hist(he->ms.sym) < 0)
-   goto out;
-
-  err = hist_entry__inc_addr_samples(he, evsel->idx, al->addr);
- }
 
+ err = hist_entry__inc_addr_samples(he, evsel->idx, al->addr);
  evsel->hists.stats.total_period += sample->period;
  hists__inc_nr_events(&evsel->hists, PERF_RECORD_SAMPLE);
-out:
  return err;
 }
 
-- 
1.7.1