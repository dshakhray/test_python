From 61a1c081967920b3538151cc03f360b3d646aee6 Mon Sep 17 00:00:00 2001
From: Andy Grover <agrover@redhat.com>
Date: Fri, 5 Sep 2014 16:36:18 -0400
Subject: [infiniband] iser: Bail from accept_np if np_thread is trying to close

Message-id: <1409934989-29941-21-git-send-email-agrover@redhat.com>
Patchwork-id: 91489
O-Subject: [RHEL7.1 PATCH e-stor 20/31] Target/iser: Bail from accept_np if np_thread is trying to close
Bugzilla: 1129387
RH-Acked-by: Chris Leech <cleech@redhat.com>
RH-Acked-by: Rob Evers <revers@redhat.com>

From: Sagi Grimberg <sagig@mellanox.com>

commit e346ab343f4f58c12a96725c7b13df9cc2ad56f6 upstream.

In case np_thread state is in RESET/SHUTDOWN/EXIT states,
no point for isert to stall there as we may get a hang in
case no one will wake it up later.

Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/infiniband/ulp/isert/ib_isert.c b/drivers/infiniband/ulp/isert/ib_isert.c
index bcd9a1d..c3d0258 100644
--- a/drivers/infiniband/ulp/isert/ib_isert.c
+++ b/drivers/infiniband/ulp/isert/ib_isert.c
@@ -2192,9 +2192,14 @@ accept_wait:
   return -ENODEV;
 
  spin_lock_bh(&np->np_thread_lock);
- if (np->np_thread_state == ISCSI_NP_THREAD_RESET) {
+ if (np->np_thread_state >= ISCSI_NP_THREAD_RESET) {
   spin_unlock_bh(&np->np_thread_lock);
-  pr_debug("ISCSI_NP_THREAD_RESET for isert_accept_np\n");
+  pr_debug("np_thread_state %d for isert_accept_np\n",
+    np->np_thread_state);
+  /**
+   * No point in stalling here when np_thread
+   * is in state RESET/SHUTDOWN/EXIT - bail
+   **/
   return -ENODEV;
  }
  spin_unlock_bh(&np->np_thread_lock);
-- 
1.7.1