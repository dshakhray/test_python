From 7b7726088d2beb856ca97515a0f3efa6e4e45df1 Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Mon, 23 Jun 2014 21:49:25 -0400
Subject: [fs] nfsd: clean up an xdr reserved space calculation

Message-id: <1403560314-32525-24-git-send-email-bfields@redhat.com>
Patchwork-id: 84457
O-Subject: [Patch RHEL7 023/172] nfsd: clean up an xdr reserved space calculation
Bugzilla: 1111719
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Kinglong Mee <kinglongmee@gmail.com>

We should use XDR_LEN to calculate reserved space in case the oid is not
a multiple of 4.

RESERVE_SPACE actually rounds up for us, but it's probably better to be
careful here.

Signed-off-by: Kinglong Mee <kinglongmee@gmail.com>
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: a9f7b4a06c9704fa3cfe0b0601347e03289a7407
Bugzilla: 1111719
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4xdr.c b/fs/nfsd/nfs4xdr.c
index 1dface0..dbd64a9 100644
--- a/fs/nfsd/nfs4xdr.c
+++ b/fs/nfsd/nfs4xdr.c
@@ -3263,7 +3263,7 @@ nfsd4_do_encode_secinfo(struct nfsd4_compoundres *resp,
 
   if (rpcauth_get_gssinfo(pf, &info) == 0) {
    supported++;
-   RESERVE_SPACE(4 + 4 + info.oid.len + 4 + 4);
+   RESERVE_SPACE(4 + 4 + XDR_LEN(info.oid.len) + 4 + 4);
    WRITE32(RPC_AUTH_GSS);
    WRITE32(info.oid.len);
    WRITEMEM(info.oid.data, info.oid.len);
-- 
1.7.1