From 764be28237a7d2378e7b8a1f40196a50c0597c2c Mon Sep 17 00:00:00 2001
From: Vivek Goyal <vgoyal@redhat.com>
Date: Tue, 19 Aug 2014 22:03:01 -0400
Subject: [crypto] x509: x509_request_asymmetric_keys() doesn't need string length arguments

Message-id: <1408485785-777-30-git-send-email-vgoyal@redhat.com>
Patchwork-id: 88393
O-Subject: [RHEL7.1 PATCH 29/33] X.509: x509_request_asymmetric_keys() doesn't need string length arguments
Bugzilla: 1129779
RH-Acked-by: David Howells <dhowells@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

BZ:1129779

commit 185de09c6aa9d38ec04e34b2d9a996561963f895
Author: David Howells <dhowells@redhat.com>
Date: Wed, 9 Jul 2014 16:48:00 +0100

x509_request_asymmetric_keys() doesn't need the lengths of the NUL-terminated
strings passing in as it can work that out for itself.

Signed-off-by: David Howells <dhowells@redhat.com>
Acked-by: Mimi Zohar <zohar@linux.vnet.ibm.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/crypto/asymmetric_keys/x509_public_key.c b/crypto/asymmetric_keys/x509_public_key.c
index 831a49a..cdb26ec 100644
--- a/crypto/asymmetric_keys/x509_public_key.c
+++ b/crypto/asymmetric_keys/x509_public_key.c
@@ -48,11 +48,10 @@ __setup("ca_keys=", ca_keys_setup);
  */
 static struct key *x509_request_asymmetric_key(struct key *keyring,
             const char *signer,
-            size_t signer_len,
-            const char *authority,
-            size_t auth_len)
+            const char *authority)
 {
  key_ref_t key;
+ size_t signer_len = strlen(signer), auth_len = strlen(authority);
  char *id;
 
  /* Construct an identifier. */
@@ -193,9 +192,7 @@ static int x509_validate_trust(struct x509_certificate *cert,
   return -EPERM;
 
  key = x509_request_asymmetric_key(trust_keyring,
-       cert->issuer, strlen(cert->issuer),
-       cert->authority,
-       strlen(cert->authority));
+       cert->issuer, cert->authority);
  if (!IS_ERR(key))  {
   if (!use_builtin_keys
       || test_bit(KEY_FLAG_BUILTIN, &key->flags))
-- 
1.7.1