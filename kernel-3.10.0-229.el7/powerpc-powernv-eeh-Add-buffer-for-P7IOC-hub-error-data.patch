From 5cc1cbab7d86643b68ec065aff98043060621c42 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:09:20 -0400
Subject: [powerpc] powernv/eeh: Add buffer for P7IOC hub error data

Message-id: <1410545655-205645-332-git-send-email-dzickus@redhat.com>
Patchwork-id: 94420
O-Subject: [RHEL7 PATCH 331/626] powernv/eeh: Add buffer for P7IOC hub error data
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit ca1de5deb782e1636ed5b898e215a8840ae39230
Author: Brian W Hart <hartb@linux.vnet.ibm.com>
Date:   Fri Dec 20 13:06:01 2013 -0600

    powernv/eeh: Add buffer for P7IOC hub error data

    Prevent ioda_eeh_hub_diag() from clobbering itself when called by supplying
    a per-PHB buffer for P7IOC hub diagnostic data.  Take care to inform OPAL of
    the correct size for the buffer.

    [Small style change to the use of sizeof -- BenH]

    Signed-off-by: Brian W Hart <hartb@linux.vnet.ibm.com>
    Acked-by: Gavin Shan <shangw@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/platforms/powernv/eeh-ioda.c b/arch/powerpc/platforms/powernv/eeh-ioda.c
index 776397e..253fefe 100644
--- a/arch/powerpc/platforms/powernv/eeh-ioda.c
+++ b/arch/powerpc/platforms/powernv/eeh-ioda.c
@@ -35,7 +35,6 @@
 #include "powernv.h"
 #include "pci.h"
 
-static char *hub_diag = NULL;
 static int ioda_eeh_nb_init = 0;
 
 static int ioda_eeh_event(struct notifier_block *nb,
@@ -141,15 +140,6 @@ static int ioda_eeh_post_init(struct pci_controller *hose)
   ioda_eeh_nb_init = 1;
  }
 
- /* We needn't HUB diag-data on PHB3 */
- if (phb->type == PNV_PHB_IODA1 && !hub_diag) {
-  hub_diag = (char *)__get_free_page(GFP_KERNEL | __GFP_ZERO);
-  if (!hub_diag) {
-   pr_err("%s: Out of memory !\n", __func__);
-   return -ENOMEM;
-  }
- }
-
 #ifdef CONFIG_DEBUG_FS
  if (phb->dbgfs) {
   debugfs_create_file("err_injct_outbound", 0600,
@@ -602,11 +592,10 @@ static void ioda_eeh_hub_diag_common(struct OpalIoP7IOCErrorData *data)
 static void ioda_eeh_hub_diag(struct pci_controller *hose)
 {
  struct pnv_phb *phb = hose->private_data;
- struct OpalIoP7IOCErrorData *data;
+ struct OpalIoP7IOCErrorData *data = &phb->diag.hub_diag;
  long rc;
 
- data = (struct OpalIoP7IOCErrorData *)ioda_eeh_hub_diag;
- rc = opal_pci_get_hub_diag_data(phb->hub_id, data, PAGE_SIZE);
+ rc = opal_pci_get_hub_diag_data(phb->hub_id, data, sizeof(*data));
  if (rc != OPAL_SUCCESS) {
   pr_warning("%s: Failed to get HUB#%llx diag-data (%ld)\n",
       __func__, phb->hub_id, rc);
diff --git a/arch/powerpc/platforms/powernv/pci.h b/arch/powerpc/platforms/powernv/pci.h
index cc787bf..26851d3 100644
--- a/arch/powerpc/platforms/powernv/pci.h
+++ b/arch/powerpc/platforms/powernv/pci.h
@@ -175,12 +175,14 @@ struct pnv_phb {
   } ioda;
  };
 
- /* PHB status structure */
+ /* PHB and hub status structure */
  union {
   unsigned char   blob[PNV_PCI_DIAG_BUF_SIZE];
   struct OpalIoP7IOCPhbErrorData p7ioc;
   struct OpalIoPhb3ErrorData phb3;
+  struct OpalIoP7IOCErrorData  hub_diag;
  } diag;
+
 };
 
 extern struct pci_ops pnv_pci_ops;
-- 
1.7.1