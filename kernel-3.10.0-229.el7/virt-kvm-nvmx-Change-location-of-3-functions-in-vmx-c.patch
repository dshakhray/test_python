From d69c980007a92a062c75d5d1afd2b08cfcfc49c5 Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:37:14 -0400
Subject: [virt] kvm/nvmx: Change location of 3 functions in vmx.c

Message-id: <1406040016-3289-40-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86118
O-Subject: [RHEL7 PATCH v2 039/221] KVM: nVMX: Change location of 3 functions in vmx.c
Bugzilla: 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Arthur Chunqi Li <yzt356@gmail.com>

Move nested_vmx_succeed/nested_vmx_failInvalid/nested_vmx_failValid
ahead of handle_vmon to eliminate double declaration in the same
file

Signed-off-by: Arthur Chunqi Li <yzt356@gmail.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 0658fbaad809b57b8f0d4ab2c0a78bc6abde1b3e)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index 226178b..b9fddf2 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -5578,8 +5578,47 @@ static void nested_free_all_saved_vmcss(struct vcpu_vmx *vmx)
   free_loaded_vmcs(&vmx->vmcs01);
 }
 
+/*
+ * The following 3 functions, nested_vmx_succeed()/failValid()/failInvalid(),
+ * set the success or error code of an emulated VMX instruction, as specified
+ * by Vol 2B, VMX Instruction Reference, "Conventions".
+ */
+static void nested_vmx_succeed(struct kvm_vcpu *vcpu)
+{
+ vmx_set_rflags(vcpu, vmx_get_rflags(vcpu)
+   & ~(X86_EFLAGS_CF | X86_EFLAGS_PF | X86_EFLAGS_AF |
+       X86_EFLAGS_ZF | X86_EFLAGS_SF | X86_EFLAGS_OF));
+}
+
+static void nested_vmx_failInvalid(struct kvm_vcpu *vcpu)
+{
+ vmx_set_rflags(vcpu, (vmx_get_rflags(vcpu)
+   & ~(X86_EFLAGS_PF | X86_EFLAGS_AF | X86_EFLAGS_ZF |
+       X86_EFLAGS_SF | X86_EFLAGS_OF))
+   | X86_EFLAGS_CF);
+}
+
 static void nested_vmx_failValid(struct kvm_vcpu *vcpu,
-     u32 vm_instruction_error);
+     u32 vm_instruction_error)
+{
+ if (to_vmx(vcpu)->nested.current_vmptr == -1ull) {
+  /*
+   * failValid writes the error number to the current VMCS, which
+   * can't be done there isn't a current VMCS.
+   */
+  nested_vmx_failInvalid(vcpu);
+  return;
+ }
+ vmx_set_rflags(vcpu, (vmx_get_rflags(vcpu)
+   & ~(X86_EFLAGS_CF | X86_EFLAGS_PF | X86_EFLAGS_AF |
+       X86_EFLAGS_SF | X86_EFLAGS_OF))
+   | X86_EFLAGS_ZF);
+ get_vmcs12(vcpu)->vm_instruction_error = vm_instruction_error;
+ /*
+  * We don't need to force a shadow sync because
+  * VM_INSTRUCTION_ERROR is not shadowed
+  */
+}
 
 /*
  * Emulate the VMXON instruction.
@@ -5779,48 +5818,6 @@ static int get_vmx_mem_address(struct kvm_vcpu *vcpu,
  return 0;
 }
 
-/*
- * The following 3 functions, nested_vmx_succeed()/failValid()/failInvalid(),
- * set the success or error code of an emulated VMX instruction, as specified
- * by Vol 2B, VMX Instruction Reference, "Conventions".
- */
-static void nested_vmx_succeed(struct kvm_vcpu *vcpu)
-{
- vmx_set_rflags(vcpu, vmx_get_rflags(vcpu)
-   & ~(X86_EFLAGS_CF | X86_EFLAGS_PF | X86_EFLAGS_AF |
-       X86_EFLAGS_ZF | X86_EFLAGS_SF | X86_EFLAGS_OF));
-}
-
-static void nested_vmx_failInvalid(struct kvm_vcpu *vcpu)
-{
- vmx_set_rflags(vcpu, (vmx_get_rflags(vcpu)
-   & ~(X86_EFLAGS_PF | X86_EFLAGS_AF | X86_EFLAGS_ZF |
-       X86_EFLAGS_SF | X86_EFLAGS_OF))
-   | X86_EFLAGS_CF);
-}
-
-static void nested_vmx_failValid(struct kvm_vcpu *vcpu,
-     u32 vm_instruction_error)
-{
- if (to_vmx(vcpu)->nested.current_vmptr == -1ull) {
-  /*
-   * failValid writes the error number to the current VMCS, which
-   * can't be done there isn't a current VMCS.
-   */
-  nested_vmx_failInvalid(vcpu);
-  return;
- }
- vmx_set_rflags(vcpu, (vmx_get_rflags(vcpu)
-   & ~(X86_EFLAGS_CF | X86_EFLAGS_PF | X86_EFLAGS_AF |
-       X86_EFLAGS_SF | X86_EFLAGS_OF))
-   | X86_EFLAGS_ZF);
- get_vmcs12(vcpu)->vm_instruction_error = vm_instruction_error;
- /*
-  * We don't need to force a shadow sync because
-  * VM_INSTRUCTION_ERROR is not shadowed
-  */
-}
-
 /* Emulate the VMCLEAR instruction */
 static int handle_vmclear(struct kvm_vcpu *vcpu)
 {
-- 
1.7.1