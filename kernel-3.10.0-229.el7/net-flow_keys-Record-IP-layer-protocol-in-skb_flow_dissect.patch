From 6fc9e57774ccbbd58ad937a52c42ede3b51e87f9 Mon Sep 17 00:00:00 2001
From: Stefan Assmann <sassmann@redhat.com>
Date: Tue, 2 Sep 2014 14:38:27 -0400
Subject: [net] flow_keys: Record IP layer protocol in skb_flow_dissect()

Message-id: <1409668716-4814-16-git-send-email-sassmann@redhat.com>
Patchwork-id: 90639
O-Subject: [RHEL7.1 PATCH 15/24] flow_keys: Record IP layer protocol in skb_flow_dissect()
Bugzilla: 1107934
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Jiri Benc <jbenc@redhat.com>

From: Govindarajulu Varadarajan <_govind@gmx.com>

skb_flow_dissect() dissects only transport header type in ip_proto. It dose not
give any information about IPv4 or IPv6.

This patch adds new member, n_proto, to struct flow_keys. Which records the
IP layer type. i.e IPv4 or IPv6.

This can be used in netdev->ndo_rx_flow_steer driver function to dissect flow.

Adding new member to flow_keys increases the struct size by around 4 bytes.
This causes BUILD_BUG_ON(sizeof(qcb->data) < sz); to fail in
qdisc_cb_private_validate()

So increase data size by 4

Signed-off-by: Govindarajulu Varadarajan <_govind@gmx.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Stefan Assmann <sassmann@redhat.com>
(cherry picked from commit e0f31d8498676fda36289603a054d0d490aa2679)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/net/flow_keys.h b/include/net/flow_keys.h
index bb8271d..d4fec0b 100644
--- a/include/net/flow_keys.h
+++ b/include/net/flow_keys.h
@@ -1,6 +1,19 @@
 #ifndef _NET_FLOW_KEYS_H
 #define _NET_FLOW_KEYS_H
 
+/* struct flow_keys:
+ * @src: source ip address in case of IPv4
+ *       For IPv6 it contains 32bit hash of src address
+ * @dst: destination ip address in case of IPv4
+ *       For IPv6 it contains 32bit hash of dst address
+ * @ports: port numbers of Transport header
+ *  port16[0]: src port number
+ *  port16[1]: dst port number
+ * @thoff: Transport header offset
+ * @n_proto: Network header protocol (eg. IPv4/IPv6)
+ * @ip_proto: Transport header protocol (eg. TCP/UDP)
+ * All the members, except thoff, are in network byte order.
+ */
 struct flow_keys {
  /* (src,dst) must be grouped, in the same way than in IP header */
  __be32 src;
@@ -10,6 +23,7 @@ struct flow_keys {
   __be16 port16[2];
  };
  u16 thoff;
+ u16 n_proto;
  u8 ip_proto;
 };
 
diff --git a/include/net/sch_generic.h b/include/net/sch_generic.h
index f4eb365..a6bc5f7 100644
--- a/include/net/sch_generic.h
+++ b/include/net/sch_generic.h
@@ -231,7 +231,7 @@ struct qdisc_skb_cb {
  unsigned int  pkt_len;
  u16   slave_dev_queue_mapping;
  u16   _pad;
- unsigned char  data[20];
+ unsigned char  data[24];
 };
 
 static inline void qdisc_cb_private_validate(const struct sk_buff *skb, int sz)
diff --git a/net/core/flow_dissector.c b/net/core/flow_dissector.c
index f97101b..f4742c2 100644
--- a/net/core/flow_dissector.c
+++ b/net/core/flow_dissector.c
@@ -144,6 +144,7 @@ ipv6:
   break;
  }
 
+ flow->n_proto = proto;
  flow->ip_proto = ip_proto;
  poff = proto_ports_offset(ip_proto);
  if (poff >= 0) {
-- 
1.7.1