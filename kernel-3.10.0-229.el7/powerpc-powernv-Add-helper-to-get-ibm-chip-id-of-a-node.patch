From 68cf72e8b48cd1c8c129e6ab2d42b2abc13f04eb Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:04:36 -0400
Subject: [powerpc] powernv: Add helper to get ibm, chip-id of a node

Message-id: <1410545655-205645-48-git-send-email-dzickus@redhat.com>
Patchwork-id: 94104
O-Subject: [RHEL7 PATCH 047/626] powerpc/powernv: Add helper to get ibm, chip-id of a node
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit b37193b71846858d816e152d3a5db010d7b73f5e
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Mon Jul 15 13:03:10 2013 +1000

    powerpc/powernv: Add helper to get ibm,chip-id of a node

    This includes walking the parent nodes if necessary.

    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/prom.h b/arch/powerpc/include/asm/prom.h
index fa2f30c..e6ec2cf 100644
--- a/arch/powerpc/include/asm/prom.h
+++ b/arch/powerpc/include/asm/prom.h
@@ -59,6 +59,8 @@ static inline int of_node_to_nid(struct device_node *device) { return 0; }
 
 extern void of_instantiate_rtc(void);
 
+extern int of_get_ibm_chip_id(struct device_node *np);
+
 /* The of_drconf_cell struct defines the layout of the LMB array
  * specified in the device tree property
  * ibm,dynamic-reconfiguration-memory/ibm,dynamic-memory
diff --git a/arch/powerpc/kernel/prom.c b/arch/powerpc/kernel/prom.c
index dd2f93f..49a77c2 100644
--- a/arch/powerpc/kernel/prom.c
+++ b/arch/powerpc/kernel/prom.c
@@ -797,6 +797,32 @@ struct device_node *of_find_next_cache_node(struct device_node *np)
  return NULL;
 }
 
+/**
+ * of_get_ibm_chip_id - Returns the IBM "chip-id" of a device
+ * @np: device node of the device
+ *
+ * This looks for a property "ibm,chip-id" in the node or any
+ * of its parents and returns its content, or -1 if it cannot
+ * be found.
+ */
+int of_get_ibm_chip_id(struct device_node *np)
+{
+ of_node_get(np);
+ while(np) {
+  struct device_node *old = np;
+  const __be32 *prop;
+
+  prop = of_get_property(np, "ibm,chip-id", NULL);
+  if (prop) {
+   of_node_put(np);
+   return be32_to_cpup(prop);
+  }
+  np = of_get_parent(np);
+  of_node_put(old);
+ }
+ return -1;
+}
+
 #ifdef CONFIG_PPC_PSERIES
 /*
  * Fix up the uninitialized fields in a new device node:
-- 
1.7.1