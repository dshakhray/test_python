From af22601a3cd116a573aae88a9879cc6aed0b85ab Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 10 Jul 2014 01:06:26 -0400
Subject: [x86] hotplug: Add hotplug lock to missing places

Message-id: <20140710010625.22146.84929.stgit@gir.stowe>
Patchwork-id: 85617
O-Subject: [RHEL7.1 PATCH 079/105] hotplug / x86: Add hotplug lock to missing places
Bugzilla: 1114228
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1114228
Upstream Status: 574b851e99923c884fee4e0d7cf7e7c3dc023ffa

commit 574b851e99923c884fee4e0d7cf7e7c3dc023ffa
Author: Toshi Kani <toshi.kani@hp.com>
Date:   Thu Aug 29 18:22:07 2013 -0600

    hotplug / x86: Add hotplug lock to missing places

    lock_device_hotplug[_sysfs]() serializes CPU & Memory online/offline
    and hotplug operations.  However, this lock is not held in the debug
    interfaces below that initiate CPU online/offline operations.

     - _debug_hotplug_cpu(), cpu0 hotplug test interface enabled by
       CONFIG_DEBUG_HOTPLUG_CPU0.
     - cpu_probe_store() and cpu_release_store(), cpu hotplug test interface
       enabled by CONFIG_ARCH_CPU_PROBE_RELEASE.

    This patch changes the above interfaces to hold lock_device_hotplug().

    Signed-off-by: Toshi Kani <toshi.kani@hp.com>
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Acked-by: Yasuaki Ishimatsu <isimatu.yasuaki@jp.fujitsu.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kernel/topology.c b/arch/x86/kernel/topology.c
index 5823bbd..a3f35eb 100644
--- a/arch/x86/kernel/topology.c
+++ b/arch/x86/kernel/topology.c
@@ -65,6 +65,7 @@ int __ref _debug_hotplug_cpu(int cpu, int action)
  if (!cpu_is_hotpluggable(cpu))
   return -EINVAL;
 
+ lock_device_hotplug();
  cpu_hotplug_driver_lock();
 
  switch (action) {
@@ -91,6 +92,7 @@ int __ref _debug_hotplug_cpu(int cpu, int action)
  }
 
  cpu_hotplug_driver_unlock();
+ unlock_device_hotplug();
 
  return ret;
 }
diff --git a/drivers/base/cpu.c b/drivers/base/cpu.c
index ac93414..e959a6b 100644
--- a/drivers/base/cpu.c
+++ b/drivers/base/cpu.c
@@ -92,7 +92,17 @@ static ssize_t cpu_probe_store(struct device *dev,
           const char *buf,
           size_t count)
 {
- return arch_cpu_probe(buf, count);
+ ssize_t cnt;
+ int ret;
+
+ ret = lock_device_hotplug_sysfs();
+ if (ret)
+  return ret;
+
+ cnt = arch_cpu_probe(buf, count);
+
+ unlock_device_hotplug();
+ return cnt;
 }
 
 static ssize_t cpu_release_store(struct device *dev,
@@ -100,7 +110,17 @@ static ssize_t cpu_release_store(struct device *dev,
      const char *buf,
      size_t count)
 {
- return arch_cpu_release(buf, count);
+ ssize_t cnt;
+ int ret;
+
+ ret = lock_device_hotplug_sysfs();
+ if (ret)
+  return ret;
+
+ cnt = arch_cpu_release(buf, count);
+
+ unlock_device_hotplug();
+ return cnt;
 }
 
 static DEVICE_ATTR(probe, S_IWUSR, NULL, cpu_probe_store);
-- 
1.7.1