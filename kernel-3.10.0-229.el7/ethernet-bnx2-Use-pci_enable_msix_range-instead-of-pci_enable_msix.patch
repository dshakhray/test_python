From 9dc58e38e69e608d687178ba85a37f707ec30690 Mon Sep 17 00:00:00 2001
From: Michal Schmidt <mschmidt@redhat.com>
Date: Fri, 5 Sep 2014 18:35:09 -0400
Subject: [ethernet] bnx2: Use pci_enable_msix_range() instead of pci_enable_msix()

Message-id: <1409942115-26825-3-git-send-email-mschmidt@redhat.com>
Patchwork-id: 91496
O-Subject: [RHEL7.1 PATCH 2/8] bnx2: Use pci_enable_msix_range() instead of pci_enable_msix()
Bugzilla: 1092495
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: John Linville <linville@redhat.com>

BZ: https://bugzilla.redhat.com/show_bug.cgi?id=1092495

Upstream commit:
commit f2a2dfeb9431325b40317c9733d8a9536001d15a
Author: Alexander Gordeev <agordeev@redhat.com>
Date:   Tue Feb 18 11:07:53 2014 +0100

    bnx2: Use pci_enable_msix_range() instead of pci_enable_msix()

    As result of deprecation of MSI-X/MSI enablement functions
    pci_enable_msix() and pci_enable_msi_block() all drivers
    using these two interfaces need to be updated to use the
    new pci_enable_msi_range() and pci_enable_msix_range()
    interfaces.

    Signed-off-by: Alexander Gordeev <agordeev@redhat.com>
    Cc: Michael Chan <mchan@broadcom.com>
    Cc: netdev@vger.kernel.org
    Cc: linux-pci@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/broadcom/bnx2.c b/drivers/net/ethernet/broadcom/bnx2.c
index 6c9e1c9..924229e 100644
--- a/drivers/net/ethernet/broadcom/bnx2.c
+++ b/drivers/net/ethernet/broadcom/bnx2.c
@@ -6235,7 +6235,7 @@ bnx2_free_irq(struct bnx2 *bp)
 static void
 bnx2_enable_msix(struct bnx2 *bp, int msix_vecs)
 {
- int i, total_vecs, rc;
+ int i, total_vecs;
  struct msix_entry msix_ent[BNX2_MAX_MSIX_VEC];
  struct net_device *dev = bp->dev;
  const int len = sizeof(bp->irq_tbl[0].name);
@@ -6258,16 +6258,9 @@ bnx2_enable_msix(struct bnx2 *bp, int msix_vecs)
 #ifdef BCM_CNIC
  total_vecs++;
 #endif
- rc = -ENOSPC;
- while (total_vecs >= BNX2_MIN_MSIX_VEC) {
-  rc = pci_enable_msix(bp->pdev, msix_ent, total_vecs);
-  if (rc <= 0)
-   break;
-  if (rc > 0)
-   total_vecs = rc;
- }
-
- if (rc != 0)
+ total_vecs = pci_enable_msix_range(bp->pdev, msix_ent,
+        BNX2_MIN_MSIX_VEC, total_vecs);
+ if (total_vecs < 0)
   return;
 
  msix_vecs = total_vecs;
-- 
1.7.1