From 5720940f43d144f3fe98ed48deda5514c478c9d2 Mon Sep 17 00:00:00 2001
From: Chad Dupuis <cdupuis@redhat.com>
Date: Mon, 18 Aug 2014 19:56:29 -0400
Subject: [scsi] qla2xxx: fix error handling of qla2x00_mem_alloc()

Message-id: <1408391817-6389-42-git-send-email-cdupuis@redhat.com>
Patchwork-id: 87929
O-Subject: [PATCH RHEL 7.1 e-stor 41/69] qla2xxx: fix error handling of qla2x00_mem_alloc()
Bugzilla: 1089346
RH-Acked-by: Rob Evers <revers@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Dan Carpenter <dan.carpenter@oracle.com>

scsi commit id b2a72ec32d0f499aaadf41264232517a12326df0

qla2x00_mem_alloc() returns 1 on success and -ENOMEM on failure.  On the
one hand the caller assumes non-zero is success but on the other hand
the caller also assumes that it returns an error code.

I've fixed it to return zero on success and a negative error code on
failure.  This matches the documentation as well.

[jejb: checkpatch fix]
Fixes: e315cd28b9ef ('[SCSI] qla2xxx: Code changes for qla data structure refactoring')
Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
Acked-by: Saurav Kashyap <saurav.kashyap@qlogic.com>
Signed-off-by: James Bottomley <JBottomley@Parallels.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/qla2xxx/qla_os.c b/drivers/scsi/qla2xxx/qla_os.c
index 243bb96..e199b05 100644
--- a/drivers/scsi/qla2xxx/qla_os.c
+++ b/drivers/scsi/qla2xxx/qla_os.c
@@ -2552,7 +2552,7 @@ qla2x00_probe_one(struct pci_dev *pdev, const struct pci_device_id *id)
      ha->flags.enable_64bit_addressing ? "enable" :
      "disable");
  ret = qla2x00_mem_alloc(ha, req_length, rsp_length, &req, &rsp);
- if (!ret) {
+ if (ret) {
   ql_log_pci(ql_log_fatal, pdev, 0x0031,
       "Failed to allocate memory for adapter, aborting.\n");
 
@@ -3479,10 +3479,10 @@ qla2x00_mem_alloc(struct qla_hw_data *ha, uint16_t req_len, uint16_t rsp_len,
  else {
   qla2x00_set_reserved_loop_ids(ha);
   ql_dbg_pci(ql_dbg_init, ha->pdev, 0x0123,
-      "loop_id_map=%p. \n", ha->loop_id_map);
+      "loop_id_map=%p.\n", ha->loop_id_map);
  }
 
- return 1;
+ return 0;
 
 fail_async_pd:
  dma_pool_free(ha->s_dma_pool, ha->ex_init_cb, ha->ex_init_cb_dma);
-- 
1.7.1