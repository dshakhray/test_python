From e488c0d9113e77df2d8ee08550677449ca21e4ee Mon Sep 17 00:00:00 2001
From: Michal Schmidt <mschmidt@redhat.com>
Date: Fri, 5 Sep 2014 19:49:41 -0400
Subject: [ethernet] bnx2x: Remove useless return variables

Message-id: <1409946615-5862-37-git-send-email-mschmidt@redhat.com>
Patchwork-id: 91579
O-Subject: [RHEL7.1 PATCH 36/70] bnx2x: Remove useless return variables
Bugzilla: 1089402
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

BZ: https://bugzilla.redhat.com/show_bug.cgi?id=1089402

Upstream commit:
commit b2bda2f7450fa7ed4ae826c61d3a4b302024a297
Author: Peter Senna Tschudin <peter.senna@gmail.com>
Date:   Sat May 31 10:14:07 2014 -0300

    bnx2x: Remove useless return variables

    This patch remove variables that are initialized with a constant,
    are never updated, and are only used as parameter of return.
    Return the constant instead of using a variable.

    Verified by compilation only.

    The coccinelle script that find and fixes this issue is:
    // <smpl>
    @@
    type T;
    constant C;
    identifier ret;
    @@
    - T ret = C;
    ... when != ret
        when strict
    return
    - ret
    + C
    ;
    // </smpl>

    Signed-off-by: Peter Senna Tschudin <peter.senna@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_link.c b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_link.c
index 9b6b3d7..4fef1e1 100644
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_link.c
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_link.c
@@ -2218,7 +2218,6 @@ int bnx2x_update_pfc(struct link_params *params,
   */
  u32 val;
  struct bnx2x *bp = params->bp;
- int bnx2x_status = 0;
  u8 bmac_loopback = (params->loopback_mode == LOOPBACK_BMAC);
 
  if (params->feature_config_flags & FEATURE_CONFIG_PFC_ENABLED)
@@ -2232,7 +2231,7 @@ int bnx2x_update_pfc(struct link_params *params,
  bnx2x_update_pfc_nig(params, vars, pfc_params);
 
  if (!vars->link_up)
-  return bnx2x_status;
+  return 0;
 
  DP(NETIF_MSG_LINK, "About to update PFC in BMAC\n");
 
@@ -2246,7 +2245,7 @@ int bnx2x_update_pfc(struct link_params *params,
       == 0) {
    DP(NETIF_MSG_LINK, "About to update PFC in EMAC\n");
    bnx2x_emac_enable(params, vars, 0);
-   return bnx2x_status;
+   return 0;
   }
   if (CHIP_IS_E2(bp))
    bnx2x_update_pfc_bmac2(params, vars, bmac_loopback);
@@ -2260,7 +2259,7 @@ int bnx2x_update_pfc(struct link_params *params,
    val = 1;
   REG_WR(bp, NIG_REG_BMAC0_PAUSE_OUT_EN + params->port*4, val);
  }
- return bnx2x_status;
+ return 0;
 }
 
 static int bnx2x_bmac1_enable(struct link_params *params,
@@ -6473,7 +6472,6 @@ int bnx2x_test_link(struct link_params *params, struct link_vars *vars,
 static int bnx2x_link_initialize(struct link_params *params,
      struct link_vars *vars)
 {
- int rc = 0;
  u8 phy_index, non_ext_phy;
  struct bnx2x *bp = params->bp;
  /* In case of external phy existence, the line speed would be the
@@ -6546,7 +6544,7 @@ static int bnx2x_link_initialize(struct link_params *params,
    NIG_STATUS_XGXS0_LINK_STATUS |
    NIG_STATUS_SERDES0_LINK_STATUS |
    NIG_MASK_MI_INT));
- return rc;
+ return 0;
 }
 
 static void bnx2x_int_link_reset(struct bnx2x_phy *phy,
-- 
1.7.1