From 626c11315d925cf06ef6b47e954858eb0e8d5d7b Mon Sep 17 00:00:00 2001
From: Vlad Yasevich <vyasevic@redhat.com>
Date: Fri, 29 Aug 2014 21:23:13 -0400
Subject: [net] Revert: macvlan: fix checksums error when we are in bridge mode

Message-id: <1409347403-2401-3-git-send-email-vyasevic@redhat.com>
Patchwork-id: 89921
O-Subject: [RHEL7 PATCH 02/12] Revert "macvlan : fix checksums error when we are in bridge mode"
Bugzilla: 1135619
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: John Linville <linville@redhat.com>

From: Vlad Yasevich <vyasevic@redhat.com>

This reverts commit 12a2856b604476c27d85a5f9a57ae1661fc46019.
The commit above doesn't appear to be necessary any more as the
checksums appear to be correctly computed/validated.

Additionally the above commit breaks kvm configurations where
one VM is using a device that support checksum offload (virtio) and
the other VM does not.
In this case, packets leaving virtio device will have CHECKSUM_PARTIAL
set.  The packets is forwarded to a macvtap that has offload features
turned off.  Since we use CHECKSUM_UNNECESSARY, the host does does not
update the checksum and thus a bad checksum is passed up to
the guest.

CC: Daniel Lezcano <daniel.lezcano@free.fr>
CC: Patrick McHardy <kaber@trash.net>
CC: Andrian Nord <nightnord@gmail.com>
CC: Eric Dumazet <eric.dumazet@gmail.com>
CC: Michael S. Tsirkin <mst@redhat.com>
CC: Jason Wang <jasowang@redhat.com>
Signed-off-by: Vlad Yasevich <vyasevic@redhat.com>
Acked-by: Michael S. Tsirkin <mst@redhat.com>
Acked-by: Jason Wang <jasowang@redhat.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f114890cdf84d753f6b41cd0cc44ba51d16313da)
Signed-off-by: Vladislav Yasevich <vyasevic@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/macvlan.c b/drivers/net/macvlan.c
index bc5de79..7e868aa 100644
--- a/drivers/net/macvlan.c
+++ b/drivers/net/macvlan.c
@@ -261,11 +261,9 @@ static int macvlan_queue_xmit(struct sk_buff *skb, struct net_device *dev)
  const struct macvlan_dev *vlan = netdev_priv(dev);
  const struct macvlan_port *port = vlan->port;
  const struct macvlan_dev *dest;
- __u8 ip_summed = skb->ip_summed;
 
  if (vlan->mode == MACVLAN_MODE_BRIDGE) {
   const struct ethhdr *eth = (void *)skb->data;
-  skb->ip_summed = CHECKSUM_UNNECESSARY;
 
   /* send to other bridge ports directly */
   if (is_multicast_ether_addr(eth->h_dest)) {
@@ -283,7 +281,6 @@ static int macvlan_queue_xmit(struct sk_buff *skb, struct net_device *dev)
  }
 
 xmit_world:
- skb->ip_summed = ip_summed;
  skb->dev = vlan->lowerdev;
  return dev_queue_xmit(skb);
 }
-- 
1.7.1