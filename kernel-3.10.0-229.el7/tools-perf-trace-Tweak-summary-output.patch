From bb580e02c91b0464e1ebdc6dfc816eaf6bb528ce Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:27:59 -0400
Subject: [tools] perf/trace: Tweak summary output

Message-id: <1408462094-14194-311-git-send-email-jolsa@redhat.com>
Patchwork-id: 88254
O-Subject: [PATCH RHEL7.1 BZ1131394 310/325] perf trace: Tweak summary output
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 27a778b512e002d856952b4f01842ba4d34bc3d1
Author: Pekka Enberg <penberg@kernel.org>
Date: Wed Nov 13 14:21:48 2013 +0200

description
===========
Tweak the summary output as suggested by Ingo Molnar:

  [penberg@localhost ~]$ perf trace -a --duration 10000 --summary -- sleep 1
  ^C
   Summary of events:

   Xorg (817), 148 events, 0.0%, 0.000 msec

     syscall            calls      min       avg       max      stddev
                                 (msec)    (msec)    (msec)        (%)
     --------------- -------- --------- --------- ---------     ------
     read                   7     0.002     0.004     0.011     32.00%
     rt_sigprocmask        40     0.001     0.001     0.002      1.31%
     ioctl                  6     0.002     0.003     0.005     19.45%
     writev                 7     0.004     0.018     0.059     43.76%
     select                 9     0.000    74.513   507.869     74.61%
     setitimer              4     0.001     0.002     0.002     10.08%
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-trace.c b/tools/perf/builtin-trace.c
index 6b230af..8be17fc 100644
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@ -2112,9 +2112,9 @@ static size_t thread__dump_stats(struct thread_trace *ttrace,
 
  printed += fprintf(fp, "\n");
 
- printed += fprintf(fp, "                                                    msec/call\n");
- printed += fprintf(fp, "   syscall            calls      min      avg      max stddev\n");
- printed += fprintf(fp, "   --------------- -------- -------- -------- -------- ------\n");
+ printed += fprintf(fp, "   syscall            calls      min       avg       max      stddev\n");
+ printed += fprintf(fp, "                               (msec)    (msec)    (msec)        (%%)\n");
+ printed += fprintf(fp, "   --------------- -------- --------- --------- ---------     ------\n");
 
  /* each int_node is a syscall */
  while (inode) {
@@ -2131,9 +2131,9 @@ static size_t thread__dump_stats(struct thread_trace *ttrace,
 
    sc = &trace->syscalls.table[inode->i];
    printed += fprintf(fp, "   %-15s", sc->name);
-   printed += fprintf(fp, " %8" PRIu64 " %8.3f %8.3f",
+   printed += fprintf(fp, " %8" PRIu64 " %9.3f %9.3f",
         n, min, avg);
-   printed += fprintf(fp, " %8.3f %6.2f\n", max, pct);
+   printed += fprintf(fp, " %9.3f %9.2f%%\n", max, pct);
   }
 
   inode = intlist__next(inode);
-- 
1.7.1