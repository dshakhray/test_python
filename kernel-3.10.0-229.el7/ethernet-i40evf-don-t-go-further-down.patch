From 0bfc4016fb905bddc5f68e4ba6d3e7aaf9213190 Mon Sep 17 00:00:00 2001
From: Stefan Assmann <sassmann@redhat.com>
Date: Tue, 2 Sep 2014 13:12:22 -0400
Subject: [ethernet] i40evf: don't go further down

Message-id: <1409663591-32531-100-git-send-email-sassmann@redhat.com>
Patchwork-id: 90570
O-Subject: [RHEL7.1 PATCH 099/148] i40evf: don't go further down
Bugzilla: 1091127
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Mitch Williams <mitch.a.williams@intel.com>

If the device is down, there's no place to go but up, so don't try to go
down even more. This prevents a CPU soft lock in napi_disable().

Change-ID: I8b058b9ee974dfa01c212fae2597f4f54b333314
Signed-off-by: Mitch Williams <mitch.a.williams@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: Stefan Assmann <sassmann@redhat.com>
(cherry picked from commit ddf0b3a63e31ddc40712d151ea27ef86c5acb06a)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/i40evf/i40evf_main.c b/drivers/net/ethernet/intel/i40evf/i40evf_main.c
index d415785..f454b58 100644
--- a/drivers/net/ethernet/intel/i40evf/i40evf_main.c
+++ b/drivers/net/ethernet/intel/i40evf/i40evf_main.c
@@ -968,6 +968,9 @@ void i40evf_down(struct i40evf_adapter *adapter)
  struct net_device *netdev = adapter->netdev;
  struct i40evf_mac_filter *f;
 
+ if (adapter->state == __I40EVF_DOWN)
+  return;
+
  /* remove all MAC filters */
  list_for_each_entry(f, &adapter->mac_filter_list, list) {
   f->remove = true;
@@ -1785,12 +1788,11 @@ static int i40evf_close(struct net_device *netdev)
  if (adapter->state <= __I40EVF_DOWN)
   return 0;
 
- /* signal that we are down to the interrupt handler */
- adapter->state = __I40EVF_DOWN;
 
  set_bit(__I40E_DOWN, &adapter->vsi.state);
 
  i40evf_down(adapter);
+ adapter->state = __I40EVF_DOWN;
  i40evf_free_traffic_irqs(adapter);
 
  i40evf_free_all_tx_resources(adapter);
-- 
1.7.1