From 0f4a008d92cfeb58a4b9c615f713e3978c17ee0d Mon Sep 17 00:00:00 2001
From: Stefan Assmann <sassmann@redhat.com>
Date: Tue, 2 Sep 2014 13:10:55 -0400
Subject: [ethernet] i40evf: fix multiple crashes on remove

Message-id: <1409663591-32531-13-git-send-email-sassmann@redhat.com>
Patchwork-id: 90490
O-Subject: [RHEL7.1 PATCH 012/148] i40evf: fix multiple crashes on remove
Bugzilla: 1091127
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Mitch Williams <mitch.a.williams@intel.com>

Depending upon the state of the driver, there are several potential
pitfalls on remove. Kill the watchdog task so rmmod doesn't hang.
Check the adapter->msix_entries field, not the num_msix_vectors field,
which is never cleared.

Change-ID: I0546048477f09fc19e481bd37efa30daae4faa88
Signed-off-by: Mitch Williams <mitch.a.williams@intel.com>
Signed-off-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
Tested-by: Sibai Li <sibai.li@intel.com>
Signed-off-by: Aaron Brown <aaron.f.brown@intel.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Stefan Assmann <sassmann@redhat.com>
(cherry picked from commit dbb01c8aa0dc8c514cdfd0b11dc401418a4f047a)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/i40evf/i40evf_main.c b/drivers/net/ethernet/intel/i40evf/i40evf_main.c
index 75a2c6f..e0eb27d 100644
--- a/drivers/net/ethernet/intel/i40evf/i40evf_main.c
+++ b/drivers/net/ethernet/intel/i40evf/i40evf_main.c
@@ -215,6 +215,9 @@ static void i40evf_irq_disable(struct i40evf_adapter *adapter)
  int i;
  struct i40e_hw *hw = &adapter->hw;
 
+ if (!adapter->msix_entries)
+  return;
+
  for (i = 1; i < adapter->num_msix_vectors; i++) {
   wr32(hw, I40E_VFINT_DYN_CTLN1(i - 1), 0);
   synchronize_irq(adapter->msix_entries[i].vector);
@@ -2372,17 +2375,15 @@ static void i40evf_remove(struct pci_dev *pdev)
  }
  adapter->state = __I40EVF_REMOVE;
 
- if (adapter->num_msix_vectors) {
+ if (adapter->msix_entries) {
   i40evf_misc_irq_disable(adapter);
-  del_timer_sync(&adapter->watchdog_timer);
-
-  flush_scheduled_work();
-
   i40evf_free_misc_irq(adapter);
-
   i40evf_reset_interrupt_capability(adapter);
  }
 
+ del_timer_sync(&adapter->watchdog_timer);
+ flush_scheduled_work();
+
  if (hw->aq.asq.count)
   i40evf_shutdown_adminq(hw);
 
-- 
1.7.1