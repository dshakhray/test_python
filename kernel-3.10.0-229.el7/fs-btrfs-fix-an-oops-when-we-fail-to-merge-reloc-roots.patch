From 46a0c6656b020592ab9e204bd48e93df574f4ae8 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 18:59:30 -0400
Subject: [fs] btrfs: fix an oops when we fail to merge reloc roots

Message-id: <1407179109-13714-84-git-send-email-sandeen@redhat.com>
Patchwork-id: 87050
O-Subject: [RHEL7.1 PATCH 083/422] Btrfs: fix an oops when we fail to merge reloc roots
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Wang Shilong <wangsl.fnst@cn.fujitsu.com>

commit 25e293c2a2916b58cdafb8219c0e93d6277762d7
Author: Wang Shilong <wangsl.fnst@cn.fujitsu.com>
Date:   Thu Dec 26 13:10:50 2013 +0800

    Btrfs: fix an oops when we fail to merge reloc roots

    Previously, we will free reloc root memory and then force filesystem
    to be readonly. The problem is that there may be another thread commiting
    transaction which will try to access freed reloc root during merging reloc
    roots process.

    To keep consistency snapshots shared space, we should allow snapshot
    finished if possible, so here we don't free reloc root memory.

    signed-off-by: Wang Shilong <wangsl.fnst@cn.fujitsu.com>

    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/relocation.c b/fs/btrfs/relocation.c
index 277b8e3..9189f9e 100644
--- a/fs/btrfs/relocation.c
+++ b/fs/btrfs/relocation.c
@@ -2311,9 +2311,6 @@ void free_reloc_roots(struct list_head *list)
   reloc_root = list_entry(list->next, struct btrfs_root,
      root_list);
   __del_reloc_root(reloc_root);
-  free_extent_buffer(reloc_root->node);
-  free_extent_buffer(reloc_root->commit_root);
-  kfree(reloc_root);
  }
 }
 
@@ -2355,10 +2352,9 @@ again:
 
    ret = merge_reloc_root(rc, root);
    if (ret) {
-    __del_reloc_root(reloc_root);
-    free_extent_buffer(reloc_root->node);
-    free_extent_buffer(reloc_root->commit_root);
-    kfree(reloc_root);
+    if (list_empty(&reloc_root->root_list))
+     list_add_tail(&reloc_root->root_list,
+            &reloc_roots);
     goto out;
    }
   } else {
-- 
1.7.1