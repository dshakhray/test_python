From 5dc650c631a994bdc6c598ea909554c64283530c Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <jkysela@redhat.com>
Date: Wed, 3 Sep 2014 07:32:29 -0400
Subject: [alsa] pcm_dmaengine: Add check during device suspend

Message-id: <140972823573-298-patchset-jkysela@redhat.com>
Patchwork-id: 90994
O-Subject: [RHEL 7.1 PATCH 297/442] ALSA: pcm_dmaengine: Add check during device suspend
Bugzilla: 1112200
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>

Currently snd_dmaengine_pcm_trigger() calls dmaengine_pause()
unconditinally during device suspend. In case where DMA controller
doesn't support PAUSE/RESUME functionality, this call is not able
to stop the DMA controller. In this scenario, audio playback doesn't
resume after device resume.

Calling dmaengine_pause/dmaengine_terminate_all conditionally fixes
the issue.

It has been tested with audio playback on Samsung platform having
PL330 DMA controller which doesn't support PAUSE/RESUME.

Signed-off-by: Tushar Behera <tushar.behera@linaro.org>
Acked-by: Lars-Peter Clausen <lars@metafoo.de>
Signed-off-by: Takashi Iwai <tiwai@suse.de>

(picked from kernel: 02fb05a598e9393382f55132a36aff84f4d76ad5)
rhbz#1112200
Signed-off-by: Jaroslav Kysela <jkysela@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/sound/soc/soc-dmaengine-pcm.c b/sound/soc/soc-dmaengine-pcm.c
index 94d0873..76cbb9e 100644
--- a/sound/soc/soc-dmaengine-pcm.c
+++ b/sound/soc/soc-dmaengine-pcm.c
@@ -182,6 +182,7 @@ static int dmaengine_pcm_prepare_and_submit(struct snd_pcm_substream *substream)
 int snd_dmaengine_pcm_trigger(struct snd_pcm_substream *substream, int cmd)
 {
  struct dmaengine_pcm_runtime_data *prtd = substream_to_prtd(substream);
+ struct snd_pcm_runtime *runtime = substream->runtime;
  int ret;
 
  switch (cmd) {
@@ -196,6 +197,11 @@ int snd_dmaengine_pcm_trigger(struct snd_pcm_substream *substream, int cmd)
   dmaengine_resume(prtd->dma_chan);
   break;
  case SNDRV_PCM_TRIGGER_SUSPEND:
+  if (runtime->info & SNDRV_PCM_INFO_PAUSE)
+   dmaengine_pause(prtd->dma_chan);
+  else
+   dmaengine_terminate_all(prtd->dma_chan);
+  break;
  case SNDRV_PCM_TRIGGER_PAUSE_PUSH:
   dmaengine_pause(prtd->dma_chan);
   break;
-- 
1.7.1