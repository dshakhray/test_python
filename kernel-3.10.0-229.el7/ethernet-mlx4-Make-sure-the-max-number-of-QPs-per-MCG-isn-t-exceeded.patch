From 883086458b204be39dd6158ebb4bb1693bb8f34d Mon Sep 17 00:00:00 2001
From: Amir Vadai <avadai@redhat.com>
Date: Thu, 11 Sep 2014 12:01:41 -0400
Subject: [ethernet] mlx4: Make sure the max number of QPs per MCG isn't exceeded

Message-id: <caf80f6417910eea1b08aa976509e9b9ad034b2a.1410425016.git.avadai@redhat.com>
Patchwork-id: 93674
O-Subject: [Patch RHEL7.1 V1 165/197] net/mlx4_core: Make sure the max number of QPs per MCG isn't exceeded
Bugzilla: 1107617 1107618 1107619 1107620
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

From: Alexander Guller <alexg@mellanox.com>

In B0 steering mode when adding QPs to the default MCG entry need
to check that maximal number of QPs per MCG entry was not exceeded.

Signed-off-by: Alexander Guller <alexg@mellanox.com>
Reviewed-by: Aviad Yehezkel <aviadye@mellanox.co.il>
Signed-off-by: Eugenia Emantayev <eugenia@mellanox.com>
Signed-off-by: Amir Vadai <amirv@mellanox.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 75908376038c44ea154e4c2782ee367e679c81b1)
Signed-off-by: Amir Vadai <avadai@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/mellanox/mlx4/mcg.c b/drivers/net/ethernet/mellanox/mlx4/mcg.c
index 04a8636..39ab85a 100644
--- a/drivers/net/ethernet/mellanox/mlx4/mcg.c
+++ b/drivers/net/ethernet/mellanox/mlx4/mcg.c
@@ -477,8 +477,14 @@ static int add_promisc_qp(struct mlx4_dev *dev, u8 port,
  /* now need to add all the promisc qps to default entry */
  memset(mgm, 0, sizeof *mgm);
  members_count = 0;
- list_for_each_entry(dqp, &s_steer->promisc_qps[steer], list)
+ list_for_each_entry(dqp, &s_steer->promisc_qps[steer], list) {
+  if (members_count == dev->caps.num_qp_per_mgm) {
+   /* entry is full */
+   err = -ENOMEM;
+   goto out_list;
+  }
   mgm->qp[members_count++] = cpu_to_be32(dqp->qpn & MGM_QPN_MASK);
+ }
  mgm->members_count = cpu_to_be32(members_count | MLX4_PROT_ETH << 30);
 
  err = mlx4_WRITE_PROMISC(dev, port, steer, mailbox);
-- 
1.7.1