From 3245c4429245b26a1ee0a822c14340f44ce924a6 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:13:32 -0400
Subject: [powerpc] Add ppc_global_function_entry()

Message-id: <1410545655-205645-584-git-send-email-dzickus@redhat.com>
Patchwork-id: 94416
O-Subject: [RHEL7 PATCH 583/626] powerpc: Add ppc_global_function_entry()
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit d997c00c5a9b61474f7ff5f27ed64173bb007987
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Jun 17 16:15:32 2014 +1000

    powerpc: Add ppc_global_function_entry()

    ABIv2 has the concept of a global and local entry point to a function.
    In most cases we are interested in the local entry point, and so that is
    what ppc_function_entry() returns.

    However we have a case in the ftrace code where we want the global entry
    point, and there may be other places we need it too. Rather than special
    casing each, add an accessor.

    For ABIv1 and 32-bit there is only a single entry point, so we return
    that. That means it's safe for the caller to use this without also
    checking the ABI version.

    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/code-patching.h b/arch/powerpc/include/asm/code-patching.h
index dd48696..93441ef 100644
--- a/arch/powerpc/include/asm/code-patching.h
+++ b/arch/powerpc/include/asm/code-patching.h
@@ -81,4 +81,15 @@ static inline unsigned long ppc_function_entry(void *func)
 #endif
 }
 
+static inline unsigned long ppc_global_function_entry(void *func)
+{
+#if defined(CONFIG_PPC64) && defined(_CALL_ELF) && _CALL_ELF == 2
+ /* PPC64 ABIv2 the global entry point is at the address */
+ return (unsigned long)func;
+#else
+ /* All other cases there is no change vs ppc_function_entry() */
+ return ppc_function_entry(func);
+#endif
+}
+
 #endif /* _ASM_POWERPC_CODE_PATCHING_H */
-- 
1.7.1