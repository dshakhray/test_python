From 6677ec070698cfd8126654a510d5c2c1a1513503 Mon Sep 17 00:00:00 2001
From: Sachin Prabhu <sprabhu@redhat.com>
Date: Mon, 28 Jul 2014 12:16:10 -0400
Subject: [fs] cifs: Remove redundant multiplex identifier check from check_smb_hdr()

Message-id: <1406549822-10376-18-git-send-email-sprabhu@redhat.com>
Patchwork-id: 86760
O-Subject: [RHEL7.1 PATCH 17/69] [bz1082049]cifs: Remove redundant multiplex identifier check from check_smb_hdr()
Bugzilla: 1082049
RH-Acked-by: J. Bruce Fields <bfields@redhat.com>
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Tim Gardner <timg@tpi.com>

The only call site for check_smb_header() assigns 'mid' from the SMB
packet, which is then checked again in check_smb_header(). This seems
like redundant redundancy.

Reviewed-by: Jeff Layton <jlayton@redhat.com>
Signed-off-by: Tim Gardner <timg@tpi.com>
Signed-off-by: Steve French <smfrench@gmail.com>
(cherry picked from commit 944d6f1a5b8f42a780a65378e5f52bea3ae0ce07)

Signed-off-by: Sachin Prabhu <sprabhu@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/cifs/misc.c b/fs/cifs/misc.c
index 912a52e..949f22a 100644
--- a/fs/cifs/misc.c
+++ b/fs/cifs/misc.c
@@ -278,7 +278,7 @@ header_assemble(struct smb_hdr *buffer, char smb_command /* command */ ,
 }
 
 static int
-check_smb_hdr(struct smb_hdr *smb, __u16 mid)
+check_smb_hdr(struct smb_hdr *smb)
 {
  /* does it have the right SMB "signature" ? */
  if (*(__le32 *) smb->Protocol != cpu_to_le32(0x424d53ff)) {
@@ -287,13 +287,6 @@ check_smb_hdr(struct smb_hdr *smb, __u16 mid)
   return 1;
  }
 
- /* Make sure that message ids match */
- if (mid != smb->Mid) {
-  cifs_dbg(VFS, "Mids do not match. received=%u expected=%u\n",
-    smb->Mid, mid);
-  return 1;
- }
-
  /* if it's a response then accept */
  if (smb->Flags & SMBFLG_RESPONSE)
   return 0;
@@ -310,7 +303,6 @@ int
 checkSMB(char *buf, unsigned int total_read)
 {
  struct smb_hdr *smb = (struct smb_hdr *)buf;
- __u16 mid = smb->Mid;
  __u32 rfclen = be32_to_cpu(smb->smb_buf_length);
  __u32 clc_len;  /* calculated length */
  cifs_dbg(FYI, "checkSMB Length: 0x%x, smb_buf_length: 0x%x\n",
@@ -348,7 +340,7 @@ checkSMB(char *buf, unsigned int total_read)
  }
 
  /* otherwise, there is enough to get to the BCC */
- if (check_smb_hdr(smb, mid))
+ if (check_smb_hdr(smb))
   return -EIO;
  clc_len = smbCalcSize(smb);
 
-- 
1.7.1