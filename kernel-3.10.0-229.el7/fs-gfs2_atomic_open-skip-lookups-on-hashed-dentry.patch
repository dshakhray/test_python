From bf82a03ee8baf217ec63de99f1887bd0ee6ceb2d Mon Sep 17 00:00:00 2001
From: Robert S Peterson <rpeterso@redhat.com>
Date: Wed, 29 Oct 2014 14:07:16 -0400
Subject: [fs] gfs2_atomic_open(): skip lookups on hashed dentry

Message-id: <1525322233.2232544.1414591636934.JavaMail.zimbra@redhat.com>
Patchwork-id: 98504
O-Subject: [RHEL7.1 PATCH][bz#1158150] gfs2_atomic_open(): skip lookups on hashed dentry
Bugzilla: 1158150
RH-Acked-by: Abhijith Das <adas@redhat.com>
RH-Acked-by: Steven Whitehouse <swhiteho@redhat.com>
RH-Acked-by: Benjamin Coddington <bcodding@redhat.com>

Hi,

This patch is for bugzilla bug #1158150. We recently pushed a patch
into the RHEL7.1 git tree, but it unfortunately caused a regression:
http://post-office.corp.redhat.com/archives/rhkernel-list/2014-September/msg04755.html

The regression (described in the bz) was fixed by the following
upstream patch by Al Viro:

http://git.kernel.org/cgit/linux/kernel/git/steve/gfs2-3.0-nmw.git/commit/fs/gfs2?id=4d93bc3e81736ce55c79d9cae743bab4f89b4f9c

So this is a RHEL7.1 port of Al's patch. The patch was compiled
into a RHEL7 kernel here:

http://brewweb.devel.redhat.com/brew/taskinfo?taskID=8165931

It was tested with SAS Calibration on the afc east cluster, which
recreated the problem last time within minutes of starting.

Patch description:

hashed dentry can be passed to ->atomic_open() only if
a) it has just passed revalidation and
b) it's negative

Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

rhbz#1158150

Regards,

Bob Peterson
Red Hat File Systems

Signed-off-by: Bob Peterson <rpeterso@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/gfs2/inode.c b/fs/gfs2/inode.c
index d45bad5..0587fa4 100644
--- a/fs/gfs2/inode.c
+++ b/fs/gfs2/inode.c
@@ -1177,6 +1177,9 @@ static int gfs2_atomic_open(struct inode *dir, struct dentry *dentry,
  struct dentry *d;
  bool excl = !!(flags & O_EXCL);
 
+ if (!d_unhashed(dentry))
+  goto skip_lookup;
+
  d = __gfs2_lookup(dir, dentry, file, opened);
  if (IS_ERR(d))
   return PTR_ERR(d);
@@ -1193,6 +1196,8 @@ static int gfs2_atomic_open(struct inode *dir, struct dentry *dentry,
  }
 
  BUG_ON(d != NULL);
+
+skip_lookup:
  if (!(flags & O_CREAT))
   return -ENOENT;
 
-- 
1.7.1