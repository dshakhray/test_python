From bd6221ada33ff97392fff5d51046927b069e1fd3 Mon Sep 17 00:00:00 2001
From: Chad Dupuis <cdupuis@redhat.com>
Date: Thu, 21 Aug 2014 13:04:51 -0400
Subject: [ethernet] qlcnic: Convert dma_alloc_coherent(...__GFP_ZERO) to dma_zalloc_coherent

Message-id: <1408626422-3941-8-git-send-email-cdupuis@redhat.com>
Patchwork-id: 88545
O-Subject: [PATCH RHEL 7.1 007/138] drivers:net: Convert dma_alloc_coherent(...__GFP_ZERO) to dma_zalloc_coherent
Bugzilla: 1089352
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Joe Perches <joe@perches.com>

Bug 1089352 (https://bugzilla.redhat.com/show_bug.cgi?id=1089352)

net commit id ede23fa8161c1a04aa1b3bf5447812ca14b3fef1

__GFP_ZERO is an uncommon flag and perhaps is better
not used.  static inline dma_zalloc_coherent exists
so convert the uses of dma_alloc_coherent with __GFP_ZERO
to the more common kernel style with zalloc.

Remove memset from the static inline dma_zalloc_coherent
and add just one use of __GFP_ZERO instead.

Trivially reduces the size of the existing uses of
dma_zalloc_coherent.

Realign arguments as appropriate.

Signed-off-by: Joe Perches <joe@perches.com>
Acked-by: Neil Horman <nhorman@tuxdriver.com>
Acked-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
Acked-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_ctx.c b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_ctx.c
index bf3b17e..86850dd 100644
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_ctx.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_ctx.c
@@ -448,14 +448,14 @@ int qlcnic_82xx_fw_cmd_create_tx_ctx(struct qlcnic_adapter *adapter,
  *(tx_ring->hw_consumer) = 0;
 
  rq_size = SIZEOF_HOSTRQ_TX(struct qlcnic_hostrq_tx_ctx);
- rq_addr = dma_alloc_coherent(&adapter->pdev->dev, rq_size,
-         &rq_phys_addr, GFP_KERNEL | __GFP_ZERO);
+ rq_addr = dma_zalloc_coherent(&adapter->pdev->dev, rq_size,
+          &rq_phys_addr, GFP_KERNEL);
  if (!rq_addr)
   return -ENOMEM;
 
  rsp_size = SIZEOF_CARDRSP_TX(struct qlcnic_cardrsp_tx_ctx);
- rsp_addr = dma_alloc_coherent(&adapter->pdev->dev, rsp_size,
-          &rsp_phys_addr, GFP_KERNEL | __GFP_ZERO);
+ rsp_addr = dma_zalloc_coherent(&adapter->pdev->dev, rsp_size,
+           &rsp_phys_addr, GFP_KERNEL);
  if (!rsp_addr) {
   err = -ENOMEM;
   goto out_free_rq;
@@ -865,8 +865,8 @@ int qlcnic_82xx_get_nic_info(struct qlcnic_adapter *adapter,
  struct qlcnic_cmd_args cmd;
  size_t  nic_size = sizeof(struct qlcnic_info_le);
 
- nic_info_addr = dma_alloc_coherent(&adapter->pdev->dev, nic_size,
-        &nic_dma_t, GFP_KERNEL | __GFP_ZERO);
+ nic_info_addr = dma_zalloc_coherent(&adapter->pdev->dev, nic_size,
+         &nic_dma_t, GFP_KERNEL);
  if (!nic_info_addr)
   return -ENOMEM;
 
@@ -919,8 +919,8 @@ int qlcnic_82xx_set_nic_info(struct qlcnic_adapter *adapter,
  if (adapter->ahw->op_mode != QLCNIC_MGMT_FUNC)
   return err;
 
- nic_info_addr = dma_alloc_coherent(&adapter->pdev->dev, nic_size,
-        &nic_dma_t, GFP_KERNEL | __GFP_ZERO);
+ nic_info_addr = dma_zalloc_coherent(&adapter->pdev->dev, nic_size,
+         &nic_dma_t, GFP_KERNEL);
  if (!nic_info_addr)
   return -ENOMEM;
 
@@ -972,9 +972,8 @@ int qlcnic_82xx_get_pci_info(struct qlcnic_adapter *adapter,
  size_t npar_size = sizeof(struct qlcnic_pci_info_le);
  size_t pci_size = npar_size * QLCNIC_MAX_PCI_FUNC;
 
- pci_info_addr = dma_alloc_coherent(&adapter->pdev->dev, pci_size,
-        &pci_info_dma_t,
-        GFP_KERNEL | __GFP_ZERO);
+ pci_info_addr = dma_zalloc_coherent(&adapter->pdev->dev, pci_size,
+         &pci_info_dma_t, GFP_KERNEL);
  if (!pci_info_addr)
   return -ENOMEM;
 
@@ -1074,8 +1073,8 @@ int qlcnic_get_port_stats(struct qlcnic_adapter *adapter, const u8 func,
   return -EIO;
  }
 
- stats_addr = dma_alloc_coherent(&adapter->pdev->dev, stats_size,
-     &stats_dma_t, GFP_KERNEL | __GFP_ZERO);
+ stats_addr = dma_zalloc_coherent(&adapter->pdev->dev, stats_size,
+      &stats_dma_t, GFP_KERNEL);
  if (!stats_addr)
   return -ENOMEM;
 
@@ -1130,8 +1129,8 @@ int qlcnic_get_mac_stats(struct qlcnic_adapter *adapter,
  if (mac_stats == NULL)
   return -ENOMEM;
 
- stats_addr = dma_alloc_coherent(&adapter->pdev->dev, stats_size,
-     &stats_dma_t, GFP_KERNEL | __GFP_ZERO);
+ stats_addr = dma_zalloc_coherent(&adapter->pdev->dev, stats_size,
+      &stats_dma_t, GFP_KERNEL);
  if (!stats_addr)
   return -ENOMEM;
 
-- 
1.7.1