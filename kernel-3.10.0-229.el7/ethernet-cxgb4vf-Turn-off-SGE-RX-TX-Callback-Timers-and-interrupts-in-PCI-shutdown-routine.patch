From 4f8755f771b0df6f422c33fa82a25ab1932ebf41 Mon Sep 17 00:00:00 2001
From: Sai Vemuri <svemuri@redhat.com>
Date: Thu, 11 Sep 2014 23:11:12 -0400
Subject: [ethernet] cxgb4vf: Turn off SGE RX/TX Callback Timers and interrupts in PCI shutdown routine

Message-id: <1410477072-95160-8-git-send-email-svemuri@redhat.com>
Patchwork-id: 93900
O-Subject: [RHEL7.1 PATCH BZ 1070945 7/7] cxgb4vf: Turn off SGE RX/TX Callback Timers and interrupts in PCI shutdown routine
Bugzilla: 1070945
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

Need to turn off  SGE RX/TX Callback Timers & interrupt in cxgb4vf PCI Shutdown
routine in order to prevent crashes during reboot/poweroff when traffic is
running.

Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c2a198569aeab71c36156f83128916dce9561741)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c b/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c
index b25320a..a6a8598 100644
--- a/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c
+++ b/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c
@@ -2876,24 +2876,24 @@ static void cxgb4vf_pci_shutdown(struct pci_dev *pdev)
  if (!adapter)
   return;
 
- /*
-  * Disable all Virtual Interfaces.  This will shut down the
+ /* Disable all Virtual Interfaces.  This will shut down the
   * delivery of all ingress packets into the chip for these
   * Virtual Interfaces.
   */
- for_each_port(adapter, pidx) {
-  struct net_device *netdev;
-  struct port_info *pi;
-
-  if (!test_bit(pidx, &adapter->registered_device_map))
-   continue;
-
-  netdev = adapter->port[pidx];
-  if (!netdev)
-   continue;
+ for_each_port(adapter, pidx)
+  if (test_bit(pidx, &adapter->registered_device_map))
+   unregister_netdev(adapter->port[pidx]);
 
-  pi = netdev_priv(netdev);
-  t4vf_enable_vi(adapter, pi->viid, false, false);
+ /* Free up all Queues which will prevent further DMA and
+  * Interrupts allowing various internal pathways to drain.
+  */
+ t4vf_sge_stop(adapter);
+ if (adapter->flags & USING_MSIX) {
+  pci_disable_msix(adapter->pdev);
+  adapter->flags &= ~USING_MSIX;
+ } else if (adapter->flags & USING_MSI) {
+  pci_disable_msi(adapter->pdev);
+  adapter->flags &= ~USING_MSI;
  }
 
  /*
@@ -2901,6 +2901,7 @@ static void cxgb4vf_pci_shutdown(struct pci_dev *pdev)
   * Interrupts allowing various internal pathways to drain.
   */
  t4vf_free_sge_resources(adapter);
+ pci_set_drvdata(pdev, NULL);
 }
 
 /*
-- 
1.7.1