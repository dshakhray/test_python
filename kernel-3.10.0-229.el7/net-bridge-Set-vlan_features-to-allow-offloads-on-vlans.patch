From b9a8c1439c8da1179b22a0ae9a3b46f3249c44c9 Mon Sep 17 00:00:00 2001
From: Florian Westphal <fwestpha@redhat.com>
Date: Fri, 13 Jun 2014 14:33:12 -0400
Subject: [net] bridge: Set vlan_features to allow offloads on vlans

Message-id: <1402669992-29784-1-git-send-email-fwestpha@redhat.com>
Patchwork-id: 83756
O-Subject: [PATCH RHEL7.1 net] bridge: Set vlan_features to allow offloads on vlans.
Bugzilla: 1058544
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>
RH-Acked-by: Neil Horman <nhorman@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Jesper Brouer <jbrouer@redhat.com>
RH-Acked-by: Vlad Yasevich <vyasevic@redhat.com>

BZ: 1058544
Tested: ethtool lists offload capabilities
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7576337

performance is poor/needs more cpu than needed when vlan
sits on top of bridge device because vlan device features don't
even indicate SG support.

commit 161f65ba3583b84b4714f21dbee263f99824c516
Author: Vlad Yasevich <vyasevic@redhat.com>
Date:   Wed May 22 07:49:34 2013 +0000

    bridge: Set vlan_features to allow offloads on vlans.

    When vlan device is configured on top of the brige, it does
    not support any offload capabilities because the bridge
    device does not initiliaze vlan_fatures.  Set vlan_fatures to
    be equivalent to hw_fatures.

    Signed-off-by: Vlad Yasevich <vyasevic@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Florian Westphal <fwestpha@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/bridge/br_device.c b/net/bridge/br_device.c
index 54fbeff..eddbc24 100644
--- a/net/bridge/br_device.c
+++ b/net/bridge/br_device.c
@@ -22,6 +22,9 @@
 #include <asm/uaccess.h>
 #include "br_private.h"
 
+#define COMMON_FEATURES (NETIF_F_SG | NETIF_F_FRAGLIST | NETIF_F_HIGHDMA | \
+    NETIF_F_GSO_MASK | NETIF_F_HW_CSUM)
+
 /* net device transmit always called with BH disabled */
 netdev_tx_t br_dev_xmit(struct sk_buff *skb, struct net_device *dev)
 {
@@ -347,12 +350,10 @@ void br_dev_setup(struct net_device *dev)
  dev->tx_queue_len = 0;
  dev->priv_flags = IFF_EBRIDGE;
 
- dev->features = NETIF_F_SG | NETIF_F_FRAGLIST | NETIF_F_HIGHDMA |
-   NETIF_F_GSO_MASK | NETIF_F_HW_CSUM | NETIF_F_LLTX |
-   NETIF_F_NETNS_LOCAL | NETIF_F_HW_VLAN_CTAG_TX;
- dev->hw_features = NETIF_F_SG | NETIF_F_FRAGLIST | NETIF_F_HIGHDMA |
-      NETIF_F_GSO_MASK | NETIF_F_HW_CSUM |
-      NETIF_F_HW_VLAN_CTAG_TX;
+ dev->features = COMMON_FEATURES | NETIF_F_LLTX | NETIF_F_NETNS_LOCAL |
+   NETIF_F_HW_VLAN_CTAG_TX;
+ dev->hw_features = COMMON_FEATURES | NETIF_F_HW_VLAN_CTAG_TX;
+ dev->vlan_features = COMMON_FEATURES;
 
  br->dev = dev;
  spin_lock_init(&br->lock);
-- 
1.7.1