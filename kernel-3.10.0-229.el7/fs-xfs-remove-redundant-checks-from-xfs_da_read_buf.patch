From 70d5e288571c4d72e5928d2d712ce7350392b860 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Thu, 9 Oct 2014 21:00:15 -0400
Subject: [fs] xfs: remove redundant checks from xfs_da_read_buf

Message-id: <1412888441-4181-22-git-send-email-sandeen@redhat.com>
Patchwork-id: 97342
O-Subject: [RHEL7.1 PATCH 21/47] [fs] xfs: remove redundant checks from xfs_da_read_buf
Bugzilla: 1145837
RH-Acked-by: Brian Foster <bfoster@redhat.com>
RH-Acked-by: Dave Chinner <dchinner@redhat.com>

Bugzilla: 1145837
Upstream Status: Committed upstream
Build Info: https://brewweb.devel.redhat.com/taskinfo?taskID=8082426
Tested: locally using xfstests

Thanks,
-Eric

    commit 7c166350b15cbec4ed9357563461b6e1d2a44ea9
    Author: Dave Chinner <dchinner@redhat.com>
    Date:   Tue May 20 08:23:06 2014 +1000

    xfs: remove redundant checks from xfs_da_read_buf

    All of the verification checks of magic numbers are now done by
    verifiers, so ther eis no need to check them again once the buffer
    has been successfully read. If the magic number is bad, it won't
    even get to that code to verify it so it really serves no purpose at
    all anymore. Remove it.

    Signed-off-by: Dave Chinner <dchinner@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Dave Chinner <david@fromorbit.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/xfs/xfs_da_btree.c b/fs/xfs/xfs_da_btree.c
index 6cc5f67..99b980d 100644
--- a/fs/xfs/xfs_da_btree.c
+++ b/fs/xfs/xfs_da_btree.c
@@ -2625,47 +2625,6 @@ xfs_da_read_buf(
   xfs_buf_set_ref(bp, XFS_ATTR_BTREE_REF);
  else
   xfs_buf_set_ref(bp, XFS_DIR_BTREE_REF);
-
- /*
-  * This verification code will be moved to a CRC verification callback
-  * function so just leave it here unchanged until then.
-  */
- {
-  xfs_dir2_data_hdr_t *hdr = bp->b_addr;
-  xfs_dir2_free_t  *free = bp->b_addr;
-  xfs_da_blkinfo_t *info = bp->b_addr;
-  uint   magic, magic1;
-  struct xfs_mount *mp = dp->i_mount;
-
-  magic = be16_to_cpu(info->magic);
-  magic1 = be32_to_cpu(hdr->magic);
-  if (unlikely(
-      XFS_TEST_ERROR((magic != XFS_DA_NODE_MAGIC) &&
-       (magic != XFS_DA3_NODE_MAGIC) &&
-       (magic != XFS_ATTR_LEAF_MAGIC) &&
-       (magic != XFS_ATTR3_LEAF_MAGIC) &&
-       (magic != XFS_DIR2_LEAF1_MAGIC) &&
-       (magic != XFS_DIR3_LEAF1_MAGIC) &&
-       (magic != XFS_DIR2_LEAFN_MAGIC) &&
-       (magic != XFS_DIR3_LEAFN_MAGIC) &&
-       (magic1 != XFS_DIR2_BLOCK_MAGIC) &&
-       (magic1 != XFS_DIR3_BLOCK_MAGIC) &&
-       (magic1 != XFS_DIR2_DATA_MAGIC) &&
-       (magic1 != XFS_DIR3_DATA_MAGIC) &&
-       (free->hdr.magic !=
-     cpu_to_be32(XFS_DIR2_FREE_MAGIC)) &&
-       (free->hdr.magic !=
-     cpu_to_be32(XFS_DIR3_FREE_MAGIC)),
-    mp, XFS_ERRTAG_DA_READ_BUF,
-    XFS_RANDOM_DA_READ_BUF))) {
-   trace_xfs_da_btree_corrupt(bp, _RET_IP_);
-   XFS_CORRUPTION_ERROR("xfs_da_do_buf(2)",
-          XFS_ERRLEVEL_LOW, mp, info);
-   error = XFS_ERROR(EFSCORRUPTED);
-   xfs_trans_brelse(trans, bp);
-   goto out_free;
-  }
- }
  *bpp = bp;
 out_free:
  if (mapp != &map)
-- 
1.7.1