From 49f576436ca1f8ab6fe9c22a251a75437bf2ffa9 Mon Sep 17 00:00:00 2001
From: Tomas Henzl <thenzl@redhat.com>
Date: Mon, 8 Sep 2014 14:31:29 -0400
Subject: [scsi] hpsa: only do device rescan for certain events

Message-id: <1410186734-19986-39-git-send-email-thenzl@redhat.com>
Patchwork-id: 92050
O-Subject: [RHEL6.6 e-stor PATCH 38/83] hpsa: only do device rescan for certain events
Bugzilla: 1069185
RH-Acked-by: Maurizio Lombardi <mlombard@redhat.com>
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Ewan Milne <emilne@redhat.com>

Do no rescan on every events -- way too many rescans are
triggered if we don't filter the events.  Limit rescans
to be triggered by the following set of events:

 * controller state change
 * enclosure hot plug
 * physical drive state change
 * logical drive state change
 * redundant controller state change
 * accelerated io enabled/disabled
 * accelerated io configuration change

Signed-off-by: Stephen M. Cameron <scameron@beardog.cce.hp.com>
Signed-off-by: James Bottomley <JBottomley@Parallels.com>
(cherry picked from commit faff6ee05379ad1e27c6a77706f107734a00705e)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/hpsa.c b/drivers/scsi/hpsa.c
index 2b56c56..5a31409 100644
--- a/drivers/scsi/hpsa.c
+++ b/drivers/scsi/hpsa.c
@@ -6457,7 +6457,7 @@ static void hpsa_ctlr_needs_rescan(struct ctlr_info *h)
   return;
 
  h->events = readl(&(h->cfgtable->event_notify));
- if (!h->events && !h->drv_req_rescan)
+ if (!(h->events & RESCAN_REQUIRED_EVENT_BITS) && !h->drv_req_rescan)
   return;
 
  /*
diff --git a/drivers/scsi/hpsa.h b/drivers/scsi/hpsa.h
index fe813e9..fe8d281 100644
--- a/drivers/scsi/hpsa.h
+++ b/drivers/scsi/hpsa.h
@@ -181,6 +181,22 @@ struct ctlr_info {
 #define HPSATMF_LOG_QRY_TSET    (1 << 24)
 #define HPSATMF_LOG_QRY_ASYNC   (1 << 25)
  u32 events;
+#define CTLR_STATE_CHANGE_EVENT    (1 << 0)
+#define CTLR_ENCLOSURE_HOT_PLUG_EVENT   (1 << 1)
+#define CTLR_STATE_CHANGE_EVENT_PHYSICAL_DRV  (1 << 4)
+#define CTLR_STATE_CHANGE_EVENT_LOGICAL_DRV  (1 << 5)
+#define CTLR_STATE_CHANGE_EVENT_REDUNDANT_CNTRL  (1 << 6)
+#define CTLR_STATE_CHANGE_EVENT_AIO_ENABLED_DISABLED (1 << 30)
+#define CTLR_STATE_CHANGE_EVENT_AIO_CONFIG_CHANGE (1 << 31)
+
+#define RESCAN_REQUIRED_EVENT_BITS \
+  (CTLR_STATE_CHANGE_EVENT | \
+  CTLR_ENCLOSURE_HOT_PLUG_EVENT | \
+  CTLR_STATE_CHANGE_EVENT_PHYSICAL_DRV | \
+  CTLR_STATE_CHANGE_EVENT_LOGICAL_DRV | \
+  CTLR_STATE_CHANGE_EVENT_REDUNDANT_CNTRL | \
+  CTLR_STATE_CHANGE_EVENT_AIO_ENABLED_DISABLED | \
+  CTLR_STATE_CHANGE_EVENT_AIO_CONFIG_CHANGE)
  int acciopath_status;
  int drv_req_rescan; /* flag for driver to request rescan event */
 };
-- 
1.7.1