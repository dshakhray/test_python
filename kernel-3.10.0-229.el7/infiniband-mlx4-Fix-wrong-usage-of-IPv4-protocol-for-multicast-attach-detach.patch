From 7fdd5a0d0d433fcaa446b48e72ed4c5491a8e8b8 Mon Sep 17 00:00:00 2001
From: Amir Vadai <avadai@redhat.com>
Date: Mon, 22 Dec 2014 09:08:54 -0500
Subject: [infiniband] mlx4: Fix wrong usage of IPv4 protocol for multicast attach/detach

Message-id: <831c388631ded307a690ff71005d077439f5e1fd.1419239217.git.avadai@redhat.com>
Patchwork-id: 102371
O-Subject: [Patch RHEL7.1] IB/mlx4: Fix wrong usage of IPv4 protocol for multicast attach/detach
Bugzilla: 1151331
RH-Acked-by: Doug Ledford <dledford@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

From: Or Gerlitz <ogerlitz@mellanox.com>

The MLX4_PROT_IB_IPV4 protocol should only be used with RoCEv2 and such.
Removing this wrong usage allows to run multicast applications over RoCE.

Fixes: d487ee77740c ('IB/mlx4: Use IBoE (RoCE) IP based GIDs in the port GID table')
Reported-by: Carol Soto <clsoto@linux.vnet.ibm.com>
Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>

Upstream: https://patchwork.kernel.org/patch/5507181/
Bugzilla: 1151331
Brew: 8427798
Tested by IBM
Signed-off-by: Amir Vadai <avadai@redhat.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/infiniband/hw/mlx4/main.c b/drivers/infiniband/hw/mlx4/main.c
index 1cccd4c..a5fef5a 100644
--- a/drivers/infiniband/hw/mlx4/main.c
+++ b/drivers/infiniband/hw/mlx4/main.c
@@ -1204,8 +1204,7 @@ static int mlx4_ib_mcg_attach(struct ib_qp *ibqp, union ib_gid *gid, u16 lid)
  struct mlx4_ib_qp *mqp = to_mqp(ibqp);
  u64 reg_id;
  struct mlx4_ib_steering *ib_steering = NULL;
- enum mlx4_protocol prot = (gid->raw[1] == 0x0e) ?
-  MLX4_PROT_IB_IPV4 : MLX4_PROT_IB_IPV6;
+ enum mlx4_protocol prot = MLX4_PROT_IB_IPV6;
 
  if (mdev->dev->caps.steering_mode ==
      MLX4_STEERING_MODE_DEVICE_MANAGED) {
@@ -1218,8 +1217,10 @@ static int mlx4_ib_mcg_attach(struct ib_qp *ibqp, union ib_gid *gid, u16 lid)
         !!(mqp->flags &
            MLX4_IB_QP_BLOCK_MULTICAST_LOOPBACK),
         prot, &reg_id);
- if (err)
+ if (err) {
+  pr_err("multicast attach op failed, err %d\n", err);
   goto err_malloc;
+ }
 
  err = add_gid_entry(ibqp, gid);
  if (err)
@@ -1267,8 +1268,7 @@ static int mlx4_ib_mcg_detach(struct ib_qp *ibqp, union ib_gid *gid, u16 lid)
  struct net_device *ndev;
  struct mlx4_ib_gid_entry *ge;
  u64 reg_id = 0;
- enum mlx4_protocol prot = (gid->raw[1] == 0x0e) ?
-  MLX4_PROT_IB_IPV4 : MLX4_PROT_IB_IPV6;
+ enum mlx4_protocol prot =  MLX4_PROT_IB_IPV6;
 
  if (mdev->dev->caps.steering_mode ==
      MLX4_STEERING_MODE_DEVICE_MANAGED) {
-- 
1.7.1