From fc7f2ae236b3630e702a6844b73ee02b24f1db2b Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:09:29 -0400
Subject: [usb] yurex: fix race between probe() and read()

Message-id: <1410887463-20674-498-git-send-email-dzickus@redhat.com>
Patchwork-id: 95647
O-Subject: [RHEL7 PATCH 497/591] USB: yurex: fix race between probe() and read()
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit c78d1ecfd7e639f21c7a809f4df6de1a644a91f0
Author: Oliver Neukum <oneukum@suse.de>
Date:   Mon May 19 13:52:20 2014 +0200

    USB: yurex: fix race between probe() and read()

    There's a window during which read() would return 0 instead
    of a correct error for no data yet. Reorder initialization
    to fix the race.

    Signed-off-by: Oliver Neukum <oneukum@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/misc/yurex.c b/drivers/usb/misc/yurex.c
index 2427820..1472805 100644
--- a/drivers/usb/misc/yurex.c
+++ b/drivers/usb/misc/yurex.c
@@ -296,6 +296,7 @@ static int yurex_probe(struct usb_interface *interface, const struct usb_device_
 
  /* save our data pointer in this interface device */
  usb_set_intfdata(interface, dev);
+ dev->bbu = -1;
 
  /* we can register the device now, as it is ready */
  retval = usb_register_dev(interface, &yurex_class);
@@ -306,8 +307,6 @@ static int yurex_probe(struct usb_interface *interface, const struct usb_device_
   goto error;
  }
 
- dev->bbu = -1;
-
  dev_info(&interface->dev,
    "USB YUREX device now attached to Yurex #%d\n",
    interface->minor);
-- 
1.7.1