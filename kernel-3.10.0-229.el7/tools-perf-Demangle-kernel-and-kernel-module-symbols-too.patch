From 305e180a3862d7af202184deebc28a554b4a629d Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:53:05 -0400
Subject: [tools] perf: Demangle kernel and kernel module symbols too

Message-id: <1408953210-26343-298-git-send-email-jolsa@redhat.com>
Patchwork-id: 88931
O-Subject: [PATCH RHEL7.1 BZ1133083 297/322] perf tools: Demangle kernel and kernel module symbols too
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 950b8354716eb1f9c0b39777d379efa5f4125c04
Author: Avi Kivity <avi@cloudius-systems.com>
Date: Wed Jan 22 21:58:46 2014 +0200

description
===========
Some kernels contain C++ code, and thus their symbols need to be
demangled.  This allows 'perf kvm top' to generate readable output.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/symbol-elf.c b/tools/perf/util/symbol-elf.c
index 7594567..8f12f0f 100644
--- a/tools/perf/util/symbol-elf.c
+++ b/tools/perf/util/symbol-elf.c
@@ -922,6 +922,7 @@ int dso__load_sym(struct dso *dso, struct map *map,
       (u64)shdr.sh_offset);
    sym.st_value -= shdr.sh_addr - shdr.sh_offset;
   }
+new_symbol:
   /*
    * We need to figure out if the object was created from C++ sources
    * DWARF DW_compile_unit has this, but we don't always have access
@@ -933,7 +934,6 @@ int dso__load_sym(struct dso *dso, struct map *map,
    if (demangled != NULL)
     elf_name = demangled;
   }
-new_symbol:
   f = symbol__new(sym.st_value, sym.st_size,
     GELF_ST_BIND(sym.st_info), elf_name);
   free(demangled);
-- 
1.7.1