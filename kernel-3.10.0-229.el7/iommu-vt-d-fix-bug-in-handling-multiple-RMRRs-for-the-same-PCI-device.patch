From 3b9b8f999362bac7c73c5e2e0f826fe693f07541 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 02:16:32 -0400
Subject: [iommu] vt-d: fix bug in handling multiple RMRRs for the same PCI device

Message-id: <20140905021632.32574.53151.stgit@gir.stowe>
Patchwork-id: 91368
O-Subject: [RHEL7.1 PATCH 09/17] iommu/vt-d: fix bug in handling multiple RMRRs for the same PCI device
Bugzilla: 1136537
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1136537
Upstream Status: 27e249501ca06a3010519c306206cc402b61b5ab

commit 27e249501ca06a3010519c306206cc402b61b5ab
Author: Jiang Liu <jiang.liu@linux.intel.com>
Date:   Fri Jun 20 15:08:06 2014 +0800

    iommu/vt-d: fix bug in handling multiple RMRRs for the same PCI device

    Function dmar_iommu_notify_scope_dev() makes a wrong assumption that
    there's one RMRR for each PCI device at most, which causes DMA failure
    on some HP platforms. So enhance dmar_iommu_notify_scope_dev() to
    handle multiple RMRRs for the same PCI device.

    Fixbug: https://bugzilla.novell.com/show_bug.cgi?id=879482

    Cc: <stable@vger.kernel.org> # 3.15
    Reported-by: Tom Mingarelli <thomas.mingarelli@hp.com>
    Tested-by: Linda Knippers <linda.knippers@hp.com>
    Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c
index f256ffc..7119079 100644
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@ -3799,14 +3799,11 @@ int dmar_iommu_notify_scope_dev(struct dmar_pci_notify_info *info)
     ((void *)rmrr) + rmrr->header.length,
     rmrr->segment, rmrru->devices,
     rmrru->devices_cnt);
-   if (ret > 0)
-    break;
-   else if(ret < 0)
+   if(ret < 0)
     return ret;
   } else if (info->event == BUS_NOTIFY_DEL_DEVICE) {
-   if (dmar_remove_dev_scope(info, rmrr->segment,
-    rmrru->devices, rmrru->devices_cnt))
-    break;
+   dmar_remove_dev_scope(info, rmrr->segment,
+    rmrru->devices, rmrru->devices_cnt);
   }
  }
 
-- 
1.7.1