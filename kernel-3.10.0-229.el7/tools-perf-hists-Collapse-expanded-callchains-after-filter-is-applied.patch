From aa4b05fe96003eae85b0892fb65e8d304e06d499 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:06:51 -0400
Subject: [tools] perf/hists: Collapse expanded callchains after filter is applied

Message-id: <1410181752-25631-167-git-send-email-jolsa@redhat.com>
Patchwork-id: 91866
O-Subject: [PATCH RHEL7.1 BZ1134356 166/307] perf hists: Collapse expanded callchains after filter is applied
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit 87e90f43285f4096e9ba5fc18b05c2e04caf3fab
Author: Namhyung Kim <namhyung@kernel.org>
Date: Thu Apr 24 16:44:16 2014 +0900

description
===========
When a filter is applied a hist entry checks whether its callchain was
folded and account it to the output stat.  But this is rather hacky
and only TUI-specific.  Simply fold the callchains for the entry looks
like a simpler and more generic solution IMHO.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/hist.c b/tools/perf/util/hist.c
index b675857..8d5cfcc 100644
--- a/tools/perf/util/hist.c
+++ b/tools/perf/util/hist.c
@@ -716,8 +716,8 @@ static void hists__remove_entry_filter(struct hists *hists, struct hist_entry *h
  if (h->filtered)
   return;
 
- if (h->ms.unfolded)
-  hists->nr_non_filtered_entries += h->nr_rows;
+ /* force fold unfiltered entry for simplicity */
+ h->ms.unfolded = false;
  h->row_offset = 0;
 
  hists->stats.nr_non_filtered_samples += h->stat.nr_events;
-- 
1.7.1