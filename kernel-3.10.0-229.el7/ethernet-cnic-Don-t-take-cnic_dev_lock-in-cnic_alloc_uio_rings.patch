From f138fc9ea5bbbb45c22c8d40ae200d71bc9e3e34 Mon Sep 17 00:00:00 2001
From: Maurizio Lombardi <mlombard@redhat.com>
Date: Mon, 14 Jul 2014 15:46:14 -0400
Subject: [ethernet] cnic: Don't take cnic_dev_lock in cnic_alloc_uio_rings()

Message-id: <1405352774-9934-3-git-send-email-mlombard@redhat.com>
Patchwork-id: 85791
O-Subject: [RHEL7.1 PATCH 2/2] cnic: Don't take cnic_dev_lock in cnic_alloc_uio_rings()
Bugzilla: 1079384 1094613
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Michael Chan <mchan@broadcom.com>

We are allocating memory with GFP_KERNEL under spinlock.  Since this is
the only call manipulating the cnic_udev_list and it is always under
rtnl_lock, cnic_dev_lock can be safely removed.

Signed-off-by: Michael Chan <mchan@broadcom.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 437b8a26f9d057505e631b9b556e9d80c1987aca)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/broadcom/cnic.c b/drivers/net/ethernet/broadcom/cnic.c
index dccf410..bf82f21 100644
--- a/drivers/net/ethernet/broadcom/cnic.c
+++ b/drivers/net/ethernet/broadcom/cnic.c
@@ -1039,21 +1039,17 @@ static int cnic_alloc_uio_rings(struct cnic_dev *dev, int pages)
  struct cnic_local *cp = dev->cnic_priv;
  struct cnic_uio_dev *udev;
 
- read_lock(&cnic_dev_lock);
  list_for_each_entry(udev, &cnic_udev_list, list) {
   if (udev->pdev == dev->pcidev) {
    udev->dev = dev;
    if (__cnic_alloc_uio_rings(udev, pages)) {
     udev->dev = NULL;
-    read_unlock(&cnic_dev_lock);
     return -ENOMEM;
    }
    cp->udev = udev;
-   read_unlock(&cnic_dev_lock);
    return 0;
   }
  }
- read_unlock(&cnic_dev_lock);
 
  udev = kzalloc(sizeof(struct cnic_uio_dev), GFP_ATOMIC);
  if (!udev)
@@ -1067,9 +1063,7 @@ static int cnic_alloc_uio_rings(struct cnic_dev *dev, int pages)
  if (__cnic_alloc_uio_rings(udev, pages))
   goto err_udev;
 
- write_lock(&cnic_dev_lock);
  list_add(&udev->list, &cnic_udev_list);
- write_unlock(&cnic_dev_lock);
 
  pci_dev_get(udev->pdev);
 
-- 
1.7.1