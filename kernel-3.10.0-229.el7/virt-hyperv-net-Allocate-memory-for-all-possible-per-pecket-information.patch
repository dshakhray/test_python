From cd15a45ecffd75b63ecd713a4d90e3f540951ff5 Mon Sep 17 00:00:00 2001
From: Jason Wang <jasowang@redhat.com>
Date: Mon, 29 Sep 2014 00:59:00 -0400
Subject: [virt] hyperv/net: Allocate memory for all possible per-pecket information

Message-id: <1411952358-34104-17-git-send-email-jasowang@redhat.com>
Patchwork-id: 96772
O-Subject: [RHEL7.1 PATCH 16/34] Drivers: net: hyperv: Allocate memory for all possible per-pecket information
Bugzilla: 1146357
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Vitaly Kuznetsov <vkuznets@redhat.com>

From: KY Srinivasan <kys@microsoft.com>

Bugzilla: 1146357

An outgoing packet can potentially need per-packet information for
all the offloads and VLAN tagging. Fix this issue.

Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
Reviewed-by: Haiyang Zhang <haiyangz@microsoft.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4276372f0dcb191639fa79a171737f4239ded869)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/hyperv/netvsc_drv.c b/drivers/net/hyperv/netvsc_drv.c
index 199a093..830b5c0 100644
--- a/drivers/net/hyperv/netvsc_drv.c
+++ b/drivers/net/hyperv/netvsc_drv.c
@@ -320,7 +320,9 @@ static int netvsc_start_xmit(struct sk_buff *skb, struct net_device *net)
  packet = kzalloc(sizeof(struct hv_netvsc_packet) +
     (num_data_pgs * sizeof(struct hv_page_buffer)) +
     sizeof(struct rndis_message) +
-    NDIS_VLAN_PPI_SIZE, GFP_ATOMIC);
+    NDIS_VLAN_PPI_SIZE +
+    NDIS_CSUM_PPI_SIZE +
+    NDIS_LSO_PPI_SIZE, GFP_ATOMIC);
  if (!packet) {
   /* out of memory, drop packet */
   netdev_err(net, "unable to allocate hv_netvsc_packet\n");
-- 
1.7.1