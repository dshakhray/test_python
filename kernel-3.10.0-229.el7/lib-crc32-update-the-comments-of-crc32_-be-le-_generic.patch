From ac5be748d1ed306668c8b5dd621250d0b0bc8cbe Mon Sep 17 00:00:00 2001
From: Daniel Borkmann <dborkman@redhat.com>
Date: Thu, 16 Jan 2014 15:19:43 -0500
Subject: [lib] crc32: update the comments of crc32_{be, le}_generic()

Message-id: <a29ac45bb7824fd02f77f253e4de3bd1e4617c9e.1389878943.git.dborkman@redhat.com>
Patchwork-id: 74349
O-Subject: [RHEL7 PATCH net 03/11] lib/crc32: update the comments of crc32_{be, le}_generic()
Bugzilla: 1054215
RH-Acked-by: Florian Westphal <fwestpha@redhat.com>
RH-Acked-by: Thomas Graf <tgraf@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1054215
Upstream Status: f2e1d2ac344bcee83f6496a641d37e86d55e33d4
Brew: http://brewweb.devel.redhat.com/brew/taskinfo?taskID=6885774
Tested: verified by QA in their IPVS lab and on beaker for basic tests

Upstream Commit:
commit f2e1d2ac344bcee83f6496a641d37e86d55e33d4
Author: Gu Zheng <guz.fnst@cn.fujitsu.com>
Date:   Wed Sep 11 14:23:52 2013 -0700

    lib/crc32: update the comments of crc32_{be,le}_generic()

    [akpm@linux-foundation.org: coding-style fixes]
    Signed-off-by: Gu Zheng <guz.fnst@cn.fujitsu.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Signed-off-by: Daniel Borkmann <dborkman@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/lib/crc32.c b/lib/crc32.c
index 072fbd8..410093d 100644
--- a/lib/crc32.c
+++ b/lib/crc32.c
@@ -131,11 +131,14 @@ crc32_body(u32 crc, unsigned char const *buf, size_t len, const u32 (*tab)[256])
 #endif
 
 /**
- * crc32_le() - Calculate bitwise little-endian Ethernet AUTODIN II CRC32
- * @crc: seed value for computation.  ~0 for Ethernet, sometimes 0 for
- * other uses, or the previous crc32 value if computing incrementally.
- * @p: pointer to buffer over which CRC is run
+ * crc32_le_generic() - Calculate bitwise little-endian Ethernet AUTODIN II
+ *   CRC32/CRC32C
+ * @crc: seed value for computation.  ~0 for Ethernet, sometimes 0 for other
+ *  uses, or the previous crc32/crc32c value if computing incrementally.
+ * @p: pointer to buffer over which CRC32/CRC32C is run
  * @len: length of buffer @p
+ * @tab: little-endian Ethernet table
+ * @polynomial: CRC32/CRC32c LE polynomial
  */
 static inline u32 __pure crc32_le_generic(u32 crc, unsigned char const *p,
        size_t len, const u32 (*tab)[256],
@@ -201,11 +204,13 @@ EXPORT_SYMBOL(crc32_le);
 EXPORT_SYMBOL(__crc32c_le);
 
 /**
- * crc32_be() - Calculate bitwise big-endian Ethernet AUTODIN II CRC32
+ * crc32_be_generic() - Calculate bitwise big-endian Ethernet AUTODIN II CRC32
  * @crc: seed value for computation.  ~0 for Ethernet, sometimes 0 for
  * other uses, or the previous crc32 value if computing incrementally.
- * @p: pointer to buffer over which CRC is run
+ * @p: pointer to buffer over which CRC32 is run
  * @len: length of buffer @p
+ * @tab: big-endian Ethernet table
+ * @polynomial: CRC32 BE polynomial
  */
 static inline u32 __pure crc32_be_generic(u32 crc, unsigned char const *p,
        size_t len, const u32 (*tab)[256],
-- 
1.7.1