From 63e1b8ee71bf85ec999b89dc839479fe49a3e663 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:51:28 -0400
Subject: [tools] perf/report: Use pr_*() functions where applicable

Message-id: <1408953210-26343-201-git-send-email-jolsa@redhat.com>
Patchwork-id: 88924
O-Subject: [PATCH RHEL7.1 BZ1133083 200/322] perf report: Use pr_*() functions where applicable
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit a42101418072d3be357b534521be2849518611e6
Author: Namhyung Kim <namhyung.kim@lge.com>
Date: Fri Dec 20 14:11:12 2013 +0900

description
===========
There're some places printing messages to stdout/err directly.

It should be converted to use proper error printing functions instead.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-report.c b/tools/perf/builtin-report.c
index ec7399a..0c9ec3e 100644
--- a/tools/perf/builtin-report.c
+++ b/tools/perf/builtin-report.c
@@ -242,8 +242,8 @@ static int process_sample_event(struct perf_tool *tool,
  int ret;
 
  if (perf_event__preprocess_sample(event, machine, &al, sample) < 0) {
-  fprintf(stderr, "problem processing %d event, skipping it.\n",
-   event->header.type);
+  pr_debug("problem processing %d event, skipping it.\n",
+    event->header.type);
   return -1;
  }
 
@@ -637,7 +637,7 @@ parse_callchain_opt(const struct option *opt, const char *arg, int unset)
   return -1;
 setup:
  if (callchain_register_param(&callchain_param) < 0) {
-  fprintf(stderr, "Can't register callchain params\n");
+  pr_err("Can't register callchain params\n");
   return -1;
  }
  return 0;
@@ -859,7 +859,7 @@ repeat:
  }
  if (report.mem_mode) {
   if (sort__mode == SORT_MODE__BRANCH) {
-   fprintf(stderr, "branch and mem mode incompatible\n");
+   pr_err("branch and mem mode incompatible\n");
    goto error;
   }
   sort__mode = SORT_MODE__MEMORY;
-- 
1.7.1