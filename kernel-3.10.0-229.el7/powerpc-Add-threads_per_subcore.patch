From 2ef2034191d85fd3aff75c35a58aa77f1b83db0c Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:12:44 -0400
Subject: [powerpc] Add threads_per_subcore

Message-id: <1410545655-205645-536-git-send-email-dzickus@redhat.com>
Patchwork-id: 94621
O-Subject: [RHEL7 PATCH 535/626] powerpc: Add threads_per_subcore
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 5853aef1ac5c5d83076203e840ca463857a7515d
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Fri May 23 18:15:27 2014 +1000

    powerpc: Add threads_per_subcore

    On POWER8 we have a new concept of a subcore. This is what happens when
    you take a regular core and split it. A subcore is a grouping of two or
    four SMT threads, as well as a handfull of SPRs which allows the subcore
    to appear as if it were a core from the point of view of a guest.

    Unlike threads_per_core which is fixed at boot, threads_per_subcore can
    change while the system is running. Most code will not want to use
    threads_per_subcore.

    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Michael Neuling <mikey@neuling.org>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/cputhreads.h b/arch/powerpc/include/asm/cputhreads.h
index ac3eedb..2bf8e93 100644
--- a/arch/powerpc/include/asm/cputhreads.h
+++ b/arch/powerpc/include/asm/cputhreads.h
@@ -18,10 +18,12 @@
 
 #ifdef CONFIG_SMP
 extern int threads_per_core;
+extern int threads_per_subcore;
 extern int threads_shift;
 extern cpumask_t threads_core_mask;
 #else
 #define threads_per_core 1
+#define threads_per_subcore 1
 #define threads_shift  0
 #define threads_core_mask (CPU_MASK_CPU0)
 #endif
@@ -74,6 +76,11 @@ static inline int cpu_thread_in_core(int cpu)
  return cpu & (threads_per_core - 1);
 }
 
+static inline int cpu_thread_in_subcore(int cpu)
+{
+ return cpu & (threads_per_subcore - 1);
+}
+
 static inline int cpu_first_thread_sibling(int cpu)
 {
  return cpu & ~(threads_per_core - 1);
diff --git a/arch/powerpc/kernel/setup-common.c b/arch/powerpc/kernel/setup-common.c
index 3cf25c8..aa0f5ed 100644
--- a/arch/powerpc/kernel/setup-common.c
+++ b/arch/powerpc/kernel/setup-common.c
@@ -390,9 +390,10 @@ void __init check_for_initrd(void)
 
 #ifdef CONFIG_SMP
 
-int threads_per_core, threads_shift;
+int threads_per_core, threads_per_subcore, threads_shift;
 cpumask_t threads_core_mask;
 EXPORT_SYMBOL_GPL(threads_per_core);
+EXPORT_SYMBOL_GPL(threads_per_subcore);
 EXPORT_SYMBOL_GPL(threads_shift);
 EXPORT_SYMBOL_GPL(threads_core_mask);
 
@@ -401,6 +402,7 @@ static void __init cpu_init_thread_core_maps(int tpc)
  int i;
 
  threads_per_core = tpc;
+ threads_per_subcore = tpc;
  cpumask_clear(&threads_core_mask);
 
  /* This implementation only supports power of 2 number of threads
-- 
1.7.1