From 0b9584f694835386e3cee210ce26975ffa6029b5 Mon Sep 17 00:00:00 2001
From: Chad Dupuis <cdupuis@redhat.com>
Date: Thu, 21 Aug 2014 13:05:32 -0400
Subject: [ethernet] qlcnic: Fix mailbox processing during diagnostic test

Message-id: <1408626422-3941-49-git-send-email-cdupuis@redhat.com>
Patchwork-id: 88605
O-Subject: [PATCH RHEL 7.1 048/138] qlcnic: Fix mailbox processing during diagnostic test
Bugzilla: 1089352
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Manish chopra <manish.chopra@qlogic.com>

Bug 1089352 (https://bugzilla.redhat.com/show_bug.cgi?id=1089352)

net commit id e49df7947a48b04ee57ee0fa0c4110ef05024c4f

o Do not enable mailbox polling in case of legacy interrupt.
  Process mailbox AEN/response from the interrupt.

Signed-off-by: Manish Chopra <manish.chopra@qlogic.com>
Signed-off-by: Himanshu Madhani <himanshu.madhani@qlogic.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c
index 388c1d9..4385fbc 100644
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c
@@ -447,8 +447,9 @@ irqreturn_t qlcnic_83xx_intr(int irq, void *data)
 
  qlcnic_83xx_poll_process_aen(adapter);
 
- if (ahw->diag_test == QLCNIC_INTERRUPT_TEST) {
-  ahw->diag_cnt++;
+ if (ahw->diag_test) {
+  if (ahw->diag_test == QLCNIC_INTERRUPT_TEST)
+   ahw->diag_cnt++;
   qlcnic_83xx_enable_legacy_msix_mbx_intr(adapter);
   return IRQ_HANDLED;
  }
@@ -1345,11 +1346,6 @@ static int qlcnic_83xx_diag_alloc_res(struct net_device *netdev, int test,
  }
 
  if (adapter->ahw->diag_test == QLCNIC_LOOPBACK_TEST) {
-  /* disable and free mailbox interrupt */
-  if (!(adapter->flags & QLCNIC_MSIX_ENABLED)) {
-   qlcnic_83xx_enable_mbx_poll(adapter);
-   qlcnic_83xx_free_mbx_intr(adapter);
-  }
   adapter->ahw->loopback_state = 0;
   adapter->ahw->hw_ops->setup_link_event(adapter, 1);
  }
@@ -1363,33 +1359,20 @@ static void qlcnic_83xx_diag_free_res(struct net_device *netdev,
 {
  struct qlcnic_adapter *adapter = netdev_priv(netdev);
  struct qlcnic_host_sds_ring *sds_ring;
- int ring, err;
+ int ring;
 
  clear_bit(__QLCNIC_DEV_UP, &adapter->state);
  if (adapter->ahw->diag_test == QLCNIC_INTERRUPT_TEST) {
   for (ring = 0; ring < adapter->drv_sds_rings; ring++) {
    sds_ring = &adapter->recv_ctx->sds_rings[ring];
-   qlcnic_83xx_disable_intr(adapter, sds_ring);
-   if (!(adapter->flags & QLCNIC_MSIX_ENABLED))
-    qlcnic_83xx_enable_mbx_poll(adapter);
+   if (adapter->flags & QLCNIC_MSIX_ENABLED)
+    qlcnic_83xx_disable_intr(adapter, sds_ring);
   }
  }
 
  qlcnic_fw_destroy_ctx(adapter);
  qlcnic_detach(adapter);
 
- if (adapter->ahw->diag_test == QLCNIC_LOOPBACK_TEST) {
-  if (!(adapter->flags & QLCNIC_MSIX_ENABLED)) {
-   err = qlcnic_83xx_setup_mbx_intr(adapter);
-   qlcnic_83xx_disable_mbx_poll(adapter);
-   if (err) {
-    dev_err(&adapter->pdev->dev,
-     "%s: failed to setup mbx interrupt\n",
-     __func__);
-    goto out;
-   }
-  }
- }
  adapter->ahw->diag_test = 0;
  adapter->drv_sds_rings = drv_sds_rings;
 
@@ -1399,9 +1382,6 @@ static void qlcnic_83xx_diag_free_res(struct net_device *netdev,
  if (netif_running(netdev))
   __qlcnic_up(adapter, netdev);
 
- if (adapter->ahw->diag_test == QLCNIC_INTERRUPT_TEST &&
-     !(adapter->flags & QLCNIC_MSIX_ENABLED))
-  qlcnic_83xx_disable_mbx_poll(adapter);
 out:
  netif_device_attach(netdev);
 }
-- 
1.7.1