From e491fd2ca221ccd9a39f500f83cb3a29cb489eab Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 28 Aug 2014 03:03:53 -0400
Subject: [acpi] Do not fail acpi_bind_one() if device is already bound correctly

Message-id: <20140828030353.2117.60677.stgit@gir.stowe>
Patchwork-id: 89291
O-Subject: [RHEL7.1 PATCH 03/30] ACPI: Do not fail acpi_bind_one() if device is already bound correctly
Bugzilla: 1128632
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1128632
Upstream Status: 3fe444ad7e3a6951fa0c9b552c5afe6f6df0d571

commit 3fe444ad7e3a6951fa0c9b552c5afe6f6df0d571
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Wed Aug 7 01:15:25 2013 +0200

    ACPI: Do not fail acpi_bind_one() if device is already bound correctly

    Modify acpi_bind_one() so that it doesn't fail if the device
    represented by its first argument has already been bound to the
    given ACPI handle (second argument), because that is not a good
    enough reason for returning an error code.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Lan Tianyu <tianyu.lan@intel.com>
    Acked-by: Toshi Kani <toshi.kani@hp.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/acpi/glue.c b/drivers/acpi/glue.c
index 408f6b2..48cc4c9 100644
--- a/drivers/acpi/glue.c
+++ b/drivers/acpi/glue.c
@@ -217,7 +217,10 @@ int acpi_bind_one(struct device *dev, acpi_handle handle)
   /* Sanity check. */
   if (pn->dev == dev) {
    dev_warn(dev, "Already associated with ACPI node\n");
-   goto err_free;
+   if (ACPI_HANDLE(dev) == handle)
+    retval = 0;
+
+   goto out_free;
   }
   if (pn->node_id == node_id) {
    physnode_list = &pn->node;
@@ -255,10 +258,14 @@ int acpi_bind_one(struct device *dev, acpi_handle handle)
  put_device(dev);
  return retval;
 
- err_free:
+ out_free:
  mutex_unlock(&acpi_dev->physical_node_lock);
  kfree(physical_node);
- goto err;
+ if (retval)
+  goto err;
+
+ put_device(dev);
+ return 0;
 }
 EXPORT_SYMBOL_GPL(acpi_bind_one);
 
-- 
1.7.1