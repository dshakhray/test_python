From f721191d98c90f22b896e39e2172fc76700ad7ab Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Mon, 23 Jun 2014 21:50:52 -0400
Subject: [fs] nfsd: no need for encode_compoundres to adjust lengths

Message-id: <1403560314-32525-111-git-send-email-bfields@redhat.com>
Patchwork-id: 84597
O-Subject: [Patch RHEL7 110/172] nfsd4: no need for encode_compoundres to adjust lengths
Bugzilla: 1111719
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

xdr_reserve_space should now be calculating the length correctly as we
go, so there's no longer any need to fix it up here.

Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: dd97fddedc251eb423408d89f2947eff9c4ea3c1
Bugzilla: 1111719
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4state.c b/fs/nfsd/nfs4state.c
index 14bfb55..b06f9a0 100644
--- a/fs/nfsd/nfs4state.c
+++ b/fs/nfsd/nfs4state.c
@@ -1618,6 +1618,7 @@ nfsd4_replay_cache_entry(struct nfsd4_compoundres *resp,
     struct nfsd4_sequence *seq)
 {
  struct nfsd4_slot *slot = resp->cstate.slot;
+ struct kvec *head = resp->xdr.iov;
  __be32 status;
 
  dprintk("--> %s slot %p\n", __func__, slot);
@@ -1631,6 +1632,8 @@ nfsd4_replay_cache_entry(struct nfsd4_compoundres *resp,
 
  resp->opcnt = slot->sl_opcnt;
  resp->xdr.p = resp->cstate.datap + XDR_QUADLEN(slot->sl_datalen);
+ head->iov_len = (void *)resp->xdr.p - head->iov_base;
+ resp->xdr.buf->len = head->iov_len;
  status = slot->sl_status;
 
  return status;
diff --git a/fs/nfsd/nfs4xdr.c b/fs/nfsd/nfs4xdr.c
index e9abf5f..79b8e1e 100644
--- a/fs/nfsd/nfs4xdr.c
+++ b/fs/nfsd/nfs4xdr.c
@@ -3789,19 +3789,13 @@ nfs4svc_encode_compoundres(struct svc_rqst *rqstp, __be32 *p, struct nfsd4_compo
   * All that remains is to write the tag and operation count...
   */
  struct nfsd4_compound_state *cs = &resp->cstate;
- struct kvec *iov;
+
  p = resp->tagp;
  *p++ = htonl(resp->taglen);
  memcpy(p, resp->tag, resp->taglen);
  p += XDR_QUADLEN(resp->taglen);
  *p++ = htonl(resp->opcnt);
 
- if (rqstp->rq_res.page_len) 
-  iov = &rqstp->rq_res.tail[0];
- else
-  iov = &rqstp->rq_res.head[0];
- iov->iov_len = ((char *)resp->xdr.p) - (char *)iov->iov_base;
- BUG_ON(iov->iov_len > PAGE_SIZE);
  if (nfsd4_has_session(cs)) {
   struct nfsd_net *nn = net_generic(SVC_NET(rqstp), nfsd_net_id);
   struct nfs4_client *clp = cs->session->se_client;
-- 
1.7.1