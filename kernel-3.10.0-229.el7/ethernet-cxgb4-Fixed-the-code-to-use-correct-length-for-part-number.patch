From d164748cc8d66626dba820dd7adfe18aef0f5639 Mon Sep 17 00:00:00 2001
From: Sai Vemuri <svemuri@redhat.com>
Date: Thu, 11 Sep 2014 22:44:03 -0400
Subject: [ethernet] cxgb4: Fixed the code to use correct length for part number

Message-id: <1410475447-94392-105-git-send-email-svemuri@redhat.com>
Patchwork-id: 93866
O-Subject: [RHEL7.1 PATCH BZ 1124947 104/108] cxgb4: Fixed the code to use correct length for part number
Bugzilla: 1124947
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Previously it was using the length value of serial number.
Also added macro for VPD unique identifier (0x82).

Signed-off-by: Casey Leedom <leedom@chelsio.com>
Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 63a92fe6f7e40069086be21bf9fbcfbe8d001345)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c b/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
index b6e1304..5654090 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
@@ -567,6 +567,7 @@ int t4_memory_rw(struct adapter *adap, int win, int mtype, u32 addr,
 #define VPD_BASE           0x400
 #define VPD_BASE_OLD       0
 #define VPD_LEN            1024
+#define CHELSIO_VPD_UNIQUE_ID 0x82
 
 /**
  * t4_seeprom_wp - enable/disable EEPROM write protection
@@ -604,7 +605,14 @@ int get_vpd_params(struct adapter *adapter, struct vpd_params *p)
  ret = pci_read_vpd(adapter->pdev, VPD_BASE, sizeof(u32), vpd);
  if (ret < 0)
   goto out;
- addr = *vpd == 0x82 ? VPD_BASE : VPD_BASE_OLD;
+
+ /* The VPD shall have a unique identifier specified by the PCI SIG.
+  * For chelsio adapters, the identifier is 0x82. The first byte of a VPD
+  * shall be CHELSIO_VPD_UNIQUE_ID (0x82). The VPD programming software
+  * is expected to automatically put this entry at the
+  * beginning of the VPD.
+  */
+ addr = *vpd == CHELSIO_VPD_UNIQUE_ID ? VPD_BASE : VPD_BASE_OLD;
 
  ret = pci_read_vpd(adapter->pdev, addr, VPD_LEN, vpd);
  if (ret < 0)
@@ -668,6 +676,7 @@ int get_vpd_params(struct adapter *adapter, struct vpd_params *p)
  i = pci_vpd_info_field_size(vpd + sn - PCI_VPD_INFO_FLD_HDR_SIZE);
  memcpy(p->sn, vpd + sn, min(i, SERNUM_LEN));
  strim(p->sn);
+ i = pci_vpd_info_field_size(vpd + pn - PCI_VPD_INFO_FLD_HDR_SIZE);
  memcpy(p->pn, vpd + pn, min(i, PN_LEN));
  strim(p->pn);
 
-- 
1.7.1