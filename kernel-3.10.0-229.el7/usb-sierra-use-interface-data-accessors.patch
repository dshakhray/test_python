From 4c3e5f3b40d4a94d9b5271838b6b32a6131084c7 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:08:28 -0400
Subject: [usb] sierra: use interface-data accessors

Message-id: <1410887463-20674-437-git-send-email-dzickus@redhat.com>
Patchwork-id: 95336
O-Subject: [RHEL7 PATCH 436/591] USB: sierra: use interface-data accessors
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 7c80782ebf803b71009f2a3d97f722d12fc20b05
Author: Johan Hovold <jhovold@gmail.com>
Date:   Mon May 26 19:23:05 2014 +0200

    USB: sierra: use interface-data accessors

    Use usb_get_serial_data() rather than accessing the private pointer
    directly.

    Signed-off-by: Johan Hovold <jhovold@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/serial/sierra.c b/drivers/usb/serial/sierra.c
index 3a2f5b8..4b6d0ff 100644
--- a/drivers/usb/serial/sierra.c
+++ b/drivers/usb/serial/sierra.c
@@ -425,7 +425,7 @@ static void sierra_outdat_callback(struct urb *urb)
  struct sierra_intf_private *intfdata;
  int status = urb->status;
 
- intfdata = port->serial->private;
+ intfdata = usb_get_serial_data(port->serial);
 
  /* free up the transfer buffer, as usb_free_urb() does not do this */
  kfree(urb->transfer_buffer);
@@ -462,7 +462,7 @@ static int sierra_write(struct tty_struct *tty, struct usb_serial_port *port,
   return 0;
 
  portdata = usb_get_serial_port_data(port);
- intfdata = serial->private;
+ intfdata = usb_get_serial_data(serial);
 
  dev_dbg(&port->dev, "%s: write (%zd bytes)\n", __func__, writesize);
  spin_lock_irqsave(&portdata->lock, flags);
@@ -764,7 +764,7 @@ static void sierra_close(struct usb_serial_port *port)
  int i;
  struct usb_serial *serial = port->serial;
  struct sierra_port_private *portdata;
- struct sierra_intf_private *intfdata = port->serial->private;
+ struct sierra_intf_private *intfdata = usb_get_serial_data(serial);
  struct urb *urb;
 
  portdata = usb_get_serial_port_data(port);
@@ -802,7 +802,7 @@ static int sierra_open(struct tty_struct *tty, struct usb_serial_port *port)
 {
  struct sierra_port_private *portdata;
  struct usb_serial *serial = port->serial;
- struct sierra_intf_private *intfdata = serial->private;
+ struct sierra_intf_private *intfdata = usb_get_serial_data(serial);
  int i;
  int err;
  int endpoint;
@@ -968,7 +968,7 @@ static int sierra_suspend(struct usb_serial *serial, pm_message_t message)
  int b;
 
  if (PMSG_IS_AUTO(message)) {
-  intfdata = serial->private;
+  intfdata = usb_get_serial_data(serial);
   spin_lock_irq(&intfdata->susp_lock);
   b = intfdata->in_flight;
 
@@ -988,7 +988,7 @@ static int sierra_suspend(struct usb_serial *serial, pm_message_t message)
 static int sierra_resume(struct usb_serial *serial)
 {
  struct usb_serial_port *port;
- struct sierra_intf_private *intfdata = serial->private;
+ struct sierra_intf_private *intfdata = usb_get_serial_data(serial);
  struct sierra_port_private *portdata;
  struct urb *urb;
  int ec = 0;
-- 
1.7.1