From 1bac334972ad3207966b0010ed55ecbc40f2bf95 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Wed, 19 Nov 2014 16:11:07 -0500
Subject: [fs] btrfs: fix regression of btrfs device replace

Message-id: <546CC11B.8000907@redhat.com>
Patchwork-id: 100324
O-Subject: [RHEL7.1 PATCH] [fs] Btrfs: fix regression of btrfs device replace
Bugzilla: 1162983
RH-Acked-by: Zach Brown <zab@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

Bugzilla: 1162983
Upstream Status: Committed upstream
Build Info: Local only
Tested: Locally w/ reproducer below

We have the culprit commit in RHEL7 now, so may as well include
this fix too - it hit 3.17, and we're only up to 3.16 in RHEL7.1.

    commit 87fa3bb0786f37dff0b92f2c38421dd56d8902a9
    Author: Liu Bo <bo.li.liu@oracle.com>
    Date:   Tue Jul 29 19:09:39 2014 +0800

    Btrfs: fix regression of btrfs device replace

    Commit 49c6f736f34f901117c20960ebd7d5e60f12fcac(
    btrfs: dev replace should replace the sysfs entry) added the missing sysfs entry
    in the process of device replace, but didn't take missing devices into account,
    so now we have

    BUG: unable to handle kernel NULL pointer dereference at 0000000000000088
    IP: [<ffffffffa0268551>] btrfs_kobj_rm_device+0x21/0x40 [btrfs]
    ...

    To reproduce it,
    1. mkfs.btrfs -f disk1 disk2
    2. mkfs.ext4 disk1
    3. mount disk2 /mnt -odegraded
    4. btrfs replace start -B 1 disk3 /mnt
    --------------------------

    This fixes the problem.

    Reported-by: Chris Murphy <lists@colorremedies.com>
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: Satoru Takeuchi <takeuchi_satoru@jp.fujitsu.com>
    Tested-by: Satoru Takeuchi <takeuchi_satoru@jp.fujitsu.com>
    Signed-off-by: Chris Mason <clm@fb.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/sysfs.c b/fs/btrfs/sysfs.c
index 7869936..12e5355 100644
--- a/fs/btrfs/sysfs.c
+++ b/fs/btrfs/sysfs.c
@@ -614,7 +614,7 @@ int btrfs_kobj_rm_device(struct btrfs_fs_info *fs_info,
  if (!fs_info->device_dir_kobj)
   return -EINVAL;
 
- if (one_device) {
+ if (one_device && one_device->bdev) {
   disk = one_device->bdev->bd_part;
   disk_kobj = &part_to_dev(disk)->kobj;
 
-- 
1.7.1