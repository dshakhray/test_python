From bd3e231438aa9e1722e00fba92ea01c0f5b5175e Mon Sep 17 00:00:00 2001
From: Hannes Frederic Sowa <hsowa@redhat.com>
Date: Tue, 3 Jun 2014 13:23:48 -0400
Subject: [lib] random32: avoid attempt to late reseed if in the middle of seeding

Message-id: <1401801829-9802-10-git-send-email-hsowa@redhat.com>
Patchwork-id: 82393
O-Subject: [RHEL7.1 PATCH net 09/10] random32: avoid attempt to late reseed if in the middle of seeding
Bugzilla: 1100299
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Florian Westphal <fwestpha@redhat.com>
RH-Acked-by: Daniel Borkmann <dborkman@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1100299
Upstream Status: 05efa8c943b1d5d90fa8c8147571837573338bb6
Brew: http://brewweb.devel.redhat.com/brew/taskinfo?taskID=7530240
Tested: verified with prandom kernel test suite

Upstream Commit:
commit 05efa8c943b1d5d90fa8c8147571837573338bb6
Author: Sasha Levin <sasha.levin@oracle.com>
Date:   Fri Mar 28 17:38:42 2014 +0100

    random32: avoid attempt to late reseed if in the middle of seeding

    Commit 4af712e8df ("random32: add prandom_reseed_late() and call when
    nonblocking pool becomes initialized") has added a late reseed stage
    that happens as soon as the nonblocking pool is marked as initialized.

    This fails in the case that the nonblocking pool gets initialized
    during __prandom_reseed()'s call to get_random_bytes(). In that case
    we'd double back into __prandom_reseed() in an attempt to do a late
    reseed - deadlocking on 'lock' early on in the boot process.

    Instead, just avoid even waiting to do a reseed if a reseed is already
    occuring.

    Fixes: 4af712e8df99 ("random32: add prandom_reseed_late() and call when nonblocking pool becomes initialized")
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>
    Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: Daniel Borkmann <dborkman@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Hannes Frederic Sowa <hsowa@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/lib/random32.c b/lib/random32.c
index 1e5b2df..6148967 100644
--- a/lib/random32.c
+++ b/lib/random32.c
@@ -244,8 +244,19 @@ static void __prandom_reseed(bool late)
  static bool latch = false;
  static DEFINE_SPINLOCK(lock);
 
+ /* Asking for random bytes might result in bytes getting
+  * moved into the nonblocking pool and thus marking it
+  * as initialized. In this case we would double back into
+  * this function and attempt to do a late reseed.
+  * Ignore the pointless attempt to reseed again if we're
+  * already waiting for bytes when the nonblocking pool
+  * got initialized.
+  */
+
  /* only allow initial seeding (late == false) once */
- spin_lock_irqsave(&lock, flags);
+ if (!spin_trylock_irqsave(&lock, flags))
+  return;
+
  if (latch && !late)
   goto out;
  latch = true;
-- 
1.7.1