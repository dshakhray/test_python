From ee49b0cc17137d03294a2b5d396339cf95619880 Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 23 Oct 2014 09:52:37 -0400
Subject: [fs] ext4: suppress ext4 orphan messages on mount

Message-id: <1414058125-4183-4-git-send-email-lczerner@redhat.com>
Patchwork-id: 98103
O-Subject: [RHEL 7.1 PATCH v2 003/171] ext4: suppress ext4 orphan messages on mount
Bugzilla: 1150139
RH-Acked-by: Ian Kent <ikent@redhat.com>
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Paul Taysom <taysom@chromium.org>

BZ 1150139
https://bugzilla.redhat.com/show_bug.cgi?id=1150139

BREW 8142710
https://brewweb.devel.redhat.com/taskinfo?taskID=8142710

Upstream commit 566370a2e56837be98bc62d012fc2d2d11851db4

 Suppress the messages releating to processing the ext4 orphan list
 ("truncating inode" and "deleting unreferenced inode") unless the
 debug option is on, since otherwise they end up taking up space in the
 log that could be used for more useful information.

 Tested by opening several files, unlinking them, then
 crashing the system, rebooting the system and examining
 /var/log/messages.

 Addresses the problem described in http://crbug.com/220976

 Signed-off-by: Paul Taysom <taysom@chromium.org>
 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/super.c b/fs/ext4/super.c
index fa23f0e..02b39e8 100644
--- a/fs/ext4/super.c
+++ b/fs/ext4/super.c
@@ -2187,9 +2187,10 @@ static void ext4_orphan_cleanup(struct super_block *sb,
   list_add(&EXT4_I(inode)->i_orphan, &EXT4_SB(sb)->s_orphan);
   dquot_initialize(inode);
   if (inode->i_nlink) {
-   ext4_msg(sb, KERN_DEBUG,
-    "%s: truncating inode %lu to %lld bytes",
-    __func__, inode->i_ino, inode->i_size);
+   if (test_opt(sb, DEBUG))
+    ext4_msg(sb, KERN_DEBUG,
+     "%s: truncating inode %lu to %lld bytes",
+     __func__, inode->i_ino, inode->i_size);
    jbd_debug(2, "truncating inode %lu to %lld bytes\n",
       inode->i_ino, inode->i_size);
    mutex_lock(&inode->i_mutex);
@@ -2198,9 +2199,10 @@ static void ext4_orphan_cleanup(struct super_block *sb,
    mutex_unlock(&inode->i_mutex);
    nr_truncates++;
   } else {
-   ext4_msg(sb, KERN_DEBUG,
-    "%s: deleting unreferenced inode %lu",
-    __func__, inode->i_ino);
+   if (test_opt(sb, DEBUG))
+    ext4_msg(sb, KERN_DEBUG,
+     "%s: deleting unreferenced inode %lu",
+     __func__, inode->i_ino);
    jbd_debug(2, "deleting unreferenced inode %lu\n",
       inode->i_ino);
    nr_orphans++;
-- 
1.7.1