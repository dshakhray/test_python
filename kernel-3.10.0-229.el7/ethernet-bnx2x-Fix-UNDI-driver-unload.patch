From 0fb7146f5165a75be2c30a0b3d58a7a7b527c47a Mon Sep 17 00:00:00 2001
From: Michal Schmidt <mschmidt@redhat.com>
Date: Fri, 5 Sep 2014 19:49:36 -0400
Subject: [ethernet] bnx2x: Fix UNDI driver unload

Message-id: <1409946615-5862-32-git-send-email-mschmidt@redhat.com>
Patchwork-id: 91574
O-Subject: [RHEL7.1 PATCH 31/70] bnx2x: Fix UNDI driver unload
Bugzilla: 1094099 1089402
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

BZ: https://bugzilla.redhat.com/show_bug.cgi?id=1089402
BZ: https://bugzilla.redhat.com/show_bug.cgi?id=1094099

Upstream commit:
commit de682941eef3e5f6d1b653a6c214bc8a288f17c1
Author: Yuval Mintz <Yuval.Mintz@qlogic.com>
Date:   Thu May 8 12:34:31 2014 +0300

    bnx2x: Fix UNDI driver unload

    Commit 91ebb928b "bnx2x: Add support for Multi-Function UNDI" contains a bug
    which prevent the emptying of the device's Rx buffers before reset.
    As a result, on new boards it is likely HW will reach some fatal assertion
    once its interfaces load after UNDI was previously loaded.

    Signed-off-by: Yuval Mintz <Yuval.Mintz@qlogic.com>
    Signed-off-by: Ariel Elior <Ariel.Elior@qlogic.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c
index 538981c..6fa9cd4 100644
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c
@@ -10051,8 +10051,8 @@ static void bnx2x_prev_unload_close_mac(struct bnx2x *bp,
 #define BCM_5710_UNDI_FW_MF_MAJOR (0x07)
 #define BCM_5710_UNDI_FW_MF_MINOR (0x08)
 #define BCM_5710_UNDI_FW_MF_VERS (0x05)
-#define BNX2X_PREV_UNDI_MF_PORT(p) (0x1a150c + ((p) << 4))
-#define BNX2X_PREV_UNDI_MF_FUNC(f) (0x1a184c + ((f) << 4))
+#define BNX2X_PREV_UNDI_MF_PORT(p) (BAR_TSTRORM_INTMEM + 0x150c + ((p) << 4))
+#define BNX2X_PREV_UNDI_MF_FUNC(f) (BAR_TSTRORM_INTMEM + 0x184c + ((f) << 4))
 static bool bnx2x_prev_unload_undi_fw_supports_mf(struct bnx2x *bp)
 {
  u8 major, minor, version;
@@ -10352,6 +10352,7 @@ static int bnx2x_prev_unload_common(struct bnx2x *bp)
  /* Reset should be performed after BRB is emptied */
  if (reset_reg & MISC_REGISTERS_RESET_REG_1_RST_BRB1) {
   u32 timer_count = 1000;
+  bool need_write = true;
 
   /* Close the MAC Rx to prevent BRB from filling up */
   bnx2x_prev_unload_close_mac(bp, &mac_vals);
@@ -10398,7 +10399,10 @@ static int bnx2x_prev_unload_common(struct bnx2x *bp)
     * cleaning methods - might be redundant but harmless.
     */
    if (bnx2x_prev_unload_undi_fw_supports_mf(bp)) {
-    bnx2x_prev_unload_undi_mf(bp);
+    if (need_write) {
+     bnx2x_prev_unload_undi_mf(bp);
+     need_write = false;
+    }
    } else if (prev_undi) {
     /* If UNDI resides in memory,
      * manually increment it
-- 
1.7.1