From 8fddfa0bb861a0578ca8a33092aa9d8c198cab20 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:26:21 -0400
Subject: [tools] perf: Compare dso's also when comparing symbols

Message-id: <1408462094-14194-213-git-send-email-jolsa@redhat.com>
Patchwork-id: 88241
O-Subject: [PATCH RHEL7.1 BZ1131394 212/325] perf tools: Compare dso's also when comparing symbols
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 09600e0f9ebb06235b852a646a3644b7d4a71aca
Author: Namhyung Kim <namhyung.kim@lge.com>
Date: Tue Oct 15 11:01:56 2013 +0900

description
===========
Linus reported that sometimes 'perf report -s symbol' exits without any
message on TUI.  David and Jiri found that it's because it failed to add
a hist entry due to an invalid symbol length.

It turns out that sorting by symbol (address) was broken since it only
compares symbol addresses.  The symbol address is a relative address
within a dso thus just checking its address can result in merging
unrelated symbols together.  Fix it by checking dso before comparing
symbol address.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/sort.c b/tools/perf/util/sort.c
index 32c5637..1f9821d 100644
--- a/tools/perf/util/sort.c
+++ b/tools/perf/util/sort.c
@@ -182,9 +182,19 @@ static int64_t _sort__sym_cmp(struct symbol *sym_l, struct symbol *sym_r)
 static int64_t
 sort__sym_cmp(struct hist_entry *left, struct hist_entry *right)
 {
+ int64_t ret;
+
  if (!left->ms.sym && !right->ms.sym)
   return right->level - left->level;
 
+ /*
+  * comparing symbol address alone is not enough since it's a
+  * relative address within a dso.
+  */
+ ret = sort__dso_cmp(left, right);
+ if (ret != 0)
+  return ret;
+
  return _sort__sym_cmp(left->ms.sym, right->ms.sym);
 }
 
-- 
1.7.1