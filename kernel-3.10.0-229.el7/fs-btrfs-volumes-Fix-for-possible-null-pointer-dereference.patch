From d422a2ccda61036945e7860937fad7f5be19f9bf Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:04:07 -0400
Subject: [fs] btrfs: volumes - Fix for possible null pointer dereference

Message-id: <1407179109-13714-361-git-send-email-sandeen@redhat.com>
Patchwork-id: 87304
O-Subject: [RHEL7.1 PATCH 360/422] fs: btrfs: volumes.c: Fix for possible null pointer dereference
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Rickard Strandqvist <rickard_strandqvist@spectrumdigital.se>

commit 8321cf2596d283821acc466377c2b85bcd3422b7
Author: Rickard Strandqvist <rickard_strandqvist@spectrumdigital.se>
Date:   Thu May 22 22:43:43 2014 +0200

    fs: btrfs: volumes.c: Fix for possible null pointer dereference

    There is otherwise a risk of a possible null pointer dereference.

    Was largely found by using a static code analysis program called cppcheck.

    Signed-off-by: Rickard Strandqvist <rickard_strandqvist@spectrumdigital.se>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/volumes.c b/fs/btrfs/volumes.c
index a444e51..523e307 100644
--- a/fs/btrfs/volumes.c
+++ b/fs/btrfs/volumes.c
@@ -1690,11 +1690,12 @@ int btrfs_rm_device(struct btrfs_root *root, char *device_path)
   struct btrfs_fs_devices *fs_devices;
   fs_devices = root->fs_info->fs_devices;
   while (fs_devices) {
-   if (fs_devices->seed == cur_devices)
+   if (fs_devices->seed == cur_devices) {
+    fs_devices->seed = cur_devices->seed;
     break;
+   }
    fs_devices = fs_devices->seed;
   }
-  fs_devices->seed = cur_devices->seed;
   cur_devices->seed = NULL;
   lock_chunks(root);
   __btrfs_close_devices(cur_devices);
-- 
1.7.1