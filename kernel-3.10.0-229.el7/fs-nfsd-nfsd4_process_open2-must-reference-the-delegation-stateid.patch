From a0f9851c0ca275fde7b38aa43d522494fff3bc06 Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Tue, 16 Sep 2014 20:19:43 -0400
Subject: [fs] nfsd: nfsd4_process_open2() must reference the delegation stateid

Message-id: <1410898849-22126-100-git-send-email-bfields@redhat.com>
Patchwork-id: 95772
O-Subject: [Patch RHEL7 099/165] nfsd: nfsd4_process_open2() must reference the delegation stateid
Bugzilla: 1044798 1123721 1141932
RH-Acked-by: Benjamin Coddington <bcodding@redhat.com>
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Trond Myklebust <trond.myklebust@primarydata.com>

Ensure that nfsd4_process_open2() keeps a reference to the delegation
stateid until it is done working with it. Necessary step toward
client_mutex removal.

Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: dcd94cc2e75cb1457d4d2dcfa0b360baee4b8764
Bugzilla: 1044798
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4state.c b/fs/nfsd/nfs4state.c
index 2df6af9..5cb6305 100644
--- a/fs/nfsd/nfs4state.c
+++ b/fs/nfsd/nfs4state.c
@@ -3325,6 +3325,8 @@ static struct nfs4_delegation *find_deleg_stateid(struct nfs4_client *cl, statei
  ret = find_stateid_by_type(cl, s, NFS4_DELEG_STID);
  if (!ret)
   return NULL;
+ /* FIXME: move into find_stateid_by_type */
+ atomic_inc(&ret->sc_count);
  return delegstateid(ret);
 }
 
@@ -3340,14 +3342,18 @@ nfs4_check_deleg(struct nfs4_client *cl, struct nfsd4_open *open,
 {
  int flags;
  __be32 status = nfserr_bad_stateid;
+ struct nfs4_delegation *deleg;
 
- *dp = find_deleg_stateid(cl, &open->op_delegate_stateid);
- if (*dp == NULL)
+ deleg = find_deleg_stateid(cl, &open->op_delegate_stateid);
+ if (deleg == NULL)
   goto out;
  flags = share_access_to_flags(open->op_share_access);
- status = nfs4_check_delegmode(*dp, flags);
- if (status)
-  *dp = NULL;
+ status = nfs4_check_delegmode(deleg, flags);
+ if (status) {
+  nfs4_put_stid(&deleg->dl_stid);
+  goto out;
+ }
+ *dp = deleg;
 out:
  if (!nfsd4_is_deleg_cur(open))
   return nfs_ok;
@@ -3828,6 +3834,8 @@ out:
  if (!(open->op_openowner->oo_flags & NFS4_OO_CONFIRMED) &&
      !nfsd4_has_session(&resp->cstate))
   open->op_rflags |= NFS4_OPEN_RESULT_CONFIRM;
+ if (dp)
+  nfs4_put_stid(&dp->dl_stid);
 
  return status;
 }
-- 
1.7.1