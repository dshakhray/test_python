From ddf24221c27d92fdf27232a4a258f390d64c3533 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:01:16 -0400
Subject: [fs] btrfs: avoid warning bomb of btrfs_invalidate_inodes

Message-id: <1407179109-13714-190-git-send-email-sandeen@redhat.com>
Patchwork-id: 87198
O-Subject: [RHEL7.1 PATCH 189/422] Btrfs: avoid warning bomb of btrfs_invalidate_inodes
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Liu Bo <bo.li.liu@oracle.com>

commit 7813b3db0a9ec77ff1f4b3ee3fb4925848395d59
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Mon Feb 10 17:37:25 2014 +0800

    Btrfs: avoid warning bomb of btrfs_invalidate_inodes

    So after transaction is aborted, we need to cleanup inode resources by
    calling btrfs_invalidate_inodes(), and btrfs_invalidate_inodes() hopes
    roots' refs to be zero in old times and sets a WARN_ON(), however, this
    is not always true within cleaning up transaction, so we get to detect
    transaction abortion and not warn at all.

    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/inode.c b/fs/btrfs/inode.c
index 3441329..aaedb5d 100644
--- a/fs/btrfs/inode.c
+++ b/fs/btrfs/inode.c
@@ -4926,7 +4926,8 @@ void btrfs_invalidate_inodes(struct btrfs_root *root)
  struct inode *inode;
  u64 objectid = 0;
 
- WARN_ON(btrfs_root_refs(&root->root_item) != 0);
+ if (!test_bit(BTRFS_FS_STATE_ERROR, &root->fs_info->fs_state))
+  WARN_ON(btrfs_root_refs(&root->root_item) != 0);
 
  spin_lock(&root->inode_lock);
 again:
-- 
1.7.1