From 9b8bee9b4953b12c15c109a26539b33df24d3391 Mon Sep 17 00:00:00 2001
From: Amir Vadai <avadai@redhat.com>
Date: Thu, 11 Sep 2014 12:00:59 -0400
Subject: [ethernet] mlx4: Replace pr_warning() with pr_warn()

Message-id: <47c125ffca969032ca2a2b1631bbad48d85d748f.1410425016.git.avadai@redhat.com>
Patchwork-id: 93701
O-Subject: [Patch RHEL7.1 V1 123/197] net/mlx4_core: Replace pr_warning() with pr_warn()
Bugzilla: 1107617 1107618 1107619 1107620
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

From: Amir Vadai <amirv@mellanox.com>

As checkpatch suggests. Also changed some printk's into pr_*

Signed-off-by: Amir Vadai <amirv@mellanox.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c20862c8027bea5e081cde34efe2911970fe5562)
Signed-off-by: Amir Vadai <avadai@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/mellanox/mlx4/cmd.c b/drivers/net/ethernet/mellanox/mlx4/cmd.c
index 161bbc8..b02252c 100644
--- a/drivers/net/ethernet/mellanox/mlx4/cmd.c
+++ b/drivers/net/ethernet/mellanox/mlx4/cmd.c
@@ -1887,9 +1887,9 @@ void mlx4_master_comm_channel(struct work_struct *work)
    if (toggle != slt) {
     if (master->slave_state[slave].comm_toggle
         != slt) {
-     printk(KERN_INFO "slave %d out of sync. read toggle %d, state toggle %d. Resynching.\n",
-            slave, slt,
-            master->slave_state[slave].comm_toggle);
+     pr_info("slave %d out of sync. read toggle %d, state toggle %d. Resynching.\n",
+      slave, slt,
+      master->slave_state[slave].comm_toggle);
      master->slave_state[slave].comm_toggle =
       slt;
     }
diff --git a/drivers/net/ethernet/mellanox/mlx4/main.c b/drivers/net/ethernet/mellanox/mlx4/main.c
index 8b1c2c1..cf5faaf 100644
--- a/drivers/net/ethernet/mellanox/mlx4/main.c
+++ b/drivers/net/ethernet/mellanox/mlx4/main.c
@@ -2593,7 +2593,7 @@ static void __mlx4_remove_one(struct pci_dev *pdev)
  /* in SRIOV it is not allowed to unload the pf's
   * driver while there are alive vf's */
  if (mlx4_is_master(dev) && mlx4_how_many_lives_vf(dev))
-  printk(KERN_ERR "Removing PF when there are assigned VF's !!!\n");
+  pr_warn("Removing PF when there are assigned VF's !!!\n");
  mlx4_stop_sense(dev);
  mlx4_unregister_device(dev);
 
@@ -2764,25 +2764,26 @@ static struct pci_driver mlx4_driver = {
 static int __init mlx4_verify_params(void)
 {
  if ((log_num_mac < 0) || (log_num_mac > 7)) {
-  pr_warning("mlx4_core: bad num_mac: %d\n", log_num_mac);
+  pr_warn("mlx4_core: bad num_mac: %d\n", log_num_mac);
   return -1;
  }
 
  if (log_num_vlan != 0)
-  pr_warning("mlx4_core: log_num_vlan - obsolete module param, using %d\n",
-      MLX4_LOG_NUM_VLANS);
+  pr_warn("mlx4_core: log_num_vlan - obsolete module param, using %d\n",
+   MLX4_LOG_NUM_VLANS);
 
  if (use_prio != 0)
   pr_warn("mlx4_core: use_prio - obsolete module param, ignored\n");
 
  if ((log_mtts_per_seg < 1) || (log_mtts_per_seg > 7)) {
-  pr_warning("mlx4_core: bad log_mtts_per_seg: %d\n", log_mtts_per_seg);
+  pr_warn("mlx4_core: bad log_mtts_per_seg: %d\n",
+   log_mtts_per_seg);
   return -1;
  }
 
  /* Check if module param for ports type has legal combination */
  if (port_type_array[0] == false && port_type_array[1] == true) {
-  printk(KERN_WARNING "Module parameter configuration ETH/IB is not supported. Switching to default configuration IB/IB\n");
+  pr_warn("Module parameter configuration ETH/IB is not supported. Switching to default configuration IB/IB\n");
   port_type_array[0] = true;
  }
 
diff --git a/drivers/net/ethernet/mellanox/mlx4/mr.c b/drivers/net/ethernet/mellanox/mlx4/mr.c
index e66f07c..3b2252f 100644
--- a/drivers/net/ethernet/mellanox/mlx4/mr.c
+++ b/drivers/net/ethernet/mellanox/mlx4/mr.c
@@ -955,8 +955,7 @@ void mlx4_fmr_unmap(struct mlx4_dev *dev, struct mlx4_fmr *fmr,
  mailbox = mlx4_alloc_cmd_mailbox(dev);
  if (IS_ERR(mailbox)) {
   err = PTR_ERR(mailbox);
-  printk(KERN_WARNING "mlx4_ib: mlx4_alloc_cmd_mailbox failed (%d)\n",
-         err);
+  pr_warn("mlx4_ib: mlx4_alloc_cmd_mailbox failed (%d)\n", err);
   return;
  }
 
@@ -965,8 +964,7 @@ void mlx4_fmr_unmap(struct mlx4_dev *dev, struct mlx4_fmr *fmr,
         (dev->caps.num_mpts - 1));
  mlx4_free_cmd_mailbox(dev, mailbox);
  if (err) {
-  printk(KERN_WARNING "mlx4_ib: mlx4_HW2SW_MPT failed (%d)\n",
-         err);
+  pr_warn("mlx4_ib: mlx4_HW2SW_MPT failed (%d)\n", err);
   return;
  }
  fmr->mr.enabled = MLX4_MPT_EN_SW;
diff --git a/drivers/net/ethernet/mellanox/mlx4/resource_tracker.c b/drivers/net/ethernet/mellanox/mlx4/resource_tracker.c
index ce0e249..dd821b3 100644
--- a/drivers/net/ethernet/mellanox/mlx4/resource_tracker.c
+++ b/drivers/net/ethernet/mellanox/mlx4/resource_tracker.c
@@ -962,7 +962,7 @@ static struct res_common *alloc_tr(u64 id, enum mlx4_resource type, int slave,
   ret = alloc_srq_tr(id);
   break;
  case RES_MAC:
-  printk(KERN_ERR "implementation missing\n");
+  pr_err("implementation missing\n");
   return NULL;
  case RES_COUNTER:
   ret = alloc_counter_tr(id);
@@ -1056,10 +1056,10 @@ static int remove_mtt_ok(struct res_mtt *res, int order)
 {
  if (res->com.state == RES_MTT_BUSY ||
      atomic_read(&res->ref_count)) {
-  printk(KERN_DEBUG "%s-%d: state %s, ref_count %d\n",
-         __func__, __LINE__,
-         mtt_states_str(res->com.state),
-         atomic_read(&res->ref_count));
+  pr_devel("%s-%d: state %s, ref_count %d\n",
+    __func__, __LINE__,
+    mtt_states_str(res->com.state),
+    atomic_read(&res->ref_count));
   return -EBUSY;
  } else if (res->com.state != RES_MTT_ALLOCATED)
   return -EPERM;
-- 
1.7.1