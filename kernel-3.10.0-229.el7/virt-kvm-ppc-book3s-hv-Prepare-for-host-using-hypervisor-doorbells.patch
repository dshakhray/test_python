From e1a691c727c1418feda6987246911117c525bcf5 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:09:34 -0400
Subject: [virt] kvm/ppc: book3s hv - Prepare for host using hypervisor doorbells

Message-id: <1410545655-205645-346-git-send-email-dzickus@redhat.com>
Patchwork-id: 94644
O-Subject: [RHEL7 PATCH 345/626] KVM: PPC: Book3S HV: Prepare for host using hypervisor doorbells
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 5d00f66b865e3782c5852cdafe1cea11a292a81e
Author: Paul Mackerras <paulus@samba.org>
Date:   Wed Jan 8 21:25:28 2014 +1100

    KVM: PPC: Book3S HV: Prepare for host using hypervisor doorbells

    POWER8 has support for hypervisor doorbell interrupts.  Though the
    kernel doesn't use them for IPIs on the powernv platform yet, it
    probably will in future, so this makes KVM cope gracefully if a
    hypervisor doorbell interrupt arrives while in a guest.

    Signed-off-by: Paul Mackerras <paulus@samba.org>
    Signed-off-by: Alexander Graf <agraf@suse.de>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/kvm_asm.h b/arch/powerpc/include/asm/kvm_asm.h
index dba8fb2..c3815b1 100644
--- a/arch/powerpc/include/asm/kvm_asm.h
+++ b/arch/powerpc/include/asm/kvm_asm.h
@@ -96,6 +96,7 @@
 #define BOOK3S_INTERRUPT_H_DATA_STORAGE 0xe00
 #define BOOK3S_INTERRUPT_H_INST_STORAGE 0xe20
 #define BOOK3S_INTERRUPT_H_EMUL_ASSIST 0xe40
+#define BOOK3S_INTERRUPT_H_DOORBELL 0xe80
 #define BOOK3S_INTERRUPT_PERFMON 0xf00
 #define BOOK3S_INTERRUPT_ALTIVEC 0xf20
 #define BOOK3S_INTERRUPT_VSX  0xf40
diff --git a/arch/powerpc/kvm/book3s_hv.c b/arch/powerpc/kvm/book3s_hv.c
index acceaa8..ede6ec1 100644
--- a/arch/powerpc/kvm/book3s_hv.c
+++ b/arch/powerpc/kvm/book3s_hv.c
@@ -651,6 +651,7 @@ static int kvmppc_handle_exit_hv(struct kvm_run *run, struct kvm_vcpu *vcpu,
   r = RESUME_GUEST;
   break;
  case BOOK3S_INTERRUPT_EXTERNAL:
+ case BOOK3S_INTERRUPT_H_DOORBELL:
   vcpu->stat.ext_intr_exits++;
   r = RESUME_GUEST;
   break;
diff --git a/arch/powerpc/kvm/book3s_hv_rmhandlers.S b/arch/powerpc/kvm/book3s_hv_rmhandlers.S
index 87653c3..e3e8224 100644
--- a/arch/powerpc/kvm/book3s_hv_rmhandlers.S
+++ b/arch/powerpc/kvm/book3s_hv_rmhandlers.S
@@ -2001,10 +2001,17 @@ ALT_FTR_SECTION_END_IFSET(CPU_FTR_ARCH_207S)
 BEGIN_FTR_SECTION
  cmpwi r6, 5   /* privileged doorbell? */
  beq 0f
+ cmpwi r6, 3   /* hypervisor doorbell? */
+ beq 3f
 END_FTR_SECTION_IFSET(CPU_FTR_ARCH_207S)
  li r3, 1   /* anything else, return 1 */
 0: blr
 
+ /* hypervisor doorbell */
+3: li r12, BOOK3S_INTERRUPT_H_DOORBELL
+ li r3, 1
+ blr
+
 /*
  * Determine what sort of external interrupt is pending (if any).
  * Returns:
-- 
1.7.1