From 964b047a5172e831b5312094b05e64f1edd758de Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:13:30 -0400
Subject: [powerpc] Remove ancient DEBUG_SIG code

Message-id: <1410545655-205645-582-git-send-email-dzickus@redhat.com>
Patchwork-id: 94407
O-Subject: [RHEL7 PATCH 581/626] powerpc: Remove ancient DEBUG_SIG code
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit bf77ee2a7a544f09683f73dcd7cad7ef81f1005c
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon Jun 23 14:17:47 2014 +1000

    powerpc: Remove ancient DEBUG_SIG code

    We have some compile-time disabled debug code in signal_xx.c. It's from
    some ancient time BG, almost certainly part of the original port, given
    the very similar code on other arches.

    The show_unhandled_signal logic, added in d0c3d534a438 (2.6.24) is
    cleaner and prints more useful information, so drop the debug code.

    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kernel/signal_32.c b/arch/powerpc/kernel/signal_32.c
index 67b9c2e..63a7ac4 100644
--- a/arch/powerpc/kernel/signal_32.c
+++ b/arch/powerpc/kernel/signal_32.c
@@ -54,7 +54,6 @@
 
 #include "signal.h"
 
-#undef DEBUG_SIG
 
 #ifdef CONFIG_PPC64
 #define sys_rt_sigreturn compat_sys_rt_sigreturn
@@ -1071,10 +1070,6 @@ int handle_rt_signal32(unsigned long sig, struct k_sigaction *ka,
  return 1;
 
 badframe:
-#ifdef DEBUG_SIG
- printk("badframe in handle_rt_signal, regs=%p frame=%p newsp=%lx\n",
-        regs, frame, newsp);
-#endif
  if (show_unhandled_signals)
   printk_ratelimited(KERN_INFO
        "%s[%d]: bad frame in handle_rt_signal32: "
@@ -1492,10 +1487,6 @@ int handle_signal32(unsigned long sig, struct k_sigaction *ka,
  return 1;
 
 badframe:
-#ifdef DEBUG_SIG
- printk("badframe in handle_signal, regs=%p frame=%p newsp=%lx\n",
-        regs, frame, newsp);
-#endif
  if (show_unhandled_signals)
   printk_ratelimited(KERN_INFO
        "%s[%d]: bad frame in handle_signal32: "
diff --git a/arch/powerpc/kernel/signal_64.c b/arch/powerpc/kernel/signal_64.c
index d501dc4..97c1e4b 100644
--- a/arch/powerpc/kernel/signal_64.c
+++ b/arch/powerpc/kernel/signal_64.c
@@ -38,7 +38,6 @@
 
 #include "signal.h"
 
-#define DEBUG_SIG 0
 
 #define GP_REGS_SIZE min(sizeof(elf_gregset_t), sizeof(struct pt_regs))
 #define FP_REGS_SIZE sizeof(elf_fpregset_t)
@@ -700,10 +699,6 @@ int sys_rt_sigreturn(unsigned long r3, unsigned long r4, unsigned long r5,
  return 0;
 
 badframe:
-#if DEBUG_SIG
- printk("badframe in sys_rt_sigreturn, regs=%p uc=%p &uc->uc_mcontext=%p\n",
-        regs, uc, &uc->uc_mcontext);
-#endif
  if (show_unhandled_signals)
   printk_ratelimited(regs->msr & MSR_64BIT ? fmt64 : fmt32,
        current->comm, current->pid, "rt_sigreturn",
@@ -809,10 +804,6 @@ int handle_rt_signal64(int signr, struct k_sigaction *ka, siginfo_t *info,
  return 1;
 
 badframe:
-#if DEBUG_SIG
- printk("badframe in setup_rt_frame, regs=%p frame=%p newsp=%lx\n",
-        regs, frame, newsp);
-#endif
  if (show_unhandled_signals)
   printk_ratelimited(regs->msr & MSR_64BIT ? fmt64 : fmt32,
        current->comm, current->pid, "setup_rt_frame",
-- 
1.7.1