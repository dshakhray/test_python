From e86776ada06d0df81a46293f0c80334cb5dc5e1d Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:37:57 -0400
Subject: [virt] kvm/nvmx: Do not set identity page map for L2

Message-id: <1406040016-3289-83-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86161
O-Subject: [RHEL7 PATCH v2 082/221] KVM: nVMX: Do not set identity page map for L2
Bugzilla: 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jan Kiszka <jan.kiszka@siemens.com>

Fiddling with CR3 for L2 is L1's job. It may set its own, different
identity map or simple leave it alone if unrestricted guest mode is
enabled. This also fixes reading back the current CR3 on L2 exits for
reporting it to L1.

Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
Reviewed-by: Gleb Natapov <gleb@redhat.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 59ab5a8f4445699e238c4c46b3da63bb9dc02897)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index 98a9a1a..862a465 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -3380,8 +3380,10 @@ static void vmx_set_cr3(struct kvm_vcpu *vcpu, unsigned long cr3)
  if (enable_ept) {
   eptp = construct_eptp(cr3);
   vmcs_write64(EPT_POINTER, eptp);
-  guest_cr3 = is_paging(vcpu) ? kvm_read_cr3(vcpu) :
-   vcpu->kvm->arch.ept_identity_map_addr;
+  if (is_paging(vcpu) || is_guest_mode(vcpu))
+   guest_cr3 = kvm_read_cr3(vcpu);
+  else
+   guest_cr3 = vcpu->kvm->arch.ept_identity_map_addr;
   ept_load_pdptrs(vcpu);
  }
 
-- 
1.7.1