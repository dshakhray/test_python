From da9e9c3819f58d19bd44c307e8bc97566ec15c8e Mon Sep 17 00:00:00 2001
From: David Gibson <dgibson@redhat.com>
Date: Mon, 15 Sep 2014 07:12:17 -0400
Subject: [virt] kvm: Add per-vm capability enablement

Message-id: <1410765214-16377-2-git-send-email-dgibson@redhat.com>
Patchwork-id: 94702
O-Subject: [PATCH 01/78] KVM: Add per-vm capability enablement.
Bugzilla: 1123145 1123133 1123367
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Prerequisite to backport 699a0ea0823d32030b0666b28ff8633960f7ffa7

Signed-off-by: David Gibson <dgibson@redhat.com>

commit d938dc55225a7212e7f31c5a8571da304cc3de16
Author: Cornelia Huck <cornelia.huck@de.ibm.com>
Date:   Wed Oct 23 18:26:34 2013 +0200

    KVM: Add per-vm capability enablement.

    Allow KVM_ENABLE_CAP to act on a vm as well as on a vcpu. This makes more
    sense when the caller wants to enable a vm-related capability.

    s390 will be the first user; wire it up.

    Reviewed-by: Thomas Huth <thuth@linux.vnet.ibm.com>
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

Conflicts:
 include/uapi/linux/kvm.h
---

diff --git a/Documentation/virtual/kvm/api.txt b/Documentation/virtual/kvm/api.txt
index 75b9b6d..9f5e5a8 100644
--- a/Documentation/virtual/kvm/api.txt
+++ b/Documentation/virtual/kvm/api.txt
@@ -931,9 +931,9 @@ documentation when it pops into existence).
 
 4.37 KVM_ENABLE_CAP
 
-Capability: KVM_CAP_ENABLE_CAP
+Capability: KVM_CAP_ENABLE_CAP, KVM_CAP_ENABLE_CAP_VM
 Architectures: ppc, s390
-Type: vcpu ioctl
+Type: vcpu ioctl, vm ioctl (with KVM_CAP_ENABLE_CAP_VM)
 Parameters: struct kvm_enable_cap (in)
 Returns: 0 on success; -1 on error
 
@@ -964,6 +964,8 @@ function properly, this is the place to put them.
        __u8  pad[64];
 };
 
+The vcpu ioctl should be used for vcpu-specific capabilities, the vm ioctl
+for vm-wide capabilities.
 
 4.38 KVM_GET_MP_STATE
 
diff --git a/arch/s390/kvm/kvm-s390.c b/arch/s390/kvm/kvm-s390.c
index c66de0e..99dd586 100644
--- a/arch/s390/kvm/kvm-s390.c
+++ b/arch/s390/kvm/kvm-s390.c
@@ -157,6 +157,7 @@ int kvm_dev_ioctl_check_extension(long ext)
  case KVM_CAP_ENABLE_CAP:
  case KVM_CAP_S390_CSS_SUPPORT:
  case KVM_CAP_IOEVENTFD:
+ case KVM_CAP_ENABLE_CAP_VM:
   r = 1;
   break;
  case KVM_CAP_NR_VCPUS:
@@ -185,6 +186,21 @@ int kvm_vm_ioctl_get_dirty_log(struct kvm *kvm,
  return 0;
 }
 
+static int kvm_vm_ioctl_enable_cap(struct kvm *kvm, struct kvm_enable_cap *cap)
+{
+ int r;
+
+ if (cap->flags)
+  return -EINVAL;
+
+ switch (cap->cap) {
+ default:
+  r = -EINVAL;
+  break;
+ }
+ return r;
+}
+
 long kvm_arch_vm_ioctl(struct file *filp,
          unsigned int ioctl, unsigned long arg)
 {
@@ -202,6 +218,14 @@ long kvm_arch_vm_ioctl(struct file *filp,
   r = kvm_s390_inject_vm(kvm, &s390int);
   break;
  }
+ case KVM_ENABLE_CAP: {
+  struct kvm_enable_cap cap;
+  r = -EFAULT;
+  if (copy_from_user(&cap, argp, sizeof(cap)))
+   break;
+  r = kvm_vm_ioctl_enable_cap(kvm, &cap);
+  break;
+ }
  default:
   r = -ENOTTY;
  }
diff --git a/include/uapi/linux/kvm.h b/include/uapi/linux/kvm.h
index 89ff79c..720494d 100644
--- a/include/uapi/linux/kvm.h
+++ b/include/uapi/linux/kvm.h
@@ -676,6 +676,7 @@ struct kvm_ppc_smmu_info {
 #define KVM_CAP_EXT_EMUL_CPUID 95
 #define KVM_CAP_HYPERV_TIME 96
 #define KVM_CAP_IOAPIC_POLARITY_IGNORED 97
+#define KVM_CAP_ENABLE_CAP_VM 98
 #define KVM_CAP_IOEVENTFD_NO_LENGTH 100
 
 #ifdef KVM_CAP_IRQ_ROUTING
@@ -1009,6 +1010,10 @@ struct kvm_s390_ucas_mapping {
 /* Available with KVM_CAP_DEBUGREGS */
 #define KVM_GET_DEBUGREGS         _IOR(KVMIO,  0xa1, struct kvm_debugregs)
 #define KVM_SET_DEBUGREGS         _IOW(KVMIO,  0xa2, struct kvm_debugregs)
+/*
+ * vcpu version available with KVM_ENABLE_CAP
+ * vm version available with KVM_CAP_ENABLE_CAP_VM
+ */
 #define KVM_ENABLE_CAP            _IOW(KVMIO,  0xa3, struct kvm_enable_cap)
 /* Available with KVM_CAP_XSAVE */
 #define KVM_GET_XSAVE    _IOR(KVMIO,  0xa4, struct kvm_xsave)
-- 
1.7.1