From f13056943c62be00a01eb629432119facc0c9ecc Mon Sep 17 00:00:00 2001
From: Jiri Benc <jbenc@redhat.com>
Date: Fri, 12 Sep 2014 14:27:47 -0400
Subject: [mm] add kvfree()

Message-id: <0fb20f9a15335c3ad664118a0f3de456c6b34f2b.1410528971.git.jbenc@redhat.com>
Patchwork-id: 93970
O-Subject: [RHEL7.1 net PATCH 04/14] mm: add kvfree()
Bugzilla: 1140661
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: Flavio Leitner <fbl@redhat.com>
RH-Acked-by: Hannes Frederic Sowa <hannes@redhat.com>
RH-Acked-by: Florian Westphal <fwestpha@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1140661
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7948291

RHEL backport: Did not touch apparmor code (which is different than in the
patch anyway) as we don't care about it.

commit 39f1f78d53b9bcbca91967380c5f0f2305a5c55f
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Tue May 6 14:02:53 2014 -0400

    nick kvfree() from apparmor

    too many places open-code it

    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/linux/mm.h b/include/linux/mm.h
index 89110b6..61117b3 100644
--- a/include/linux/mm.h
+++ b/include/linux/mm.h
@@ -344,6 +344,8 @@ static inline int is_vmalloc_or_module_addr(const void *x)
 }
 #endif
 
+extern void kvfree(const void *addr);
+
 static inline void compound_lock(struct page *page)
 {
 #ifdef CONFIG_TRANSPARENT_HUGEPAGE
diff --git a/mm/util.c b/mm/util.c
index a9569b2..4a15b2e 100644
--- a/mm/util.c
+++ b/mm/util.c
@@ -9,6 +9,7 @@
 #include <linux/swapops.h>
 #include <linux/mman.h>
 #include <linux/hugetlb.h>
+#include <linux/vmalloc.h>
 
 #include <asm/uaccess.h>
 
@@ -387,6 +388,15 @@ unsigned long vm_mmap(struct file *file, unsigned long addr,
 }
 EXPORT_SYMBOL(vm_mmap);
 
+void kvfree(const void *addr)
+{
+ if (is_vmalloc_addr(addr))
+  vfree(addr);
+ else
+  kfree(addr);
+}
+EXPORT_SYMBOL(kvfree);
+
 struct address_space *page_mapping(struct page *page)
 {
  struct address_space *mapping = page->mapping;
-- 
1.7.1