From 61de84ea3dd9de5a20135f4dfdac6cd7d5e8206c Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:07:41 -0400
Subject: [powerpc] pseries: Fix endian issues in /proc/ppc64/lparcfg

Message-id: <1410545655-205645-233-git-send-email-dzickus@redhat.com>
Patchwork-id: 94304
O-Subject: [RHEL7 PATCH 232/626] powerpc/pseries: Fix endian issues in /proc/ppc64/lparcfg
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit ca5de4e652ea09c0c18ebbd12dd4c2149271245a
Author: Anton Blanchard <anton@samba.org>
Date:   Thu Dec 12 15:59:37 2013 +1100

    powerpc/pseries: Fix endian issues in /proc/ppc64/lparcfg

    Some obvious issues:

    cat /proc/ppc64/lparcfg
    ...
    partition_id=16777216
    ...
    partition_potential_processors=268435456

    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/platforms/pseries/lparcfg.c b/arch/powerpc/platforms/pseries/lparcfg.c
index e738007..c9fecf0 100644
--- a/arch/powerpc/platforms/pseries/lparcfg.c
+++ b/arch/powerpc/platforms/pseries/lparcfg.c
@@ -157,7 +157,7 @@ static void parse_ppp_data(struct seq_file *m)
 {
  struct hvcall_ppp_data ppp_data;
  struct device_node *root;
- const int *perf_level;
+ const __be32 *perf_level;
  int rc;
 
  rc = h_get_ppp(&ppp_data);
@@ -201,7 +201,7 @@ static void parse_ppp_data(struct seq_file *m)
   perf_level = of_get_property(root,
     "ibm,partition-performance-parameters-level",
           NULL);
-  if (perf_level && (*perf_level >= 1)) {
+  if (perf_level && (be32_to_cpup(perf_level) >= 1)) {
    seq_printf(m,
        "physical_procs_allocated_to_virtualization=%d\n",
        ppp_data.phys_platform_procs);
@@ -435,7 +435,7 @@ static int pseries_lparcfg_data(struct seq_file *m, void *v)
  int partition_potential_processors;
  int partition_active_processors;
  struct device_node *rtas_node;
- const int *lrdrp = NULL;
+ const __be32 *lrdrp = NULL;
 
  rtas_node = of_find_node_by_path("/rtas");
  if (rtas_node)
@@ -444,7 +444,7 @@ static int pseries_lparcfg_data(struct seq_file *m, void *v)
  if (lrdrp == NULL) {
   partition_potential_processors = vdso_data->processorCount;
  } else {
-  partition_potential_processors = *(lrdrp + 4);
+  partition_potential_processors = be32_to_cpup(lrdrp + 4);
  }
  of_node_put(rtas_node);
 
@@ -654,7 +654,7 @@ static int lparcfg_data(struct seq_file *m, void *v)
  const char *model = "";
  const char *system_id = "";
  const char *tmp;
- const unsigned int *lp_index_ptr;
+ const __be32 *lp_index_ptr;
  unsigned int lp_index = 0;
 
  seq_printf(m, "%s %s\n", MODULE_NAME, MODULE_VERS);
@@ -670,7 +670,7 @@ static int lparcfg_data(struct seq_file *m, void *v)
   lp_index_ptr = of_get_property(rootdn, "ibm,partition-no",
      NULL);
   if (lp_index_ptr)
-   lp_index = *lp_index_ptr;
+   lp_index = be32_to_cpup(lp_index_ptr);
   of_node_put(rootdn);
  }
  seq_printf(m, "serial_number=%s\n", system_id);
-- 
1.7.1