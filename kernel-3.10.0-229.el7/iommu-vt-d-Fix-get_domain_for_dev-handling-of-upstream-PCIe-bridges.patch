From 0f27bf1e1640ecaf5441887e476a70561be24218 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 01:51:58 -0400
Subject: [iommu] vt-d: Fix get_domain_for_dev() handling of upstream PCIe bridges

Message-id: <20140905015158.31297.41394.stgit@gir.stowe>
Patchwork-id: 91355
O-Subject: [RHEL7.1 PATCH 62/65] iommu/vt-d: Fix get_domain_for_dev() handling of upstream PCIe bridges
Bugzilla: 1129880 1087643
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1087643
Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1129880
Upstream Status: 9f05d3fb644bf178c169d9c70dcfe360e3a006ae

commit 9f05d3fb644bf178c169d9c70dcfe360e3a006ae
Author: David Woodhouse <David.Woodhouse@intel.com>
Date:   Mon Apr 14 22:01:30 2014 -0700

    iommu/vt-d: Fix get_domain_for_dev() handling of upstream PCIe bridges

    Commit 146922ec79 ("iommu/vt-d: Make get_domain_for_dev() take struct
    device") introduced new variables bridge_bus and bridge_devfn to
    identify the upstream PCIe to PCI bridge responsible for the given
    target device. Leaving the original bus/devfn variables to identify
    the target device itself, now that it is no longer assumed to be PCI
    and we can no longer trivially find that information.

    However, the patch failed to correctly use the new variables in all
    cases; instead using the as-yet-uninitialised 'bus' and 'devfn'
    variables.

    Reported-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c
index 13dc231..f256ffc 100644
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@ -2237,7 +2237,9 @@ static struct dmar_domain *get_domain_for_dev(struct device *dev, int gaw)
     bridge_devfn = dev_tmp->devfn;
    }
    spin_lock_irqsave(&device_domain_lock, flags);
-   info = dmar_search_domain_by_dev_info(segment, bus, devfn);
+   info = dmar_search_domain_by_dev_info(segment,
+             bridge_bus,
+             bridge_devfn);
    if (info) {
     iommu = info->iommu;
     domain = info->domain;
-- 
1.7.1