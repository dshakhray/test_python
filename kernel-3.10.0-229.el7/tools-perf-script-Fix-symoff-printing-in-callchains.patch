From 75685f9cb9479bd9bcc7aa07b03a2421229d51cb Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:49:55 -0400
Subject: [tools] perf/script: Fix symoff printing in callchains

Message-id: <1408953210-26343-108-git-send-email-jolsa@redhat.com>
Patchwork-id: 88807
O-Subject: [PATCH RHEL7.1 BZ1133083 107/322] perf script: Fix symoff printing in callchains
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit a4eb24a49566db77ee999b46603f602a0302f481
Author: Adrian Hunter <adrian.hunter@intel.com>
Date: Fri Dec 6 09:42:56 2013 +0200

description
===========
The address being used to calculate the offset was the memory address
but the address needed is the address mapped to the dso. i.e. the 'addr'
member of 'struct addr_location'
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/session.c b/tools/perf/util/session.c
index 1770f2f..02b0085 100644
--- a/tools/perf/util/session.c
+++ b/tools/perf/util/session.c
@@ -1520,6 +1520,8 @@ void perf_evsel__print_ip(struct perf_evsel *evsel, struct perf_sample *sample,
    node_al = *al;
 
   while (stack_depth) {
+   u64 addr = 0;
+
    node = callchain_cursor_current(&callchain_cursor);
    if (!node)
     break;
@@ -1530,10 +1532,13 @@ void perf_evsel__print_ip(struct perf_evsel *evsel, struct perf_sample *sample,
    if (print_ip)
     printf("%c%16" PRIx64, s, node->ip);
 
+   if (node->map)
+    addr = node->map->map_ip(node->map, node->ip);
+
    if (print_sym) {
     printf(" ");
     if (print_symoffset) {
-     node_al.addr = node->ip;
+     node_al.addr = addr;
      node_al.map  = node->map;
      symbol__fprintf_symname_offs(node->sym, &node_al, stdout);
     } else
-- 
1.7.1