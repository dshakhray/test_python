From 2d8d4ae0a4f269103be5577cdf64c2bc8012984f Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:13:43 -0400
Subject: [powerpc] kvm: Remove redundant save of SIER AND MMCR2

Message-id: <1410545655-205645-595-git-send-email-dzickus@redhat.com>
Patchwork-id: 94474
O-Subject: [RHEL7 PATCH 594/626] powerpc/kvm: Remove redundant save of SIER AND MMCR2
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit f73128f4f680e8be68cda831f2710214559583cb
Author: Joel Stanley <joel@jms.id.au>
Date:   Tue Jul 8 16:08:20 2014 +0930

    powerpc/kvm: Remove redundant save of SIER AND MMCR2

    These two registers are already saved in the block above. Aside from
    being unnecessary, by the time we get down to the second save location
    r8 no longer contains MMCR2, so we are clobbering the saved value with
    PMC5.

    MMCR2 primarily consists of counter freeze bits. So restoring the value
    of PMC5 into MMCR2 will most likely have the effect of freezing
    counters.

    Fixes: 72cde5a88d37 ("KVM: PPC: Book3S HV: Save/restore host PMU registers that are new in POWER8")
    Cc: stable@vger.kernel.org
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Acked-by: Michael Ellerman <mpe@ellerman.id.au>
    Acked-by: Paul Mackerras <paulus@samba.org>
    Reviewed-by: Alexander Graf <agraf@suse.de>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kvm/book3s_hv_interrupts.S b/arch/powerpc/kvm/book3s_hv_interrupts.S
index 8c86422..731be74 100644
--- a/arch/powerpc/kvm/book3s_hv_interrupts.S
+++ b/arch/powerpc/kvm/book3s_hv_interrupts.S
@@ -127,11 +127,6 @@ BEGIN_FTR_SECTION
  stw r10, HSTATE_PMC + 24(r13)
  stw r11, HSTATE_PMC + 28(r13)
 END_FTR_SECTION_IFSET(CPU_FTR_ARCH_201)
-BEGIN_FTR_SECTION
- mfspr r9, SPRN_SIER
- std r8, HSTATE_MMCR + 40(r13)
- std r9, HSTATE_MMCR + 48(r13)
-END_FTR_SECTION_IFSET(CPU_FTR_ARCH_207S)
 31:
 
  /*
-- 
1.7.1