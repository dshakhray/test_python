From 3f5e5746ab5f647d8fcb3b0d5372383e0aa19b7d Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:10:40 -0400
Subject: [virt] kvm/ppc: book3s - Introduce hypervisor call H_GET_TCE

Message-id: <1410545655-205645-412-git-send-email-dzickus@redhat.com>
Patchwork-id: 94531
O-Subject: [RHEL7 PATCH 411/626] KVM: PPC: Book3S: Introduce hypervisor call H_GET_TCE
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 69e9fbb278af8de3059f1d1017b52a32b5f9f0bd
Author: Laurent Dufour <ldufour@linux.vnet.ibm.com>
Date:   Fri Feb 21 16:31:10 2014 +0100

    KVM: PPC: Book3S: Introduce hypervisor call H_GET_TCE

    This introduces the H_GET_TCE hypervisor call, which is basically the
    reverse of H_PUT_TCE, as defined in the Power Architecture Platform
    Requirements (PAPR).

    The hcall H_GET_TCE is required by the kdump kernel, which uses it to
    retrieve TCEs set up by the previous (panicked) kernel.

    Signed-off-by: Laurent Dufour <ldufour@linux.vnet.ibm.com>
    Signed-off-by: Alexander Graf <agraf@suse.de>
    Signed-off-by: Paul Mackerras <paulus@samba.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/kvm_ppc.h b/arch/powerpc/include/asm/kvm_ppc.h
index 629277d..0d01d9b 100644
--- a/arch/powerpc/include/asm/kvm_ppc.h
+++ b/arch/powerpc/include/asm/kvm_ppc.h
@@ -129,6 +129,8 @@ extern long kvm_vm_ioctl_create_spapr_tce(struct kvm *kvm,
     struct kvm_create_spapr_tce *args);
 extern long kvmppc_h_put_tce(struct kvm_vcpu *vcpu, unsigned long liobn,
         unsigned long ioba, unsigned long tce);
+extern long kvmppc_h_get_tce(struct kvm_vcpu *vcpu, unsigned long liobn,
+        unsigned long ioba);
 extern struct kvm_rma_info *kvm_alloc_rma(void);
 extern void kvm_release_rma(struct kvm_rma_info *ri);
 extern struct page *kvm_alloc_hpt(unsigned long nr_pages);
diff --git a/arch/powerpc/kvm/book3s_64_vio_hv.c b/arch/powerpc/kvm/book3s_64_vio_hv.c
index 2c25f54..89e96b3 100644
--- a/arch/powerpc/kvm/book3s_64_vio_hv.c
+++ b/arch/powerpc/kvm/book3s_64_vio_hv.c
@@ -75,3 +75,31 @@ long kvmppc_h_put_tce(struct kvm_vcpu *vcpu, unsigned long liobn,
  return H_TOO_HARD;
 }
 EXPORT_SYMBOL_GPL(kvmppc_h_put_tce);
+
+long kvmppc_h_get_tce(struct kvm_vcpu *vcpu, unsigned long liobn,
+        unsigned long ioba)
+{
+ struct kvm *kvm = vcpu->kvm;
+ struct kvmppc_spapr_tce_table *stt;
+
+ list_for_each_entry(stt, &kvm->arch.spapr_tce_tables, list) {
+  if (stt->liobn == liobn) {
+   unsigned long idx = ioba >> SPAPR_TCE_SHIFT;
+   struct page *page;
+   u64 *tbl;
+
+   if (ioba >= stt->window_size)
+    return H_PARAMETER;
+
+   page = stt->pages[idx / TCES_PER_PAGE];
+   tbl = (u64 *)page_address(page);
+
+   vcpu->arch.gpr[4] = tbl[idx % TCES_PER_PAGE];
+   return H_SUCCESS;
+  }
+ }
+
+ /* Didn't find the liobn, punt it to userspace */
+ return H_TOO_HARD;
+}
+EXPORT_SYMBOL_GPL(kvmppc_h_get_tce);
diff --git a/arch/powerpc/kvm/book3s_hv_rmhandlers.S b/arch/powerpc/kvm/book3s_hv_rmhandlers.S
index 8dc3433..0ff98ec 100644
--- a/arch/powerpc/kvm/book3s_hv_rmhandlers.S
+++ b/arch/powerpc/kvm/book3s_hv_rmhandlers.S
@@ -1917,7 +1917,7 @@ hcall_real_table:
  .long 0  /* 0x10 - H_CLEAR_MOD */
  .long 0  /* 0x14 - H_CLEAR_REF */
  .long .kvmppc_h_protect - hcall_real_table
- .long 0  /* 0x1c - H_GET_TCE */
+ .long .kvmppc_h_get_tce - hcall_real_table
  .long .kvmppc_h_put_tce - hcall_real_table
  .long 0  /* 0x24 - H_SET_SPRG0 */
  .long .kvmppc_h_set_dabr - hcall_real_table
-- 
1.7.1