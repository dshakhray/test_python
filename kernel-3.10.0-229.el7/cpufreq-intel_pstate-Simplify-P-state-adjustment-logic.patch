From a559924d2a952c3a84b133c20f38b27ccc7d6ad2 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:24:32 -0400
Subject: [cpufreq] intel_pstate: Simplify P state adjustment logic

Message-id: <1409235879-1283-179-git-send-email-prarit@redhat.com>
Patchwork-id: 89437
O-Subject: [RHEL7.1 PATCH BZ 1134639 178/185] cpufreq: intel_pstate: Simplify P state adjustment logic.
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit 4b707c893d0937be9c7be437950a312fbaf47601
Author: Stratos Karafotis <stratosk@semaphore.gr>
Date:   Fri Jul 18 08:37:26 2014 -0700

    cpufreq: intel_pstate: Simplify P state adjustment logic.

    Simplify the code by removing the inline functions pstate_increase and
    pstate_decrease and use directly the intel_pstate_set_pstate.

    Signed-off-by: Stratos Karafotis <stratosk@semaphore.gr>
    Acked-by: Dirk Brandewie <dirk.j.brandewie@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
Cc: Tony Camuso <tcamuso@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/intel_pstate.c b/drivers/cpufreq/intel_pstate.c
index 129ffb2..2ff85f6 100644
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@ -530,21 +530,6 @@ static void intel_pstate_set_pstate(struct cpudata *cpu, int pstate)
  pstate_funcs.set(cpu, pstate);
 }
 
-static inline void intel_pstate_pstate_increase(struct cpudata *cpu, int steps)
-{
- int target;
- target = cpu->pstate.current_pstate + steps;
-
- intel_pstate_set_pstate(cpu, target);
-}
-
-static inline void intel_pstate_pstate_decrease(struct cpudata *cpu, int steps)
-{
- int target;
- target = cpu->pstate.current_pstate - steps;
- intel_pstate_set_pstate(cpu, target);
-}
-
 static void intel_pstate_get_cpu_pstates(struct cpudata *cpu)
 {
  cpu->pstate.min_pstate = pstate_funcs.get_min();
@@ -632,20 +617,15 @@ static inline void intel_pstate_adjust_busy_pstate(struct cpudata *cpu)
 {
  int32_t busy_scaled;
  struct _pid *pid;
- signed int ctl = 0;
- int steps;
+ signed int ctl;
 
  pid = &cpu->pid;
  busy_scaled = intel_pstate_get_scaled_busy(cpu);
 
  ctl = pid_calc(pid, busy_scaled);
 
- steps = abs(ctl);
-
- if (ctl < 0)
-  intel_pstate_pstate_increase(cpu, steps);
- else
-  intel_pstate_pstate_decrease(cpu, steps);
+ /* Negative values of ctl increase the pstate and vice versa */
+ intel_pstate_set_pstate(cpu, cpu->pstate.current_pstate - ctl);
 }
 
 static void intel_pstate_timer_func(unsigned long __data)
-- 
1.7.1