From 0390925ae9a1e3799819807669ea38d5206a6ffd Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Tue, 16 Sep 2014 20:18:20 -0400
Subject: [fs] nfsd4: rename cr_linkname->cr_data

Message-id: <1410898849-22126-17-git-send-email-bfields@redhat.com>
Patchwork-id: 95802
O-Subject: [Patch RHEL7 016/165] nfsd4: rename cr_linkname->cr_data
Bugzilla: 1044798 1123721 1141932
RH-Acked-by: Benjamin Coddington <bcodding@redhat.com>
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

The name of a link is currently stored in cr_name and cr_namelen, and
the content in cr_linkname and cr_linklen.  That's confusing.

Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: 7fb84306f55d6cc32ea894d47cbb2faa18c8f45b
Bugzilla: 1044798
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4proc.c b/fs/nfsd/nfs4proc.c
index 742d7d8..552cc03 100644
--- a/fs/nfsd/nfs4proc.c
+++ b/fs/nfsd/nfs4proc.c
@@ -622,7 +622,7 @@ nfsd4_create(struct svc_rqst *rqstp, struct nfsd4_compound_state *cstate,
  case NF4LNK:
   status = nfsd_symlink(rqstp, &cstate->current_fh,
           create->cr_name, create->cr_namelen,
-          create->cr_linkname,
+          create->cr_data,
           &resfh, &create->cr_iattr);
   break;
 
diff --git a/fs/nfsd/nfs4xdr.c b/fs/nfsd/nfs4xdr.c
index 2840868..784f927 100644
--- a/fs/nfsd/nfs4xdr.c
+++ b/fs/nfsd/nfs4xdr.c
@@ -598,20 +598,19 @@ nfsd4_decode_create(struct nfsd4_compoundargs *argp, struct nfsd4_create *create
  switch (create->cr_type) {
  case NF4LNK:
   READ_BUF(4);
-  create->cr_linklen = be32_to_cpup(p++);
-  READ_BUF(create->cr_linklen);
+  create->cr_datalen = be32_to_cpup(p++);
+  READ_BUF(create->cr_datalen);
   /*
    * The VFS will want a null-terminated string, and
    * null-terminating in place isn't safe since this might
    * end on a page boundary:
    */
-  create->cr_linkname =
-    kmalloc(create->cr_linklen + 1, GFP_KERNEL);
-  if (!create->cr_linkname)
+  create->cr_data = kmalloc(create->cr_datalen + 1, GFP_KERNEL);
+  if (!create->cr_data)
    return nfserr_jukebox;
-  memcpy(create->cr_linkname, p, create->cr_linklen);
-  create->cr_linkname[create->cr_linklen] = '\0';
-  defer_free(argp, kfree, create->cr_linkname);
+  memcpy(create->cr_data, p, create->cr_datalen);
+  create->cr_data[create->cr_datalen] = '\0';
+  defer_free(argp, kfree, create->cr_data);
   break;
  case NF4BLK:
  case NF4CHR:
diff --git a/fs/nfsd/xdr4.h b/fs/nfsd/xdr4.h
index 18cbb6d..b8bf63a 100644
--- a/fs/nfsd/xdr4.h
+++ b/fs/nfsd/xdr4.h
@@ -107,8 +107,8 @@ struct nfsd4_create {
  u32  cr_type;            /* request */
  union {                             /* request */
   struct {
-   u32 namelen;
-   char *name;
+   u32 datalen;
+   char *data;
   } link;   /* NF4LNK */
   struct {
    u32 specdata1;
@@ -121,8 +121,8 @@ struct nfsd4_create {
  struct nfs4_acl *cr_acl;
  struct xdr_netobj cr_label;
 };
-#define cr_linklen u.link.namelen
-#define cr_linkname u.link.name
+#define cr_datalen u.link.datalen
+#define cr_data  u.link.data
 #define cr_specdata1 u.dev.specdata1
 #define cr_specdata2 u.dev.specdata2
 
-- 
1.7.1