From e8af9df8650daf2ef9dde2b3360882e7059f9c9d Mon Sep 17 00:00:00 2001
From: Seth Jennings <sjenning@redhat.com>
Date: Fri, 29 Aug 2014 20:05:28 -0400
Subject: [mm] swapfile: do not skip lowest_bit in scan_swap_map() scan loop

Message-id: <1409342728-21547-1-git-send-email-sjenning@redhat.com>
Patchwork-id: 89912
O-Subject: [RHEL7.1 PATCH] mm/swapfile.c: do not skip lowest_bit in scan_swap_map() scan loop
Bugzilla: 1128277
RH-Acked-by: Jarod Wilson <jarod@redhat.com>
RH-Acked-by: Rafael Aquini <aquini@redhat.com>

From: Jamie Liu <jamieliu@google.com>

Upstream: a5998061daab27802c418debe662be98a6e42874
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7897266
BZ: https://bugzilla.redhat.com/show_bug.cgi?id=1128277

Clone of 6.5 BZ:
RHEL6.5 commit: fa5f3bd90d4cecfeb44fda12a35bf1c757412631
RHEL6.5 BZ: https://bugzilla.redhat.com/show_bug.cgi?id=1060886

Testing:
Ran stress up to the memory (RAM+swap limit) and no OOM kill.  Pushed
over the limit and OOM kill happen as expected.

Upstream commit:

In the second half of scan_swap_map()'s scan loop, offset is set to
si->lowest_bit and then incremented before entering the loop for the
first time, causing si->swap_map[si->lowest_bit] to be skipped.

Signed-off-by: Jamie Liu <jamieliu@google.com>
Cc: Shaohua Li <shli@fusionio.com>
Acked-by: Hugh Dickins <hughd@google.com>
Cc: Minchan Kim <minchan@kernel.org>
Cc: Akinobu Mita <akinobu.mita@gmail.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/mm/swapfile.c b/mm/swapfile.c
index 704997c..65c6885 100644
--- a/mm/swapfile.c
+++ b/mm/swapfile.c
@@ -413,7 +413,7 @@ scan:
   }
  }
  offset = si->lowest_bit;
- while (++offset < scan_base) {
+ while (offset < scan_base) {
   if (!si->swap_map[offset]) {
    spin_lock(&si->lock);
    goto checks;
@@ -426,6 +426,7 @@ scan:
    cond_resched();
    latency_ration = LATENCY_LIMIT;
   }
+  offset++;
  }
  spin_lock(&si->lock);
 
-- 
1.7.1