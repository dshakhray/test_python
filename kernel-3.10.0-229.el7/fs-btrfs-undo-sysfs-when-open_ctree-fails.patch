From 4b7c4a4594d636b40d75232fdda073f3fafa3aa6 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:00:19 -0400
Subject: [fs] btrfs: undo sysfs when open_ctree() fails

Message-id: <1407179109-13714-133-git-send-email-sandeen@redhat.com>
Patchwork-id: 87077
O-Subject: [RHEL7.1 PATCH 132/422] btrfs: undo sysfs when open_ctree() fails
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Anand Jain <Anand.Jain@oracle.com>

commit 2365dd3ca02bbb6d3412404482e1d85752549953
Author: Anand Jain <Anand.Jain@oracle.com>
Date:   Wed Jan 22 11:15:51 2014 +0800

    btrfs: undo sysfs when open_ctree() fails

    reproducer:
    mkfs.btrfs -f /dev/sdb &&\
    mount /dev/sdb /btrfs &&\
    btrfs dev add -f /dev/sdc /btrfs &&\
    umount /btrfs &&\
    wipefs -a /dev/sdc &&\
    mount -o degraded /dev/sdb /btrfs
    //above mount fails so try with RO
    mount -o degraded,ro /dev/sdb /btrfs

    ------
    sysfs: cannot create duplicate filename '/fs/btrfs/3f48c79e-5ed0-4e87-b189-86e749e503f4'
    ::

    dump_stack+0x49/0x5e
    warn_slowpath_common+0x87/0xb0
    warn_slowpath_fmt+0x41/0x50
    strlcat+0x69/0x80
    sysfs_warn_dup+0x87/0xa0
    sysfs_add_one+0x40/0x50
    create_dir+0x76/0xc0
    sysfs_create_dir_ns+0x7a/0xc0
    kobject_add_internal+0xad/0x220
    kobject_add_varg+0x38/0x60
    kobject_init_and_add+0x53/0x70
    mutex_lock+0x11/0x40
    __free_pages+0x25/0x30
    free_pages+0x41/0x50
    selinux_sb_copy_data+0x14e/0x1e0
    mount_fs+0x3e/0x1a0
    vfs_kern_mount+0x71/0x120
    do_mount+0x3f7/0x980
    SyS_mount+0x8b/0xe0
    system_call_fastpath+0x16/0x1b
    ------

    further 'modprobe -r btrfs' fails as well

    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/disk-io.c b/fs/btrfs/disk-io.c
index 49d7cab..b155df7 100644
--- a/fs/btrfs/disk-io.c
+++ b/fs/btrfs/disk-io.c
@@ -2744,13 +2744,13 @@ retry_root_backup:
  ret = btrfs_init_space_info(fs_info);
  if (ret) {
   printk(KERN_ERR "BTRFS: Failed to initial space info: %d\n", ret);
-  goto fail_block_groups;
+  goto fail_sysfs;
  }
 
  ret = btrfs_read_block_groups(extent_root);
  if (ret) {
   printk(KERN_ERR "BTRFS: Failed to read block groups: %d\n", ret);
-  goto fail_block_groups;
+  goto fail_sysfs;
  }
  fs_info->num_tolerated_disk_barrier_failures =
   btrfs_calc_num_tolerated_disk_barrier_failures(fs_info);
@@ -2759,13 +2759,13 @@ retry_root_backup:
      !(sb->s_flags & MS_RDONLY)) {
   printk(KERN_WARNING "BTRFS: "
    "too many missing devices, writeable mount is not allowed\n");
-  goto fail_block_groups;
+  goto fail_sysfs;
  }
 
  fs_info->cleaner_kthread = kthread_run(cleaner_kthread, tree_root,
             "btrfs-cleaner");
  if (IS_ERR(fs_info->cleaner_kthread))
-  goto fail_block_groups;
+  goto fail_sysfs;
 
  fs_info->transaction_kthread = kthread_run(transaction_kthread,
          tree_root,
@@ -2947,6 +2947,9 @@ fail_cleaner:
   */
  filemap_write_and_wait(fs_info->btree_inode->i_mapping);
 
+fail_sysfs:
+ btrfs_sysfs_remove_one(fs_info);
+
 fail_block_groups:
  btrfs_put_block_group_cache(fs_info);
  btrfs_free_block_groups(fs_info);
-- 
1.7.1