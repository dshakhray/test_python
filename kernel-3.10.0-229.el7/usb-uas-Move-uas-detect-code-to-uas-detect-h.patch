From 4b3725cc5b54e3b0d28be06043a14d5570be47c4 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:06:22 -0400
Subject: [usb] uas: Move uas detect code to uas-detect.h

Message-id: <1410887463-20674-311-git-send-email-dzickus@redhat.com>
Patchwork-id: 95356
O-Subject: [RHEL7 PATCH 310/591] uas: Move uas detect code to uas-detect.h
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 82aa0387d52dd0db2173b844ad52d114807c189b
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Oct 21 08:53:31 2013 +0100

    uas: Move uas detect code to uas-detect.h

    This is a preparation patch for teaching usb-storage to not bind to
    uas devices.

    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---
 create mode 100644 drivers/usb/storage/uas-detect.h

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/storage/uas-detect.h b/drivers/usb/storage/uas-detect.h
new file mode 100644
index 0000000..28101c7
--- /dev/null
+++ b/drivers/usb/storage/uas-detect.h
@@ -0,0 +1,40 @@
+#include <linux/usb.h>
+#include <linux/usb/hcd.h>
+
+static int uas_is_interface(struct usb_host_interface *intf)
+{
+ return (intf->desc.bInterfaceClass == USB_CLASS_MASS_STORAGE &&
+  intf->desc.bInterfaceSubClass == USB_SC_SCSI &&
+  intf->desc.bInterfaceProtocol == USB_PR_UAS);
+}
+
+static int uas_isnt_supported(struct usb_device *udev)
+{
+ struct usb_hcd *hcd = bus_to_hcd(udev->bus);
+
+ dev_warn(&udev->dev, "The driver for the USB controller %s does not "
+   "support scatter-gather which is\n",
+   hcd->driver->description);
+ dev_warn(&udev->dev, "required by the UAS driver. Please try an"
+   "alternative USB controller if you wish to use UAS.\n");
+ return -ENODEV;
+}
+
+static int uas_find_uas_alt_setting(struct usb_interface *intf)
+{
+ int i;
+ struct usb_device *udev = interface_to_usbdev(intf);
+ int sg_supported = udev->bus->sg_tablesize != 0;
+
+ for (i = 0; i < intf->num_altsetting; i++) {
+  struct usb_host_interface *alt = &intf->altsetting[i];
+
+  if (uas_is_interface(alt)) {
+   if (!sg_supported)
+    return uas_isnt_supported(udev);
+   return alt->desc.bAlternateSetting;
+  }
+ }
+
+ return -ENODEV;
+}
diff --git a/drivers/usb/storage/uas.c b/drivers/usb/storage/uas.c
index 54db365..6ea892f 100644
--- a/drivers/usb/storage/uas.c
+++ b/drivers/usb/storage/uas.c
@@ -25,6 +25,8 @@
 #include <scsi/scsi_host.h>
 #include <scsi/scsi_tcq.h>
 
+#include "uas-detect.h"
+
 /*
  * The r00-r01c specs define this version of the SENSE IU data structure.
  * It's still in use by several different firmware releases.
@@ -873,44 +875,6 @@ static struct usb_device_id uas_usb_ids[] = {
 };
 MODULE_DEVICE_TABLE(usb, uas_usb_ids);
 
-static int uas_is_interface(struct usb_host_interface *intf)
-{
- return (intf->desc.bInterfaceClass == USB_CLASS_MASS_STORAGE &&
-  intf->desc.bInterfaceSubClass == USB_SC_SCSI &&
-  intf->desc.bInterfaceProtocol == USB_PR_UAS);
-}
-
-static int uas_isnt_supported(struct usb_device *udev)
-{
- struct usb_hcd *hcd = bus_to_hcd(udev->bus);
-
- dev_warn(&udev->dev, "The driver for the USB controller %s does not "
-   "support scatter-gather which is\n",
-   hcd->driver->description);
- dev_warn(&udev->dev, "required by the UAS driver. Please try an"
-   "alternative USB controller if you wish to use UAS.\n");
- return -ENODEV;
-}
-
-static int uas_find_uas_alt_setting(struct usb_interface *intf)
-{
- int i;
- struct usb_device *udev = interface_to_usbdev(intf);
- int sg_supported = udev->bus->sg_tablesize != 0;
-
- for (i = 0; i < intf->num_altsetting; i++) {
-  struct usb_host_interface *alt = &intf->altsetting[i];
-
-  if (uas_is_interface(alt)) {
-   if (!sg_supported)
-    return uas_isnt_supported(udev);
-   return alt->desc.bAlternateSetting;
-  }
- }
-
- return -ENODEV;
-}
-
 static int uas_switch_interface(struct usb_device *udev,
     struct usb_interface *intf)
 {
-- 
1.7.1