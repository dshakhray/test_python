From f52118939b0f5d9785f94af9a8b254697d9548d6 Mon Sep 17 00:00:00 2001
From: Florian Westphal <fwestpha@redhat.com>
Date: Tue, 2 Sep 2014 10:14:49 -0400
Subject: [net] tcp: Call gso_make_checksum

Message-id: <1409652920-431-27-git-send-email-fwestpha@redhat.com>
Patchwork-id: 90151
O-Subject: [PATCH 26/57] [RHEL7.1 net] tcp: Call gso_make_checksum
Bugzilla: 1131999
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: Vlad Yasevich <vyasevic@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>
RH-Acked-by: Jiri Benc <jbenc@redhat.com>

BZ: 1131999

commit e9c3a24b3ace90b428848fdaf772ed264982abcc
Author: Tom Herbert <therbert@google.com>
Date:   Wed Jun 4 17:20:09 2014 -0700

    tcp: Call gso_make_checksum

    Call common gso_make_checksum when calculating checksum for a
    TCP GSO segment.

    Signed-off-by: Tom Herbert <therbert@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ipv4/tcp_offload.c b/net/ipv4/tcp_offload.c
index b92b817..d8de7b9 100644
--- a/net/ipv4/tcp_offload.c
+++ b/net/ipv4/tcp_offload.c
@@ -97,9 +97,7 @@ struct sk_buff *tcp_gso_segment(struct sk_buff *skb,
   th->check = newcheck;
 
   if (skb->ip_summed != CHECKSUM_PARTIAL)
-   th->check =
-        csum_fold(csum_partial(skb_transport_header(skb),
-          thlen, skb->csum));
+   th->check = gso_make_checksum(skb, ~th->check);
 
   seq += mss;
   if (copy_destructor) {
@@ -133,8 +131,7 @@ struct sk_buff *tcp_gso_segment(struct sk_buff *skb,
  th->check = ~csum_fold((__force __wsum)((__force u32)th->check +
     (__force u32)delta));
  if (skb->ip_summed != CHECKSUM_PARTIAL)
-  th->check = csum_fold(csum_partial(skb_transport_header(skb),
-         thlen, skb->csum));
+  th->check = gso_make_checksum(skb, ~th->check);
 out:
  return segs;
 }
-- 
1.7.1