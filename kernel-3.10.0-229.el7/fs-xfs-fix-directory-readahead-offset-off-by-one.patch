From 1a27b2257f5032b546637d764b901ca7d14ab827 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Thu, 9 Oct 2014 21:00:07 -0400
Subject: [fs] xfs: fix directory readahead offset off-by-one

Message-id: <1412888441-4181-14-git-send-email-sandeen@redhat.com>
Patchwork-id: 97334
O-Subject: [RHEL7.1 PATCH 13/47] [fs] xfs: fix directory readahead offset off-by-one
Bugzilla: 1145837
RH-Acked-by: Brian Foster <bfoster@redhat.com>
RH-Acked-by: Dave Chinner <dchinner@redhat.com>

Bugzilla: 1145837
Upstream Status: Committed upstream
Build Info: https://brewweb.devel.redhat.com/taskinfo?taskID=8082426
Tested: locally using xfstests

Thanks,
-Eric

    commit 8cfcc3e565bf15870efe801368a25ca98092e6e7
    Author: Dave Chinner <dchinner@redhat.com>
    Date:   Wed May 7 08:05:52 2014 +1000

    xfs: fix directory readahead offset off-by-one

    Directory readahead can throw loud scary but harmless warnings
    when multiblock directories are in use a specific pattern of
    discontiguous blocks are found in the directory. That is, if a hole
    follows a discontiguous block, it will throw a warning like:

    XFS (dm-1): xfs_da_do_buf: bno 637 dir: inode 34363923462
    XFS (dm-1): [00] br_startoff 637 br_startblock 1917954575 br_blockcount 1 br_state 0
    XFS (dm-1): [01] br_startoff 638 br_startblock -2 br_blockcount 1 br_state 0

    And dump a stack trace.

    This is because the readahead offset increment loop does a double
    increment of the block index - it does an increment for the loop
    iteration as well as increase the loop counter by the number of
    blocks in the extent. As a result, the readahead offset does not get
    incremented correctly for discontiguous blocks and hence can ask for
    readahead of a directory block from an offset part way through a
    directory block.  If that directory block is followed by a hole, it
    will trigger a mapping warning like the above.

    The bad readahead will be ignored, though, because the main
    directory block read loop uses the correct mapping offsets rather
    than the readahead offset and so will ignore the bad readahead
    altogether.

    Fix the warning by ensuring that the readahead offset is correctly
    incremented.

    Signed-off-by: Dave Chinner <dchinner@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Dave Chinner <david@fromorbit.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/xfs/xfs_dir2_readdir.c b/fs/xfs/xfs_dir2_readdir.c
index 77b0f91..9aa60f6 100644
--- a/fs/xfs/xfs_dir2_readdir.c
+++ b/fs/xfs/xfs_dir2_readdir.c
@@ -464,7 +464,7 @@ xfs_dir2_leaf_readbuf(
   /*
    * Advance offset through the mapping table.
    */
-  for (j = 0; j < mp->m_dirblkfsbs; j++) {
+  for (j = 0; j < mp->m_dirblkfsbs; j += length ) {
    /*
     * The rest of this extent but not more than a dir
     * block.
@@ -472,7 +472,6 @@ xfs_dir2_leaf_readbuf(
    length = min_t(int, mp->m_dirblkfsbs,
      map[mip->ra_index].br_blockcount -
        mip->ra_offset);
-   j += length;
    mip->ra_offset += length;
 
    /*
-- 
1.7.1