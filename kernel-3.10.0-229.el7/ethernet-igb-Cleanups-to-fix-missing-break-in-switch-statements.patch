From 9f914dfba96eed8658b924e5a8c62825cd2641d1 Mon Sep 17 00:00:00 2001
From: Stefan Assmann <sassmann@redhat.com>
Date: Tue, 26 Aug 2014 14:12:13 -0400
Subject: [ethernet] igb: Cleanups to fix missing break in switch statements

Message-id: <1409062359-13063-56-git-send-email-sassmann@redhat.com>
Patchwork-id: 89173
O-Subject: [RHEL7.1 PATCH 55/81] igb: Cleanups to fix missing break in switch statements
Bugzilla: 1091121
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Neil Horman <nhorman@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Carolyn Wyborny <carolyn.wyborny@intel.com>

This patch fixes WARNING:MISSING_BREAK found with checkpatch check.

Signed-off-by: Carolyn Wyborny <carolyn.wyborny@intel.com>
Tested-by: Aaron Brown <aaron.f.brown@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: Stefan Assmann <sassmann@redhat.com>
(cherry picked from commit b26141d47a4a73f07853986bd6b5a9f4ee6b4fa1)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/igb/e1000_i210.c b/drivers/net/ethernet/intel/igb/e1000_i210.c
index 71a2a17..2231598 100644
--- a/drivers/net/ethernet/intel/igb/e1000_i210.c
+++ b/drivers/net/ethernet/intel/igb/e1000_i210.c
@@ -432,6 +432,7 @@ static s32 igb_read_invm_i210(struct e1000_hw *hw, u16 offset,
    *data = ID_LED_RESERVED_FFFF;
    ret_val = E1000_SUCCESS;
   }
+  break;
  case NVM_SUB_DEV_ID:
   *data = hw->subsystem_device_id;
   break;
diff --git a/drivers/net/ethernet/intel/igb/igb_ethtool.c b/drivers/net/ethernet/intel/igb/igb_ethtool.c
index 1708114..fa8e9a5 100644
--- a/drivers/net/ethernet/intel/igb/igb_ethtool.c
+++ b/drivers/net/ethernet/intel/igb/igb_ethtool.c
@@ -2412,9 +2412,11 @@ static int igb_get_rss_hash_opts(struct igb_adapter *adapter,
  switch (cmd->flow_type) {
  case TCP_V4_FLOW:
   cmd->data |= RXH_L4_B_0_1 | RXH_L4_B_2_3;
+  /* Fall through */
  case UDP_V4_FLOW:
   if (adapter->flags & IGB_FLAG_RSS_FIELD_IPV4_UDP)
    cmd->data |= RXH_L4_B_0_1 | RXH_L4_B_2_3;
+  /* Fall through */
  case SCTP_V4_FLOW:
  case AH_ESP_V4_FLOW:
  case AH_V4_FLOW:
@@ -2424,9 +2426,11 @@ static int igb_get_rss_hash_opts(struct igb_adapter *adapter,
   break;
  case TCP_V6_FLOW:
   cmd->data |= RXH_L4_B_0_1 | RXH_L4_B_2_3;
+  /* Fall through */
  case UDP_V6_FLOW:
   if (adapter->flags & IGB_FLAG_RSS_FIELD_IPV6_UDP)
    cmd->data |= RXH_L4_B_0_1 | RXH_L4_B_2_3;
+  /* Fall through */
  case SCTP_V6_FLOW:
  case AH_ESP_V6_FLOW:
  case AH_V6_FLOW:
diff --git a/drivers/net/ethernet/intel/igb/igb_main.c b/drivers/net/ethernet/intel/igb/igb_main.c
index 4807573..abec14f 100644
--- a/drivers/net/ethernet/intel/igb/igb_main.c
+++ b/drivers/net/ethernet/intel/igb/igb_main.c
@@ -726,12 +726,14 @@ static void igb_cache_ring_register(struct igb_adapter *adapter)
     adapter->rx_ring[i]->reg_idx = rbase_offset +
               Q_IDX_82576(i);
   }
+  /* Fall through */
  case e1000_82575:
  case e1000_82580:
  case e1000_i350:
  case e1000_i354:
  case e1000_i210:
  case e1000_i211:
+  /* Fall through */
  default:
   for (; i < adapter->num_rx_queues; i++)
    adapter->rx_ring[i]->reg_idx = rbase_offset + i;
@@ -7958,11 +7960,13 @@ static void igb_vmm_control(struct igb_adapter *adapter)
   reg = rd32(E1000_DTXCTL);
   reg |= E1000_DTXCTL_VLAN_ADDED;
   wr32(E1000_DTXCTL, reg);
+  /* Fall through */
  case e1000_82580:
   /* enable replication vlan tag stripping */
   reg = rd32(E1000_RPLOLR);
   reg |= E1000_RPLOLR_STRVLAN;
   wr32(E1000_RPLOLR, reg);
+  /* Fall through */
  case e1000_i350:
   /* none of the above registers are supported by i350 */
   break;
-- 
1.7.1