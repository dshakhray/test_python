From 1db90790b3bb4ecc52daa8f3bfdaa6240a423a02 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:06:55 -0400
Subject: [kernel] uprobes/powerpc: Kill arch_uprobe->ainsn

Message-id: <1410545655-205645-187-git-send-email-dzickus@redhat.com>
Patchwork-id: 94186
O-Subject: [RHEL7 PATCH 186/626] uprobes/powerpc: Kill arch_uprobe->ainsn
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 3d78e945b6249d4ef2308192343f8b203b1d7ea5
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Sat Nov 9 18:44:19 2013 +0100

    uprobes/powerpc: Kill arch_uprobe->ainsn

    powerpc has both arch_uprobe->insn and arch_uprobe->ainsn to
    make the generic code happy. This is no longer needed after
    the previous change, powerpc can just use "u32 insn".

    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Acked-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Acked-by: Ananth N Mavinakayanahalli <ananth@in.ibm.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/uprobes.h b/arch/powerpc/include/asm/uprobes.h
index 2301602..ea3df51 100644
--- a/arch/powerpc/include/asm/uprobes.h
+++ b/arch/powerpc/include/asm/uprobes.h
@@ -36,8 +36,7 @@ typedef ppc_opcode_t uprobe_opcode_t;
 
 struct arch_uprobe {
  union {
-  u8 insn[MAX_UINSN_BYTES];
-  u32 ainsn;
+  u32 insn;
  };
 };
 
diff --git a/arch/powerpc/kernel/uprobes.c b/arch/powerpc/kernel/uprobes.c
index 59f419b..003b209 100644
--- a/arch/powerpc/kernel/uprobes.c
+++ b/arch/powerpc/kernel/uprobes.c
@@ -186,7 +186,7 @@ bool arch_uprobe_skip_sstep(struct arch_uprobe *auprobe, struct pt_regs *regs)
   * emulate_step() returns 1 if the insn was successfully emulated.
   * For all other cases, we need to single-step in hardware.
   */
- ret = emulate_step(regs, auprobe->ainsn);
+ ret = emulate_step(regs, auprobe->insn);
  if (ret > 0)
   return true;
 
-- 
1.7.1