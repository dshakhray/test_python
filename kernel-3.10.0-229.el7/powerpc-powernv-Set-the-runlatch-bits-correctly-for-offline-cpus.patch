From e6c3f15bd0747670d87ea7ecb3af2b0bfe54fe8c Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:09:45 -0400
Subject: [powerpc] powernv: Set the runlatch bits correctly for offline cpus

Message-id: <1410545655-205645-357-git-send-email-dzickus@redhat.com>
Patchwork-id: 94370
O-Subject: [RHEL7 PATCH 356/626] ppc/powernv: Set the runlatch bits correctly for offline cpus
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit f203891117323dd31c11adcbba60452c933d604e
Author: Preeti U Murthy <preeti@linux.vnet.ibm.com>
Date:   Fri Apr 11 16:01:48 2014 +0530

    ppc/powernv: Set the runlatch bits correctly for offline cpus

    Up until now we have been setting the runlatch bits for a busy CPU and
    clearing it when a CPU enters idle state. The runlatch bit has thus
    been consistent with the utilization of a CPU as long as the CPU is online.

    However when a CPU is hotplugged out the runlatch bit is not cleared. It
    needs to be cleared to indicate an unused CPU. Hence this patch has the
    runlatch bit cleared for an offline CPU just before entering an idle state
    and sets it immediately after it exits the idle state.

    Signed-off-by: Preeti U Murthy <preeti@linux.vnet.ibm.com>
    Acked-by: Paul Mackerras <paulus@samba.org>
    Reviewed-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/platforms/powernv/smp.c b/arch/powerpc/platforms/powernv/smp.c
index 908672b..bf5fcd4 100644
--- a/arch/powerpc/platforms/powernv/smp.c
+++ b/arch/powerpc/platforms/powernv/smp.c
@@ -30,6 +30,7 @@
 #include <asm/cputhreads.h>
 #include <asm/xics.h>
 #include <asm/opal.h>
+#include <asm/runlatch.h>
 
 #include "powernv.h"
 
@@ -156,7 +157,9 @@ static void pnv_smp_cpu_kill_self(void)
   */
  mtspr(SPRN_LPCR, mfspr(SPRN_LPCR) & ~(u64)LPCR_PECE1);
  while (!generic_check_cpu_restart(cpu)) {
+  ppc64_runlatch_off();
   power7_nap();
+  ppc64_runlatch_on();
   if (!generic_check_cpu_restart(cpu)) {
    DBG("CPU%d Unexpected exit while offline !\n", cpu);
    /* We may be getting an IPI, so we re-enable
-- 
1.7.1