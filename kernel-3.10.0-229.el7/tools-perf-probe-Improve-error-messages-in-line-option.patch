From 1feedfe287a45e59dad1ef7014e7fc2687306138 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:08:55 -0400
Subject: [tools] perf/probe: Improve error messages in --line option

Message-id: <1410181752-25631-291-git-send-email-jolsa@redhat.com>
Patchwork-id: 91942
O-Subject: [PATCH RHEL7.1 BZ1134356 290/307] perf probe: Improve error messages in --line option
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit 5ee05b8801892ecc5df44e03429008dfa89aa361
Author: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
Date: Fri Jun 6 07:14:06 2014 +0000

description
===========
Improve error messages of 'perf probe --line' mode.

Currently 'perf probe' shows the "Debuginfo analysis failed" message with
an error code when the given symbol is not found:

  -----
  # perf probe -L page_cgroup_init_flatmem
  Debuginfo analysis failed. (-2)
    Error: Failed to show lines.
  -----

But -2 (-ENOENT) means that the given source line or function was not
found. With this patch, 'perf probe' shows the correct error message:

  -----
  # perf probe -L page_cgroup_init_flatmem
  Specified source line is not found.
    Error: Failed to show lines.
  -----

There is also another debug error code is shown in the same function
after get_real_path(). This removes that too.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/probe-event.c b/tools/perf/util/probe-event.c
index 44c7141..9a0a183 100644
--- a/tools/perf/util/probe-event.c
+++ b/tools/perf/util/probe-event.c
@@ -628,11 +628,11 @@ static int __show_line_range(struct line_range *lr, const char *module)
 
  ret = debuginfo__find_line_range(dinfo, lr);
  debuginfo__delete(dinfo);
- if (ret == 0) {
+ if (ret == 0 || ret == -ENOENT) {
   pr_warning("Specified source line is not found.\n");
   return -ENOENT;
  } else if (ret < 0) {
-  pr_warning("Debuginfo analysis failed. (%d)\n", ret);
+  pr_warning("Debuginfo analysis failed.\n");
   return ret;
  }
 
@@ -641,7 +641,7 @@ static int __show_line_range(struct line_range *lr, const char *module)
  ret = get_real_path(tmp, lr->comp_dir, &lr->path);
  free(tmp); /* Free old path */
  if (ret < 0) {
-  pr_warning("Failed to find source file. (%d)\n", ret);
+  pr_warning("Failed to find source file path.\n");
   return ret;
  }
 
-- 
1.7.1