From 57deadf2b64c439fc096134b80332c9ada5a5c1a Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:04:46 -0400
Subject: [fs] btrfs: Skip scrubbing removed chunks to avoid -ENOENT

Message-id: <1407179109-13714-400-git-send-email-sandeen@redhat.com>
Patchwork-id: 87336
O-Subject: [RHEL7.1 PATCH 399/422] btrfs: Skip scrubbing removed chunks to avoid -ENOENT.
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Qu Wenruo <quwenruo@cn.fujitsu.com>

commit ced96edc48ba455b0982c3aa64d3cc3bf2d0816a
Author: Qu Wenruo <quwenruo@cn.fujitsu.com>
Date:   Thu Jun 19 10:42:51 2014 +0800

    btrfs: Skip scrubbing removed chunks to avoid -ENOENT.

    When run scrub with balance, sometimes -ENOENT will be returned, since
    in scrub_enumerate_chunks() will search dev_extent in *COMMIT_ROOT*, but
    btrfs_lookup_block_group() will search block group in *MEMORY*, so if a
    chunk is removed but not committed, -ENOENT will be returned.

    However, there is no need to stop scrubbing since other chunks may be
    scrubbed without problem.

    So this patch changes the behavior to skip removed chunks and continue
    to scrub the rest.

    Signed-off-by: Qu Wenruo <quwenruo@cn.fujitsu.com>
    Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/scrub.c b/fs/btrfs/scrub.c
index 25dbed0..5dd396a 100644
--- a/fs/btrfs/scrub.c
+++ b/fs/btrfs/scrub.c
@@ -2725,11 +2725,8 @@ int scrub_enumerate_chunks(struct scrub_ctx *sctx,
   dev_extent = btrfs_item_ptr(l, slot, struct btrfs_dev_extent);
   length = btrfs_dev_extent_length(l, dev_extent);
 
-  if (found_key.offset + length <= start) {
-   key.offset = found_key.offset + length;
-   btrfs_release_path(path);
-   continue;
-  }
+  if (found_key.offset + length <= start)
+   goto skip;
 
   chunk_tree = btrfs_dev_extent_chunk_tree(l, dev_extent);
   chunk_objectid = btrfs_dev_extent_chunk_objectid(l, dev_extent);
@@ -2740,10 +2737,12 @@ int scrub_enumerate_chunks(struct scrub_ctx *sctx,
    * the chunk from going away while we scrub it
    */
   cache = btrfs_lookup_block_group(fs_info, chunk_offset);
-  if (!cache) {
-   ret = -ENOENT;
-   break;
-  }
+
+  /* some chunks are removed but not committed to disk yet,
+   * continue scrubbing */
+  if (!cache)
+   goto skip;
+
   dev_replace->cursor_right = found_key.offset + length;
   dev_replace->cursor_left = found_key.offset;
   dev_replace->item_needs_writeback = 1;
@@ -2802,7 +2801,7 @@ int scrub_enumerate_chunks(struct scrub_ctx *sctx,
 
   dev_replace->cursor_left = dev_replace->cursor_right;
   dev_replace->item_needs_writeback = 1;
-
+skip:
   key.offset = found_key.offset + length;
   btrfs_release_path(path);
  }
-- 
1.7.1