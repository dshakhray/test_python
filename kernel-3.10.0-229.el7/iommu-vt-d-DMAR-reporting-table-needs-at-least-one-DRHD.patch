From b8f0459eee2b99b1cd508b830b92a8d87031dc08 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Sun, 10 Aug 2014 18:19:43 -0400
Subject: [iommu] vt-d: DMAR reporting table needs at least one DRHD

Message-id: <20140810181943.24055.12947.stgit@gir.stowe>
Patchwork-id: 87573
O-Subject: [RHEL7.1 PATCH 02/19] iommu/vt-d: DMAR reporting table needs at least one DRHD
Bugzilla: 1127467
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Dutile <ddutile@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1127467
Upstream Status: 7cef33471a35c6973ddad2926e9e88c52e9e1c1b

commit 7cef33471a35c6973ddad2926e9e88c52e9e1c1b
Author: Li, Zhen-Hua <zhen-hual@hp.com>
Date:   Mon May 20 15:57:32 2013 +0800

    iommu/vt-d: DMAR reporting table needs at least one DRHD

    In intel vt-d spec , chapter 8.1 , DMA Remapping Reporting Structure.
    In the end of the table, it says:

    Remapping Structures[]
    -
    A list of structures. The list will contain one or
    more DMA Remapping Hardware Unit Definition
    (DRHD) structures, and zero or more Reserved
    Memory Region Reporting (RMRR) and Root Port
    ATS Capability Reporting (ATSR) structures.
    These structures are described below.

    So, there should be at least one DRHD structure in DMA Remapping
    reporting table. If there is no DRHD found, a warning is necessary.

    Signed-off-by: Li, Zhen-Hua <zhen-hual@hp.com>
    Signed-off-by: Joerg Roedel <joro@8bytes.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/dmar.c b/drivers/iommu/dmar.c
index db5dcf8..4ee523e 100644
--- a/drivers/iommu/dmar.c
+++ b/drivers/iommu/dmar.c
@@ -309,6 +309,7 @@ parse_dmar_table(void)
  struct acpi_table_dmar *dmar;
  struct acpi_dmar_header *entry_header;
  int ret = 0;
+ int drhd_count = 0;
 
  /*
   * Do it again, earlier dmar_tbl mapping could be mapped with
@@ -347,6 +348,7 @@ parse_dmar_table(void)
 
   switch (entry_header->type) {
   case ACPI_DMAR_TYPE_HARDWARE_UNIT:
+   drhd_count++;
    ret = dmar_parse_one_drhd(entry_header);
    break;
   case ACPI_DMAR_TYPE_RESERVED_MEMORY:
@@ -371,6 +373,8 @@ parse_dmar_table(void)
 
   entry_header = ((void *)entry_header + entry_header->length);
  }
+ if (drhd_count == 0)
+  pr_warn(FW_BUG "No DRHD structure found in DMAR table\n");
  return ret;
 }
 
-- 
1.7.1