From e9e838e0c5374fac39ae5ad6db10a8cfc2ddaa08 Mon Sep 17 00:00:00 2001
From: Hendrik Brueckner <brueckner@redhat.com>
Date: Wed, 23 Jul 2014 10:49:49 -0400
Subject: [virt] virtio_ring: plug kmemleak false positive

Message-id: <1406112611-9862-2-git-send-email-brueckner@redhat.com>
Patchwork-id: 86314
O-Subject: [RHEL7.1 PATCH 01/23] [virt] virtio_ring: plug kmemleak false positive.
Bugzilla: 1088554
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Description
-----------
commit bb478d8b167cf875565ac7d927ffbdc0b6d280e8
Author: Rusty Russell <rusty@rustcorp.com.au>
Commit: Rusty Russell <rusty@rustcorp.com.au>

    virtio_ring: plug kmemleak false positive.

    unreferenced object 0xffff88003d467e20 (size 32):
      comm "softirq", pid 0, jiffies 4295197765 (age 6.364s)
      hex dump (first 32 bytes):
        28 19 bf 3d 00 00 00 00 0c 00 00 00 01 00 01 00  (..=............
        02 dc 51 3c 00 00 00 00 56 00 00 00 00 00 00 00  ..Q<....V.......
      backtrace:
        [<ffffffff8152db19>] kmemleak_alloc+0x59/0xc0
        [<ffffffff81102e93>] __kmalloc+0xf3/0x180
        [<ffffffff812db5d6>] vring_add_indirect+0x36/0x280
        [<ffffffff812dc59f>] virtqueue_add_outbuf+0xbf/0x4e0
        [<ffffffff813a8b30>] start_xmit+0x1a0/0x3b0
        [<ffffffff81445861>] dev_hard_start_xmit+0x2d1/0x4d0
        [<ffffffff81460052>] sch_direct_xmit+0xf2/0x1c0
        [<ffffffff81445c28>] dev_queue_xmit+0x1c8/0x460
        [<ffffffff814e3187>] ip6_finish_output2+0x1d7/0x470
        [<ffffffff814e34b0>] ip6_finish_output+0x90/0xb0
        [<ffffffff814e3507>] ip6_output+0x37/0xb0
        [<ffffffff815021eb>] igmp6_send+0x2db/0x470
        [<ffffffff81502645>] igmp6_timer_handler+0x95/0xa0
        [<ffffffff8104b57c>] call_timer_fn+0x2c/0x90
        [<ffffffff8104b7ba>] run_timer_softirq+0x1da/0x1f0
        [<ffffffff81045721>] __do_softirq+0xd1/0x1b0

    Address gets embedded in a descriptor via virt_to_phys().  See detach_buf,
    which frees it:

     if (vq->vring.desc[i].flags & VRING_DESC_F_INDIRECT)
      kfree(phys_to_virt(vq->vring.desc[i].addr));

    Reported-by: Christoph Paasch <christoph.paasch@uclouvain.be>
    Fix-suggested-by: Christoph Paasch <christoph.paasch@uclouvain.be>
    Typing-done-by: Rusty Russell <rusty@rustcorp.com.au>
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

Bugzilla
--------
BZ 1088554
https://bugzilla.redhat.com/show_bug.cgi?id=1088554

Upstream status of the patch
----------------------------
The patch is upstream as of kernel version v3.13-rc1
http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=bb478d8b167cf875565ac7d927ffbdc0b6d280e8

Brew
----
https://brewweb.devel.redhat.com/taskinfo?taskID=7725759

Test status
-----------
The patch has been tested and fixes the problem.
The fix has been verified by the IBM test department.

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/virtio/virtio_ring.c b/drivers/virtio/virtio_ring.c
index 651ff59..1e6f45d 100644
--- a/drivers/virtio/virtio_ring.c
+++ b/drivers/virtio/virtio_ring.c
@@ -173,6 +173,8 @@ static inline int vring_add_indirect(struct vring_virtqueue *vq,
  head = vq->free_head;
  vq->vring.desc[head].flags = VRING_DESC_F_INDIRECT;
  vq->vring.desc[head].addr = virt_to_phys(desc);
+ /* kmemleak gives a false positive, as it's hidden by virt_to_phys */
+ kmemleak_ignore(desc);
  vq->vring.desc[head].len = i * sizeof(struct vring_desc);
 
  /* Update free pointer */
-- 
1.7.1