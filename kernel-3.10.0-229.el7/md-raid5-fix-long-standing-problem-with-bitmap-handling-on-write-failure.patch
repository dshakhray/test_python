From b4d692600be145f5abc5382714fdfda9b8b4fce8 Mon Sep 17 00:00:00 2001
From: Jes Sorensen <Jes.Sorensen@redhat.com>
Date: Mon, 1 Sep 2014 09:25:51 -0400
Subject: [md] raid5: fix long-standing problem with bitmap handling on write failure

Message-id: <1409563584-9000-50-git-send-email-Jes.Sorensen@redhat.com>
Patchwork-id: 89958
O-Subject: [RHEL7.1 PATCH 49/82] md/raid5: fix long-standing problem with bitmap handling on write failure.
Bugzilla: 1085530
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

From: NeilBrown <neilb@suse.de>

Before a write starts we set a bit in the write-intent bitmap.
When the write completes we clear that bit if the write was successful
to all devices.  However if the write wasn't fully successful we
should not clear the bit.  If the faulty drive is subsequently
re-added, the fact that the bit is still set ensure that we will
re-write the data that is missing.

This logic is mediated by the STRIPE_DEGRADED flag - we only clear the
bitmap bit when this flag is not set.
Currently we correctly set the flag if a write starts when some
devices are failed or missing.  But we do *not* set the flag if some
device failed during the write attempt.
This is wrong and can result in clearing the bit inappropriately.

So: set the flag when a write fails.

This bug has been present since bitmaps were introduces, so the fix is
suitable for any -stable kernel.

Reported-by: Ethan Wilson <ethan.wilson@shiftmail.org>
Cc: stable@vger.kernel.org
Signed-off-by: NeilBrown <neilb@suse.de>
(cherry picked from commit 9f97e4b128d2ea90a5f5063ea0ee3b0911f4c669)
Signed-off-by: Jes Sorensen <Jes.Sorensen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/raid5.c b/drivers/md/raid5.c
index 40d11e2..af92a2d 100644
--- a/drivers/md/raid5.c
+++ b/drivers/md/raid5.c
@@ -2111,6 +2111,7 @@ static void raid5_end_write_request(struct bio *bi, int error)
    set_bit(R5_MadeGoodRepl, &sh->dev[i].flags);
  } else {
   if (!uptodate) {
+   set_bit(STRIPE_DEGRADED, &sh->state);
    set_bit(WriteErrorSeen, &rdev->flags);
    set_bit(R5_WriteError, &sh->dev[i].flags);
    if (!test_and_set_bit(WantReplacement, &rdev->flags))
-- 
1.7.1