From ee72d78351abae5c9d59d54a3570a1cbdc04177f Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Mon, 14 Jul 2014 10:38:17 -0400
Subject: [fs] ext4: error out if verifying the block bitmap fails

Message-id: <1405334298-26039-1-git-send-email-lczerner@redhat.com>
Patchwork-id: 85731
O-Subject: [RHEL 7.1 PATCH 1/2] ext4: error out if verifying the block bitmap fails
Bugzilla: 1091055
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: "Darrick J. Wong" <darrick.wong@oracle.com>

BZ 1091055
https://bugzilla.redhat.com/show_bug.cgi?id=1091055

BREW 7657226
https://brewweb.devel.redhat.com/taskinfo?taskID=7657226

Upstream commit 48d9eb97dc74d2446bcc3630c8e51d2afc9b951d

 The block bitmap verification code assumes that calling ext4_error()
 either panics the system or makes the fs readonly.  However, this is
 not always true: when 'errors=continue' is specified, an error is
 printed but we don't return any indication of error to the caller,
 which is (probably) the block allocator, which pretends that the crud
 we read in off the disk is a usable bitmap.  Yuck.

 A block bitmap that fails the check should at least return no bitmap
 to the caller.  The block allocator should be told to go look in a
 different group, but that's a separate issue.

 The easiest way to reproduce this is to modify bg_block_bitmap (on a
 ^flex_bg fs) to point to a block outside the block group; or you can
 create a metadata_csum filesystem and zero out the block bitmaps.

 Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/balloc.c b/fs/ext4/balloc.c
index ddd715e..b430afe 100644
--- a/fs/ext4/balloc.c
+++ b/fs/ext4/balloc.c
@@ -445,7 +445,10 @@ ext4_read_block_bitmap_nowait(struct super_block *sb, ext4_group_t block_group)
  return bh;
 verify:
  ext4_validate_block_bitmap(sb, desc, block_group, bh);
- return bh;
+ if (buffer_verified(bh))
+  return bh;
+ put_bh(bh);
+ return NULL;
 }
 
 /* Returns 0 on success, 1 on error */
@@ -469,7 +472,8 @@ int ext4_wait_block_bitmap(struct super_block *sb, ext4_group_t block_group,
  clear_buffer_new(bh);
  /* Panic or remount fs read-only if block bitmap is invalid */
  ext4_validate_block_bitmap(sb, desc, block_group, bh);
- return 0;
+ /* ...but check for error just in case errors=continue. */
+ return !buffer_verified(bh);
 }
 
 struct buffer_head *
-- 
1.7.1