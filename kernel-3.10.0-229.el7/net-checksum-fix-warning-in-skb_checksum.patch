From 401617c41072facfdad2d47e165da1296f0da9ba Mon Sep 17 00:00:00 2001
From: Daniel Borkmann <dborkman@redhat.com>
Date: Thu, 16 Jan 2014 15:19:50 -0500
Subject: [net] checksum: fix warning in skb_checksum

Message-id: <72f0ed29fb94b1f69618e0034ba14750c84f74fa.1389878943.git.dborkman@redhat.com>
Patchwork-id: 74354
O-Subject: [RHEL7 PATCH net 10/11] net: checksum: fix warning in skb_checksum
Bugzilla: 1054215
RH-Acked-by: Florian Westphal <fwestpha@redhat.com>
RH-Acked-by: Thomas Graf <tgraf@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1054215
Upstream Status: cea80ea8d2a4c646f240a8fd6ece5c8e7bc969d3
Brew: http://brewweb.devel.redhat.com/brew/taskinfo?taskID=6885774
Tested: verified by QA in their IPVS lab and on beaker for basic tests

Upstream Commit:
commit cea80ea8d2a4c646f240a8fd6ece5c8e7bc969d3
Author: Daniel Borkmann <dborkman@redhat.com>
Date:   Mon Nov 4 17:10:25 2013 +0100

    net: checksum: fix warning in skb_checksum

    This patch fixes a build warning in skb_checksum() by wrapping the
    csum_partial() usage in skb_checksum(). The problem is that on a few
    architectures, csum_partial is used with prefix asmlinkage whereas
    on most architectures it's not. So fix this up generically as we did
    with csum_block_add_ext() to match the signature. Introduced by
    2817a336d4d ("net: skb_checksum: allow custom update/combine for
    walking skb").

    Reported-by: Fengguang Wu <fengguang.wu@intel.com>
    Signed-off-by: Daniel Borkmann <dborkman@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Daniel Borkmann <dborkman@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/net/checksum.h b/include/net/checksum.h
index 5ad4557..fd4c48d 100644
--- a/include/net/checksum.h
+++ b/include/net/checksum.h
@@ -98,6 +98,11 @@ static inline __wsum csum_unfold(__sum16 n)
  return (__force __wsum)n;
 }
 
+static inline __wsum csum_partial_ext(const void *buff, int len, __wsum sum)
+{
+ return csum_partial(buff, len, sum);
+}
+
 #define CSUM_MANGLED_0 ((__force __sum16)0xffff)
 
 static inline void csum_replace4(__sum16 *sum, __be32 from, __be32 to)
diff --git a/net/core/skbuff.c b/net/core/skbuff.c
index d4b48aa..011d9f4 100644
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@ -2001,7 +2001,7 @@ __wsum skb_checksum(const struct sk_buff *skb, int offset,
       int len, __wsum csum)
 {
  const struct skb_checksum_ops ops = {
-  .update  = csum_partial,
+  .update  = csum_partial_ext,
   .combine = csum_block_add_ext,
  };
 
-- 
1.7.1