From 0a37e989ea688976da1932ef804f0a4e65658cd7 Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:26:11 -0400
Subject: [block] rbd: only set disk to read-only once
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-265-git-send-email-sweil@redhat.com>
Patchwork-id: 89725
O-Subject: [PATCH 264/303] rbd: only set disk to read-only once
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Josh Durgin <josh.durgin@inktank.com>

rbd_open(), called every time the device is opened, calls
set_device_ro().  There's no reason to set the device read-only or
read-write every time it is opened. Just do this once during device
setup, using set_disk_ro() instead because the struct block_device
isn't available to us there.

Signed-off-by: Josh Durgin <josh.durgin@inktank.com>
Reviewed-by: Alex Elder <elder@linaro.org>
(cherry picked from commit 22001f619f29ddf66582d834223dcff4c0b74595)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/block/rbd.c b/drivers/block/rbd.c
index 512d3a6..cdb7cdc 100644
--- a/drivers/block/rbd.c
+++ b/drivers/block/rbd.c
@@ -525,7 +525,6 @@ static int rbd_open(struct block_device *bdev, fmode_t mode)
   return -ENOENT;
 
  (void) get_device(&rbd_dev->dev);
- set_device_ro(bdev, rbd_dev->mapping.read_only);
 
  return 0;
 }
@@ -5103,6 +5102,7 @@ static int rbd_dev_device_setup(struct rbd_device *rbd_dev)
  if (ret)
   goto err_out_disk;
  set_capacity(rbd_dev->disk, rbd_dev->mapping.size / SECTOR_SIZE);
+ set_disk_ro(rbd_dev->disk, rbd_dev->mapping.read_only);
 
  ret = rbd_bus_add_dev(rbd_dev);
  if (ret)
-- 
1.7.1