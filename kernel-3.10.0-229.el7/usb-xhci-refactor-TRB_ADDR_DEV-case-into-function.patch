From 7a74628609f325e845fed80c3a481abe2556d0b9 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:02:19 -0400
Subject: [usb] xhci: refactor TRB_ADDR_DEV case into function

Message-id: <1410887463-20674-68-git-send-email-dzickus@redhat.com>
Patchwork-id: 95109
O-Subject: [RHEL7 PATCH 067/591] xhci: refactor TRB_ADDR_DEV case into function
Bugzilla: 1032371
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1032371

commit 9b3103ac9d19525781c297c4fb1e544e077c8901
Author: Xenia Ragiadakou <burzalodowa@gmail.com>
Date:   Mon Sep 9 13:29:49 2013 +0300

    xhci: refactor TRB_ADDR_DEV case into function

    The function that handles xHCI command completion is much too long and
    there is need to be broken up into individual functions for each command
    completion to improve code readablity.
    This patch refactors the code in TRB_ADDR_DEV switch case in
    handle_cmd_completion() into a fuction named xhci_handle_cmd_addr_dev().

    Signed-off-by: Xenia Ragiadakou <burzalodowa@gmail.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/host/xhci-ring.c b/drivers/usb/host/xhci-ring.c
index 46f1426..b85fbcb 100644
--- a/drivers/usb/host/xhci-ring.c
+++ b/drivers/usb/host/xhci-ring.c
@@ -1407,6 +1407,13 @@ static void xhci_handle_cmd_disable_slot(struct xhci_hcd *xhci, int slot_id)
  xhci_free_virt_device(xhci, slot_id);
 }
 
+static void xhci_handle_cmd_addr_dev(struct xhci_hcd *xhci, int slot_id,
+  u32 cmd_comp_code)
+{
+ xhci->devs[slot_id]->cmd_status = cmd_comp_code;
+ complete(&xhci->addr_dev);
+}
+
 static void handle_cmd_completion(struct xhci_hcd *xhci,
   struct xhci_event_cmd *event)
 {
@@ -1525,8 +1532,8 @@ bandwidth_change:
   complete(&xhci->devs[slot_id]->cmd_completion);
   break;
  case TRB_TYPE(TRB_ADDR_DEV):
-  xhci->devs[slot_id]->cmd_status = GET_COMP_CODE(le32_to_cpu(event->status));
-  complete(&xhci->addr_dev);
+  xhci_handle_cmd_addr_dev(xhci, slot_id,
+    GET_COMP_CODE(le32_to_cpu(event->status)));
   break;
  case TRB_TYPE(TRB_STOP_RING):
   xhci_handle_cmd_stop_ep(xhci, xhci->cmd_ring->dequeue, event);
-- 
1.7.1