From 0cb25d41288deddfd7ff0a7672ba7c6cc373cb7f Mon Sep 17 00:00:00 2001
From: Vivek Goyal <vgoyal@redhat.com>
Date: Fri, 5 Sep 2014 18:55:38 -0400
Subject: [x86] boot: Move optimized memcpy() 32/64 bit versions to compressed/string.c

Message-id: <1409943373-12669-4-git-send-email-vgoyal@redhat.com>
Patchwork-id: 91510
O-Subject: [RHEL7.1 PATCH 03/38] x86, boot: Move optimized memcpy() 32/64 bit versions to compressed/string.c
Bugzilla: 852066
RH-Acked-by: Dave Anderson <anderson@redhat.com>
RH-Acked-by: Baoquan He <bhe@redhat.com>
RH-Acked-by: Dave Young <dyoung@redhat.com>
RH-Acked-by: Chao WANG <chaowang@redhat.com>

BZ:852066

commit 820e8feca06ff744f60e5036c3178dde40b91afc
Author: Vivek Goyal <vgoyal@redhat.com>
Date: Tue, 18 Mar 2014 15:26:38 -0400

Move optimized versions of memcpy to compressed/string.c This will allow
any other code to use these functions too if need be in future. Again
trying to put definition in a common place instead of hiding it in misc.c

Signed-off-by: Vivek Goyal <vgoyal@redhat.com>
Link: http://lkml.kernel.org/r/1395170800-11059-4-git-send-email-vgoyal@redhat.com
Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/boot/compressed/misc.c b/arch/x86/boot/compressed/misc.c
index 7cb56c6..8d5cca6 100644
--- a/arch/x86/boot/compressed/misc.c
+++ b/arch/x86/boot/compressed/misc.c
@@ -10,6 +10,7 @@
  */
 
 #include "misc.h"
+#include "../string.h"
 
 /* WARNING!!
  * This code is compiled with -fPIC and it is relocated dynamically
@@ -110,7 +111,6 @@ static void error(char *m);
 struct boot_params *real_mode;  /* Pointer to real-mode data */
 
 void *memset(void *s, int c, size_t n);
-void *memcpy(void *dest, const void *src, size_t n);
 
 #ifdef CONFIG_X86_64
 #define memptr long
@@ -227,35 +227,6 @@ void *memset(void *s, int c, size_t n)
   ss[i] = c;
  return s;
 }
-#ifdef CONFIG_X86_32
-void *memcpy(void *dest, const void *src, size_t n)
-{
- int d0, d1, d2;
- asm volatile(
-  "rep ; movsl\n\t"
-  "movl %4,%%ecx\n\t"
-  "rep ; movsb\n\t"
-  : "=&c" (d0), "=&D" (d1), "=&S" (d2)
-  : "0" (n >> 2), "g" (n & 3), "1" (dest), "2" (src)
-  : "memory");
-
- return dest;
-}
-#else
-void *memcpy(void *dest, const void *src, size_t n)
-{
- long d0, d1, d2;
- asm volatile(
-  "rep ; movsq\n\t"
-  "movq %4,%%rcx\n\t"
-  "rep ; movsb\n\t"
-  : "=&c" (d0), "=&D" (d1), "=&S" (d2)
-  : "0" (n >> 3), "g" (n & 7), "1" (dest), "2" (src)
-  : "memory");
-
- return dest;
-}
-#endif
 
 static void error(char *x)
 {
diff --git a/arch/x86/boot/compressed/string.c b/arch/x86/boot/compressed/string.c
index 212004e..3b5a82f 100644
--- a/arch/x86/boot/compressed/string.c
+++ b/arch/x86/boot/compressed/string.c
@@ -11,3 +11,36 @@ int memcmp(const void *s1, const void *s2, size_t len)
 }
 
 #include "../string.c"
+
+/* misc.h might pull in string_32.h which has a macro for memcpy. undef that */
+#undef memcpy
+
+#ifdef CONFIG_X86_32
+void *memcpy(void *dest, const void *src, size_t n)
+{
+ int d0, d1, d2;
+ asm volatile(
+  "rep ; movsl\n\t"
+  "movl %4,%%ecx\n\t"
+  "rep ; movsb\n\t"
+  : "=&c" (d0), "=&D" (d1), "=&S" (d2)
+  : "0" (n >> 2), "g" (n & 3), "1" (dest), "2" (src)
+  : "memory");
+
+ return dest;
+}
+#else
+void *memcpy(void *dest, const void *src, size_t n)
+{
+ long d0, d1, d2;
+ asm volatile(
+  "rep ; movsq\n\t"
+  "movq %4,%%rcx\n\t"
+  "rep ; movsb\n\t"
+  : "=&c" (d0), "=&D" (d1), "=&S" (d2)
+  : "0" (n >> 3), "g" (n & 7), "1" (dest), "2" (src)
+  : "memory");
+
+ return dest;
+}
+#endif
-- 
1.7.1