From 1b797ce5e6d559dd001cd51fd833a84887afd0d6 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:08:18 -0400
Subject: [tools] perf/top: Add --children option

Message-id: <1410181752-25631-254-git-send-email-jolsa@redhat.com>
Patchwork-id: 91909
O-Subject: [PATCH RHEL7.1 BZ1134356 253/307] perf top: Add --children option
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit 1432ec342ece6a7ef78825ae3a9ba1c91686f71d
Author: Namhyung Kim <namhyung@kernel.org>
Date: Wed Oct 30 17:05:55 2013 +0900

description
===========
The --children option is for showing accumulated overhead (period)
value as well as self overhead.  It should be used with one of -g or
--call-graph option.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/Documentation/perf-top.txt b/tools/perf/Documentation/perf-top.txt
index dcfa54c..180ae02 100644
--- a/tools/perf/Documentation/perf-top.txt
+++ b/tools/perf/Documentation/perf-top.txt
@@ -119,7 +119,7 @@ Default is to monitor all CPUS.
 --fields=::
  Specify output field - multiple keys can be specified in CSV format.
  Following fields are available:
- overhead, overhead_sys, overhead_us, sample and period.
+ overhead, overhead_sys, overhead_us, overhead_children, sample and period.
  Also it can contain any sort key(s).
 
  By default, every sort keys not specified in --field will be appended
@@ -161,6 +161,12 @@ Default is to monitor all CPUS.
  Setup and enable call-graph (stack chain/backtrace) recording,
  implies -g.
 
+--children::
+ Accumulate callchain of children to parent entry so that then can
+ show up in the output.  The output will have a new "Children" column
+ and will be sorted on the data.  It requires -g/--call-graph option
+ enabled.
+
 --max-stack::
  Set the stack depth limit when parsing the callchain, anything
  beyond the specified depth will be ignored. This is a trade-off
diff --git a/tools/perf/builtin-top.c b/tools/perf/builtin-top.c
index b1cb5f5..fea55e3 100644
--- a/tools/perf/builtin-top.c
+++ b/tools/perf/builtin-top.c
@@ -1098,6 +1098,8 @@ int cmd_top(int argc, const char **argv, const char *prefix __maybe_unused)
  OPT_CALLBACK(0, "call-graph", &top.record_opts,
        "mode[,dump_size]", record_callchain_help,
        &parse_callchain_opt),
+ OPT_BOOLEAN(0, "children", &symbol_conf.cumulate_callchain,
+      "Accumulate callchains of children and show total overhead as well"),
  OPT_INTEGER(0, "max-stack", &top.max_stack,
       "Set the maximum stack depth when parsing the callchain. "
       "Default: " __stringify(PERF_MAX_STACK_DEPTH)),
@@ -1203,6 +1205,11 @@ int cmd_top(int argc, const char **argv, const char *prefix __maybe_unused)
 
  top.sym_evsel = perf_evlist__first(top.evlist);
 
+ if (!symbol_conf.use_callchain) {
+  symbol_conf.cumulate_callchain = false;
+  perf_hpp__cancel_cumulate();
+ }
+
  symbol_conf.priv_size = sizeof(struct annotation);
 
  symbol_conf.try_vmlinux_path = (symbol_conf.vmlinux_name == NULL);
-- 
1.7.1