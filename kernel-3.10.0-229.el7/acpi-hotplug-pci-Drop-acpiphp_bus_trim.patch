From 39b256ff2290dba97cead5d35c8ecc2ccc216ad0 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Fri, 19 Sep 2014 12:29:01 -0400
Subject: [acpi] hotplug/pci: Drop acpiphp_bus_trim()

Message-id: <1411129776-21656-27-git-send-email-prarit@redhat.com>
Patchwork-id: 96383
O-Subject: [RHEL7.1 PATCH BZ 1141846 26/61] ACPI / hotplug / PCI: Drop acpiphp_bus_trim()
Bugzilla: 1141846
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Myron Stowe <mstowe@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1141846

commit 4dc3082dc1dd1415177d71f15d4b19bebb1365c0
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Feb 4 00:38:52 2014 +0100

    ACPI / hotplug / PCI: Drop acpiphp_bus_trim()

    If trim_stale_devices() calls acpi_bus_trim() directly, we can
    save a potentially costly acpi_bus_get_device() invocation.  After
    making that change acpiphp_bus_trim() would only be called from one
    place, so move the code from it to that place and drop it.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Mika Westerberg <mika.westerberg@linux.intel.com>

Cc: Myron Stowe <mstowe@redhat.com>
Cc: Andy Gospodarek <agospoda@redhat.com>
Cc: Tony Camuso <tcamuso@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/hotplug/acpiphp_glue.c b/drivers/pci/hotplug/acpiphp_glue.c
index e14e0b1..b79f94e 100644
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@ -489,19 +489,6 @@ static unsigned char acpiphp_max_busnr(struct pci_bus *bus)
 }
 
 /**
- * acpiphp_bus_trim - Trim device objects in an ACPI namespace subtree.
- * @handle: ACPI device object handle to start from.
- */
-static void acpiphp_bus_trim(acpi_handle handle)
-{
- struct acpi_device *adev = NULL;
-
- acpi_bus_get_device(handle, &adev);
- if (adev)
-  acpi_bus_trim(adev);
-}
-
-/**
  * acpiphp_bus_add - Scan ACPI namespace subtree.
  * @handle: ACPI object handle to start the scan from.
  */
@@ -641,8 +628,12 @@ static void disable_slot(struct acpiphp_slot *slot)
   if (PCI_SLOT(dev->devfn) == slot->device)
    pci_stop_and_remove_bus_device(dev);
 
- list_for_each_entry(func, &slot->funcs, sibling)
-  acpiphp_bus_trim(func_to_handle(func));
+ list_for_each_entry(func, &slot->funcs, sibling) {
+  struct acpi_device *adev;
+
+  if (!acpi_bus_get_device(func_to_handle(func), &adev))
+   acpi_bus_trim(adev);
+ }
 
  slot->flags &= (~SLOT_ENABLED);
 }
@@ -714,11 +705,12 @@ static unsigned int get_slot_status(struct acpiphp_slot *slot)
  */
 static void trim_stale_devices(struct pci_dev *dev)
 {
- acpi_handle handle = ACPI_HANDLE(&dev->dev);
+ struct acpi_device *adev = ACPI_COMPANION(&dev->dev);
  struct pci_bus *bus = dev->subordinate;
  bool alive = false;
 
- if (handle) {
+ if (adev) {
+  acpi_handle handle = adev->handle;
   acpi_status status;
   unsigned long long sta;
 
@@ -734,8 +726,8 @@ static void trim_stale_devices(struct pci_dev *dev)
  }
  if (!alive) {
   pci_stop_and_remove_bus_device(dev);
-  if (handle)
-   acpiphp_bus_trim(handle);
+  if (adev)
+   acpi_bus_trim(adev);
  } else if (bus) {
   struct pci_dev *child, *tmp;
 
-- 
1.7.1