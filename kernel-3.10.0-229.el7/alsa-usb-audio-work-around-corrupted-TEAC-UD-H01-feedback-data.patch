From ae88185bb95d5725b213f3d704fae8fb3aba9886 Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <jkysela@redhat.com>
Date: Wed, 3 Sep 2014 07:31:43 -0400
Subject: [alsa] usb-audio: work around corrupted TEAC UD-H01 feedback data

Message-id: <140972823573-287-patchset-jkysela@redhat.com>
Patchwork-id: 90983
O-Subject: [RHEL 7.1 PATCH 286/442] ALSA: usb-audio: work around corrupted TEAC UD-H01 feedback data
Bugzilla: 1112200
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>

The TEAC UD-H01 firmware sends wrong feedback frequency values, thus
causing the PC to send the samples at a wrong rate, which results in
clicks and crackles in the output.

Add a workaround to detect and fix the corruption.

Signed-off-by: Clemens Ladisch <clemens@ladisch.de>
[mick37@gmx.de: use sender->udh01_fb_quirk rather than
ep->udh01_fb_quirk in snd_usb_handle_sync_urb()]
Reported-and-tested-by: Mick <mick37@gmx.de>
Reported-and-tested-by: Andrea Messa <andr.messa@tiscali.it>
Cc: <stable@vger.kernel.org>
Signed-off-by: Takashi Iwai <tiwai@suse.de>

(picked from kernel: 7040b6d1febfdbd9c1595efb751d492cd2503f96)
rhbz#1112200
Signed-off-by: Jaroslav Kysela <jkysela@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/sound/usb/card.h b/sound/usb/card.h
index 9867ab8..97acb90 100644
--- a/sound/usb/card.h
+++ b/sound/usb/card.h
@@ -92,6 +92,7 @@ struct snd_usb_endpoint {
  unsigned int curframesize;      /* current packet size in frames (for capture) */
  unsigned int syncmaxsize; /* sync endpoint packet size */
  unsigned int fill_max:1; /* fill max packet size always */
+ unsigned int udh01_fb_quirk:1; /* corrupted feedback data */
  unsigned int datainterval;      /* log_2 of data packet interval */
  unsigned int syncinterval; /* P for adaptive mode, 0 otherwise */
  unsigned char silence_value;
diff --git a/sound/usb/endpoint.c b/sound/usb/endpoint.c
index e70a87e..289f582 100644
--- a/sound/usb/endpoint.c
+++ b/sound/usb/endpoint.c
@@ -471,6 +471,10 @@ struct snd_usb_endpoint *snd_usb_add_endpoint(struct snd_usb_audio *chip,
    ep->syncinterval = 3;
 
   ep->syncmaxsize = le16_to_cpu(get_endpoint(alts, 1)->wMaxPacketSize);
+
+  if (chip->usb_id == USB_ID(0x0644, 0x8038) /* TEAC UD-H01 */ &&
+      ep->syncmaxsize == 4)
+   ep->udh01_fb_quirk = 1;
  }
 
  list_add_tail(&ep->list, &chip->ep_list);
@@ -1105,7 +1109,16 @@ void snd_usb_handle_sync_urb(struct snd_usb_endpoint *ep,
  if (f == 0)
   return;
 
- if (unlikely(ep->freqshift == INT_MIN)) {
+ if (unlikely(sender->udh01_fb_quirk)) {
+  /*
+   * The TEAC UD-H01 firmware sometimes changes the feedback value
+   * by +/- 0x1.0000.
+   */
+  if (f < ep->freqn - 0x8000)
+   f += 0x10000;
+  else if (f > ep->freqn + 0x8000)
+   f -= 0x10000;
+ } else if (unlikely(ep->freqshift == INT_MIN)) {
   /*
    * The first time we see a feedback value, determine its format
    * by shifting it left or right until it matches the nominal
-- 
1.7.1