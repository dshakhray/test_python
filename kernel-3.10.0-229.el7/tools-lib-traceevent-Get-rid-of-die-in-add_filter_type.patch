From a174dd357fa7a341af07f50c0ad4e6766caae0c8 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:50:35 -0400
Subject: [tools] lib/traceevent: Get rid of die in add_filter_type()

Message-id: <1408953210-26343-148-git-send-email-jolsa@redhat.com>
Patchwork-id: 88890
O-Subject: [PATCH RHEL7.1 BZ1133083 147/322] tools lib traceevent: Get rid of die in add_filter_type()
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit ef3072cd1d5c2ea229f7abf8d6475e0c200eeb71
Author: Namhyung Kim <namhyung@kernel.org>
Date: Thu Dec 12 16:36:05 2013 +0900

description
===========
The realloc() should check return value and not to overwrite previous
pointer in case of error.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/lib/traceevent/parse-filter.c b/tools/lib/traceevent/parse-filter.c
index d4b0bac..767de4f 100644
--- a/tools/lib/traceevent/parse-filter.c
+++ b/tools/lib/traceevent/parse-filter.c
@@ -161,11 +161,13 @@ add_filter_type(struct event_filter *filter, int id)
  if (filter_type)
   return filter_type;
 
- filter->event_filters = realloc(filter->event_filters,
-     sizeof(*filter->event_filters) *
-     (filter->filters + 1));
- if (!filter->event_filters)
-  die("Could not allocate filter");
+ filter_type = realloc(filter->event_filters,
+         sizeof(*filter->event_filters) *
+         (filter->filters + 1));
+ if (!filter_type)
+  return NULL;
+
+ filter->event_filters = filter_type;
 
  for (i = 0; i < filter->filters; i++) {
   if (filter->event_filters[i].event_id > id)
@@ -1180,6 +1182,12 @@ static int filter_event(struct event_filter *filter,
  }
 
  filter_type = add_filter_type(filter, event->id);
+ if (filter_type == NULL) {
+  show_error(error_str, "failed to add a new filter: %s",
+      filter_str ? filter_str : "true");
+  return -1;
+ }
+
  if (filter_type->filter)
   free_arg(filter_type->filter);
  filter_type->filter = arg;
@@ -1417,6 +1425,9 @@ static int copy_filter_type(struct event_filter *filter,
    arg->boolean.value = 0;
 
   filter_type = add_filter_type(filter, event->id);
+  if (filter_type == NULL)
+   return -1;
+
   filter_type->filter = arg;
 
   free(str);
-- 
1.7.1