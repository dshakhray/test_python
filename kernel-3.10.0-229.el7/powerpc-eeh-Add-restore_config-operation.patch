From 4c27ddb4d707b8f3e067e59f9d715fa2fad41cc3 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:08:09 -0400
Subject: [powerpc] eeh: Add restore_config operation

Message-id: <1410545655-205645-261-git-send-email-dzickus@redhat.com>
Patchwork-id: 94216
O-Subject: [RHEL7 PATCH 260/626] powerpc/eeh: Add restore_config operation
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 1d350544d5bf17d835d2850004c64ca51235c771
Author: Gavin Shan <shangw@linux.vnet.ibm.com>
Date:   Fri Jan 3 17:47:12 2014 +0800

    powerpc/eeh: Add restore_config operation

    After reset on the specific PE or PHB, we never configure AER
    correctly on PowerNV platform. We needn't care it on pSeries
    platform. The patch introduces additional EEH operation eeh_ops::
    restore_config() so that we have chance to configure AER correctly
    for PowerNV platform.

    Signed-off-by: Gavin Shan <shangw@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/eeh.h b/arch/powerpc/include/asm/eeh.h
index d3e5e9b..7f8adc8 100644
--- a/arch/powerpc/include/asm/eeh.h
+++ b/arch/powerpc/include/asm/eeh.h
@@ -157,6 +157,7 @@ struct eeh_ops {
  int (*read_config)(struct device_node *dn, int where, int size, u32 *val);
  int (*write_config)(struct device_node *dn, int where, int size, u32 val);
  int (*next_error)(struct eeh_pe **pe);
+ int (*restore_config)(struct device_node *dn);
 };
 
 extern struct eeh_ops *eeh_ops;
diff --git a/arch/powerpc/kernel/eeh_pe.c b/arch/powerpc/kernel/eeh_pe.c
index 1feccd6..f0c353f 100644
--- a/arch/powerpc/kernel/eeh_pe.c
+++ b/arch/powerpc/kernel/eeh_pe.c
@@ -736,6 +736,9 @@ static void *eeh_restore_one_device_bars(void *data, void *flag)
  else
   eeh_restore_device_bars(edev, dn);
 
+ if (eeh_ops->restore_config)
+  eeh_ops->restore_config(dn);
+
  return NULL;
 }
 
diff --git a/arch/powerpc/platforms/powernv/eeh-powernv.c b/arch/powerpc/platforms/powernv/eeh-powernv.c
index 73b9814..ab91e6a 100644
--- a/arch/powerpc/platforms/powernv/eeh-powernv.c
+++ b/arch/powerpc/platforms/powernv/eeh-powernv.c
@@ -359,7 +359,8 @@ static struct eeh_ops powernv_eeh_ops = {
  .configure_bridge       = powernv_eeh_configure_bridge,
  .read_config            = pnv_pci_cfg_read,
  .write_config           = pnv_pci_cfg_write,
- .next_error  = powernv_eeh_next_error
+ .next_error  = powernv_eeh_next_error,
+ .restore_config  = NULL
 };
 
 /**
diff --git a/arch/powerpc/platforms/pseries/eeh_pseries.c b/arch/powerpc/platforms/pseries/eeh_pseries.c
index ccb633e..9ef3cc8 100644
--- a/arch/powerpc/platforms/pseries/eeh_pseries.c
+++ b/arch/powerpc/platforms/pseries/eeh_pseries.c
@@ -689,7 +689,9 @@ static struct eeh_ops pseries_eeh_ops = {
  .get_log  = pseries_eeh_get_log,
  .configure_bridge       = pseries_eeh_configure_bridge,
  .read_config  = pseries_eeh_read_config,
- .write_config  = pseries_eeh_write_config
+ .write_config  = pseries_eeh_write_config,
+ .next_error  = NULL,
+ .restore_config  = NULL
 };
 
 /**
-- 
1.7.1