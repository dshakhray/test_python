From 8e9a822cf57879f444ab06e89dd5f205006fdd0e Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:25:26 -0400
Subject: [net] libceph: switch ceph_calc_pg_acting() to new helpers
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-220-git-send-email-sweil@redhat.com>
Patchwork-id: 89678
O-Subject: [PATCH 219/303] libceph: switch ceph_calc_pg_acting() to new helpers
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Ilya Dryomov <ilya.dryomov@inktank.com>

Switch ceph_calc_pg_acting() to new helpers: pg_to_raw_osds(),
raw_to_up_osds() and apply_temps().

Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>
Reviewed-by: Alex Elder <elder@linaro.org>
(cherry picked from commit ac972230e20581b044f5ce66dcaf3c5af8d57444)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/linux/ceph/osdmap.h b/include/linux/ceph/osdmap.h
index 4e28c1e..b0c8f84 100644
--- a/include/linux/ceph/osdmap.h
+++ b/include/linux/ceph/osdmap.h
@@ -212,7 +212,7 @@ extern int ceph_oloc_oid_to_pg(struct ceph_osdmap *osdmap,
 
 extern int ceph_calc_pg_acting(struct ceph_osdmap *osdmap,
           struct ceph_pg pgid,
-          int *acting);
+          int *osds);
 extern int ceph_calc_pg_primary(struct ceph_osdmap *osdmap,
     struct ceph_pg pgid);
 
diff --git a/net/ceph/osdmap.c b/net/ceph/osdmap.c
index bd40f56..f1cad21 100644
--- a/net/ceph/osdmap.c
+++ b/net/ceph/osdmap.c
@@ -1649,24 +1649,49 @@ static int apply_temps(struct ceph_osdmap *osdmap,
 }
 
 /*
- * Return acting set for given pgid.
+ * Calculate acting set for given pgid.
+ *
+ * Return acting set length, or error.
  */
 int ceph_calc_pg_acting(struct ceph_osdmap *osdmap, struct ceph_pg pgid,
-   int *acting)
+   int *osds)
 {
- int rawosds[CEPH_PG_MAX_SIZE], *osds;
- int i, o, num = CEPH_PG_MAX_SIZE;
+ struct ceph_pg_pool_info *pool;
+ u32 pps;
+ int len;
+ int primary;
 
- osds = calc_pg_raw(osdmap, pgid, rawosds, &num);
- if (!osds)
-  return -1;
+ pool = __lookup_pg_pool(&osdmap->pg_pools, pgid.pool);
+ if (!pool)
+  return 0;
 
- /* primary is first up osd */
- o = 0;
- for (i = 0; i < num; i++)
-  if (ceph_osd_is_up(osdmap, osds[i]))
-   acting[o++] = osds[i];
- return o;
+ if (pool->flags & CEPH_POOL_FLAG_HASHPSPOOL) {
+  /* hash pool id and seed so that pool PGs do not overlap */
+  pps = crush_hash32_2(CRUSH_HASH_RJENKINS1,
+         ceph_stable_mod(pgid.seed, pool->pgp_num,
+           pool->pgp_num_mask),
+         pgid.pool);
+ } else {
+  /*
+   * legacy behavior: add ps and pool together.  this is
+   * not a great approach because the PGs from each pool
+   * will overlap on top of each other: 0.5 == 1.4 ==
+   * 2.3 == ...
+   */
+  pps = ceph_stable_mod(pgid.seed, pool->pgp_num,
+          pool->pgp_num_mask) +
+   (unsigned)pgid.pool;
+ }
+
+ len = pg_to_raw_osds(osdmap, pool, pgid, pps, osds);
+ if (len < 0)
+  return len;
+
+ len = raw_to_up_osds(osdmap, pool, osds, len, &primary);
+
+ len = apply_temps(osdmap, pool, pgid, osds, len, &primary);
+
+ return len;
 }
 
 /*
-- 
1.7.1