From 6fe3114f264431b2f1374e3301321d6ad42dd9e5 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 28 Aug 2014 03:05:19 -0400
Subject: [acpi] hotplug: Do not fail bus and device checks for disabled hotplug

Message-id: <20140828030519.2117.64824.stgit@gir.stowe>
Patchwork-id: 89305
O-Subject: [RHEL7.1 PATCH 17/30] ACPI / hotplug: Do not fail bus and device checks for disabled hotplug
Bugzilla: 1128632
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1128632
Upstream Status: 1ceaba05b4afb4bd7b4b4801f2718c13f59321eb

commit 1ceaba05b4afb4bd7b4b4801f2718c13f59321eb
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Nov 22 21:54:52 2013 +0100

    ACPI / hotplug: Do not fail bus and device checks for disabled hotplug

    If the scan handler for the given device has hotplug.enabled
    unset, it doesn't really make sense to fail bus check and device
    check notifications.

    First, bus check may not have anything to do with the device it is
    signaled for, but it may concern another device on the bus below
    this one.  For this reason, bus check notifications should not be
    failed if hotplug is disabled for the target device.

    Second, device check notifications are signaled only after a device
    has already appeared (or disappeared), so failing it can only prevent
    scan handlers and drivers from attaching to that (already existing)
    device, which is not very useful.

    Consequently, if device hotplug is disabled through the device's
    scan handler, fail eject request notifications only.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Mika Westerberg <mika.westerberg@linux.intel.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/acpi/scan.c b/drivers/acpi/scan.c
index fb60f92..f0fee8b 100644
--- a/drivers/acpi/scan.c
+++ b/drivers/acpi/scan.c
@@ -363,43 +363,13 @@ static void acpi_scan_bus_device_check(void *data, u32 ost_source)
  unlock_device_hotplug();
 }
 
-static void acpi_hotplug_unsupported(acpi_handle handle, u32 type)
-{
- u32 ost_status;
-
- switch (type) {
- case ACPI_NOTIFY_BUS_CHECK:
-  acpi_handle_debug(handle,
-   "ACPI_NOTIFY_BUS_CHECK event: unsupported\n");
-  ost_status = ACPI_OST_SC_INSERT_NOT_SUPPORTED;
-  break;
- case ACPI_NOTIFY_DEVICE_CHECK:
-  acpi_handle_debug(handle,
-   "ACPI_NOTIFY_DEVICE_CHECK event: unsupported\n");
-  ost_status = ACPI_OST_SC_INSERT_NOT_SUPPORTED;
-  break;
- case ACPI_NOTIFY_EJECT_REQUEST:
-  acpi_handle_debug(handle,
-   "ACPI_NOTIFY_EJECT_REQUEST event: unsupported\n");
-  ost_status = ACPI_OST_SC_EJECT_NOT_SUPPORTED;
-  break;
- default:
-  /* non-hotplug event; possibly handled by other handler */
-  return;
- }
-
- acpi_evaluate_hotplug_ost(handle, type, ost_status, NULL);
-}
-
 static void acpi_hotplug_notify_cb(acpi_handle handle, u32 type, void *data)
 {
+ u32 ost_code = ACPI_OST_SC_NON_SPECIFIC_FAILURE;
  struct acpi_scan_handler *handler = data;
  struct acpi_device *adev;
  acpi_status status;
 
- if (!handler->hotplug.enabled)
-  return acpi_hotplug_unsupported(handle, type);
-
  switch (type) {
  case ACPI_NOTIFY_BUS_CHECK:
   acpi_handle_debug(handle, "ACPI_NOTIFY_BUS_CHECK event\n");
@@ -409,6 +379,11 @@ static void acpi_hotplug_notify_cb(acpi_handle handle, u32 type, void *data)
   break;
  case ACPI_NOTIFY_EJECT_REQUEST:
   acpi_handle_debug(handle, "ACPI_NOTIFY_EJECT_REQUEST event\n");
+  if (!handler->hotplug.enabled) {
+   acpi_handle_err(handle, "Eject disabled\n");
+   ost_code = ACPI_OST_SC_EJECT_NOT_SUPPORTED;
+   goto err_out;
+  }
   if (acpi_bus_get_device(handle, &adev))
    goto err_out;
 
@@ -428,8 +403,7 @@ static void acpi_hotplug_notify_cb(acpi_handle handle, u32 type, void *data)
   return;
 
  err_out:
- acpi_evaluate_hotplug_ost(handle, type,
-      ACPI_OST_SC_NON_SPECIFIC_FAILURE, NULL);
+ acpi_evaluate_hotplug_ost(handle, type, ost_code, NULL);
 }
 
 static ssize_t real_power_state_show(struct device *dev,
-- 
1.7.1