From 12ada1b3468142dce53432f32ac7a4e6cf402ea3 Mon Sep 17 00:00:00 2001
From: Hannes Frederic Sowa <hannes@redhat.com>
Date: Sun, 10 Aug 2014 16:10:07 -0400
Subject: [net] ipv6: fix calculation of option len in ip6_append_data

Message-id: <93b30cc00b049dcec8f6346e104b12117fb6f6f8.1407685044.git.hannes@redhat.com>
Patchwork-id: 87567
O-Subject: [PATCH net RHEL7 3/3] ipv6: fix calculation of option len in ip6_append_data
Bugzilla: 1127218
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Daniel Borkmann <dborkman@redhat.com>
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1127218
Upstream Status: 3a1cebe7e05027a1c96f2fc1a8eddf5f19b78f42
Brew: http://brewweb.devel.redhat.com/brew/taskinfo?taskID=7823897
Tested: verified on beaker with strace and tracepath(6)

Upstream Commit:
commit 3a1cebe7e05027a1c96f2fc1a8eddf5f19b78f42
Author: Hannes Frederic Sowa <hannes@stressinduktion.org>
Date:   Sun May 11 23:01:13 2014 +0200

    ipv6: fix calculation of option len in ip6_append_data

    tot_len does specify the size of struct ipv6_txoptions. We need opt_flen +
    opt_nflen to calculate the overall length of additional ipv6 extensions.

    I found this while auditing the ipv6 output path for a memory corruption
    reported by Alexey Preobrazhensky while he fuzzed an instrumented
    AddressSanitizer kernel with trinity. This may or may not be the cause
    of the original bug.

    Fixes: 4df98e76cde7c6 ("ipv6: pmtudisc setting not respected with UFO/CORK")
    Reported-by: Alexey Preobrazhensky <preobr@google.com>
    Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Hannes Frederic Sowa <hsowa@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ipv6/ip6_output.c b/net/ipv6/ip6_output.c
index 9a58dff..67265a1 100644
--- a/net/ipv6/ip6_output.c
+++ b/net/ipv6/ip6_output.c
@@ -1214,7 +1214,7 @@ int ip6_append_data(struct sock *sk, int getfrag(void *from, char *to,
   unsigned int maxnonfragsize, headersize;
 
   headersize = sizeof(struct ipv6hdr) +
-        (opt ? opt->tot_len : 0) +
+        (opt ? opt->opt_flen + opt->opt_nflen : 0) +
         (dst_allfrag(&rt->dst) ?
          sizeof(struct frag_hdr) : 0) +
         rt->rt6i_nfheader_len;
-- 
1.7.1