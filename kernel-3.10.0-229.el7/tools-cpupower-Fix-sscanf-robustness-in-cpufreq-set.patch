From 90f962d079ed1d4683420f408d2ed13484fc14eb Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Tue, 26 Aug 2014 12:49:15 -0400
Subject: [tools] cpupower: Fix sscanf robustness in cpufreq-set

Message-id: <1409057382-26432-5-git-send-email-prarit@redhat.com>
Patchwork-id: 89079
O-Subject: [RHEL7.1 PATCH BZ 1133893 04/31] cpupower: Fix sscanf robustness in cpufreq-set
Bugzilla: 1133893
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1133893

commit fdfe840e480c56dc1119c31bb4fcc211b1b9b46f
Author: One Thousand Gnomes <gnomes@lxorguk.ukuu.org.uk>
Date:   Tue Dec 17 15:07:31 2013 +0000

    cpupower: Fix sscanf robustness in cpufreq-set

    The cpufreq-set tool has a missing length check. This is basically
    just correctness but still should get fixed.

    One of a set of sscanf problems reported by Jackie Chang

    Signed-off-by: Alan Cox <alan@linux.intel.com>
    [rjw: Subject]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/power/cpupower/utils/cpufreq-set.c b/tools/power/cpupower/utils/cpufreq-set.c
index dd1539e..a416de8 100644
--- a/tools/power/cpupower/utils/cpufreq-set.c
+++ b/tools/power/cpupower/utils/cpufreq-set.c
@@ -257,7 +257,7 @@ int cmd_freq_set(int argc, char **argv)
     print_unknown_arg();
     return -EINVAL;
    }
-   if ((sscanf(optarg, "%s", gov)) != 1) {
+   if ((sscanf(optarg, "%19s", gov)) != 1) {
     print_unknown_arg();
     return -EINVAL;
    }
-- 
1.7.1