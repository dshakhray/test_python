From 40e893ea284234404c26765e6bae57cff3bea951 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:00:59 -0400
Subject: [fs] btrfs: send: remove virtual_mem member from fs_path

Message-id: <1407179109-13714-173-git-send-email-sandeen@redhat.com>
Patchwork-id: 87104
O-Subject: [RHEL7.1 PATCH 172/422] btrfs: send: remove virtual_mem member from fs_path
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: David Sterba <dsterba@suse.cz>

commit e25a8122061edcde6175cbcfd2e21367ad017212
Author: David Sterba <dsterba@suse.cz>
Date:   Mon Feb 3 19:23:33 2014 +0100

    btrfs: send: remove virtual_mem member from fs_path

    We don't need to keep track of that, it's available via is_vmalloc_addr.

    Signed-off-by: David Sterba <dsterba@suse.cz>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/send.c b/fs/btrfs/send.c
index 851ebfd..5b9b82b 100644
--- a/fs/btrfs/send.c
+++ b/fs/btrfs/send.c
@@ -55,7 +55,6 @@ struct fs_path {
    char *buf;
    int buf_len;
    unsigned int reversed:1;
-   unsigned int virtual_mem:1;
    char inline_buf[];
   };
   char pad[PAGE_SIZE];
@@ -241,7 +240,6 @@ static struct fs_path *fs_path_alloc(void)
  if (!p)
   return NULL;
  p->reversed = 0;
- p->virtual_mem = 0;
  p->buf = p->inline_buf;
  p->buf_len = FS_PATH_INLINE_SIZE;
  fs_path_reset(p);
@@ -265,7 +263,7 @@ static void fs_path_free(struct fs_path *p)
  if (!p)
   return;
  if (p->buf != p->inline_buf) {
-  if (p->virtual_mem)
+  if (is_vmalloc_addr(p->buf))
    vfree(p->buf);
   else
    kfree(p->buf);
@@ -299,13 +297,12 @@ static int fs_path_ensure_buf(struct fs_path *p, int len)
    tmp_buf = vmalloc(len);
    if (!tmp_buf)
     return -ENOMEM;
-   p->virtual_mem = 1;
   }
   memcpy(tmp_buf, p->buf, p->buf_len);
   p->buf = tmp_buf;
   p->buf_len = len;
  } else {
-  if (p->virtual_mem) {
+  if (is_vmalloc_addr(p->buf)) {
    tmp_buf = vmalloc(len);
    if (!tmp_buf)
     return -ENOMEM;
@@ -319,7 +316,6 @@ static int fs_path_ensure_buf(struct fs_path *p, int len)
      return -ENOMEM;
     memcpy(tmp_buf, p->buf, p->buf_len);
     kfree(p->buf);
-    p->virtual_mem = 1;
    }
   }
   p->buf = tmp_buf;
-- 
1.7.1