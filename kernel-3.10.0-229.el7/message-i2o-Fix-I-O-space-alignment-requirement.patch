From a0984552a098b45ec19789900f689363999dd463 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Wed, 6 Aug 2014 03:49:14 -0400
Subject: [message] i2o: Fix I/O space alignment requirement

Message-id: <20140806034913.1438.57695.stgit@gir.stowe>
Patchwork-id: 87457
O-Subject: [RHEL7.1 PATCH 48/69] i2o: Fix I/O space alignment requirement
Bugzilla: 1110896
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110896
Upstream Status: 5c513bd580323dbe794270c5a96b65ba22f376eb

commit 5c513bd580323dbe794270c5a96b65ba22f376eb
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Wed Feb 26 11:25:57 2014 -0700

    i2o: Fix I/O space alignment requirement

    When i2o_iop_systab_set() allocates I/O port space, it specifies 1Mb
    alignment required.  This seems unlikely, since most platforms have only
    64Kb of I/O space total.  I think 4Kb is a more reasonable choice, since
    that's the minimum alignment of a PCI-PCI bridge I/O window.

    My guess is that this is a copy/paste error from the memory allocation
    code, which specifies 1Mb alignment (which is the minimum alignment of a
    PCI-PCI bridge memory window).

    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/message/i2o/iop.c b/drivers/message/i2o/iop.c
index a8373d7..68aef58 100644
--- a/drivers/message/i2o/iop.c
+++ b/drivers/message/i2o/iop.c
@@ -700,7 +700,7 @@ static int i2o_iop_systab_set(struct i2o_controller *c)
   root = pci_find_parent_resource(c->pdev, res);
   if (root == NULL)
    osm_warn("%s: Can't find parent resource!\n", c->name);
-  if (root && allocate_resource(root, res, sb->desired_io_size, sb->desired_io_size, sb->desired_io_size, 1 << 20, /* Unspecified, so use 1Mb and play safe */
+  if (root && allocate_resource(root, res, sb->desired_io_size, sb->desired_io_size, sb->desired_io_size, 1 << 12, /* Unspecified, so use 4Kb and play safe */
            NULL, NULL) >= 0) {
    c->io_alloc = 1;
    sb->current_io_size = resource_size(res);
-- 
1.7.1