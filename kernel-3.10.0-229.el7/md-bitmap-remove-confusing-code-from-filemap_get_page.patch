From a2af8a2fc1e6f470798dbc8712807679bdc34fb9 Mon Sep 17 00:00:00 2001
From: Jes Sorensen <Jes.Sorensen@redhat.com>
Date: Mon, 1 Sep 2014 09:26:08 -0400
Subject: [md] bitmap: remove confusing code from filemap_get_page

Message-id: <1409563584-9000-67-git-send-email-Jes.Sorensen@redhat.com>
Patchwork-id: 89997
O-Subject: [RHEL7.1 PATCH 66/82] md/bitmap: remove confusing code from filemap_get_page.
Bugzilla: 1085530
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

From: NeilBrown <neilb@suse.de>

file_page_index(store, 0) is *always* 0.
This is because the bitmap sb, at 256 bytes, is *always* less than
one page.
So subtracting it has no effect and the code should be removed.

Reported-by: Goldwyn Rodrigues <rgoldwyn@suse.de>
Signed-off-by: NeilBrown <neilb@suse.de>
(cherry picked from commit f2e06c58841b3e89eaacfa88ce14389d311c54a8)
Signed-off-by: Jes Sorensen <Jes.Sorensen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/bitmap.c b/drivers/md/bitmap.c
index 91e7758..d3789f2 100644
--- a/drivers/md/bitmap.c
+++ b/drivers/md/bitmap.c
@@ -669,17 +669,13 @@ static inline unsigned long file_page_offset(struct bitmap_storage *store,
 /*
  * return a pointer to the page in the filemap that contains the given bit
  *
- * this lookup is complicated by the fact that the bitmap sb might be exactly
- * 1 page (e.g., x86) or less than 1 page -- so the bitmap might start on page
- * 0 or page 1
  */
 static inline struct page *filemap_get_page(struct bitmap_storage *store,
          unsigned long chunk)
 {
  if (file_page_index(store, chunk) >= store->file_pages)
   return NULL;
- return store->filemap[file_page_index(store, chunk)
-         - file_page_index(store, 0)];
+ return store->filemap[file_page_index(store, chunk)];
 }
 
 static int bitmap_storage_alloc(struct bitmap_storage *store,
-- 
1.7.1