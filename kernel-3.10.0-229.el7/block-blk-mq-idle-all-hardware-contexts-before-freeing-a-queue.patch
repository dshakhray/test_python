From 668b26e7bf7bf33ae2a57b02de79e3c4dcb9a748 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Fri, 13 Jun 2014 14:36:07 -0400
Subject: [block] blk-mq: idle all hardware contexts before freeing a queue

Message-id: <1402670238-13916-80-git-send-email-snitzer@redhat.com>
Patchwork-id: 83852
O-Subject: [RHEL7.1 PATCH 079/150] blk-mq: idle all hardware contexts before freeing a queue
Bugzilla: 1105204
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Jeff Moyer <jmoyer@redhat.com>

BZ: 1105204

Upstream commit 19c5d84f14d2b01fe4c24e1444142f69e6dc08f6
Author: Christoph Hellwig <hch@lst.de>
Date:   Mon May 26 11:45:02 2014 +0200

    blk-mq: idle all hardware contexts before freeing a queue

    Without this we can leak the active_queues reference if a command is
    freed while it is considered active.

    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@fb.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/block/blk-mq.c b/block/blk-mq.c
index 9bc0753..62082c5 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -1844,6 +1844,7 @@ void blk_mq_free_queue(struct request_queue *q)
  blk_mq_del_queue_tag_set(q);
 
  queue_for_each_hw_ctx(q, hctx, i) {
+  blk_mq_tag_idle(hctx);
   kfree(hctx->ctxs);
   blk_mq_unregister_cpu_notifier(&hctx->cpu_notifier);
   if (q->mq_ops->exit_hctx)
-- 
1.7.1