From f34dc4f0d75b076ad57f4cede1263695ca026b5e Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:48:30 -0400
Subject: [tools] perf/trace: Remove thread summary coloring

Message-id: <1408953210-26343-23-git-send-email-jolsa@redhat.com>
Patchwork-id: 88756
O-Subject: [PATCH RHEL7.1 BZ1133083 022/322] perf trace: Remove thread summary coloring
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 15e65c693d7de4c83d1e97fd89f87d47f2219782
Author: Pekka Enberg <penberg@kernel.org>
Date: Thu Nov 14 18:43:30 2013 +0200

description
===========
Thread summary line coloring looks ugly.  It doesn't add much value so
remove coloring completely.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-trace.c b/tools/perf/builtin-trace.c
index 8be17fc..e9f345e 100644
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@ -2158,7 +2158,6 @@ static int trace__fprintf_one_thread(struct thread *thread, void *priv)
  size_t printed = data->printed;
  struct trace *trace = data->trace;
  struct thread_trace *ttrace = thread->priv;
- const char *color;
  double ratio;
 
  if (ttrace == NULL)
@@ -2166,17 +2165,9 @@ static int trace__fprintf_one_thread(struct thread *thread, void *priv)
 
  ratio = (double)ttrace->nr_events / trace->nr_events * 100.0;
 
- color = PERF_COLOR_NORMAL;
- if (ratio > 50.0)
-  color = PERF_COLOR_RED;
- else if (ratio > 25.0)
-  color = PERF_COLOR_GREEN;
- else if (ratio > 5.0)
-  color = PERF_COLOR_YELLOW;
-
- printed += color_fprintf(fp, color, " %s (%d), ", thread__comm_str(thread), thread->tid);
+ printed += fprintf(fp, " %s (%d), ", thread__comm_str(thread), thread->tid);
  printed += fprintf(fp, "%lu events, ", ttrace->nr_events);
- printed += color_fprintf(fp, color, "%.1f%%", ratio);
+ printed += fprintf(fp, "%.1f%%", ratio);
  printed += fprintf(fp, ", %.3f msec\n", ttrace->runtime_ms);
  printed += thread__dump_stats(ttrace, trace, fp);
 
-- 
1.7.1