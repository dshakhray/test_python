From 5ab0a3973386f07bae03539cc1e8ecc022fae59c Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <jkysela@redhat.com>
Date: Wed, 3 Sep 2014 07:23:13 -0400
Subject: [alsa] rme96: Use standard printk helpers

Message-id: <140972823573-168-patchset-jkysela@redhat.com>
Patchwork-id: 90868
O-Subject: [RHEL 7.1 PATCH 167/442] ALSA: rme96: Use standard printk helpers
Bugzilla: 1112200
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>

Convert with dev_err() and co from snd_printk(), etc.

Signed-off-by: Takashi Iwai <tiwai@suse.de>

(picked from kernel: 342cd93439501f8b8f7e150ad23fb9f24d6b8920)
rhbz#1112200
Signed-off-by: Jaroslav Kysela <jkysela@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/sound/pci/rme96.c b/sound/pci/rme96.c
index f5014a8..7616992 100644
--- a/sound/pci/rme96.c
+++ b/sound/pci/rme96.c
@@ -1609,13 +1609,15 @@ snd_rme96_create(struct rme96 *rme96)
 
  rme96->iobase = ioremap_nocache(rme96->port, RME96_IO_SIZE);
  if (!rme96->iobase) {
-  snd_printk(KERN_ERR "unable to remap memory region 0x%lx-0x%lx\n", rme96->port, rme96->port + RME96_IO_SIZE - 1);
+  dev_err(rme96->card->dev,
+   "unable to remap memory region 0x%lx-0x%lx\n",
+   rme96->port, rme96->port + RME96_IO_SIZE - 1);
   return -ENOMEM;
  }
 
  if (request_irq(pci->irq, snd_rme96_interrupt, IRQF_SHARED,
    KBUILD_MODNAME, rme96)) {
-  snd_printk(KERN_ERR "unable to grab IRQ %d\n", pci->irq);
+  dev_err(rme96->card->dev, "unable to grab IRQ %d\n", pci->irq);
   return -EBUSY;
  }
  rme96->irq = pci->irq;
@@ -2414,7 +2416,7 @@ static int rme96_resume(struct device *dev)
 
  pci_restore_state(pci);
  if (pci_enable_device(pci) < 0) {
-  printk(KERN_ERR "rme96: pci_enable_device failed, disabling device\n");
+  dev_err(dev, "pci_enable_device failed, disabling device\n");
   snd_card_disconnect(card);
   return -EIO;
  }
@@ -2494,14 +2496,14 @@ snd_rme96_probe(struct pci_dev *pci,
 #ifdef CONFIG_PM_SLEEP
  rme96->playback_suspend_buffer = vmalloc(RME96_BUFFER_SIZE);
  if (!rme96->playback_suspend_buffer) {
-  snd_printk(KERN_ERR
+  dev_err(card->dev,
       "Failed to allocate playback suspend buffer!\n");
   snd_card_free(card);
   return -ENOMEM;
  }
  rme96->capture_suspend_buffer = vmalloc(RME96_BUFFER_SIZE);
  if (!rme96->capture_suspend_buffer) {
-  snd_printk(KERN_ERR
+  dev_err(card->dev,
       "Failed to allocate capture suspend buffer!\n");
   snd_card_free(card);
   return -ENOMEM;
-- 
1.7.1