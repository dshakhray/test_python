From 9e982c97b7e9878dfdc4eeaa908d75502a336460 Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:40:06 -0400
Subject: [virt] kvm/vmx: disable APIC virtualization in nested guests

Message-id: <1406040016-3289-212-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86290
O-Subject: [RHEL7 PATCH v2 211/221] KVM: vmx: disable APIC virtualization in nested guests
Bugzilla: 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

While running a nested guest, we should disable APIC virtualization
controls (virtualized APIC register accesses, virtual interrupt
delivery and posted interrupts), because we do not expose them to
the nested guest.

Reported-by: Hu Yaohui <loki2441@gmail.com>
Suggested-by: Abel Gordon <abel@stratoscale.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 696dfd95ba9838327a7013e5988ff3ba60dcc8c8)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index b57fde2..801332e 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -7857,7 +7857,8 @@ static void prepare_vmcs02(struct kvm_vcpu *vcpu, struct vmcs12 *vmcs12)
 
  exec_control = vmcs12->pin_based_vm_exec_control;
  exec_control |= vmcs_config.pin_based_exec_ctrl;
- exec_control &= ~PIN_BASED_VMX_PREEMPTION_TIMER;
+ exec_control &= ~(PIN_BASED_VMX_PREEMPTION_TIMER |
+                          PIN_BASED_POSTED_INTR);
  vmcs_write32(PIN_BASED_VM_EXEC_CONTROL, exec_control);
 
  vmx->nested.preemption_timer_expired = false;
@@ -7894,7 +7895,9 @@ static void prepare_vmcs02(struct kvm_vcpu *vcpu, struct vmcs12 *vmcs12)
   if (!vmx->rdtscp_enabled)
    exec_control &= ~SECONDARY_EXEC_RDTSCP;
   /* Take the following fields only from vmcs12 */
-  exec_control &= ~SECONDARY_EXEC_VIRTUALIZE_APIC_ACCESSES;
+  exec_control &= ~(SECONDARY_EXEC_VIRTUALIZE_APIC_ACCESSES |
+      SECONDARY_EXEC_VIRTUAL_INTR_DELIVERY |
+                                  SECONDARY_EXEC_APIC_REGISTER_VIRT);
   if (nested_cpu_has(vmcs12,
     CPU_BASED_ACTIVATE_SECONDARY_CONTROLS))
    exec_control |= vmcs12->secondary_vm_exec_control;
-- 
1.7.1