From f6abf15855ccc2dbc2e74a3d4f1b1793d94f5f1d Mon Sep 17 00:00:00 2001
From: Chad Dupuis <cdupuis@redhat.com>
Date: Mon, 18 Aug 2014 19:55:55 -0400
Subject: [scsi] qla2xxx: Disable INTx interrupt for ISP82XX

Message-id: <1408391817-6389-8-git-send-email-cdupuis@redhat.com>
Patchwork-id: 87906
O-Subject: [PATCH RHEL 7.1 e-stor 07/69] qla2xxx: Disable INTx interrupt for ISP82XX
Bugzilla: 1089346
RH-Acked-by: Rob Evers <revers@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Sawan Chandak <sawan.chandak@qlogic.com>

scsi commit id 7fa3e239c0104a388913976210c0cfc657ec6f2b

Signed-off-by: Sawan Chandak <sawan.chandak@qlogic.com>
Signed-off-by: Saurav Kashyap <saurav.kashyap@qlogic.com>
Signed-off-by: James Bottomley <JBottomley@Parallels.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/qla2xxx/qla_isr.c b/drivers/scsi/qla2xxx/qla_isr.c
index fa03ddc..2e6eae3 100644
--- a/drivers/scsi/qla2xxx/qla_isr.c
+++ b/drivers/scsi/qla2xxx/qla_isr.c
@@ -2933,7 +2933,7 @@ msix_out:
 int
 qla2x00_request_irqs(struct qla_hw_data *ha, struct rsp_que *rsp)
 {
- int ret;
+ int ret = QLA_FUNCTION_FAILED;
  device_reg_t __iomem *reg = ha->iobase;
  scsi_qla_host_t *vha = pci_get_drvdata(ha->pdev);
 
@@ -2967,10 +2967,12 @@ qla2x00_request_irqs(struct qla_hw_data *ha, struct rsp_que *rsp)
       ha->chip_revision, ha->fw_attributes);
   goto clear_risc_ints;
  }
- ql_log(ql_log_info, vha, 0x0037,
-     "MSI-X Falling back-to MSI mode -%d.\n", ret);
+
 skip_msix:
 
+ ql_log(ql_log_info, vha, 0x0037,
+     "Falling back-to MSI mode -%d.\n", ret);
+
  if (!IS_QLA24XX(ha) && !IS_QLA2532(ha) && !IS_QLA8432(ha) &&
      !IS_QLA8001(ha) && !IS_P3P_TYPE(ha) && !IS_QLAFX00(ha))
   goto skip_msi;
@@ -2982,14 +2984,13 @@ skip_msix:
   ha->flags.msi_enabled = 1;
  } else
   ql_log(ql_log_warn, vha, 0x0039,
-      "MSI-X; Falling back-to INTa mode -- %d.\n", ret);
+      "Falling back-to INTa mode -- %d.\n", ret);
+skip_msi:
 
  /* Skip INTx on ISP82xx. */
  if (!ha->flags.msi_enabled && IS_QLA82XX(ha))
   return QLA_FUNCTION_FAILED;
 
-skip_msi:
-
  ret = request_irq(ha->pdev->irq, ha->isp_ops->intr_handler,
      ha->flags.msi_enabled ? 0 : IRQF_SHARED,
      QLA2XXX_DRIVER_NAME, rsp);
-- 
1.7.1