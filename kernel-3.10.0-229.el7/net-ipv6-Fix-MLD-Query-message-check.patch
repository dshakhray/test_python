From a52a6e09bdc44b33d150d1d95726344a4f740ff7 Mon Sep 17 00:00:00 2001
From: Jiri Pirko <jpirko@redhat.com>
Date: Fri, 1 Aug 2014 13:20:28 -0400
Subject: [net] ipv6: Fix MLD Query message check

Message-id: <1406899228-27470-1-git-send-email-jpirko@redhat.com>
Patchwork-id: 86931
O-Subject: [patch rhel7 net] ipv6: Fix MLD Query message check
Bugzilla: 1114650
RH-Acked-by: Daniel Borkmann <dborkman@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Flavio Leitner <fbl@redhat.com>
RH-Acked-by: Neil Horman <nhorman@redhat.com>
RH-Acked-by: Florian Westphal <fwestpha@redhat.com>
RH-Acked-by: Hannes Frederic Sowa <hannes@redhat.com>

BZ1114650
https://brewweb.devel.redhat.com/taskinfo?taskID=7772799
Tested by TAHI testsuite by Hangbin Liu

upstream commit e940f5d6ba6a01f8dbb870854d5205d322452730
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Fri Jun 27 09:57:53 2014 +0800

    ipv6: Fix MLD Query message check

    Based on RFC3810 6.2, we also need to check the hop limit and router alert
    option besides source address.

Signed-off-by: Jiri Pirko <jpirko@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ipv6/mcast.c b/net/ipv6/mcast.c
index 2d9d15b..e4ba797 100644
--- a/net/ipv6/mcast.c
+++ b/net/ipv6/mcast.c
@@ -1301,8 +1301,17 @@ int igmp6_event_query(struct sk_buff *skb)
  len = ntohs(ipv6_hdr(skb)->payload_len) + sizeof(struct ipv6hdr);
  len -= skb_network_header_len(skb);
 
- /* Drop queries with not link local source */
- if (!(ipv6_addr_type(&ipv6_hdr(skb)->saddr) & IPV6_ADDR_LINKLOCAL))
+ /* RFC3810 6.2
+  * Upon reception of an MLD message that contains a Query, the node
+  * checks if the source address of the message is a valid link-local
+  * address, if the Hop Limit is set to 1, and if the Router Alert
+  * option is present in the Hop-By-Hop Options header of the IPv6
+  * packet.  If any of these checks fails, the packet is dropped.
+  */
+ if (!(ipv6_addr_type(&ipv6_hdr(skb)->saddr) & IPV6_ADDR_LINKLOCAL) ||
+     ipv6_hdr(skb)->hop_limit != 1 ||
+     !(IP6CB(skb)->flags & IP6SKB_ROUTERALERT) ||
+     IP6CB(skb)->ra != htons(IPV6_OPT_ROUTERALERT_MLD))
   return -EINVAL;
 
  idev = __in6_dev_get(skb->dev);
-- 
1.7.1