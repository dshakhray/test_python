From 29121c0a80aed5e6180d38334a00af2bfe08ec6a Mon Sep 17 00:00:00 2001
From: Amir Vadai <avadai@redhat.com>
Date: Thu, 11 Sep 2014 12:01:21 -0400
Subject: [infiniband] mlx4: Fix gfp passing in create_qp_common()

Message-id: <4a655cf5efd4fdd01aa7333f930c066b375a75d5.1410425016.git.avadai@redhat.com>
Patchwork-id: 93671
O-Subject: [Patch RHEL7.1 V1 145/197] IB/mlx4: Fix gfp passing in create_qp_common()
Bugzilla: 1107617 1107618 1107619 1107620
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

From: Jiri Kosina <jkosina@suse.cz>

There are two kzalloc() calls which were not converted to use value of
gfp passed to create_qp_common() instead of using hardcoded GFP_KERNEL
in 40f2287bd583 ("IB/mlx4: Implement IB_QP_CREATE_USE_GFP_NOIO").  Fix
this by passing gfp value down properly.

Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
Signed-off-by: Jiri Kosina <jkosina@suse.cz>
Signed-off-by: Roland Dreier <roland@purestorage.com>
(cherry picked from commit 6fcd8d0d93fb2f38807371bb144f3f869d4ca5a2)
Signed-off-by: Amir Vadai <avadai@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/infiniband/hw/mlx4/qp.c b/drivers/infiniband/hw/mlx4/qp.c
index b101c80..6778045 100644
--- a/drivers/infiniband/hw/mlx4/qp.c
+++ b/drivers/infiniband/hw/mlx4/qp.c
@@ -674,14 +674,14 @@ static int create_qp_common(struct mlx4_ib_dev *dev, struct ib_pd *pd,
   if (qp_type == MLX4_IB_QPT_SMI || qp_type == MLX4_IB_QPT_GSI ||
       (qp_type & (MLX4_IB_QPT_PROXY_SMI | MLX4_IB_QPT_PROXY_SMI_OWNER |
     MLX4_IB_QPT_PROXY_GSI | MLX4_IB_QPT_TUN_SMI_OWNER))) {
-   sqp = kzalloc(sizeof (struct mlx4_ib_sqp), GFP_KERNEL);
+   sqp = kzalloc(sizeof (struct mlx4_ib_sqp), gfp);
    if (!sqp)
     return -ENOMEM;
    qp = &sqp->qp;
    qp->pri.vid = 0xFFFF;
    qp->alt.vid = 0xFFFF;
   } else {
-   qp = kzalloc(sizeof (struct mlx4_ib_qp), GFP_KERNEL);
+   qp = kzalloc(sizeof (struct mlx4_ib_qp), gfp);
    if (!qp)
     return -ENOMEM;
    qp->pri.vid = 0xFFFF;
-- 
1.7.1