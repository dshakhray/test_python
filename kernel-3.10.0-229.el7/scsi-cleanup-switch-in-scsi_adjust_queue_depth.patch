From a2e2ca4903e02883568587849e732841d82f59b4 Mon Sep 17 00:00:00 2001
From: Ewan Milne <emilne@redhat.com>
Date: Wed, 20 Aug 2014 18:58:57 -0400
Subject: [scsi] cleanup switch in scsi_adjust_queue_depth

Message-id: <1408561176-18133-19-git-send-email-emilne@redhat.com>
Patchwork-id: 88434
O-Subject: [RHEL7.1 PATCH e-stor 18/57] scsi: cleanup switch in scsi_adjust_queue_depth
Bugzilla: 1132092
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: "Ewan D. Milne" <emilne@redhat.com>

upstream commit 330f679c12a9641dd176ce76b5f7021fbb20f46f

Tested by Ewan D. Milne and Barry Donahue with a combination
of manual and automated testing.  No issues seen.

upstream commit 330f679c12a9641dd176ce76b5f7021fbb20f46f
Author: Douglas Gilbert <dgilbert@interlog.com>
Date:   Mon Jul 7 18:00:35 2014 +0200

    scsi: cleanup switch in scsi_adjust_queue_depth

    While checking what scsi_adjust_queue_depth() did I thought its switch
    statement could be clearer:

       - remove redundant assignment (to sdev->queue_depth)
       - re-order cases (thus removing the fall-through)

    Signed-off-by: Douglas Gilbert <dgilbert@interlog.com>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Reviewed-by: Robert Elliott <elliott@hp.com>
    Tested-by: Robert Elliott <elliott@hp.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

Signed-off-by: Ewan D. Milne <emilne@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/scsi.c b/drivers/scsi/scsi.c
index 5bee70a..529f076 100644
--- a/drivers/scsi/scsi.c
+++ b/drivers/scsi/scsi.c
@@ -841,6 +841,10 @@ void scsi_adjust_queue_depth(struct scsi_device *sdev, int tagged, int tags)
 
  sdev->queue_depth = tags;
  switch (tagged) {
+  case 0:
+   sdev->ordered_tags = 0;
+   sdev->simple_tags = 0;
+   break;
   case MSG_ORDERED_TAG:
    sdev->ordered_tags = 1;
    sdev->simple_tags = 1;
@@ -850,13 +854,11 @@ void scsi_adjust_queue_depth(struct scsi_device *sdev, int tagged, int tags)
    sdev->simple_tags = 1;
    break;
   default:
+   sdev->ordered_tags = 0;
+   sdev->simple_tags = 0;
    sdev_printk(KERN_WARNING, sdev,
         "scsi_adjust_queue_depth, bad queue type, "
         "disabled\n");
-  case 0:
-   sdev->ordered_tags = sdev->simple_tags = 0;
-   sdev->queue_depth = tags;
-   break;
  }
  out:
  spin_unlock_irqrestore(sdev->request_queue->queue_lock, flags);
-- 
1.7.1