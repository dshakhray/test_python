From 22fcc9cbebd1d248f1a17e4ec6d6ff26808ff439 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:01:26 -0400
Subject: [fs] btrfs: remove unnecessary ref heads rb tree search

Message-id: <1407179109-13714-200-git-send-email-sandeen@redhat.com>
Patchwork-id: 87200
O-Subject: [RHEL7.1 PATCH 199/422] Btrfs: remove unnecessary ref heads rb tree search
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Filipe Manana <fdmanana@gmail.com>

commit 6103fb43fbc6d1caa78f26a1d0aa3d1a4525cea5
Author: Filipe Manana <fdmanana@gmail.com>
Date:   Wed Feb 12 15:07:52 2014 +0000

    Btrfs: remove unnecessary ref heads rb tree search

    When we didn't find the exact ref head we were looking for, if
    return_bigger != 0 we set a new search key to match either the
    next node after the last one we found or the first one in the
    ref heads rb tree, and then did another full tree search. For both
    cases this ended up being pointless as we would end up returning
    an entry we already had before repeating the search.

    Signed-off-by: Filipe David Borba Manana <fdmanana@gmail.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/delayed-ref.c b/fs/btrfs/delayed-ref.c
index f3bff89..56cdfe9 100644
--- a/fs/btrfs/delayed-ref.c
+++ b/fs/btrfs/delayed-ref.c
@@ -205,7 +205,6 @@ find_ref_head(struct rb_root *root, u64 bytenr,
  struct btrfs_delayed_ref_head *entry;
  int cmp = 0;
 
-again:
  n = root->rb_node;
  entry = NULL;
  while (n) {
@@ -234,9 +233,9 @@ again:
     n = rb_first(root);
    entry = rb_entry(n, struct btrfs_delayed_ref_head,
       href_node);
-   bytenr = entry->node.bytenr;
-   return_bigger = 0;
-   goto again;
+   if (last)
+    *last = entry;
+   return entry;
   }
   return entry;
  }
-- 
1.7.1