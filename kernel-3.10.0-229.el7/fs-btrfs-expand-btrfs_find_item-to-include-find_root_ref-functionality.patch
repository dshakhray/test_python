From 6c06dfe527810d2c1d568f36368cc4eb2d771e4a Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 18:58:36 -0400
Subject: [fs] btrfs: expand btrfs_find_item() to include find_root_ref functionality

Message-id: <1407179109-13714-30-git-send-email-sandeen@redhat.com>
Patchwork-id: 87039
O-Subject: [RHEL7.1 PATCH 029/422] btrfs: expand btrfs_find_item() to include find_root_ref functionality
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Kelley Nielsen <kelleynnn@gmail.com>

commit 75ac2dd907013b44edbdec16f8969d14811149c9
Author: Kelley Nielsen <kelleynnn@gmail.com>
Date:   Mon Nov 4 19:35:58 2013 -0800

    btrfs: expand btrfs_find_item() to include find_root_ref functionality

    This patch is the second step in bootstrapping the btrfs_find_item
    interface. The btrfs_find_root_ref() is similar to the former
    __inode_info(); it accepts four of its parameters, and duplicates the
    first half of its functionality.

    Replace the one former call to btrfs_find_root_ref() with a call to
    btrfs_find_item(), along with the defined key type that was used
    internally by btrfs_find_root ref, and a null found key. In
    btrfs_find_item(), add a test for the null key at the place where
    the functionality of btrfs_find_root_ref() ends; btrfs_find_item()
    then returns if the test passes. Finally, remove btrfs_find_root_ref().

    Signed-off-by: Kelley Nielsen <kelleynnn@gmail.com>
    Suggested-by: Zach Brown <zab@redhat.com>
    Reviewed-by: Josh Triplett <josh@joshtriplett.org>
    Signed-off-by: Josef Bacik <jbacik@fusionio.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/ctree.c b/fs/btrfs/ctree.c
index 141c15c..64b8789 100644
--- a/fs/btrfs/ctree.c
+++ b/fs/btrfs/ctree.c
@@ -2464,7 +2464,13 @@ static int key_search(struct extent_buffer *b, struct btrfs_key *key,
 /* Proposed generic search function, meant to take the place of the
 * various small search helper functions throughout the code and standardize
 * the search interface. Right now, it only replaces the former __inode_info
-* in backref.c.
+* in backref.c, and the former btrfs_find_root_ref in root-tree.c.
+*
+* If a null key is passed, it returns immediately after running
+* btrfs_search_slot, leaving the path filled as it is and passing its
+* return value upward. If a real key is passed, it will set the caller's
+* path to point to the first item in the tree after its specified
+* objectid, type, and offset for which objectid and type match the input.
 */
 int btrfs_find_item(struct btrfs_root *fs_root, struct btrfs_path *path,
   u64 iobjectid, u64 ioff, u8 key_type,
@@ -2479,7 +2485,7 @@ int btrfs_find_item(struct btrfs_root *fs_root, struct btrfs_path *path,
  key.offset = ioff;
 
  ret = btrfs_search_slot(NULL, fs_root, &key, path, 0, 0);
- if (ret < 0)
+ if ((ret < 0) || (found_key == NULL))
   return ret;
 
  eb = path->nodes[0];
diff --git a/fs/btrfs/inode.c b/fs/btrfs/inode.c
index 03ebba8..55dd917 100644
--- a/fs/btrfs/inode.c
+++ b/fs/btrfs/inode.c
@@ -4673,9 +4673,9 @@ static int fixup_tree_root_location(struct btrfs_root *root,
  }
 
  err = -ENOENT;
- ret = btrfs_find_root_ref(root->fs_info->tree_root, path,
-      BTRFS_I(dir)->root->root_key.objectid,
-      location->objectid);
+ ret = btrfs_find_item(root->fs_info->tree_root, path,
+    BTRFS_I(dir)->root->root_key.objectid,
+    location->objectid, BTRFS_ROOT_REF_KEY, NULL);
  if (ret) {
   if (ret < 0)
    err = ret;
diff --git a/fs/btrfs/root-tree.c b/fs/btrfs/root-tree.c
index ec71ea4..fcc10eb 100644
--- a/fs/btrfs/root-tree.c
+++ b/fs/btrfs/root-tree.c
@@ -400,21 +400,6 @@ out:
  return err;
 }
 
-int btrfs_find_root_ref(struct btrfs_root *tree_root,
-     struct btrfs_path *path,
-     u64 root_id, u64 ref_id)
-{
- struct btrfs_key key;
- int ret;
-
- key.objectid = root_id;
- key.type = BTRFS_ROOT_REF_KEY;
- key.offset = ref_id;
-
- ret = btrfs_search_slot(NULL, tree_root, &key, path, 0, 0);
- return ret;
-}
-
 /*
  * add a btrfs_root_ref item.  type is either BTRFS_ROOT_REF_KEY
  * or BTRFS_ROOT_BACKREF_KEY.
-- 
1.7.1