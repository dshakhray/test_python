From bf405e48116c679ae74c78eab61c14ed15a17f70 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:03:27 -0400
Subject: [fs] btrfs: assert that send is not in progres before root deletion

Message-id: <1407179109-13714-321-git-send-email-sandeen@redhat.com>
Patchwork-id: 87278
O-Subject: [RHEL7.1 PATCH 320/422] btrfs: assert that send is not in progres before root deletion
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: David Sterba <dsterba@suse.cz>

commit 61155aa04ebcba6a33f2a281c46f351ca150d816
Author: David Sterba <dsterba@suse.cz>
Date:   Tue Apr 15 16:42:03 2014 +0200

    btrfs: assert that send is not in progres before root deletion

    CC: Miao Xie <miaox@cn.fujitsu.com>
    CC: Wang Shilong <wangsl.fnst@cn.fujitsu.com>
    Signed-off-by: David Sterba <dsterba@suse.cz>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/ioctl.c b/fs/btrfs/ioctl.c
index 2db3fe1..ebac486 100644
--- a/fs/btrfs/ioctl.c
+++ b/fs/btrfs/ioctl.c
@@ -2424,6 +2424,7 @@ out_unlock:
   shrink_dcache_sb(root->fs_info->sb);
   btrfs_invalidate_inodes(dest);
   d_delete(dentry);
+  ASSERT(dest->send_in_progress == 0);
 
   /* the last ref */
   if (dest->cache_inode) {
diff --git a/fs/btrfs/transaction.c b/fs/btrfs/transaction.c
index 7579f6d..c30815e 100644
--- a/fs/btrfs/transaction.c
+++ b/fs/btrfs/transaction.c
@@ -1984,19 +1984,6 @@ int btrfs_clean_one_deleted_snapshot(struct btrfs_root *root)
  }
  root = list_first_entry(&fs_info->dead_roots,
    struct btrfs_root, root_list);
- /*
-  * Make sure root is not involved in send,
-  * if we fail with first root, we return
-  * directly rather than continue.
-  */
- spin_lock(&root->root_item_lock);
- if (root->send_in_progress) {
-  spin_unlock(&fs_info->trans_lock);
-  spin_unlock(&root->root_item_lock);
-  return 0;
- }
- spin_unlock(&root->root_item_lock);
-
  list_del_init(&root->root_list);
  spin_unlock(&fs_info->trans_lock);
 
-- 
1.7.1