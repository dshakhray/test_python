From bfe217bc6a72ebd0c673f09c70b3c35fc32bb3a1 Mon Sep 17 00:00:00 2001
From: David Gibson <dgibson@redhat.com>
Date: Mon, 15 Sep 2014 07:13:28 -0400
Subject: [virt] kvm/ppc: book3s/pr - Fill pvinfo hcall instructions in big endian

Message-id: <1410765214-16377-73-git-send-email-dgibson@redhat.com>
Patchwork-id: 94771
O-Subject: [PATCH 72/78] KVM: PPC: PR: Fill pvinfo hcall instructions in big endian
Bugzilla: 1123145 1123133 1123367
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Signed-off-by: David Gibson <dgibson@redhat.com>

commit 2743103f91e20d4c4d4f1a8d00821289c4c6ff62
Author: Alexander Graf <agraf@suse.de>
Date:   Thu Apr 24 13:39:16 2014 +0200

    KVM: PPC: PR: Fill pvinfo hcall instructions in big endian

    We expose a blob of hypercall instructions to user space that it gives to
    the guest via device tree again. That blob should contain a stream of
    instructions necessary to do a hypercall in big endian, as it just gets
    passed into the guest and old guests use them straight away.

    Signed-off-by: Alexander Graf <agraf@suse.de>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kvm/powerpc.c b/arch/powerpc/kvm/powerpc.c
index caa8188..7efc2b7 100644
--- a/arch/powerpc/kvm/powerpc.c
+++ b/arch/powerpc/kvm/powerpc.c
@@ -1059,10 +1059,10 @@ static int kvm_vm_ioctl_get_pvinfo(struct kvm_ppc_pvinfo *pvinfo)
  u32 inst_nop = 0x60000000;
 #ifdef CONFIG_KVM_BOOKE_HV
  u32 inst_sc1 = 0x44000022;
- pvinfo->hcall[0] = inst_sc1;
- pvinfo->hcall[1] = inst_nop;
- pvinfo->hcall[2] = inst_nop;
- pvinfo->hcall[3] = inst_nop;
+ pvinfo->hcall[0] = cpu_to_be32(inst_sc1);
+ pvinfo->hcall[1] = cpu_to_be32(inst_nop);
+ pvinfo->hcall[2] = cpu_to_be32(inst_nop);
+ pvinfo->hcall[3] = cpu_to_be32(inst_nop);
 #else
  u32 inst_lis = 0x3c000000;
  u32 inst_ori = 0x60000000;
@@ -1078,10 +1078,10 @@ static int kvm_vm_ioctl_get_pvinfo(struct kvm_ppc_pvinfo *pvinfo)
   *    sc
   *    nop
   */
- pvinfo->hcall[0] = inst_lis | ((KVM_SC_MAGIC_R0 >> 16) & inst_imm_mask);
- pvinfo->hcall[1] = inst_ori | (KVM_SC_MAGIC_R0 & inst_imm_mask);
- pvinfo->hcall[2] = inst_sc;
- pvinfo->hcall[3] = inst_nop;
+ pvinfo->hcall[0] = cpu_to_be32(inst_lis | ((KVM_SC_MAGIC_R0 >> 16) & inst_imm_mask));
+ pvinfo->hcall[1] = cpu_to_be32(inst_ori | (KVM_SC_MAGIC_R0 & inst_imm_mask));
+ pvinfo->hcall[2] = cpu_to_be32(inst_sc);
+ pvinfo->hcall[3] = cpu_to_be32(inst_nop);
 #endif
 
  pvinfo->flags = KVM_PPC_PVINFO_FLAGS_EV_IDLE;
-- 
1.7.1