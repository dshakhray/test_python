From cd338666e71d47013fe85f5ab454fe05368395ae Mon Sep 17 00:00:00 2001
From: Ivan Vecera <ivecera@redhat.com>
Date: Wed, 19 Nov 2014 16:14:09 -0500
Subject: [ethernet] bna: use container_of to resolve bufdesc_ex from bufdesc

Message-id: <1416413651-12167-2-git-send-email-ivecera@redhat.com>
Patchwork-id: 100346
O-Subject: [RHEL7.1 PATCH 1/3] bna: use container_of to resolve bufdesc_ex from bufdesc
Bugzilla: 1165759
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

BZ: #1165759

Upstream commit(s):
commit 17b6f244483a6799e43f9af649a2eb94fa1502ec
Author: Fabian Frederick <fabf@skynet.be>
Date:   Sat Sep 13 22:38:27 2014 +0200

    bna: use container_of to resolve bufdesc_ex from bufdesc

    Use container_of instead of casting first structure member.

    Compiled but untested.

    Signed-off-by: Fabian Frederick <fabf@skynet.be>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Ivan Vecera <ivecera@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/brocade/bna/bna_enet.c b/drivers/net/ethernet/brocade/bna/bna_enet.c
index 13f9636..903466e 100644
--- a/drivers/net/ethernet/brocade/bna/bna_enet.c
+++ b/drivers/net/ethernet/brocade/bna/bna_enet.c
@@ -107,7 +107,8 @@ bna_bfi_ethport_admin_rsp(struct bna_ethport *ethport,
 {
  struct bfi_enet_enable_req *admin_req =
   &ethport->bfi_enet_cmd.admin_req;
- struct bfi_enet_rsp *rsp = (struct bfi_enet_rsp *)msghdr;
+ struct bfi_enet_rsp *rsp =
+  container_of(msghdr, struct bfi_enet_rsp, mh);
 
  switch (admin_req->enable) {
  case BNA_STATUS_T_ENABLED:
@@ -133,7 +134,8 @@ bna_bfi_ethport_lpbk_rsp(struct bna_ethport *ethport,
 {
  struct bfi_enet_diag_lb_req *diag_lb_req =
   &ethport->bfi_enet_cmd.lpbk_req;
- struct bfi_enet_rsp *rsp = (struct bfi_enet_rsp *)msghdr;
+ struct bfi_enet_rsp *rsp =
+  container_of(msghdr, struct bfi_enet_rsp, mh);
 
  switch (diag_lb_req->enable) {
  case BNA_STATUS_T_ENABLED:
@@ -161,7 +163,8 @@ static void
 bna_bfi_attr_get_rsp(struct bna_ioceth *ioceth,
    struct bfi_msgq_mhdr *msghdr)
 {
- struct bfi_enet_attr_rsp *rsp = (struct bfi_enet_attr_rsp *)msghdr;
+ struct bfi_enet_attr_rsp *rsp =
+  container_of(msghdr, struct bfi_enet_attr_rsp, mh);
 
  /**
   * Store only if not set earlier, since BNAD can override the HW
diff --git a/drivers/net/ethernet/brocade/bna/bna_tx_rx.c b/drivers/net/ethernet/brocade/bna/bna_tx_rx.c
index 85e6354..8ee3fdc 100644
--- a/drivers/net/ethernet/brocade/bna/bna_tx_rx.c
+++ b/drivers/net/ethernet/brocade/bna/bna_tx_rx.c
@@ -715,7 +715,7 @@ bna_bfi_rxf_ucast_set_rsp(struct bna_rxf *rxf,
    struct bfi_msgq_mhdr *msghdr)
 {
  struct bfi_enet_rsp *rsp =
-  (struct bfi_enet_rsp *)msghdr;
+  container_of(msghdr, struct bfi_enet_rsp, mh);
 
  if (rsp->error) {
   /* Clear ucast from cache */
@@ -732,7 +732,7 @@ bna_bfi_rxf_mcast_add_rsp(struct bna_rxf *rxf,
  struct bfi_enet_mcast_add_req *req =
   &rxf->bfi_enet_cmd.mcast_add_req;
  struct bfi_enet_mcast_add_rsp *rsp =
-  (struct bfi_enet_mcast_add_rsp *)msghdr;
+  container_of(msghdr, struct bfi_enet_mcast_add_rsp, mh);
 
  bna_rxf_mchandle_attach(rxf, (u8 *)&req->mac_addr,
   ntohs(rsp->handle));
-- 
1.7.1