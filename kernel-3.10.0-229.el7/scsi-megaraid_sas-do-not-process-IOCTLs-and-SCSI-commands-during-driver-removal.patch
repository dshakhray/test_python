From e4d13cab14718c312fcf5bfde5dd9739b20e44b1 Mon Sep 17 00:00:00 2001
From: Tomas Henzl <thenzl@redhat.com>
Date: Thu, 27 Nov 2014 16:33:39 -0500
Subject: [scsi] megaraid_sas: do not process IOCTLs and SCSI commands during driver removal

Message-id: <1417106019-4286-8-git-send-email-thenzl@redhat.com>
Patchwork-id: 100999
O-Subject: [PATCH 7/7] megaraid_sas: do not process IOCTLs and SCSI commands during driver removal
Bugzilla: 1162645
RH-Acked-by: Maurizio Lombardi <mlombard@redhat.com>
RH-Acked-by: Rob Evers <revers@redhat.com>

Do not process any SCSI and IOCTL command further (return them with
appropriate return values to callers), while driver removal is in
progress or PCI shutdown is invoked.

Signed-off-by: Sumit Saxena <sumit.saxena@avagotech.com>
Signed-off-by: Kashyap Desai <kashyap.desai@avagotech.com>
Reviewed-by: Tomas Henzl <thenzl@redhat.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit aa00832b4ca6491c3540ef637ee89a7394711858)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/megaraid/megaraid_sas_base.c b/drivers/scsi/megaraid/megaraid_sas_base.c
index 4345d93..9ce956a 100644
--- a/drivers/scsi/megaraid/megaraid_sas_base.c
+++ b/drivers/scsi/megaraid/megaraid_sas_base.c
@@ -1571,6 +1571,12 @@ megasas_queue_command(struct Scsi_Host *shost, struct scsi_cmnd *scmd)
  instance = (struct megasas_instance *)
      scmd->device->host->hostdata;
 
+ if (instance->unload == 1) {
+  scmd->result = DID_NO_CONNECT << 16;
+  scmd->scsi_done(scmd);
+  return 0;
+ }
+
  if (instance->issuepend_done == 0)
   return SCSI_MLQUEUE_HOST_BUSY;
 
@@ -5020,10 +5026,6 @@ static int megasas_io_attach(struct megasas_instance *instance)
   return -ENODEV;
  }
 
- /*
-  * Trigger SCSI to scan our drives
-  */
- scsi_scan_host(host);
  return 0;
 }
 
@@ -5353,6 +5355,10 @@ retry_irq_register:
   goto fail_io_attach;
 
  instance->unload = 0;
+ /*
+  * Trigger SCSI to scan our drives
+  */
+ scsi_scan_host(host);
 
  /*
   * Initiate AEN (Asynchronous Event Notification)
@@ -6121,6 +6127,11 @@ megasas_mgmt_fw_ioctl(struct megasas_instance *instance,
  megasas_issue_blocked_cmd(instance, cmd, 0);
  cmd->sync_cmd = 0;
 
+ if (instance->unload == 1) {
+  dev_info(&instance->pdev->dev, "Driver unload is in progress "
+   "don't submit data to application\n");
+  goto out;
+ }
  /*
   * copy out the kernel buffers to user buffers
   */
-- 
1.7.1