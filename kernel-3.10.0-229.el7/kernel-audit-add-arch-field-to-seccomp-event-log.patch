From aeada3f4c88c2b7bfdd149d601b5713b52fc508d Mon Sep 17 00:00:00 2001
From: Richard Guy Briggs <rgb@redhat.com>
Date: Wed, 1 Oct 2014 21:36:00 -0400
Subject: [kernel] audit: add arch field to seccomp event log

Message-id: <c68835d38f6417d60266ea7c182818e04d323bf3.1412192166.git.rgb@redhat.com>
Patchwork-id: 96864
O-Subject: [RHEL7 PATCH V2 7/9] audit: add arch field to seccomp event log
Bugzilla: 1053921
RH-Acked-by: Eric Paris <eparis@redhat.com>
RH-Acked-by: Paul Moore <pmoore@redhat.com>

The AUDIT_SECCOMP record looks something like this:

type=SECCOMP msg=audit(1373478171.953:32775): auid=4325 uid=4325 gid=4325 ses=1 subj=unconfined_u:unconfined_r:unconfined_t:s0 pid=12381 comm="test" sig=31 syscall=231 compat=0 ip=0x39ea8bca89 code=0x0

In order to determine what syscall 231 maps to, we need to have the arch= field right before it.

To see the event, compile this test.c program:

=====
int main(void)
{
        return seccomp_load(seccomp_init(SCMP_ACT_KILL));
}
=====

gcc -g test.c -o test -lseccomp

After running the program, find the record by:  ausearch --start recent -m SECCOMP -i

Upstream-commit: 84db564
Signed-off-by: Richard Guy Briggs <rgb@redhat.com>
signed-off-by: Eric Paris <eparis@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/kernel/auditsc.c b/kernel/auditsc.c
index 40f49c6..20ebcf3 100644
--- a/kernel/auditsc.c
+++ b/kernel/auditsc.c
@@ -65,6 +65,7 @@
 #include <linux/binfmts.h>
 #include <linux/highmem.h>
 #include <linux/syscalls.h>
+#include <asm/syscall.h>
 #include <linux/capability.h>
 #include <linux/fs_struct.h>
 #include <linux/compat.h>
@@ -2421,11 +2422,9 @@ void __audit_seccomp(unsigned long syscall, long signr, int code)
  if (unlikely(!ab))
   return;
  audit_log_task(ab);
- audit_log_format(ab, " sig=%ld", signr);
- audit_log_format(ab, " syscall=%ld", syscall);
- audit_log_format(ab, " compat=%d", is_compat_task());
- audit_log_format(ab, " ip=0x%lx", KSTK_EIP(current));
- audit_log_format(ab, " code=0x%x", code);
+ audit_log_format(ab, " sig=%ld arch=%x syscall=%ld compat=%d ip=0x%lx code=0x%x",
+    signr, syscall_get_arch(), syscall, is_compat_task(),
+    KSTK_EIP(current), code);
  audit_log_end(ab);
 }
 
-- 
1.7.1