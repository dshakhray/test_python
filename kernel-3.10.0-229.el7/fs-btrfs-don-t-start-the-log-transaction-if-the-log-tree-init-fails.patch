From 72096afe912ff58f43fefdf6518ae8cefd9d0d3d Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:01:19 -0400
Subject: [fs] btrfs: don't start the log transaction if the log tree init fails

Message-id: <1407179109-13714-193-git-send-email-sandeen@redhat.com>
Patchwork-id: 87127
O-Subject: [RHEL7.1 PATCH 192/422] Btrfs: don't start the log transaction if the log tree init fails
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Miao Xie <miaox@cn.fujitsu.com>

commit e87ac1368700af66c295afa47e5c7df0d9d8b919
Author: Miao Xie <miaox@cn.fujitsu.com>
Date:   Thu Feb 20 18:08:53 2014 +0800

    Btrfs: don't start the log transaction if the log tree init fails

    The old code would start the log transaction even the log tree init
    failed, it was unnecessary. Fix it.

    Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/tree-log.c b/fs/btrfs/tree-log.c
index 8a03b39..ca960ad 100644
--- a/fs/btrfs/tree-log.c
+++ b/fs/btrfs/tree-log.c
@@ -139,7 +139,6 @@ static int start_log_trans(struct btrfs_trans_handle *trans,
       struct btrfs_root *root)
 {
  int ret;
- int err = 0;
 
  mutex_lock(&root->log_mutex);
  if (root->log_root) {
@@ -155,24 +154,27 @@ static int start_log_trans(struct btrfs_trans_handle *trans,
   mutex_unlock(&root->log_mutex);
   return 0;
  }
- root->log_multiple_pids = false;
- root->log_start_pid = current->pid;
+
+ ret = 0;
  mutex_lock(&root->fs_info->tree_log_mutex);
- if (!root->fs_info->log_root_tree) {
+ if (!root->fs_info->log_root_tree)
   ret = btrfs_init_log_root_tree(trans, root->fs_info);
-  if (ret)
-   err = ret;
- }
- if (err == 0 && !root->log_root) {
+ mutex_unlock(&root->fs_info->tree_log_mutex);
+ if (ret)
+  goto out;
+
+ if (!root->log_root) {
   ret = btrfs_add_log_tree(trans, root);
   if (ret)
-   err = ret;
+   goto out;
  }
- mutex_unlock(&root->fs_info->tree_log_mutex);
+ root->log_multiple_pids = false;
+ root->log_start_pid = current->pid;
  atomic_inc(&root->log_batch);
  atomic_inc(&root->log_writers);
+out:
  mutex_unlock(&root->log_mutex);
- return err;
+ return ret;
 }
 
 /*
@@ -4116,7 +4118,7 @@ static int btrfs_log_inode_parent(struct btrfs_trans_handle *trans,
 
  ret = start_log_trans(trans, root);
  if (ret)
-  goto end_trans;
+  goto end_no_trans;
 
  ret = btrfs_log_inode(trans, root, inode, inode_only);
  if (ret)
-- 
1.7.1