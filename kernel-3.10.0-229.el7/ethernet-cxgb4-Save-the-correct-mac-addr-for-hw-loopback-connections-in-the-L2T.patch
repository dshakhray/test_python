From dfba56ccd822aa3948168737af20705bb4a9dd62 Mon Sep 17 00:00:00 2001
From: Sai Vemuri <svemuri@redhat.com>
Date: Thu, 11 Sep 2014 22:43:14 -0400
Subject: [ethernet] cxgb4: Save the correct mac addr for hw-loopback connections in the L2T

Message-id: <1410475447-94392-56-git-send-email-svemuri@redhat.com>
Patchwork-id: 93850
O-Subject: [RHEL7.1 PATCH BZ 1124947 055/108] cxgb4: Save the correct mac addr for hw-loopback connections in the L2T
Bugzilla: 1124947
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Hardware needs the local device mac address to support hw loopback for
rdma loopback connections.

Signed-off-by: Steve Wise <swise@opengridcomputing.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit bfae23249955819a42aa6c23d93708c818eff5c9)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/chelsio/cxgb4/l2t.c b/drivers/net/ethernet/chelsio/cxgb4/l2t.c
index 81e8402..8a96572 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/l2t.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/l2t.c
@@ -154,7 +154,7 @@ static int write_l2e(struct adapter *adap, struct l2t_entry *e, int sync)
  req->params = htons(L2T_W_PORT(e->lport) | L2T_W_NOREPLY(!sync));
  req->l2t_idx = htons(e->idx);
  req->vlan = htons(e->vlan);
- if (e->neigh)
+ if (e->neigh && !(e->neigh->dev->flags & IFF_LOOPBACK))
   memcpy(e->dmac, e->neigh->ha, sizeof(e->dmac));
  memcpy(req->dst_mac, e->dmac, sizeof(req->dst_mac));
 
@@ -394,6 +394,8 @@ struct l2t_entry *cxgb4_l2t_get(struct l2t_data *d, struct neighbour *neigh,
  if (e) {
   spin_lock(&e->lock);          /* avoid race with t4_l2t_free */
   e->state = L2T_STATE_RESOLVING;
+  if (neigh->dev->flags & IFF_LOOPBACK)
+   memcpy(e->dmac, physdev->dev_addr, sizeof(e->dmac));
   memcpy(e->addr, addr, addr_len);
   e->ifindex = ifidx;
   e->hash = hash;
-- 
1.7.1