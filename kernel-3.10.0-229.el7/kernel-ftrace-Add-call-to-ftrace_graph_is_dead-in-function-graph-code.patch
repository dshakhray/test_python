From 17b576ae13374c63ca70c8d5df7948308f58f820 Mon Sep 17 00:00:00 2001
From: Josh Poimboeuf <jpoimboe@redhat.com>
Date: Thu, 4 Sep 2014 18:54:33 -0400
Subject: [kernel] ftrace: Add call to ftrace_graph_is_dead() in function graph code

Message-id: <12cb88f86754dd2063c3dea9b012bf0b5ccd45c2.1409856554.git.jpoimboe@redhat.com>
Patchwork-id: 91245
O-Subject: [RHEL7.1 PATCH 14/23] ftrace/x86: Add call to ftrace_graph_is_dead() in function graph code
Bugzilla: 1113829
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1113829

commit 84b2bc7fa005b99a06979673225dc2bb7de3fd91
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Wed Jun 25 10:35:14 2014 -0400

    ftrace/x86: Add call to ftrace_graph_is_dead() in function graph code

    ftrace_stop() is going away as it disables parts of function tracing
    that affects users that should not be affected. But ftrace_graph_stop()
    is built on ftrace_stop(). Here's another example of killing all of
    function tracing because something went wrong with function graph
    tracing.

    Instead of disabling all users of function tracing on function graph
    error, disable only function graph tracing. To do this, the arch code
    must call ftrace_graph_is_dead() before it implements function graph.

    Link: http://lkml.kernel.org/r/53C54D18.3020602@zytor.com

    Acked-by: H. Peter Anvin <hpa@linux.intel.com>
    Reviewed-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kernel/ftrace.c b/arch/x86/kernel/ftrace.c
index e2b6ef5..c07a794 100644
--- a/arch/x86/kernel/ftrace.c
+++ b/arch/x86/kernel/ftrace.c
@@ -746,6 +746,9 @@ void prepare_ftrace_return(unsigned long *parent, unsigned long self_addr,
  unsigned long return_hooker = (unsigned long)
     &return_to_handler;
 
+ if (unlikely(ftrace_graph_is_dead()))
+  return;
+
  if (unlikely(atomic_read(&current->tracing_graph_pause)))
   return;
 
-- 
1.7.1