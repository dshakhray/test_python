From 93b11d97d3802fde83a58d1185a33504d1f74068 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:08:49 -0400
Subject: [usb] usb_wwan: use interface-data accessors

Message-id: <1410887463-20674-458-git-send-email-dzickus@redhat.com>
Patchwork-id: 95506
O-Subject: [RHEL7 PATCH 457/591] USB: usb_wwan: use interface-data accessors
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 37357ca5a435258e6195051b8c336309ead5ea5e
Author: Johan Hovold <jhovold@gmail.com>
Date:   Mon May 26 19:23:26 2014 +0200

    USB: usb_wwan: use interface-data accessors

    Use usb_get_serial_data() rather than accessing the private pointer
    directly.

    Signed-off-by: Johan Hovold <jhovold@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/serial/usb_wwan.c b/drivers/usb/serial/usb_wwan.c
index 3737006..b83aa60 100644
--- a/drivers/usb/serial/usb_wwan.c
+++ b/drivers/usb/serial/usb_wwan.c
@@ -41,7 +41,7 @@ void usb_wwan_dtr_rts(struct usb_serial_port *port, int on)
  struct usb_wwan_port_private *portdata;
  struct usb_wwan_intf_private *intfdata;
 
- intfdata = port->serial->private;
+ intfdata = usb_get_serial_data(port->serial);
 
  if (!intfdata->send_setup)
   return;
@@ -82,7 +82,7 @@ int usb_wwan_tiocmset(struct tty_struct *tty,
  struct usb_wwan_intf_private *intfdata;
 
  portdata = usb_get_serial_port_data(port);
- intfdata = port->serial->private;
+ intfdata = usb_get_serial_data(port->serial);
 
  if (!intfdata->send_setup)
   return -EINVAL;
@@ -191,7 +191,7 @@ int usb_wwan_write(struct tty_struct *tty, struct usb_serial_port *port,
  unsigned long flags;
 
  portdata = usb_get_serial_port_data(port);
- intfdata = port->serial->private;
+ intfdata = usb_get_serial_data(port->serial);
 
  dev_dbg(&port->dev, "%s: write (%d chars)\n", __func__, count);
 
@@ -302,7 +302,7 @@ static void usb_wwan_outdat_callback(struct urb *urb)
  int i;
 
  port = urb->context;
- intfdata = port->serial->private;
+ intfdata = usb_get_serial_data(port->serial);
 
  usb_serial_port_softint(port);
  usb_autopm_put_interface_async(port->serial->interface);
@@ -372,7 +372,7 @@ int usb_wwan_open(struct tty_struct *tty, struct usb_serial_port *port)
  struct urb *urb;
 
  portdata = usb_get_serial_port_data(port);
- intfdata = serial->private;
+ intfdata = usb_get_serial_data(serial);
 
  if (port->interrupt_in_urb) {
   err = usb_submit_urb(port->interrupt_in_urb, GFP_KERNEL);
@@ -424,7 +424,7 @@ void usb_wwan_close(struct usb_serial_port *port)
  int i;
  struct usb_serial *serial = port->serial;
  struct usb_wwan_port_private *portdata;
- struct usb_wwan_intf_private *intfdata = port->serial->private;
+ struct usb_wwan_intf_private *intfdata = usb_get_serial_data(serial);
  struct urb *urb;
 
  portdata = usb_get_serial_port_data(port);
@@ -584,7 +584,7 @@ static void stop_urbs(struct usb_serial *serial)
 
 int usb_wwan_suspend(struct usb_serial *serial, pm_message_t message)
 {
- struct usb_wwan_intf_private *intfdata = serial->private;
+ struct usb_wwan_intf_private *intfdata = usb_get_serial_data(serial);
 
  spin_lock_irq(&intfdata->susp_lock);
  if (PMSG_IS_AUTO(message)) {
@@ -605,14 +605,14 @@ EXPORT_SYMBOL(usb_wwan_suspend);
 static int play_delayed(struct usb_serial_port *port)
 {
  struct usb_serial *serial = port->serial;
- struct usb_wwan_intf_private *data;
+ struct usb_wwan_intf_private *data = usb_get_serial_data(serial);
  struct usb_wwan_port_private *portdata;
  struct urb *urb;
  int err_count = 0;
  int err;
 
  portdata = usb_get_serial_port_data(port);
- data = port->serial->private;
+
  while ((urb = usb_get_from_anchor(&portdata->delayed))) {
   err = usb_submit_urb(urb, GFP_ATOMIC);
   if (err) {
@@ -637,7 +637,7 @@ int usb_wwan_resume(struct usb_serial *serial)
 {
  int i, j;
  struct usb_serial_port *port;
- struct usb_wwan_intf_private *intfdata = serial->private;
+ struct usb_wwan_intf_private *intfdata = usb_get_serial_data(serial);
  struct usb_wwan_port_private *portdata;
  struct urb *urb;
  int err;
-- 
1.7.1