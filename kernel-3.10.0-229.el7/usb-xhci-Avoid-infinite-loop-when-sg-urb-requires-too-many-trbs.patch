From 490fcc3adfec8fbdd87b4de5abd5bc1b354809c7 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:05:26 -0400
Subject: [usb] xhci: Avoid infinite loop when sg urb requires too many trbs

Message-id: <1410887463-20674-255-git-send-email-dzickus@redhat.com>
Patchwork-id: 95177
O-Subject: [RHEL7 PATCH 254/591] xhci: Avoid infinite loop when sg urb requires too many trbs
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit d6c9ea9069af684358efedcaf2f2f687f51c58ee
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Mon Jan 6 03:16:32 2014 +0000

    xhci: Avoid infinite loop when sg urb requires too many trbs

    Currently prepare_ring() returns -ENOMEM if the urb won't fit into a
    single ring segment.  usb_sg_wait() treats this error as a temporary
    condition and will keep retrying until something else goes wrong.

    The number of retries should be limited in usb_sg_wait(), but also
    prepare_ring() should not return an error code that suggests it might
    be worth retrying.  Change it to -EINVAL.

    Reported-by: jidanni@jidanni.org
    References: http://bugs.debian.org/733907
    Fixes: 35773dac5f86 ('usb: xhci: Link TRB must not occur within a USB payload burst')
    Cc: stable <stable@vger.kernel.org> # 3.12
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/host/xhci-ring.c b/drivers/usb/host/xhci-ring.c
index 09b2b55..a0b248c 100644
--- a/drivers/usb/host/xhci-ring.c
+++ b/drivers/usb/host/xhci-ring.c
@@ -3000,7 +3000,7 @@ static int prepare_ring(struct xhci_hcd *xhci, struct xhci_ring *ep_ring,
    if (num_trbs >= TRBS_PER_SEGMENT) {
     xhci_err(xhci, "Too many fragments %d, max %d\n",
       num_trbs, TRBS_PER_SEGMENT - 1);
-    return -ENOMEM;
+    return -EINVAL;
    }
 
    nop_cmd = cpu_to_le32(TRB_TYPE(TRB_TR_NOOP) |
-- 
1.7.1