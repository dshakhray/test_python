From 58470511198ac876d5e899f27a834ca686c87a1a Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 23 Oct 2014 10:12:39 -0400
Subject: [fs] ext4: use filemap_write_and_wait_range() correctly in collapse range

Message-id: <1414059176-6044-16-git-send-email-lczerner@redhat.com>
Patchwork-id: 98286
O-Subject: [RHEL 7.1 PATCH 15/32] ext4: use filemap_write_and_wait_range() correctly in collapse range
Bugzilla: 1150171

BZ 1150171
https://bugzilla.redhat.com/show_bug.cgi?id=1150171

BREW 8149772
https://brewweb.devel.redhat.com/taskinfo?taskID=8149772

Upstream commit 1a66c7c3bea52ba0f7596b8940d74fce75281d16

 Currently we're passing -1 as lend argumnet for
 filemap_write_and_wait_range() which is wrong since lend is signed type
 so it would cause some confusion and we might not write_and_wait for the
 entire range we're expecting to write.

 Fix it by using LLONG_MAX instead.

 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/extents.c b/fs/ext4/extents.c
index ba25827..4a66aeb 100644
--- a/fs/ext4/extents.c
+++ b/fs/ext4/extents.c
@@ -5404,7 +5404,7 @@ int ext4_collapse_range(struct inode *inode, loff_t offset, loff_t len)
  }
 
  /* Write out all dirty pages */
- ret = filemap_write_and_wait_range(inode->i_mapping, offset, -1);
+ ret = filemap_write_and_wait_range(inode->i_mapping, offset, LLONG_MAX);
  if (ret)
   return ret;
 
-- 
1.7.1