From f291ace7760d6f785e67adeb5ab6963057e18301 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:04:54 -0400
Subject: [powerpc] Unaligned stores and stmw are broken in emulation code

Message-id: <1410545655-205645-66-git-send-email-dzickus@redhat.com>
Patchwork-id: 94107
O-Subject: [RHEL7 PATCH 065/626] powerpc: Unaligned stores and stmw are broken in emulation code
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 17e8de7e1878bbd45f3e268932e997496ddbbfe7
Author: Tom Musta <tmusta@us.ibm.com>
Date:   Thu Aug 22 09:25:28 2013 -0500

    powerpc: Unaligned stores and stmw are broken in emulation code

    The stmw instruction was incorrectly decoded as an update form instruction
    and thus the RA register was being clobbered.

    Also, the utility routine to write memory to unaligned addresses breaks the
    operation into smaller aligned accesses but was incorrectly incrementing
    the address by only one; it needs to increment the address by the size of
    the smaller aligned chunk.

    Signed-off-by: Tom Musta <tmusta@us.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/lib/sstep.c b/arch/powerpc/lib/sstep.c
index 8c06748..a89ff3e 100644
--- a/arch/powerpc/lib/sstep.c
+++ b/arch/powerpc/lib/sstep.c
@@ -100,8 +100,10 @@ static unsigned long __kprobes dform_ea(unsigned int instr, struct pt_regs *regs
  ea = (signed short) instr;  /* sign-extend */
  if (ra) {
   ea += regs->gpr[ra];
-  if (instr & 0x04000000)  /* update forms */
-   regs->gpr[ra] = ea;
+  if (instr & 0x04000000) {  /* update forms */
+   if ((instr>>26) != 47)   /* stmw is not an update form */
+    regs->gpr[ra] = ea;
+  }
  }
 
  return truncate_if_32bit(regs->msr, ea);
@@ -324,7 +326,7 @@ static int __kprobes write_mem_unaligned(unsigned long val, unsigned long ea,
   err = write_mem_aligned(val >> (nb - c) * 8, ea, c);
   if (err)
    return err;
-  ++ea;
+  ea += c;
  }
  return 0;
 }
-- 
1.7.1