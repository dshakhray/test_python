From 9f6f881a328a81d311ed7686f8bd9f1302e3e85b Mon Sep 17 00:00:00 2001
From: Marcelo Tosatti <mtosatti@redhat.com>
Date: Tue, 11 Nov 2014 01:23:29 -0500
Subject: [virt] kvm: update masterclock values on TSC writes

Message-id: <20141111012329.GA12923@amt.cnet>
Patchwork-id: 99818
O-Subject: [RHEL7.1 PATCH] KVM: x86: update masterclock values on TSC writes
Bugzilla: 1158039
RH-Acked-by: Paolo Bonzini <pbonzini@redhat.com>
RH-Acked-by: Igor Mammedov <imammedo@redhat.com>
RH-Acked-by: Andrew Jones <drjones@redhat.com>

When the guest writes to the TSC, the masterclock TSC copy must be
updated as well along with the TSC_OFFSET update, otherwise a negative
tsc_timestamp is calculated at kvm_guest_time_update.

Once "if (!vcpus_matched && ka->use_master_clock)" is simplified to
"if (ka->use_master_clock)", the corresponding "if (!ka->use_master_clock)"
becomes redundant, so remove the do_request boolean and collapse
everything into a single condition.

commit 7f187922ddf6b67f2999a76dcb71663097b75497 upstream (kvm.git queue branch)

Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
BZ: 1158039
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index 8b52960..e05c6f0 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -1179,21 +1179,22 @@ void kvm_track_tsc_matching(struct kvm_vcpu *vcpu)
 {
 #ifdef CONFIG_X86_64
  bool vcpus_matched;
- bool do_request = false;
  struct kvm_arch *ka = &vcpu->kvm->arch;
  struct pvclock_gtod_data *gtod = &pvclock_gtod_data;
 
  vcpus_matched = (ka->nr_vcpus_matched_tsc + 1 ==
     atomic_read(&vcpu->kvm->online_vcpus));
 
- if (vcpus_matched && gtod->clock.vclock_mode == VCLOCK_TSC)
-  if (!ka->use_master_clock)
-   do_request = 1;
-
- if (!vcpus_matched && ka->use_master_clock)
-   do_request = 1;
-
- if (do_request)
+ /*
+  * Once the masterclock is enabled, always perform request in
+  * order to update it.
+  *
+  * In order to enable masterclock, the host clocksource must be TSC
+  * and the vcpus need to have matched TSCs.  When that happens,
+  * perform request to enable masterclock.
+  */
+ if (ka->use_master_clock ||
+     (gtod->clock.vclock_mode == VCLOCK_TSC && vcpus_matched))
   kvm_make_request(KVM_REQ_MASTERCLOCK_UPDATE, vcpu);
 
  trace_kvm_track_tsc(vcpu->vcpu_id, ka->nr_vcpus_matched_tsc,
-- 
1.7.1