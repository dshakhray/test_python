From 3e9b81bfb621eb0c1fce64ed4150ee6fd9f31f72 Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:39:07 -0400
Subject: [virt] kvm/mmu: drop read-only large sptes when creating lower level sptes

Message-id: <1406040016-3289-153-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86231
O-Subject: [RHEL7 PATCH v2 152/221] KVM: MMU: drop read-only large sptes when creating lower level sptes
Bugzilla: 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Marcelo Tosatti <mtosatti@redhat.com>

Read-only large sptes can be created due to read-only faults as
follows:

- QEMU pagetable entry that maps guest memory is read-only
due to COW.
- Guest read faults such memory, COW is not broken, because
it is a read-only fault.
- Enable dirty logging, large spte not nuked because it is read-only.
- Write-fault on such memory causes guest to loop endlessly
(which must go down to level 1 because dirty logging is enabled).

Fix by dropping large spte when necessary.

Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 404381c5839d67aa0c275ad1da96ef3d3928ca2c)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kvm/mmu.c b/arch/x86/kvm/mmu.c
index 3e2d157..5ef44fb 100644
--- a/arch/x86/kvm/mmu.c
+++ b/arch/x86/kvm/mmu.c
@@ -2672,6 +2672,7 @@ static int __direct_map(struct kvm_vcpu *vcpu, gpa_t v, int write,
    break;
   }
 
+  drop_large_spte(vcpu, iterator.sptep);
   if (!is_shadow_present_pte(*iterator.sptep)) {
    u64 base_addr = iterator.addr;
 
-- 
1.7.1