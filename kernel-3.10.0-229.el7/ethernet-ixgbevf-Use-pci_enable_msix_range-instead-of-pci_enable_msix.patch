From 720ef6d753d9954fd84c98a4e25e2e90ada984c4 Mon Sep 17 00:00:00 2001
From: John Greene <jogreene@redhat.com>
Date: Mon, 8 Sep 2014 15:07:43 -0400
Subject: [ethernet] ixgbevf: Use pci_enable_msix_range() instead of pci_enable_msix()

Message-id: <1410188883-6595-29-git-send-email-jogreene@redhat.com>
Patchwork-id: 92376
O-Subject: [RHEL7.1 PATCH 28/48] ixgbevf: Use pci_enable_msix_range() instead of pci_enable_msix()
Bugzilla: 1091124
RH-Acked-by: Neil Horman <nhorman@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: John Linville <linville@redhat.com>

BZ: 1091124
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7919168
Tested: In beaker. See BZ for details

As result of deprecation of MSI-X/MSI enablement functions
pci_enable_msix() and pci_enable_msi_block() all drivers
using these two interfaces need to be updated to use the
new pci_enable_msi_range() and pci_enable_msix_range()
interfaces.

Signed-off-by: Alexander Gordeev <agordeev@redhat.com>
Cc: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Cc: Jesse Brandeburg <jesse.brandeburg@intel.com>
Cc: Bruce Allan <bruce.w.allan@intel.com>
Cc: e1000-devel@lists.sourceforge.net
Cc: netdev@vger.kernel.org
Cc: linux-pci@vger.kernel.org
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5c1e35880233b0385cc60ae8e3f2a40c69de24e0)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c b/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
index c0999bd..5b737af 100644
--- a/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
+++ b/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
@@ -1842,7 +1842,6 @@ void ixgbevf_reset(struct ixgbevf_adapter *adapter)
 static int ixgbevf_acquire_msix_vectors(struct ixgbevf_adapter *adapter,
      int vectors)
 {
- int err = 0;
  int vector_threshold;
 
  /* We'll want at least 2 (vector_threshold):
@@ -1856,33 +1855,24 @@ static int ixgbevf_acquire_msix_vectors(struct ixgbevf_adapter *adapter,
   * Right now, we simply care about how many we'll get; we'll
   * set them up later while requesting irq's.
   */
- while (vectors >= vector_threshold) {
-  err = pci_enable_msix(adapter->pdev, adapter->msix_entries,
-          vectors);
-  if (!err || err < 0) /* Success or a nasty failure. */
-   break;
-  else /* err == number of vectors we should try again with */
-   vectors = err;
- }
+ vectors = pci_enable_msix_range(adapter->pdev, adapter->msix_entries,
+     vector_threshold, vectors);
 
- if (vectors < vector_threshold)
-  err = -ENOMEM;
-
- if (err) {
+ if (vectors < 0) {
   dev_err(&adapter->pdev->dev,
    "Unable to allocate MSI-X interrupts\n");
   kfree(adapter->msix_entries);
   adapter->msix_entries = NULL;
- } else {
-  /*
-   * Adjust for only the vectors we'll use, which is minimum
-   * of max_msix_q_vectors + NON_Q_VECTORS, or the number of
-   * vectors we were allocated.
-   */
-  adapter->num_msix_vectors = vectors;
+  return vectors;
  }
 
- return err;
+ /* Adjust for only the vectors we'll use, which is minimum
+  * of max_msix_q_vectors + NON_Q_VECTORS, or the number of
+  * vectors we were allocated.
+  */
+ adapter->num_msix_vectors = vectors;
+
+ return 0;
 }
 
 /**
-- 
1.7.1