From 0be3ba19c6b8e8c83e50eb7d4a677eb9f6833218 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:23:35 -0400
Subject: [cpufreq] Implement cpufreq_generic_suspend()

Message-id: <1409235879-1283-122-git-send-email-prarit@redhat.com>
Patchwork-id: 89428
O-Subject: [RHEL7.1 PATCH BZ 1134639 121/185] cpufreq: Implement cpufreq_generic_suspend()
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit e28867eab7c0a60cddf0cb59f9f6cbbd9561425d
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Tue Mar 4 11:00:27 2014 +0800

    cpufreq: Implement cpufreq_generic_suspend()

    Multiple platforms need to set CPUs to a particular frequency before
    suspending the system, so provide a common infrastructure for them.

    Those platforms only need to point their ->suspend callback pointers
    to the generic routine.

    Tested-by: Stephen Warren <swarren@nvidia.com>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    [rjw: Changelog]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/cpufreq.c b/drivers/cpufreq/cpufreq.c
index 0958579..114ba56 100644
--- a/drivers/cpufreq/cpufreq.c
+++ b/drivers/cpufreq/cpufreq.c
@@ -1571,6 +1571,32 @@ static struct subsys_interface cpufreq_interface = {
  .remove_dev = cpufreq_remove_dev,
 };
 
+/*
+ * In case platform wants some specific frequency to be configured
+ * during suspend..
+ */
+int cpufreq_generic_suspend(struct cpufreq_policy *policy)
+{
+ int ret;
+
+ if (!policy->suspend_freq) {
+  pr_err("%s: suspend_freq can't be zero\n", __func__);
+  return -EINVAL;
+ }
+
+ pr_debug("%s: Setting suspend-freq: %u\n", __func__,
+   policy->suspend_freq);
+
+ ret = __cpufreq_driver_target(policy, policy->suspend_freq,
+   CPUFREQ_RELATION_H);
+ if (ret)
+  pr_err("%s: unable to set suspend-freq: %u. err: %d\n",
+    __func__, policy->suspend_freq, ret);
+
+ return ret;
+}
+EXPORT_SYMBOL(cpufreq_generic_suspend);
+
 /**
  * cpufreq_suspend() - Suspend CPUFreq governors
  *
diff --git a/include/linux/cpufreq.h b/include/linux/cpufreq.h
index 98c3813..21877c2 100644
--- a/include/linux/cpufreq.h
+++ b/include/linux/cpufreq.h
@@ -104,6 +104,8 @@ struct cpufreq_policy {
  unsigned int  max;    /* in kHz */
  unsigned int  cur;    /* in kHz, only needed if cpufreq
       * governors are used */
+ unsigned int  suspend_freq; /* freq to set during suspend */
+
  unsigned int  policy; /* see above */
  struct cpufreq_governor *governor; /* see below */
  void   *governor_data;
@@ -235,6 +237,7 @@ void cpufreq_unregister_governor(struct cpufreq_governor *governor);
 #ifdef CONFIG_CPU_FREQ
 void cpufreq_suspend(void);
 void cpufreq_resume(void);
+int cpufreq_generic_suspend(struct cpufreq_policy *policy);
 #else
 static inline void cpufreq_suspend(void) {}
 static inline void cpufreq_resume(void) {}
-- 
1.7.1