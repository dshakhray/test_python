From 05b44906f8f0ba02a993ca2895e31d386438276b Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:24:42 -0400
Subject: [tools] perf/lock: Plug some memleaks

Message-id: <1408462094-14194-114-git-send-email-jolsa@redhat.com>
Patchwork-id: 88082
O-Subject: [PATCH RHEL7.1 BZ1131394 113/325] perf lock: Plug some memleaks
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 0a98c7febf55325ebac4f28289a9433f4b66ed0e
Author: Davidlohr Bueso <davidlohr@hp.com>
Date: Sun Sep 8 19:19:15 2013 -0700

description
===========
Address some trivial leaks.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-lock.c b/tools/perf/builtin-lock.c
index d318862..7784347 100644
--- a/tools/perf/builtin-lock.c
+++ b/tools/perf/builtin-lock.c
@@ -321,10 +321,12 @@ static struct lock_stat *lock_stat_findnew(void *addr, const char *name)
 
  new->addr = addr;
  new->name = zalloc(sizeof(char) * strlen(name) + 1);
- if (!new->name)
+ if (!new->name) {
+  free(new);
   goto alloc_failed;
- strcpy(new->name, name);
+ }
 
+ strcpy(new->name, name);
  new->wait_time_min = ULLONG_MAX;
 
  list_add(&new->hash_entry, entry);
@@ -875,7 +877,7 @@ static int __cmd_record(int argc, const char **argv)
  const char *record_args[] = {
   "record", "-R", "-m", "1024", "-c", "1",
  };
- unsigned int rec_argc, i, j;
+ unsigned int rec_argc, i, j, ret;
  const char **rec_argv;
 
  for (i = 0; i < ARRAY_SIZE(lock_tracepoints); i++) {
@@ -892,7 +894,7 @@ static int __cmd_record(int argc, const char **argv)
  rec_argc += 2 * ARRAY_SIZE(lock_tracepoints);
 
  rec_argv = calloc(rec_argc + 1, sizeof(char *));
- if (rec_argv == NULL)
+ if (!rec_argv)
   return -ENOMEM;
 
  for (i = 0; i < ARRAY_SIZE(record_args); i++)
@@ -908,7 +910,9 @@ static int __cmd_record(int argc, const char **argv)
 
  BUG_ON(i != rec_argc);
 
- return cmd_record(i, rec_argv, NULL);
+ ret = cmd_record(i, rec_argv, NULL);
+ free(rec_argv);
+ return ret;
 }
 
 int cmd_lock(int argc, const char **argv, const char *prefix __maybe_unused)
-- 
1.7.1