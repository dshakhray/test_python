From 49fb010f4fd0f921da8daacf97d78034bfb03217 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Fri, 19 Sep 2014 12:28:54 -0400
Subject: [acpi] hotplug/pci: Move PCI rescan-remove locking to hotplug_event()

Message-id: <1411129776-21656-20-git-send-email-prarit@redhat.com>
Patchwork-id: 96348
O-Subject: [RHEL7.1 PATCH BZ 1141846 19/61] ACPI / hotplug / PCI: Move PCI rescan-remove locking to hotplug_event()
Bugzilla: 1141846
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Myron Stowe <mstowe@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1141846

commit f41b32613138ae05329a0f0e7170223b775d6b24
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Feb 3 02:22:17 2014 +0100

    ACPI / hotplug / PCI: Move PCI rescan-remove locking to hotplug_event()

    Commit 9217a984671e (ACPI / hotplug / PCI: Use global PCI rescan-remove
    locking) modified ACPIPHP to protect its PCI device removal and addition
    code paths from races against sysfs-driven rescan and remove operations
    with the help of PCI rescan-remove locking.  However, it overlooked the
    fact that hotplug_event_work() is not the only caller of hotplug_event()
    which may also be called by dock_hotplug_event() and that code path
    is missing the PCI rescan-remove locking.  This means that, although
    the PCI rescan-remove lock is held as appropriate during the handling
    of events originating from handle_hotplug_event(), the ACPIPHP's
    operations resulting from dock events may still suffer the race
    conditions that commit 9217a984671e was supposed to eliminate.

    To address that problem, move the PCI rescan-remove locking from
    hotplug_event_work() to hotplug_event() so that it is used regardless
    of the way that function is invoked.

    Revamps: 9217a984671e (ACPI / hotplug / PCI: Use global PCI rescan-remove locking)
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Mika Westerberg <mika.westerberg@linux.intel.com>

Cc: Myron Stowe <mstowe@redhat.com>
Cc: Andy Gospodarek <agospoda@redhat.com>
Cc: Tony Camuso <tcamuso@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/hotplug/acpiphp_glue.c b/drivers/pci/hotplug/acpiphp_glue.c
index dbb595a..05d6009 100644
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@ -852,6 +852,7 @@ static void hotplug_event(acpi_handle handle, u32 type, void *data)
 
  mutex_unlock(&acpiphp_context_lock);
 
+ pci_lock_rescan_remove();
  acpi_get_name(handle, ACPI_FULL_PATHNAME, &buffer);
 
  switch (type) {
@@ -905,6 +906,7 @@ static void hotplug_event(acpi_handle handle, u32 type, void *data)
   break;
  }
 
+ pci_unlock_rescan_remove();
  if (bridge)
   put_bridge(bridge);
 }
@@ -915,11 +917,9 @@ static void hotplug_event_work(void *data, u32 type)
  acpi_handle handle = context->handle;
 
  acpi_scan_lock_acquire();
- pci_lock_rescan_remove();
 
  hotplug_event(handle, type, context);
 
- pci_unlock_rescan_remove();
  acpi_scan_lock_release();
  acpi_evaluate_hotplug_ost(handle, type, ACPI_OST_SC_SUCCESS, NULL);
  put_bridge(context->func.parent);
-- 
1.7.1