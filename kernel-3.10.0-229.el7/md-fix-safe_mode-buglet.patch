From faa748a00dd245bde5af5ab630f05612b7fa3ce1 Mon Sep 17 00:00:00 2001
From: Jes Sorensen <Jes.Sorensen@redhat.com>
Date: Mon, 1 Sep 2014 09:25:07 -0400
Subject: [md] fix safe_mode buglet

Message-id: <1409563584-9000-6-git-send-email-Jes.Sorensen@redhat.com>
Patchwork-id: 89946
O-Subject: [RHEL7.1 PATCH 05/82] md: fix safe_mode buglet.
Bugzilla: 1085530
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

From: NeilBrown <neilb@suse.de>

Whe we set the safe_mode_timeout to a smaller value we trigger a timeout
immediately - otherwise the small value might not be honoured.
However if the previous timeout was 0 meaning "no timeout", we didn't.
This would mean that no timeout happens until the next write completes,
which could be a long time.

Signed-off-by: NeilBrown <neilb@suse.de>
(cherry picked from commit 275c51c4e34ed776d40a99dd97c1deee50303b07)
Signed-off-by: Jes Sorensen <Jes.Sorensen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/md.c b/drivers/md/md.c
index 8406901..6b2ae33 100644
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@ -3441,7 +3441,7 @@ safe_delay_store(struct mddev *mddev, const char *cbuf, size_t len)
   mddev->safemode_delay = (msec*HZ)/1000;
   if (mddev->safemode_delay == 0)
    mddev->safemode_delay = 1;
-  if (mddev->safemode_delay < old_delay)
+  if (mddev->safemode_delay < old_delay || old_delay == 0)
    md_safemode_timeout((unsigned long)mddev);
  }
  return len;
-- 
1.7.1