From 1e527fa7fea6523ebffe250f9f72b02869df2e28 Mon Sep 17 00:00:00 2001
From: Hendrik Brueckner <brueckner@redhat.com>
Date: Tue, 14 Oct 2014 09:07:40 -0400
Subject: [s390] zcrypt: Toleration of new crypto hardware

Message-id: <1413277660-18585-3-git-send-email-brueckner@redhat.com>
Patchwork-id: 97563
O-Subject: [RHEL7.1 PATCH 2/2] [s390] s390/zcrypt: Toleration of new crypto hardware
Bugzilla: 1136494
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Description
-----------
Author: Ingo Tuchscherer <ingo.tuchscherer@de.ibm.com>

    s390/zcrypt: Toleration of new crypto hardware

    The zcrypt device driver will accept the new crypto adapter
    in toleration mode. A new sysfs attribute 'raw_hwtype' will
    expose the raw hardware type.

    Signed-off-by: Ingo Tuchscherer <ingo.tuchscherer@de.ibm.com>
    Signed-off-by: Harald Freudenberger <freude@linux.vnet.ibm.com>

Bugzilla
--------
BZ 1136494
https://bugzilla.redhat.com/show_bug.cgi?id=1136494

Upstream status of the patch
----------------------------
The patch is upstream as of kernel version 3.18-rc1
http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=42f4dd613fe808676126472bbe1283e452201148

Brew
----
https://brewweb.devel.redhat.com/taskinfo?taskID=8095364

Test status
-----------
The patch has been tested and fixes the problem.
The fix has been verified by the IBM test department.

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/s390/crypto/ap_bus.c b/drivers/s390/crypto/ap_bus.c
index 29f08fc..d145608 100644
--- a/drivers/s390/crypto/ap_bus.c
+++ b/drivers/s390/crypto/ap_bus.c
@@ -664,6 +664,17 @@ static ssize_t ap_hwtype_show(struct device *dev,
 }
 
 static DEVICE_ATTR(hwtype, 0444, ap_hwtype_show, NULL);
+
+static ssize_t ap_raw_hwtype_show(struct device *dev,
+         struct device_attribute *attr, char *buf)
+{
+ struct ap_device *ap_dev = to_ap_dev(dev);
+
+ return snprintf(buf, PAGE_SIZE, "%d\n", ap_dev->raw_hwtype);
+}
+
+static DEVICE_ATTR(raw_hwtype, 0444, ap_raw_hwtype_show, NULL);
+
 static ssize_t ap_depth_show(struct device *dev, struct device_attribute *attr,
         char *buf)
 {
@@ -734,6 +745,7 @@ static DEVICE_ATTR(ap_functions, 0444, ap_functions_show, NULL);
 
 static struct attribute *ap_dev_attrs[] = {
  &dev_attr_hwtype.attr,
+ &dev_attr_raw_hwtype.attr,
  &dev_attr_depth.attr,
  &dev_attr_request_count.attr,
  &dev_attr_requestq_count.attr,
@@ -1412,9 +1424,13 @@ static void ap_scan_bus(struct work_struct *unused)
     continue;
    }
    break;
+  case 11:
+   ap_dev->device_type = 10;
+   break;
   default:
    ap_dev->device_type = device_type;
   }
+  ap_dev->raw_hwtype = device_type;
 
   rc = ap_query_functions(qid, &device_functions);
   if (!rc)
diff --git a/drivers/s390/crypto/ap_bus.h b/drivers/s390/crypto/ap_bus.h
index db92e9f..055a0f9 100644
--- a/drivers/s390/crypto/ap_bus.h
+++ b/drivers/s390/crypto/ap_bus.h
@@ -161,6 +161,7 @@ struct ap_device {
  ap_qid_t qid;   /* AP queue id. */
  int queue_depth;  /* AP queue depth.*/
  int device_type;  /* AP device type. */
+ int raw_hwtype;   /* AP raw hardware type. */
  unsigned int functions;  /* AP device function bitfield. */
  int unregistered;  /* marks AP device as unregistered */
  struct timer_list timeout; /* Timer for request timeouts. */
-- 
1.7.1