From ba11df0fb43e306dd2af943c1a43420b69be925c Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:01:16 -0400
Subject: [usb] core: Make usb_free_streams return an error

Message-id: <1410887463-20674-5-git-send-email-dzickus@redhat.com>
Patchwork-id: 95099
O-Subject: [RHEL7 PATCH 004/591] usb-core: Make usb_free_streams return an error
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 6c74dada4f5a37037dee1da6a8a7aeb56c558bca
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Aug 30 14:03:59 2013 +0200

    usb-core: Make usb_free_streams return an error

    The hcd-driver free_streams method can return an error, so lets properly
    propagate that.

    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/core/hcd.c b/drivers/usb/core/hcd.c
index 44fec42..9795a21 100644
--- a/drivers/usb/core/hcd.c
+++ b/drivers/usb/core/hcd.c
@@ -2076,8 +2076,11 @@ EXPORT_SYMBOL_GPL(usb_alloc_streams);
  *
  * Reverts a group of bulk endpoints back to not using stream IDs.
  * Can fail if we are given bad arguments, or HCD is broken.
+ *
+ * Return: On success, the number of allocated streams. On failure, a negative
+ * error code.
  */
-void usb_free_streams(struct usb_interface *interface,
+int usb_free_streams(struct usb_interface *interface,
   struct usb_host_endpoint **eps, unsigned int num_eps,
   gfp_t mem_flags)
 {
@@ -2088,14 +2091,14 @@ void usb_free_streams(struct usb_interface *interface,
  dev = interface_to_usbdev(interface);
  hcd = bus_to_hcd(dev->bus);
  if (dev->speed != USB_SPEED_SUPER)
-  return;
+  return -EINVAL;
 
  /* Streams only apply to bulk endpoints. */
  for (i = 0; i < num_eps; i++)
   if (!eps[i] || !usb_endpoint_xfer_bulk(&eps[i]->desc))
-   return;
+   return -EINVAL;
 
- hcd->driver->free_streams(hcd, dev, eps, num_eps, mem_flags);
+ return hcd->driver->free_streams(hcd, dev, eps, num_eps, mem_flags);
 }
 EXPORT_SYMBOL_GPL(usb_free_streams);
 
diff --git a/include/linux/usb.h b/include/linux/usb.h
index f653f15..d8e0b10 100644
--- a/include/linux/usb.h
+++ b/include/linux/usb.h
@@ -702,7 +702,7 @@ extern int usb_alloc_streams(struct usb_interface *interface,
   unsigned int num_streams, gfp_t mem_flags);
 
 /* Reverts a group of bulk endpoints back to not using stream IDs. */
-extern void usb_free_streams(struct usb_interface *interface,
+extern int usb_free_streams(struct usb_interface *interface,
   struct usb_host_endpoint **eps, unsigned int num_eps,
   gfp_t mem_flags);
 
-- 
1.7.1