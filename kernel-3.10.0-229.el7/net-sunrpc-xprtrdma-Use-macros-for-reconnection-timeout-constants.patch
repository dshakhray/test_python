From a63dd2515e56422443bc0d861f5602be67283204 Mon Sep 17 00:00:00 2001
From: Steve Dickson <SteveD@redhat.com>
Date: Thu, 26 Jun 2014 15:54:28 -0400
Subject: [net] sunrpc/xprtrdma: Use macros for reconnection timeout constants

Message-id: <1403798077-28799-70-git-send-email-steved@redhat.com>
Patchwork-id: 84908
O-Subject: [RHEL7.1 PATCH 69/78] xprtrdma: Use macros for reconnection timeout constants
Bugzilla: 1113248
RH-Acked-by: J. Bruce Fields <bfields@redhat.com>

From: Chuck Lever <chuck.lever@oracle.com>

Clean up: Ensure the same max and min constant values are used
everywhere when setting reconnect timeouts.

Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
Upstream Id: bfaee096deaa680195df5491eb650f81051c145d
Bugzilla: 1113248
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/sunrpc/xprtrdma/transport.c b/net/sunrpc/xprtrdma/transport.c
index d18b2a3..6b84d7d 100644
--- a/net/sunrpc/xprtrdma/transport.c
+++ b/net/sunrpc/xprtrdma/transport.c
@@ -149,6 +149,11 @@ static struct ctl_table sunrpc_table[] = {
 
 #endif
 
+#define RPCRDMA_BIND_TO  (60U * HZ)
+#define RPCRDMA_INIT_REEST_TO (5U * HZ)
+#define RPCRDMA_MAX_REEST_TO (30U * HZ)
+#define RPCRDMA_IDLE_DISC_TO (5U * 60 * HZ)
+
 static struct rpc_xprt_ops xprt_rdma_procs; /* forward reference */
 
 static void
@@ -285,9 +290,9 @@ xprt_setup_rdma(struct xprt_create *args)
 
  /* 60 second timeout, no retries */
  xprt->timeout = &xprt_rdma_default_timeout;
- xprt->bind_timeout = (60U * HZ);
- xprt->reestablish_timeout = (5U * HZ);
- xprt->idle_timeout = (5U * 60 * HZ);
+ xprt->bind_timeout = RPCRDMA_BIND_TO;
+ xprt->reestablish_timeout = RPCRDMA_INIT_REEST_TO;
+ xprt->idle_timeout = RPCRDMA_IDLE_DISC_TO;
 
  xprt->resvport = 0;  /* privileged port not needed */
  xprt->tsh_size = 0;  /* RPC-RDMA handles framing */
@@ -432,10 +437,10 @@ xprt_rdma_connect(struct rpc_xprt *xprt, struct rpc_task *task)
   schedule_delayed_work(&r_xprt->rdma_connect,
    xprt->reestablish_timeout);
   xprt->reestablish_timeout <<= 1;
-  if (xprt->reestablish_timeout > (30 * HZ))
-   xprt->reestablish_timeout = (30 * HZ);
-  else if (xprt->reestablish_timeout < (5 * HZ))
-   xprt->reestablish_timeout = (5 * HZ);
+  if (xprt->reestablish_timeout > RPCRDMA_MAX_REEST_TO)
+   xprt->reestablish_timeout = RPCRDMA_MAX_REEST_TO;
+  else if (xprt->reestablish_timeout < RPCRDMA_INIT_REEST_TO)
+   xprt->reestablish_timeout = RPCRDMA_INIT_REEST_TO;
  } else {
   schedule_delayed_work(&r_xprt->rdma_connect, 0);
   if (!RPC_IS_ASYNC(task))
-- 
1.7.1