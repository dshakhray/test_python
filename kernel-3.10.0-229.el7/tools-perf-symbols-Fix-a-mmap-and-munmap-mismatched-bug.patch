From 67b5126718660463683461fa9412c59d1ddb0ee5 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:26:01 -0400
Subject: [tools] perf/symbols: Fix a mmap and munmap mismatched bug

Message-id: <1408462094-14194-193-git-send-email-jolsa@redhat.com>
Patchwork-id: 88177
O-Subject: [PATCH RHEL7.1 BZ1131394 192/325] perf symbols: Fix a mmap and munmap mismatched bug
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 784f3390f9bd900adfb3b0373615e105a0d9749a
Author: Chenggang Qin <chenggang.qcg@taobao.com>
Date: Fri Oct 11 08:27:57 2013 +0800

description
===========
In function filename__read_debuglink(), while the ELF file is opend and
mmapped in elf_begin(), but if this file is considered to not be usable
during the following code, we will goto the close(fd) directly. The
elf_end() is skipped.  So, the mmaped ELF file cannot be munmapped. The
mmapped areas exist during the life of perf.

This is a memory leak.  This patch fixed this bug.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/symbol-elf.c b/tools/perf/util/symbol-elf.c
index d6b8af3..eed0b96 100644
--- a/tools/perf/util/symbol-elf.c
+++ b/tools/perf/util/symbol-elf.c
@@ -487,27 +487,27 @@ int filename__read_debuglink(const char *filename, char *debuglink,
 
  ek = elf_kind(elf);
  if (ek != ELF_K_ELF)
-  goto out_close;
+  goto out_elf_end;
 
  if (gelf_getehdr(elf, &ehdr) == NULL) {
   pr_err("%s: cannot get elf header.\n", __func__);
-  goto out_close;
+  goto out_elf_end;
  }
 
  sec = elf_section_by_name(elf, &ehdr, &shdr,
       ".gnu_debuglink", NULL);
  if (sec == NULL)
-  goto out_close;
+  goto out_elf_end;
 
  data = elf_getdata(sec, NULL);
  if (data == NULL)
-  goto out_close;
+  goto out_elf_end;
 
  /* the start of this section is a zero-terminated string */
  strncpy(debuglink, data->d_buf, size);
 
+out_elf_end:
  elf_end(elf);
-
 out_close:
  close(fd);
 out:
-- 
1.7.1