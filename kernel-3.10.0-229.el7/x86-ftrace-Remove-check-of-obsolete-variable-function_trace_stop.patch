From 343b3daa5ace51e91dbe63e40d6cf4753bc87170 Mon Sep 17 00:00:00 2001
From: Josh Poimboeuf <jpoimboe@redhat.com>
Date: Thu, 4 Sep 2014 18:54:40 -0400
Subject: [x86] ftrace: Remove check of obsolete variable function_trace_stop

Message-id: <6259d44130e6ae1feda6e8d0719bf248c999511f.1409856554.git.jpoimboe@redhat.com>
Patchwork-id: 91257
O-Subject: [RHEL7.1 PATCH 21/23] ftrace: x86: Remove check of obsolete variable function_trace_stop
Bugzilla: 1113829
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1113829

commit fdc841b58cf5268fa349eaf9f74fd9a8c6944a34
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Wed Jun 25 11:59:45 2014 -0400

    ftrace: x86: Remove check of obsolete variable function_trace_stop

    Nothing sets function_trace_stop to disable function tracing anymore.
    Remove the check for it in the arch code.

    Link: http://lkml.kernel.org/r/53C54D32.6000000@zytor.com

    Acked-by: H. Peter Anvin <hpa@linux.intel.com>
    Reviewed-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/Kconfig b/arch/x86/Kconfig
index 36b6a88..fdde1bc 100644
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@ -51,7 +51,6 @@ config X86
  select HAVE_FUNCTION_TRACER
  select HAVE_FUNCTION_GRAPH_TRACER
  select HAVE_FUNCTION_GRAPH_FP_TEST
- select HAVE_FUNCTION_TRACE_MCOUNT_TEST
  select HAVE_SYSCALL_TRACEPOINTS
  select SYSCTL_EXCEPTION_TRACE
  select HAVE_KVM
diff --git a/arch/x86/kernel/entry_32.S b/arch/x86/kernel/entry_32.S
index 788c4f9..4525ba3 100644
--- a/arch/x86/kernel/entry_32.S
+++ b/arch/x86/kernel/entry_32.S
@@ -1076,9 +1076,6 @@ ENTRY(mcount)
 END(mcount)
 
 ENTRY(ftrace_caller)
- cmpl $0, function_trace_stop
- jne  ftrace_stub
-
  pushl %eax
  pushl %ecx
  pushl %edx
@@ -1110,8 +1107,6 @@ END(ftrace_caller)
 
 ENTRY(ftrace_regs_caller)
  pushf /* push flags before compare (in cs location) */
- cmpl $0, function_trace_stop
- jne ftrace_restore_flags
 
  /*
   * i386 does not save SS and ESP when coming from kernel.
@@ -1170,15 +1165,11 @@ GLOBAL(ftrace_regs_call)
  popf   /* Pop flags at end (no addl to corrupt flags) */
  jmp ftrace_ret
 
-ftrace_restore_flags:
  popf
  jmp  ftrace_stub
 #else /* ! CONFIG_DYNAMIC_FTRACE */
 
 ENTRY(mcount)
- cmpl $0, function_trace_stop
- jne  ftrace_stub
-
  cmpl $ftrace_stub, ftrace_trace_function
  jnz trace
 #ifdef CONFIG_FUNCTION_GRAPH_TRACER
diff --git a/arch/x86/kernel/mcount_64.S b/arch/x86/kernel/mcount_64.S
index c050a01..c73aecf 100644
--- a/arch/x86/kernel/mcount_64.S
+++ b/arch/x86/kernel/mcount_64.S
@@ -46,10 +46,6 @@ END(function_hook)
 .endm
 
 ENTRY(ftrace_caller)
- /* Check if tracing was disabled (quick check) */
- cmpl $0, function_trace_stop
- jne  ftrace_stub
-
  ftrace_caller_setup
  /* regs go into 4th parameter (but make it NULL) */
  movq $0, %rcx
@@ -73,10 +69,6 @@ ENTRY(ftrace_regs_caller)
  /* Save the current flags before compare (in SS location)*/
  pushfq
 
- /* Check if tracing was disabled (quick check) */
- cmpl $0, function_trace_stop
- jne  ftrace_restore_flags
-
  /* skip=8 to skip flags saved in SS */
  ftrace_caller_setup 8
 
@@ -131,7 +123,7 @@ GLOBAL(ftrace_regs_call)
  popfq
 
  jmp ftrace_return
-ftrace_restore_flags:
+
  popfq
  jmp  ftrace_stub
 
@@ -141,9 +133,6 @@ END(ftrace_regs_caller)
 #else /* ! CONFIG_DYNAMIC_FTRACE */
 
 ENTRY(function_hook)
- cmpl $0, function_trace_stop
- jne  ftrace_stub
-
  cmpq $ftrace_stub, ftrace_trace_function
  jnz trace
 
-- 
1.7.1