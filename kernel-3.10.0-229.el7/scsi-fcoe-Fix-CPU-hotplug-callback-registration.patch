From e545008910f444699215624c7de582dad7a9af26 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Mon, 14 Jul 2014 13:08:02 -0400
Subject: [scsi] fcoe: Fix CPU hotplug callback registration

Message-id: <1405343292-21004-26-git-send-email-prarit@redhat.com>
Patchwork-id: 85750
O-Subject: [RHEL7.1 PATCH BZ 1119078 25/35] scsi, fcoe: Fix CPU hotplug callback registration
Bugzilla: 1119078
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Igor Mammedov <imammedo@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1119078

commit cd45ae38035d1b7f98dd92429b59bbc8ba9443e9
Author: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
Date:   Tue Mar 11 02:09:52 2014 +0530

    scsi, fcoe: Fix CPU hotplug callback registration

    Subsystems that want to register CPU hotplug callbacks, as well as perform
    initialization for the CPUs that are already online, often do it as shown
    below:

     get_online_cpus();

     for_each_online_cpu(cpu)
      init_cpu(cpu);

     register_cpu_notifier(&foobar_cpu_notifier);

     put_online_cpus();

    This is wrong, since it is prone to ABBA deadlocks involving the
    cpu_add_remove_lock and the cpu_hotplug.lock (when running concurrently
    with CPU hotplug operations).

    Instead, the correct and race-free way of performing the callback
    registration is:

     cpu_notifier_register_begin();

     for_each_online_cpu(cpu)
      init_cpu(cpu);

     /* Note the use of the double underscored version of the API */
     __register_cpu_notifier(&foobar_cpu_notifier);

     cpu_notifier_register_done();

    Fix the fcoe code in scsi by using this latter form of callback registration.

    Cc: Robert Love <robert.w.love@intel.com>
    Cc: "James E.J. Bottomley" <JBottomley@parallels.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Neil Horman <nhorman@redhat.com>
Cc: David Milburn <dmilburn@redhat.com>
Cc: Doug Ledford <dledford@redhat.com>
Cc: Dean Nelson <dnelson@redhat.com>
Cc: Tony Camuso <tcamuso@redhat.com>
Cc: Jes Sorensen <Jes.Sorensen@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/fcoe/fcoe.c b/drivers/scsi/fcoe/fcoe.c
index bedac38..ded9a0f 100644
--- a/drivers/scsi/fcoe/fcoe.c
+++ b/drivers/scsi/fcoe/fcoe.c
@@ -2629,14 +2629,18 @@ static int __init fcoe_init(void)
   skb_queue_head_init(&p->fcoe_rx_list);
  }
 
+ cpu_notifier_register_begin();
+
  for_each_online_cpu(cpu)
   fcoe_percpu_thread_create(cpu);
 
  /* Initialize per CPU interrupt thread */
- rc = register_hotcpu_notifier(&fcoe_cpu_notifier);
+ rc = __register_hotcpu_notifier(&fcoe_cpu_notifier);
  if (rc)
   goto out_free;
 
+ cpu_notifier_register_done();
+
  /* Setup link change notification */
  fcoe_dev_setup();
 
@@ -2651,6 +2655,9 @@ out_free:
  for_each_online_cpu(cpu) {
   fcoe_percpu_thread_destroy(cpu);
  }
+
+ cpu_notifier_register_done();
+
  mutex_unlock(&fcoe_config_mutex);
  destroy_workqueue(fcoe_wq);
  return rc;
@@ -2683,11 +2690,15 @@ static void __exit fcoe_exit(void)
  }
  rtnl_unlock();
 
- unregister_hotcpu_notifier(&fcoe_cpu_notifier);
+ cpu_notifier_register_begin();
 
  for_each_online_cpu(cpu)
   fcoe_percpu_thread_destroy(cpu);
 
+ __unregister_hotcpu_notifier(&fcoe_cpu_notifier);
+
+ cpu_notifier_register_done();
+
  mutex_unlock(&fcoe_config_mutex);
 
  /*
-- 
1.7.1