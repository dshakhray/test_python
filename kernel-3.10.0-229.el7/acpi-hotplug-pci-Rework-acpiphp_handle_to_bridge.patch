From 712481eddcf597d0f75652ff04f13538d93e4fa5 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 10 Jul 2014 01:01:10 -0400
Subject: [acpi] hotplug/pci: Rework acpiphp_handle_to_bridge()

Message-id: <20140710010110.22146.20592.stgit@gir.stowe>
Patchwork-id: 85567
O-Subject: [RHEL7.1 PATCH 028/105] ACPI / hotplug / PCI: Rework acpiphp_handle_to_bridge()
Bugzilla: 1114228
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1114228
Upstream Status: ed13febf8fac1a08f939f97378574937a7d2f121

commit ed13febf8fac1a08f939f97378574937a7d2f121
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Sat Jul 13 23:27:24 2013 +0200

    ACPI / hotplug / PCI: Rework acpiphp_handle_to_bridge()

    Using the hotplug context objects introduced previously rework the
    ACPI-based PCI hotplug (ACPIPHP) core code to get to acpiphp_bridge
    objects associated with hotplug bridges from those context objects
    rather than from the global list of hotplug bridges.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Mika Westerberg <mika.westerberg@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/hotplug/acpiphp_glue.c b/drivers/pci/hotplug/acpiphp_glue.c
index 2be11e6..54c036d 100644
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@ -454,18 +454,20 @@ static int detect_ejectable_slots(acpi_handle handle)
 
 static struct acpiphp_bridge *acpiphp_handle_to_bridge(acpi_handle handle)
 {
- struct acpiphp_bridge *bridge;
+ struct acpiphp_context *context;
+ struct acpiphp_bridge *bridge = NULL;
 
- mutex_lock(&bridge_mutex);
- list_for_each_entry(bridge, &bridge_list, list)
-  if (bridge->handle == handle) {
+ mutex_lock(&acpiphp_context_lock);
+ context = acpiphp_get_context(handle);
+ if (context) {
+  bridge = context->bridge;
+  if (bridge)
    get_bridge(bridge);
-   mutex_unlock(&bridge_mutex);
-   return bridge;
-  }
- mutex_unlock(&bridge_mutex);
 
- return NULL;
+  acpiphp_put_context(context);
+ }
+ mutex_unlock(&acpiphp_context_lock);
+ return bridge;
 }
 
 static void cleanup_bridge(struct acpiphp_bridge *bridge)
-- 
1.7.1