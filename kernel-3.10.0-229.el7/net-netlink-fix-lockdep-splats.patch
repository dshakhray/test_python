From b30bfeee7d1b6245e891d531095d928111a203ad Mon Sep 17 00:00:00 2001
From: Jiri Benc <jbenc@redhat.com>
Date: Fri, 12 Sep 2014 14:27:55 -0400
Subject: [net] netlink: fix lockdep splats

Message-id: <4997d2c09f331da4b32318668543f044a71e6163.1410528971.git.jbenc@redhat.com>
Patchwork-id: 93976
O-Subject: [RHEL7.1 net PATCH 12/14] netlink: fix lockdep splats
Bugzilla: 1140661
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: Flavio Leitner <fbl@redhat.com>
RH-Acked-by: Hannes Frederic Sowa <hannes@redhat.com>
RH-Acked-by: Florian Westphal <fwestpha@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1140661
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7948291

commit 67a24ac18b0262178ba9f05501b2c6e6731d449a
Author: Eric Dumazet <eric.dumazet@gmail.com>
Date:   Tue Aug 5 07:50:07 2014 +0200

    netlink: fix lockdep splats

    With netlink_lookup() conversion to RCU, we need to use appropriate
    rcu dereference in netlink_seq_socket_idx() & netlink_seq_next()

    Reported-by: Sasha Levin <sasha.levin@oracle.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Fixes: e341694e3eb57fc ("netlink: Convert netlink_lookup() to use RCU protected hash table")
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/netlink/af_netlink.c b/net/netlink/af_netlink.c
index fe57e0f..1d9af8e 100644
--- a/net/netlink/af_netlink.c
+++ b/net/netlink/af_netlink.c
@@ -2885,7 +2885,7 @@ static struct sock *netlink_seq_socket_idx(struct seq_file *seq, loff_t pos)
 
  for (i = 0; i < MAX_LINKS; i++) {
   struct rhashtable *ht = &nl_table[i].hash;
-  const struct bucket_table *tbl = rht_dereference(ht->tbl, ht);
+  const struct bucket_table *tbl = rht_dereference_rcu(ht->tbl, ht);
 
   for (j = 0; j < tbl->size; j++) {
    rht_for_each_entry_rcu(nlk, tbl->buckets[j], node) {
@@ -2936,7 +2936,7 @@ static void *netlink_seq_next(struct seq_file *seq, void *v, loff_t *pos)
 
  do {
   struct rhashtable *ht = &nl_table[i].hash;
-  const struct bucket_table *tbl = rht_dereference(ht->tbl, ht);
+  const struct bucket_table *tbl = rht_dereference_rcu(ht->tbl, ht);
 
   for (; j < tbl->size; j++) {
    rht_for_each_entry_rcu(nlk, tbl->buckets[j], node) {
-- 
1.7.1