From 8f8ddb18925f0fe33330257640a0d8b8888739b7 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:50:49 -0400
Subject: [tools] perf/timechart: Get number of CPUs from perf header

Message-id: <1408953210-26343-162-git-send-email-jolsa@redhat.com>
Patchwork-id: 88914
O-Subject: [PATCH RHEL7.1 BZ1133083 161/322] perf timechart: Get number of CPUs from perf header
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 58b9a18ecd251cbd6e666ad792023ab77c7d100e
Author: Stanislav Fomichev <stfomichev@yandex-team.ru>
Date: Mon Dec 2 18:37:35 2013 +0400

description
===========
Print all CPUs, even if there were no events (use perf header to get
number of CPUs).

This is required to support topology in the next patch.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-timechart.c b/tools/perf/builtin-timechart.c
index 99fe363..db9c4c1 100644
--- a/tools/perf/builtin-timechart.c
+++ b/tools/perf/builtin-timechart.c
@@ -531,12 +531,10 @@ static int process_sample_event(struct perf_tool *tool,
    tchart->last_time = sample->time;
  }
 
- if (sample->cpu > tchart->numcpus)
-  tchart->numcpus = sample->cpu;
-
  if (evsel->handler != NULL) {
   tracepoint_handler f = evsel->handler;
-  return f(tchart, evsel, sample, cat_backtrace(event, sample, machine));
+  return f(tchart, evsel, sample,
+    cat_backtrace(event, sample, machine));
  }
 
  return 0;
@@ -1038,8 +1036,6 @@ static void write_svg_file(struct timechart *tchart, const char *filename)
  int count;
  int thresh = TIME_THRESH;
 
- tchart->numcpus++;
-
  if (tchart->power_only)
   tchart->proc_num = 0;
 
@@ -1069,6 +1065,25 @@ static void write_svg_file(struct timechart *tchart, const char *filename)
  svg_close();
 }
 
+static int process_header(struct perf_file_section *section __maybe_unused,
+     struct perf_header *ph,
+     int feat,
+     int fd __maybe_unused,
+     void *data)
+{
+ struct timechart *tchart = data;
+
+ switch (feat) {
+ case HEADER_NRCPUS:
+  tchart->numcpus = ph->env.nr_cpus_avail;
+  break;
+ default:
+  break;
+ }
+
+ return 0;
+}
+
 static int __cmd_timechart(struct timechart *tchart, const char *output_name)
 {
  const struct perf_evsel_str_handler power_tracepoints[] = {
@@ -1094,6 +1109,11 @@ static int __cmd_timechart(struct timechart *tchart, const char *output_name)
  if (session == NULL)
   return -ENOMEM;
 
+ (void)perf_header__process_sections(&session->header,
+         perf_data_file__fd(session->file),
+         tchart,
+         process_header);
+
  if (!perf_session__has_traces(session, "timechart record"))
   goto out_delete;
 
-- 
1.7.1