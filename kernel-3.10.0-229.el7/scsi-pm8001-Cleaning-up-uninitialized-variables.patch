From 0b252ea4ddf1f09019db95d090191795b0c8430c Mon Sep 17 00:00:00 2001
From: Rich Bono <rbono@redhat.com>
Date: Thu, 20 Nov 2014 21:23:36 -0500
Subject: [scsi] pm8001: Cleaning up uninitialized variables

Message-id: <1416518623-7080-16-git-send-email-rbono@redhat.com>
Patchwork-id: 100399
O-Subject: [RHEL7.1 e-stor PATCH V3 15/22] pm8001: Cleaning up uninitialized variables
Bugzilla: 1110943
RH-Acked-by: Rob Evers <revers@redhat.com>
RH-Acked-by: Tomas Henzl <thenzl@redhat.com>

From: Rickard Strandqvist <rickard_strandqvist@spectrumdigital.se>

There is a risk that the variable will be used without being initialized.

This was largely found by using a static code analysis program called cppche

Signed-off-by: Rickard Strandqvist <rickard_strandqvist@spectrumdigital.se>
Acked-by: Suresh Thiagarajan <Suresh.Thiagarajan@pmcs.com>
Acked-by: Jack Wang <xjtuwjp@gmail.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit da225498d97565b6f25ed28ebdf0fecdf3a5ca5c)

Signed-off-by: Rich Bono <rbono@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/pm8001/pm80xx_hwi.c b/drivers/scsi/pm8001/pm80xx_hwi.c
index 4a64c80..c609646 100644
--- a/drivers/scsi/pm8001/pm80xx_hwi.c
+++ b/drivers/scsi/pm8001/pm80xx_hwi.c
@@ -952,7 +952,7 @@ static int
 pm80xx_get_encrypt_info(struct pm8001_hba_info *pm8001_ha)
 {
  u32 scratch3_value;
- int ret;
+ int ret = -1;
 
  /* Read encryption status from SCRATCH PAD 3 */
  scratch3_value = pm8001_cr32(pm8001_ha, 0, MSGU_SCRATCH_PAD_3);
@@ -986,7 +986,7 @@ pm80xx_get_encrypt_info(struct pm8001_hba_info *pm8001_ha)
   pm8001_ha->encrypt_info.status = 0xFFFFFFFF;
   pm8001_ha->encrypt_info.cipher_mode = 0;
   pm8001_ha->encrypt_info.sec_mode = 0;
-  return 0;
+  ret = 0;
  } else if ((scratch3_value & SCRATCH_PAD3_ENC_MASK) ==
     SCRATCH_PAD3_ENC_DIS_ERR) {
   pm8001_ha->encrypt_info.status =
@@ -1008,7 +1008,6 @@ pm80xx_get_encrypt_info(struct pm8001_hba_info *pm8001_ha)
    scratch3_value, pm8001_ha->encrypt_info.cipher_mode,
    pm8001_ha->encrypt_info.sec_mode,
    pm8001_ha->encrypt_info.status));
-  ret = -1;
  } else if ((scratch3_value & SCRATCH_PAD3_ENC_MASK) ==
      SCRATCH_PAD3_ENC_ENA_ERR) {
 
@@ -1032,7 +1031,6 @@ pm80xx_get_encrypt_info(struct pm8001_hba_info *pm8001_ha)
    scratch3_value, pm8001_ha->encrypt_info.cipher_mode,
    pm8001_ha->encrypt_info.sec_mode,
    pm8001_ha->encrypt_info.status));
-  ret = -1;
  }
  return ret;
 }
-- 
1.7.1