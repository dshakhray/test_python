From 1b5083d8abcd6f03974757eca94dd1b4f2dc00a5 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:10:08 -0400
Subject: [usb] ftdi_sio: fix null deref at port probe

Message-id: <1410887463-20674-537-git-send-email-dzickus@redhat.com>
Patchwork-id: 95677
O-Subject: [RHEL7 PATCH 536/591] USB: ftdi_sio: fix null deref at port probe
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit aea1ae8760314e072bf1b773521e9de5d5dda10d
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Jun 5 16:05:52 2014 +0200

    USB: ftdi_sio: fix null deref at port probe

    Fix NULL-pointer dereference when probing an interface with no
    endpoints.

    These devices have two bulk endpoints per interface, but this avoids
    crashing the kernel if a user forces a non-FTDI device to be probed.

    Note that the iterator variable was made unsigned in order to avoid
    a maybe-uninitialized compiler warning for ep_desc after the loop.

    Fixes: 895f28badce9 ("USB: ftdi_sio: fix hi-speed device packet size
    calculation")

    Reported-by: Mike Remski <mremski@mutualink.net>
    Tested-by: Mike Remski <mremski@mutualink.net>
    Cc: <stable@vger.kernel.org> # 2.6.31
    Signed-off-by: Johan Hovold <johan@kernel.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/serial/ftdi_sio.c b/drivers/usb/serial/ftdi_sio.c
index d69c5a5..f46199e 100644
--- a/drivers/usb/serial/ftdi_sio.c
+++ b/drivers/usb/serial/ftdi_sio.c
@@ -1563,14 +1563,17 @@ static void ftdi_set_max_packet_size(struct usb_serial_port *port)
  struct usb_device *udev = serial->dev;
 
  struct usb_interface *interface = serial->interface;
- struct usb_endpoint_descriptor *ep_desc = &interface->cur_altsetting->endpoint[1].desc;
+ struct usb_endpoint_descriptor *ep_desc;
 
  unsigned num_endpoints;
- int i;
+ unsigned i;
 
  num_endpoints = interface->cur_altsetting->desc.bNumEndpoints;
  dev_info(&udev->dev, "Number of endpoints %d\n", num_endpoints);
 
+ if (!num_endpoints)
+  return;
+
  /* NOTE: some customers have programmed FT232R/FT245R devices
   * with an endpoint size of 0 - not good.  In this case, we
   * want to override the endpoint descriptor setting and use a
-- 
1.7.1