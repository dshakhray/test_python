From 7b3fd86fbc997deac01015926a673411480a080e Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 23 Oct 2014 09:53:17 -0400
Subject: [fs] ext4: optimize starting extent in ext4_ext_rm_leaf()

Message-id: <1414058125-4183-44-git-send-email-lczerner@redhat.com>
Patchwork-id: 98144
O-Subject: [RHEL 7.1 PATCH v2 043/171] ext4: optimize starting extent in ext4_ext_rm_leaf()
Bugzilla: 1150139
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Ashish Sangwan <a.sangwan@samsung.com>

BZ 1150139
https://bugzilla.redhat.com/show_bug.cgi?id=1150139

BREW 8142710
https://brewweb.devel.redhat.com/taskinfo?taskID=8142710

Upstream commit 6ae06ff51eab5dcbbf959b05ce0f11003a305ba5

 Both hole punch and truncate use ext4_ext_rm_leaf() for removing
 blocks.  Currently we choose the last extent as the starting
 point for removing blocks:

  ex = EXT_LAST_EXTENT(eh);

 This is OK for truncate but for hole punch we can optimize the extent
 selection as the path is already initialized.  We could use this
 information to select proper starting extent.  The code change in this
 patch will not affect truncate as for truncate path[depth].p_ext will
 always be NULL.

 Signed-off-by: Ashish Sangwan <a.sangwan@samsung.com>
 Signed-off-by: Namjae Jeon <namjae.jeon@samsung.com>
 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/extents.c b/fs/ext4/extents.c
index 4fb53f2..5e59be7 100644
--- a/fs/ext4/extents.c
+++ b/fs/ext4/extents.c
@@ -2504,7 +2504,9 @@ ext4_ext_rm_leaf(handle_t *handle, struct inode *inode,
   return -EIO;
  }
  /* find where to start removing */
- ex = EXT_LAST_EXTENT(eh);
+ ex = path[depth].p_ext;
+ if (!ex)
+  ex = EXT_LAST_EXTENT(eh);
 
  ex_ee_block = le32_to_cpu(ex->ee_block);
  ex_ee_len = ext4_ext_get_actual_len(ex);
-- 
1.7.1