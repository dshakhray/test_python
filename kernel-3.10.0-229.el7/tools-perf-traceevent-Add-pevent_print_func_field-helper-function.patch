From d0d0e620faf75da2d8e1cd412b991d1f51fba8a5 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:27:12 -0400
Subject: [tools] perf/traceevent: Add pevent_print_func_field() helper function

Message-id: <1408462094-14194-264-git-send-email-jolsa@redhat.com>
Patchwork-id: 88247
O-Subject: [PATCH RHEL7.1 BZ1131394 263/325] tools lib traceevent: Add pevent_print_func_field() helper function
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 6d862b8c14ba539c7c87ffc77f2e1d6dc9630c4d
Author: Steven Rostedt <srostedt@redhat.com>
Date: Fri Nov 1 17:54:00 2013 -0400

description
===========
Add the pevent_print_func_field() that will look up a field that is
expected to be a function pointer, and it will print the function name
and offset of the address given by the field.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/lib/traceevent/event-parse.c b/tools/lib/traceevent/event-parse.c
index fc6f35f..8f450ad 100644
--- a/tools/lib/traceevent/event-parse.c
+++ b/tools/lib/traceevent/event-parse.c
@@ -5367,6 +5367,48 @@ int pevent_print_num_field(struct trace_seq *s, const char *fmt,
  return -1;
 }
 
+/**
+ * pevent_print_func_field - print a field and a format for function pointers
+ * @s: The seq to print to
+ * @fmt: The printf format to print the field with.
+ * @event: the event that the field is for
+ * @name: The name of the field
+ * @record: The record with the field name.
+ * @err: print default error if failed.
+ *
+ * Returns: 0 on success, -1 field not found, or 1 if buffer is full.
+ */
+int pevent_print_func_field(struct trace_seq *s, const char *fmt,
+       struct event_format *event, const char *name,
+       struct pevent_record *record, int err)
+{
+ struct format_field *field = pevent_find_field(event, name);
+ struct pevent *pevent = event->pevent;
+ unsigned long long val;
+ struct func_map *func;
+ char tmp[128];
+
+ if (!field)
+  goto failed;
+
+ if (pevent_read_number_field(field, record->data, &val))
+  goto failed;
+
+ func = find_func(pevent, val);
+
+ if (func)
+  snprintf(tmp, 128, "%s/0x%llx", func->func, func->addr - val);
+ else
+  sprintf(tmp, "0x%08llx", val);
+
+ return trace_seq_printf(s, fmt, tmp);
+
+ failed:
+ if (err)
+  trace_seq_printf(s, "CAN'T FIND FIELD \"%s\"", name);
+ return -1;
+}
+
 static void free_func_handle(struct pevent_function_handler *func)
 {
  struct pevent_func_params *params;
diff --git a/tools/lib/traceevent/event-parse.h b/tools/lib/traceevent/event-parse.h
index dc8539e..8d73d25 100644
--- a/tools/lib/traceevent/event-parse.h
+++ b/tools/lib/traceevent/event-parse.h
@@ -569,6 +569,10 @@ int pevent_print_num_field(struct trace_seq *s, const char *fmt,
       struct event_format *event, const char *name,
       struct pevent_record *record, int err);
 
+int pevent_print_func_field(struct trace_seq *s, const char *fmt,
+      struct event_format *event, const char *name,
+      struct pevent_record *record, int err);
+
 int pevent_register_event_handler(struct pevent *pevent, int id,
       const char *sys_name, const char *event_name,
       pevent_event_handler_func func, void *context);
-- 
1.7.1