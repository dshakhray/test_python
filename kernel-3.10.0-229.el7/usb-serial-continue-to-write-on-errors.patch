From 6bf1d8ac93cc221b0b530dad5010d87e2677ad92 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:07:09 -0400
Subject: [usb] serial: continue to write on errors

Message-id: <1410887463-20674-358-git-send-email-dzickus@redhat.com>
Patchwork-id: 95431
O-Subject: [RHEL7 PATCH 357/591] USB: serial: continue to write on errors
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit bd58c7bd6fd5f803b4127717bda9cc6c30d0c806
Author: Johan Hovold <jhovold@gmail.com>
Date:   Wed Mar 12 19:09:40 2014 +0100

    USB: serial: continue to write on errors

    Do not discard buffered data and make sure to try to resubmit the write
    urbs on errors.

    Currently a recoverable error would lead to more data than necessary
    being dropped.

    Also upgrade error messages from debug to error log level.

    Signed-off-by: Johan Hovold <jhovold@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <greg@kroah.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/serial/generic.c b/drivers/usb/serial/generic.c
index d7f39ea..33d7f40 100644
--- a/drivers/usb/serial/generic.c
+++ b/drivers/usb/serial/generic.c
@@ -397,7 +397,6 @@ void usb_serial_generic_write_bulk_callback(struct urb *urb)
 {
  unsigned long flags;
  struct usb_serial_port *port = urb->context;
- int status = urb->status;
  int i;
 
  for (i = 0; i < ARRAY_SIZE(port->write_urbs); ++i)
@@ -409,17 +408,27 @@ void usb_serial_generic_write_bulk_callback(struct urb *urb)
  set_bit(i, &port->write_urbs_free);
  spin_unlock_irqrestore(&port->lock, flags);
 
- if (status) {
-  dev_dbg(&port->dev, "%s - non-zero urb status: %d\n",
-   __func__, status);
-
-  spin_lock_irqsave(&port->lock, flags);
-  kfifo_reset_out(&port->write_fifo);
-  spin_unlock_irqrestore(&port->lock, flags);
- } else {
-  usb_serial_generic_write_start(port, GFP_ATOMIC);
+ switch (urb->status) {
+ case 0:
+  break;
+ case -ENOENT:
+ case -ECONNRESET:
+ case -ESHUTDOWN:
+  dev_dbg(&port->dev, "%s - urb stopped: %d\n",
+       __func__, urb->status);
+  return;
+ case -EPIPE:
+  dev_err_console(port, "%s - urb stopped: %d\n",
+       __func__, urb->status);
+  return;
+ default:
+  dev_err_console(port, "%s - nonzero urb status: %d\n",
+       __func__, urb->status);
+  goto resubmit;
  }
 
+resubmit:
+ usb_serial_generic_write_start(port, GFP_ATOMIC);
  usb_serial_port_softint(port);
 }
 EXPORT_SYMBOL_GPL(usb_serial_generic_write_bulk_callback);
-- 
1.7.1