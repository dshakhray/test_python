From 1beec250c09b92cd513a4ca86fb61a003ad7db03 Mon Sep 17 00:00:00 2001
From: Stefan Assmann <sassmann@redhat.com>
Date: Tue, 2 Sep 2014 13:11:27 -0400
Subject: [ethernet] i40evf: program RSS LUT correctly

Message-id: <1409663591-32531-45-git-send-email-sassmann@redhat.com>
Patchwork-id: 90520
O-Subject: [RHEL7.1 PATCH 044/148] i40evf: program RSS LUT correctly
Bugzilla: 1091127
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Mitch A Williams <mitch.a.williams@intel.com>

A recent change broke the RSS LUT programming, causing it to be
programmed with all 0. Correct this by actually assigning the
incremented value back to the counter variable so that the increment
will be remembered by the calling function.

While we're at it, add a proper kernel-doc function comment to our
helper function.

Signed-off-by: Mitch Williams <mitch.a.williams@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: Stefan Assmann <sassmann@redhat.com>
(cherry picked from commit 5b7af02c26d84cf56dfd7e6906e244e31e92d593)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/i40evf/i40evf_main.c b/drivers/net/ethernet/intel/i40evf/i40evf_main.c
index e35e66f..2797548 100644
--- a/drivers/net/ethernet/intel/i40evf/i40evf_main.c
+++ b/drivers/net/ethernet/intel/i40evf/i40evf_main.c
@@ -1412,6 +1412,14 @@ restart_watchdog:
  schedule_work(&adapter->adminq_task);
 }
 
+/**
+ * i40evf_configure_rss - increment to next available tx queue
+ * @adapter: board private structure
+ * @j: queue counter
+ *
+ * Helper function for RSS programming to increment through available
+ * queus. Returns the next queue value.
+ **/
 static int next_queue(struct i40evf_adapter *adapter, int j)
 {
  j += 1;
@@ -1451,10 +1459,14 @@ static void i40evf_configure_rss(struct i40evf_adapter *adapter)
  /* Populate the LUT with max no. of queues in round robin fashion */
  j = adapter->vsi_res->num_queue_pairs;
  for (i = 0; i <= I40E_VFQF_HLUT_MAX_INDEX; i++) {
-  lut = next_queue(adapter, j);
-  lut |= next_queue(adapter, j) << 8;
-  lut |= next_queue(adapter, j) << 16;
-  lut |= next_queue(adapter, j) << 24;
+  j = next_queue(adapter, j);
+  lut = j;
+  j = next_queue(adapter, j);
+  lut |= j << 8;
+  j = next_queue(adapter, j);
+  lut |= j << 16;
+  j = next_queue(adapter, j);
+  lut |= j << 24;
   wr32(hw, I40E_VFQF_HLUT(i), lut);
  }
  i40e_flush(hw);
-- 
1.7.1