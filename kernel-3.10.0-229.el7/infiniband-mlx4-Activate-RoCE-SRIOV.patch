From b65874944733aad459892fbae14d40e9d0fdf25d Mon Sep 17 00:00:00 2001
From: Amir Vadai <avadai@redhat.com>
Date: Thu, 11 Sep 2014 12:00:15 -0400
Subject: [infiniband] mlx4: Activate RoCE/SRIOV

Message-id: <9d806058fd9fdf8bebe1591696496902aa16474b.1410425016.git.avadai@redhat.com>
Patchwork-id: 93616
O-Subject: [Patch RHEL7.1 V1 079/197] mlx4: Activate RoCE/SRIOV
Bugzilla: 1107617 1107618 1107619 1107620
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

From: Jack Morgenstein <jackm@dev.mellanox.co.il>

To activate RoCE/SRIOV, need to remove the following:
1. In mlx4_ib_add, need to remove the error return preventing
   initialization of a RoCE port under SRIOV.
2. In update_vport_qp_params (in resource_tracker.c) need to remove
   the error return when a RoCE RC or UD qp is detected.
   This error return causes the INIT-to-RTR qp transition to fail
   in the wrapper function under RoCE/SRIOV.

Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit aa9a2d51a3e70b15a898bec7dde3ce5726fec641)
Signed-off-by: Amir Vadai <avadai@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/infiniband/hw/mlx4/main.c b/drivers/infiniband/hw/mlx4/main.c
index 0aae89c..6fa0fe5 100644
--- a/drivers/infiniband/hw/mlx4/main.c
+++ b/drivers/infiniband/hw/mlx4/main.c
@@ -1888,14 +1888,6 @@ static void *mlx4_ib_add(struct mlx4_dev *dev)
 
  pr_info_once("%s", mlx4_ib_version);
 
- mlx4_foreach_non_ib_transport_port(i, dev)
-  num_ports++;
-
- if (mlx4_is_mfunc(dev) && num_ports) {
-  dev_err(&dev->pdev->dev, "RoCE is not supported over SRIOV as yet\n");
-  return NULL;
- }
-
  num_ports = 0;
  mlx4_foreach_ib_transport_port(i, dev)
   num_ports++;
diff --git a/drivers/net/ethernet/mellanox/mlx4/resource_tracker.c b/drivers/net/ethernet/mellanox/mlx4/resource_tracker.c
index 706a6d2..74e490d 100644
--- a/drivers/net/ethernet/mellanox/mlx4/resource_tracker.c
+++ b/drivers/net/ethernet/mellanox/mlx4/resource_tracker.c
@@ -645,7 +645,6 @@ static int update_vport_qp_param(struct mlx4_dev *dev,
  struct mlx4_qp_context *qpc = inbox->buf + 8;
  struct mlx4_vport_oper_state *vp_oper;
  struct mlx4_priv *priv;
- u32 qp_type;
  int port;
 
  port = (qpc->pri_path.sched_queue & 0x40) ? 2 : 1;
@@ -653,12 +652,6 @@ static int update_vport_qp_param(struct mlx4_dev *dev,
  vp_oper = &priv->mfunc.master.vf_oper[slave].vport[port];
 
  if (MLX4_VGT != vp_oper->state.default_vlan) {
-  qp_type = (be32_to_cpu(qpc->flags) >> 16) & 0xff;
-  if (MLX4_QP_ST_RC == qp_type ||
-      (MLX4_QP_ST_UD == qp_type &&
-       !mlx4_is_qp_reserved(dev, qpn)))
-   return -EINVAL;
-
   /* the reserved QPs (special, proxy, tunnel)
    * do not operate over vlans
    */
-- 
1.7.1