From a32a2e7d89a7f71265cd140fa6227c2017f78648 Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:23:23 -0400
Subject: [net] libceph: all features fields must be u64
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-97-git-send-email-sweil@redhat.com>
Patchwork-id: 89623
O-Subject: [PATCH 096/303] libceph: all features fields must be u64
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Ilya Dryomov <ilya.dryomov@inktank.com>

In preparation for ceph_features.h update, change all features fields
from unsigned int/u32 to u64.  (ceph.git has ~40 feature bits at this
point.)

Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>
Reviewed-by: Sage Weil <sage@inktank.com>
(cherry picked from commit 12b4629a9fb80fecaebadc217b13b8776ed8dbef)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ceph/mds_client.c b/fs/ceph/mds_client.c
index d90861f..4a13f6e 100644
--- a/fs/ceph/mds_client.c
+++ b/fs/ceph/mds_client.c
@@ -63,7 +63,7 @@ static const struct ceph_connection_operations mds_con_ops;
  */
 static int parse_reply_info_in(void **p, void *end,
           struct ceph_mds_reply_info_in *info,
-          int features)
+          u64 features)
 {
  int err = -EIO;
 
@@ -98,7 +98,7 @@ bad:
  */
 static int parse_reply_info_trace(void **p, void *end,
       struct ceph_mds_reply_info_parsed *info,
-      int features)
+      u64 features)
 {
  int err;
 
@@ -145,7 +145,7 @@ out_bad:
  */
 static int parse_reply_info_dir(void **p, void *end,
     struct ceph_mds_reply_info_parsed *info,
-    int features)
+    u64 features)
 {
  u32 num, i = 0;
  int err;
@@ -217,7 +217,7 @@ out_bad:
  */
 static int parse_reply_info_filelock(void **p, void *end,
          struct ceph_mds_reply_info_parsed *info,
-         int features)
+         u64 features)
 {
  if (*p + sizeof(*info->filelock_reply) > end)
   goto bad;
@@ -238,7 +238,7 @@ bad:
  */
 static int parse_reply_info_create(void **p, void *end,
       struct ceph_mds_reply_info_parsed *info,
-      int features)
+      u64 features)
 {
  if (features & CEPH_FEATURE_REPLY_CREATE_INODE) {
   if (*p == end) {
@@ -262,7 +262,7 @@ bad:
  */
 static int parse_reply_info_extra(void **p, void *end,
       struct ceph_mds_reply_info_parsed *info,
-      int features)
+      u64 features)
 {
  if (info->head->op == CEPH_MDS_OP_GETFILELOCK)
   return parse_reply_info_filelock(p, end, info, features);
@@ -280,7 +280,7 @@ static int parse_reply_info_extra(void **p, void *end,
  */
 static int parse_reply_info(struct ceph_msg *msg,
        struct ceph_mds_reply_info_parsed *info,
-       int features)
+       u64 features)
 {
  void *p, *end;
  u32 len;
diff --git a/fs/ceph/super.c b/fs/ceph/super.c
index 4fe919a..499dfb7 100644
--- a/fs/ceph/super.c
+++ b/fs/ceph/super.c
@@ -475,10 +475,10 @@ static struct ceph_fs_client *create_fs_client(struct ceph_mount_options *fsopt,
      struct ceph_options *opt)
 {
  struct ceph_fs_client *fsc;
- const unsigned supported_features =
+ const u64 supported_features =
   CEPH_FEATURE_FLOCK |
   CEPH_FEATURE_DIRLAYOUTHASH;
- const unsigned required_features = 0;
+ const u64 required_features = 0;
  int page_count;
  size_t size;
  int err = -ENOMEM;
diff --git a/include/linux/ceph/libceph.h b/include/linux/ceph/libceph.h
index 2e30248..7d704db 100644
--- a/include/linux/ceph/libceph.h
+++ b/include/linux/ceph/libceph.h
@@ -122,8 +122,8 @@ struct ceph_client {
 
  int (*extra_mon_dispatch)(struct ceph_client *, struct ceph_msg *);
 
- u32 supported_features;
- u32 required_features;
+ u64 supported_features;
+ u64 required_features;
 
  struct ceph_messenger msgr;   /* messenger instance */
  struct ceph_mon_client monc;
@@ -192,8 +192,8 @@ extern int ceph_compare_options(struct ceph_options *new_opt,
     struct ceph_client *client);
 extern struct ceph_client *ceph_create_client(struct ceph_options *opt,
            void *private,
-           unsigned supported_features,
-           unsigned required_features);
+           u64 supported_features,
+           u64 required_features);
 extern u64 ceph_client_id(struct ceph_client *client);
 extern void ceph_destroy_client(struct ceph_client *client);
 extern int __ceph_open_session(struct ceph_client *client,
diff --git a/include/linux/ceph/messenger.h b/include/linux/ceph/messenger.h
index 7c1420b..c1d3f5a 100644
--- a/include/linux/ceph/messenger.h
+++ b/include/linux/ceph/messenger.h
@@ -60,8 +60,8 @@ struct ceph_messenger {
  u32 global_seq;
  spinlock_t global_seq_lock;
 
- u32 supported_features;
- u32 required_features;
+ u64 supported_features;
+ u64 required_features;
 };
 
 enum ceph_msg_data_type {
@@ -192,7 +192,7 @@ struct ceph_connection {
 
  struct ceph_entity_name peer_name; /* peer name */
 
- unsigned peer_features;
+ u64 peer_features;
  u32 connect_seq;      /* identify the most recent connection
      attempt for this connection, client */
  u32 peer_global_seq;  /* peer's global seq for this connection */
@@ -256,8 +256,8 @@ extern void ceph_msgr_flush(void);
 
 extern void ceph_messenger_init(struct ceph_messenger *msgr,
    struct ceph_entity_addr *myaddr,
-   u32 supported_features,
-   u32 required_features,
+   u64 supported_features,
+   u64 required_features,
    bool nocrc);
 
 extern void ceph_con_init(struct ceph_connection *con, void *private,
diff --git a/net/ceph/ceph_common.c b/net/ceph/ceph_common.c
index 34b11ee..43d8177 100644
--- a/net/ceph/ceph_common.c
+++ b/net/ceph/ceph_common.c
@@ -461,8 +461,8 @@ EXPORT_SYMBOL(ceph_client_id);
  * create a fresh client instance
  */
 struct ceph_client *ceph_create_client(struct ceph_options *opt, void *private,
-           unsigned int supported_features,
-           unsigned int required_features)
+           u64 supported_features,
+           u64 required_features)
 {
  struct ceph_client *client;
  struct ceph_entity_addr *myaddr = NULL;
diff --git a/net/ceph/messenger.c b/net/ceph/messenger.c
index eb0a46a..ee64a2b 100644
--- a/net/ceph/messenger.c
+++ b/net/ceph/messenger.c
@@ -2853,8 +2853,8 @@ static void con_fault(struct ceph_connection *con)
  */
 void ceph_messenger_init(struct ceph_messenger *msgr,
    struct ceph_entity_addr *myaddr,
-   u32 supported_features,
-   u32 required_features,
+   u64 supported_features,
+   u64 required_features,
    bool nocrc)
 {
  msgr->supported_features = supported_features;
-- 
1.7.1