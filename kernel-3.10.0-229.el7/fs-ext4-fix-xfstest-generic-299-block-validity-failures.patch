From 580551a4235fd5d3d4ae5b2e970276d6c2085fd1 Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 23 Oct 2014 09:54:15 -0400
Subject: [fs] ext4: fix xfstest generic/299 block validity failures

Message-id: <1414058125-4183-102-git-send-email-lczerner@redhat.com>
Patchwork-id: 98204
O-Subject: [RHEL 7.1 PATCH v2 101/171] ext4: fix xfstest generic/299 block validity failures
Bugzilla: 1150139
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Eric Whitney <enwlinux@gmail.com>

BZ 1150139
https://bugzilla.redhat.com/show_bug.cgi?id=1150139

BREW 8142710
https://brewweb.devel.redhat.com/taskinfo?taskID=8142710

Upstream commit 15cc17678547676c82a5da9ccf357447333fc342

 Commit a115f749c1 (ext4: remove wait for unwritten extent conversion from
 ext4_truncate) exposed a bug in ext4_ext_handle_uninitialized_extents().
 It can be triggered by xfstest generic/299 when run on a test file
 system created without a journal.  This test continuously fallocates and
 truncates files to which random dio/aio writes are simultaneously
 performed by a separate process.  The test completes successfully, but
 if the test filesystem is mounted with the block_validity option, a
 warning message stating that a logical block has been mapped to an
 illegal physical block is posted in the kernel log.

 The bug occurs when an extent is being converted to the written state
 by ext4_end_io_dio() and ext4_ext_handle_uninitialized_extents()
 discovers a mapping for an existing uninitialized extent. Although it
 sets EXT4_MAP_MAPPED in map->m_flags, it fails to set map->m_pblk to
 the discovered physical block number.  Because map->m_pblk is not
 otherwise initialized or set by this function or its callers, its
 uninitialized value is returned to ext4_map_blocks(), where it is
 stored as a bogus mapping in the extent status tree.

 Since map->m_pblk can accidentally contain illegal values that are
 larger than the physical size of the file system,  calls to
 check_block_validity() in ext4_map_blocks() that are enabled if the
 block_validity mount option is used can fail, resulting in the logged
 warning message.

 Signed-off-by: Eric Whitney <enwlinux@gmail.com>
 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
 Cc: stable@vger.kernel.org  # 3.11+
 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/extents.c b/fs/ext4/extents.c
index 22256c5..7b7b412 100644
--- a/fs/ext4/extents.c
+++ b/fs/ext4/extents.c
@@ -3906,6 +3906,7 @@ ext4_ext_handle_uninitialized_extents(handle_t *handle, struct inode *inode,
   } else
    err = ret;
   map->m_flags |= EXT4_MAP_MAPPED;
+  map->m_pblk = newblock;
   if (allocated > map->m_len)
    allocated = map->m_len;
   map->m_len = allocated;
-- 
1.7.1