From c5cbb91d8cfe947c11ef5a0297b3adcacac4894d Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:13:25 -0400
Subject: [powerpc] book3s: Increment the mce counter during machine_check_early call

Message-id: <1410545655-205645-577-git-send-email-dzickus@redhat.com>
Patchwork-id: 94655
O-Subject: [RHEL7 PATCH 576/626] powerpc/book3s: Increment the mce counter during machine_check_early call.
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit e6654d5b4259317be82b06cf9218f82abec8c8e7
Author: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com>
Date:   Wed Jun 11 14:18:07 2014 +0530

    powerpc/book3s: Increment the mce counter during machine_check_early call.

    We don't see MCE counter getting increased in /proc/interrupts which gives
    false impression of no MCE occurred even when there were MCE events.
    The machine check early handling was added for PowerKVM and we missed to
    increment the MCE count in the early handler.

    We also increment mce counters in the machine_check_exception call, but
    in most cases where we handle the error hypervisor never reaches there
    unless its fatal and we want to crash. Only during fatal situation we may
    see double increment of mce count. We need to fix that. But for
    now it always good to have some count increased instead of zero.

    Signed-off-by: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kernel/traps.c b/arch/powerpc/kernel/traps.c
index ce4bc8e..f12dc65 100644
--- a/arch/powerpc/kernel/traps.c
+++ b/arch/powerpc/kernel/traps.c
@@ -294,6 +294,8 @@ long machine_check_early(struct pt_regs *regs)
 {
  long handled = 0;
 
+ __get_cpu_var(irq_stat).mce_exceptions++;
+
  if (cur_cpu_spec && cur_cpu_spec->machine_check_early)
   handled = cur_cpu_spec->machine_check_early(regs);
  return handled;
-- 
1.7.1