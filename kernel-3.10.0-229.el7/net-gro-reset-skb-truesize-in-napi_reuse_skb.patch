From 2e27385918c4601af86fc434f4fac5ced7d5222b Mon Sep 17 00:00:00 2001
From: Florian Westphal <fwestpha@redhat.com>
Date: Sun, 14 Sep 2014 19:49:56 -0400
Subject: [net] gro: reset skb->truesize in napi_reuse_skb()

Message-id: <1410724197-31885-7-git-send-email-fwestpha@redhat.com>
Patchwork-id: 94694
O-Subject: [PATCH 60/57 RHEL7.1 net] net-gro: reset skb->truesize in napi_reuse_skb()
Bugzilla: 1131999
RH-Acked-by: Jiri Benc <jbenc@redhat.com>
RH-Acked-by: Vlad Yasevich <vyasevic@redhat.com>

BZ: 1131999

Picked up so next patch' changes to core.c apply without reject,
plus its an important fix in its own right.

commit e33d0ba8047b049c9262fdb1fcafb93cb52ceceb
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Apr 3 09:28:10 2014 -0700

    net-gro: reset skb->truesize in napi_reuse_skb()

    Recycling skb always had been very tough...

    This time it appears GRO layer can accumulate skb->truesize
    adjustments made by drivers when they attach a fragment to skb.

    skb_gro_receive() can only subtract from skb->truesize the used part
    of a fragment.

    I spotted this problem seeing TcpExtPruneCalled and
    TcpExtTCPRcvCollapsed that were unexpected with a recent kernel, where
    TCP receive window should be sized properly to accept traffic coming
    from a driver not overshooting skb->truesize.

    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/core/dev.c b/net/core/dev.c
index b3d7e6b..1e90543 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -3946,6 +3946,7 @@ static void napi_reuse_skb(struct napi_struct *napi, struct sk_buff *skb)
  skb->vlan_tci = 0;
  skb->dev = napi->dev;
  skb->skb_iif = 0;
+ skb->truesize = SKB_TRUESIZE(skb_end_offset(skb));
 
  napi->skb = skb;
 }
-- 
1.7.1