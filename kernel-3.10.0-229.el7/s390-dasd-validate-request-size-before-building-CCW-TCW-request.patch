From 384b1254909bfbfadd49b448b0b364bee74fa4aa Mon Sep 17 00:00:00 2001
From: Hendrik Brueckner <brueckner@redhat.com>
Date: Thu, 21 Aug 2014 14:48:55 -0400
Subject: [s390] dasd: validate request size before building CCW/TCW request

Message-id: <1408632535-642-7-git-send-email-brueckner@redhat.com>
Patchwork-id: 88685
O-Subject: [RHEL7.1 PATCH] [s390] s390/dasd: validate request size before building CCW/TCW request
Bugzilla: 1132386
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Description
-----------
commit 26a35f373fbe6f21e8ad5ca4de1c01021e38fe2f
Author: Stefan Weinhuber <wein@de.ibm.com>
Date:   Tue Nov 19 14:15:57 2013 +0100

    s390/dasd: validate request size before building CCW/TCW request

    An I/O request that does not read or write full blocks cannot be
    translated into a correct CCW or TCW program and should be rejected
    right away. In particular the code that creates TCW requests will not
    notice this problem and create broken TCWs that will be rejected by
    the hardware.

    Signed-off-by: Stefan Weinhuber <wein@de.ibm.com>
    Reference-ID: RQM1956

Bugzilla
--------
BZ 1132386
https://bugzilla.redhat.com/show_bug.cgi?id=1132386

Upstream status of the patch
----------------------------
The patch is upstream as of kernel version
http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=26a35f373fbe6f21e8ad5ca4de1c01021e38fe2f

Brew
----
https://brewweb.devel.redhat.com/taskinfo?taskID=7869031

Test status
-----------
The patch has been tested and fixes the problem.
The fix has been verified by the IBM test department.

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/s390/block/dasd_eckd.c b/drivers/s390/block/dasd_eckd.c
index 180c22d..1645059 100644
--- a/drivers/s390/block/dasd_eckd.c
+++ b/drivers/s390/block/dasd_eckd.c
@@ -3179,6 +3179,8 @@ static struct dasd_ccw_req *dasd_eckd_build_cp(struct dasd_device *startdev,
 
  fcx_multitrack = private->features.feature[40] & 0x20;
  data_size = blk_rq_bytes(req);
+ if (data_size % blksize)
+  return ERR_PTR(-EINVAL);
  /* tpm write request add CBC data on each track boundary */
  if (rq_data_dir(req) == WRITE)
   data_size += (last_trk - first_trk) * 4;
-- 
1.7.1