From abe9c51d94f7c069fab5ca98292110e70163c988 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Fri, 2 May 2014 14:37:22 -0400
Subject: [misc] mei: Remove all bus devices from the mei_dev list when stopping the MEI

Message-id: <1399041470-21330-50-git-send-email-prarit@redhat.com>
Patchwork-id: 79336
O-Subject: [RHEL7.1 PATCH BZ 1088953 49/77] mei: Remove all bus devices from the mei_dev list when stopping the MEI
Bugzilla: 1088953
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1088953

commit 487056932d372cc4f6c636f21a928d6667b151d7
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Mon Feb 17 15:13:19 2014 +0200

    mei: Remove all bus devices from the mei_dev list when stopping the MEI

    When stopping the MEI, we should remove and potentially unregister
    all bus devices queued on the mei_dev linked list.

    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Cc: Dean Nelson <dnelson@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/misc/mei/bus.c b/drivers/misc/mei/bus.c
index 4bc7d62..cf4cc0b 100644
--- a/drivers/misc/mei/bus.c
+++ b/drivers/misc/mei/bus.c
@@ -524,6 +524,22 @@ void mei_cl_bus_rx_event(struct mei_cl *cl)
  schedule_work(&device->event_work);
 }
 
+void mei_cl_bus_remove_devices(struct mei_device *dev)
+{
+ struct mei_cl *cl, *next;
+
+ mutex_lock(&dev->device_lock);
+ list_for_each_entry_safe(cl, next, &dev->device_list, device_link) {
+  if (cl->device)
+   mei_cl_remove_device(cl->device);
+
+  list_del(&cl->device_link);
+  mei_cl_unlink(cl);
+  kfree(cl);
+ }
+ mutex_unlock(&dev->device_lock);
+}
+
 int __init mei_cl_bus_init(void)
 {
  return bus_register(&mei_cl_bus_type);
diff --git a/drivers/misc/mei/init.c b/drivers/misc/mei/init.c
index 9700c51..aea7bf7 100644
--- a/drivers/misc/mei/init.c
+++ b/drivers/misc/mei/init.c
@@ -288,6 +288,8 @@ void mei_stop(struct mei_device *dev)
 
  mei_nfc_host_exit(dev);
 
+ mei_cl_bus_remove_devices(dev);
+
  mutex_lock(&dev->device_lock);
 
  mei_wd_stop(dev);
diff --git a/drivers/misc/mei/mei_dev.h b/drivers/misc/mei/mei_dev.h
index 9217c66..fcc6454 100644
--- a/drivers/misc/mei/mei_dev.h
+++ b/drivers/misc/mei/mei_dev.h
@@ -302,6 +302,7 @@ int __mei_cl_async_send(struct mei_cl *cl, u8 *buf, size_t length);
 int __mei_cl_send(struct mei_cl *cl, u8 *buf, size_t length);
 int __mei_cl_recv(struct mei_cl *cl, u8 *buf, size_t length);
 void mei_cl_bus_rx_event(struct mei_cl *cl);
+void mei_cl_bus_remove_devices(struct mei_device *dev);
 int mei_cl_bus_init(void);
 void mei_cl_bus_exit(void);
 
diff --git a/drivers/misc/mei/nfc.c b/drivers/misc/mei/nfc.c
index a58320c..7626dde 100644
--- a/drivers/misc/mei/nfc.c
+++ b/drivers/misc/mei/nfc.c
@@ -552,13 +552,7 @@ err:
 void mei_nfc_host_exit(struct mei_device *dev)
 {
  struct mei_nfc_dev *ndev = &nfc_dev;
-
  cancel_work_sync(&ndev->init_work);
+}
 
- mutex_lock(&dev->device_lock);
- if (ndev->cl && ndev->cl->device)
-  mei_cl_remove_device(ndev->cl->device);
 
- mei_nfc_free(ndev);
- mutex_unlock(&dev->device_lock);
-}
-- 
1.7.1