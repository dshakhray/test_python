From ae0e7beef2c5d3bdbd7b32c755b62257374948f7 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:04:50 -0400
Subject: [fs] btrfs: dev delete should remove sysfs entry

Message-id: <1407179109-13714-404-git-send-email-sandeen@redhat.com>
Patchwork-id: 87337
O-Subject: [RHEL7.1 PATCH 403/422] btrfs: dev delete should remove sysfs entry
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Anand Jain <Anand.Jain@oracle.com>

commit 99994cde9c59c2b8bb67d46d531b26cc73e39747
Author: Anand Jain <Anand.Jain@oracle.com>
Date:   Tue Jun 3 11:36:00 2014 +0800

    btrfs: dev delete should remove sysfs entry

    when we delete the device from the mounted btrfs,
    we would need its corresponding sysfs enty to
    be removed as well.

    Signed-off-by: Anand Jain <Anand.Jain@oracle.com>
    Reviewed-by: David Sterba <dsterba@suse.cz>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/sysfs.c b/fs/btrfs/sysfs.c
index 1395efb..401677b 100644
--- a/fs/btrfs/sysfs.c
+++ b/fs/btrfs/sysfs.c
@@ -605,6 +605,26 @@ static void init_feature_attrs(void)
  }
 }
 
+int btrfs_kobj_rm_device(struct btrfs_fs_info *fs_info,
+  struct btrfs_device *one_device)
+{
+ struct hd_struct *disk;
+ struct kobject *disk_kobj;
+
+ if (!fs_info->device_dir_kobj)
+  return -EINVAL;
+
+ if (one_device) {
+  disk = one_device->bdev->bd_part;
+  disk_kobj = &part_to_dev(disk)->kobj;
+
+  sysfs_remove_link(fs_info->device_dir_kobj,
+      disk_kobj->name);
+ }
+
+ return 0;
+}
+
 static int btrfs_kobj_add_device(struct btrfs_fs_info *fs_info)
 {
  int error = 0;
diff --git a/fs/btrfs/sysfs.h b/fs/btrfs/sysfs.h
index 9ab5763..529554e 100644
--- a/fs/btrfs/sysfs.h
+++ b/fs/btrfs/sysfs.h
@@ -66,4 +66,6 @@ char *btrfs_printable_features(enum btrfs_feature_set set, u64 flags);
 extern const char * const btrfs_feature_set_names[3];
 extern struct kobj_type space_info_ktype;
 extern struct kobj_type btrfs_raid_ktype;
+int btrfs_kobj_rm_device(struct btrfs_fs_info *fs_info,
+                struct btrfs_device *one_device);
 #endif /* _BTRFS_SYSFS_H_ */
diff --git a/fs/btrfs/volumes.c b/fs/btrfs/volumes.c
index 74cf65e..4f3fda5 100644
--- a/fs/btrfs/volumes.c
+++ b/fs/btrfs/volumes.c
@@ -40,6 +40,7 @@
 #include "rcu-string.h"
 #include "math.h"
 #include "dev-replace.h"
+#include "sysfs.h"
 
 static int init_first_rw_device(struct btrfs_trans_handle *trans,
     struct btrfs_root *root,
@@ -1680,6 +1681,9 @@ int btrfs_rm_device(struct btrfs_root *root, char *device_path)
  if (device->bdev)
   device->fs_devices->open_devices--;
 
+ /* remove sysfs entry */
+ btrfs_kobj_rm_device(root->fs_info, device);
+
  call_rcu(&device->rcu, free_device);
 
  num_devices = btrfs_super_num_devices(root->fs_info->super_copy) - 1;
-- 
1.7.1