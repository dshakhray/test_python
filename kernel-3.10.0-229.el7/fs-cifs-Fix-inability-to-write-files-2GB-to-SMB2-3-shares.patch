From c808e7c816428308cd273691d9d8563ad9222fc7 Mon Sep 17 00:00:00 2001
From: Sachin Prabhu <sprabhu@redhat.com>
Date: Mon, 28 Jul 2014 12:16:02 -0400
Subject: [fs] cifs: Fix inability to write files >2GB to SMB2/3 shares

Message-id: <1406549822-10376-10-git-send-email-sprabhu@redhat.com>
Patchwork-id: 86738
O-Subject: [RHEL7.1 PATCH 09/69] [bz1082049]cifs: Fix inability to write files >2GB to SMB2/3 shares
Bugzilla: 1082049
RH-Acked-by: J. Bruce Fields <bfields@redhat.com>
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Jan Klos <honza.klos@gmail.com>

When connecting to SMB2/3 shares, maximum file size is set to non-LFS maximum in superblock. This is due to cap_large_files bit being different for SMB1 and SMB2/3 (where it is just an internal flag that is not negotiated and the SMB1 one corresponds to multichannel capability, so maybe LFS works correctly if server sends 0x08 flag) while capabilities are checked always for the SMB1 bit in cifs_read_super().

The patch fixes this by checking for the correct bit according to the protocol version.

CC: Stable <stable@kernel.org>
Signed-off-by: Jan Klos <honza.klos@gmail.com>
Reviewed-by: Jeff Layton <jlayton@redhat.com>
Signed-off-by: Steve French <smfrench@gmail.com>
(cherry picked from commit 2f6c9479633780ba4a3484bba7eba5a721a5cf20)
Signed-off-by: Sachin Prabhu <sprabhu@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/cifs/cifsfs.c b/fs/cifs/cifsfs.c
index 0120235..aaad06a 100644
--- a/fs/cifs/cifsfs.c
+++ b/fs/cifs/cifsfs.c
@@ -120,14 +120,16 @@ cifs_read_super(struct super_block *sb)
 {
  struct inode *inode;
  struct cifs_sb_info *cifs_sb;
+ struct cifs_tcon *tcon;
  int rc = 0;
 
  cifs_sb = CIFS_SB(sb);
+ tcon = cifs_sb_master_tcon(cifs_sb);
 
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_POSIXACL)
   sb->s_flags |= MS_POSIXACL;
 
- if (cifs_sb_master_tcon(cifs_sb)->ses->capabilities & CAP_LARGE_FILES)
+ if (tcon->ses->capabilities & tcon->ses->server->vals->cap_large_files)
   sb->s_maxbytes = MAX_LFS_FILESIZE;
  else
   sb->s_maxbytes = MAX_NON_LFS;
@@ -147,7 +149,7 @@ cifs_read_super(struct super_block *sb)
   goto out_no_root;
  }
 
- if (cifs_sb_master_tcon(cifs_sb)->nocase)
+ if (tcon->nocase)
   sb->s_d_op = &cifs_ci_dentry_ops;
  else
   sb->s_d_op = &cifs_dentry_ops;
-- 
1.7.1