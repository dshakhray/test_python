From 8d33b05cba2ab6cdd98d0bc28722f24e03dc3f88 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:06:50 -0400
Subject: [usb] uas: Clear cmdinfo on command queue-ing

Message-id: <1410887463-20674-339-git-send-email-dzickus@redhat.com>
Patchwork-id: 95443
O-Subject: [RHEL7 PATCH 338/591] uas: Clear cmdinfo on command queue-ing
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 3a4462e0e2fe8f715f54147d36b5433a7ff5a85a
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Nov 14 11:06:13 2013 +0100

    uas: Clear cmdinfo on command queue-ing

    The scsi error handling path re-uses previously queued up (and errored-out)
    cmds. If such a re-used cmd had a data-phase then cmdinfo will have
    data_in_urb / data_out_urb still set to the free-ed urbs from the errored-out
    cmd, and they will get free-ed a second time when the error handling cmd
    completes, corrupting the kernel heap.

    Clearing cmdinfo on command queue-ing fixes this, and seems like a good idea
    in general.

    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/storage/uas.c b/drivers/usb/storage/uas.c
index d81d041..fceffcc 100644
--- a/drivers/usb/storage/uas.c
+++ b/drivers/usb/storage/uas.c
@@ -684,6 +684,8 @@ static int uas_queuecommand_lck(struct scsi_cmnd *cmnd,
   return SCSI_MLQUEUE_DEVICE_BUSY;
  }
 
+ memset(cmdinfo, 0, sizeof(*cmdinfo));
+
  if (blk_rq_tagged(cmnd->request)) {
   cmdinfo->stream = cmnd->request->tag + 2;
  } else {
-- 
1.7.1