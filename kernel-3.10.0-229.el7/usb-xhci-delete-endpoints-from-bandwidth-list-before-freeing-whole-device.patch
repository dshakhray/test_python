From 3426919b8de15b1769aa5715074c809824b444e1 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:09:56 -0400
Subject: [usb] xhci: delete endpoints from bandwidth list before freeing whole device

Message-id: <1410887463-20674-525-git-send-email-dzickus@redhat.com>
Patchwork-id: 95530
O-Subject: [RHEL7 PATCH 524/591] xhci: delete endpoints from bandwidth list before freeing whole device
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 5dc2808c4729bf080487e61b80ee04e0fdb12a37
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Wed May 28 23:51:13 2014 +0300

    xhci: delete endpoints from bandwidth list before freeing whole device

    Lists of endpoints are stored for bandwidth calculation for roothub ports.
    Make sure we remove all endpoints from the list before the whole device,
    containing its endpoints list_head stuctures, is freed.

    This used to be done in the wrong order in xhci_mem_cleanup(),
    and triggered an oops in resume from S4 (hibernate).

    Cc: stable <stable@vger.kernel.org>
    Tested-by: Ville Syrjala <ville.syrjala@linux.intel.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/host/xhci-mem.c b/drivers/usb/host/xhci-mem.c
index 6a57e81..8056d90 100644
--- a/drivers/usb/host/xhci-mem.c
+++ b/drivers/usb/host/xhci-mem.c
@@ -1818,6 +1818,16 @@ void xhci_mem_cleanup(struct xhci_hcd *xhci)
  xhci_dbg_trace(xhci, trace_xhci_dbg_init, "Freed command ring");
  xhci_cleanup_command_queue(xhci);
 
+ num_ports = HCS_MAX_PORTS(xhci->hcs_params1);
+ for (i = 0; i < num_ports; i++) {
+  struct xhci_interval_bw_table *bwt = &xhci->rh_bw[i].bw_table;
+  for (j = 0; j < XHCI_MAX_INTERVAL; j++) {
+   struct list_head *ep = &bwt->interval_bw[j].endpoints;
+   while (!list_empty(ep))
+    list_del_init(ep->next);
+  }
+ }
+
  for (i = 1; i < MAX_HC_SLOTS; ++i)
   xhci_free_virt_device(xhci, i);
 
@@ -1853,16 +1863,6 @@ void xhci_mem_cleanup(struct xhci_hcd *xhci)
  if (!xhci->rh_bw)
   goto no_bw;
 
- num_ports = HCS_MAX_PORTS(xhci->hcs_params1);
- for (i = 0; i < num_ports; i++) {
-  struct xhci_interval_bw_table *bwt = &xhci->rh_bw[i].bw_table;
-  for (j = 0; j < XHCI_MAX_INTERVAL; j++) {
-   struct list_head *ep = &bwt->interval_bw[j].endpoints;
-   while (!list_empty(ep))
-    list_del_init(ep->next);
-  }
- }
-
  for (i = 0; i < num_ports; i++) {
   struct xhci_tt_bw_info *tt, *n;
   list_for_each_entry_safe(tt, n, &xhci->rh_bw[i].tts, tt_list) {
-- 
1.7.1