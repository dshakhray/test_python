From d179c1c6cd2ab97173cf9968785b96e60a61d670 Mon Sep 17 00:00:00 2001
From: Jes Sorensen <Jes.Sorensen@redhat.com>
Date: Mon, 1 Sep 2014 09:25:49 -0400
Subject: [md] ensure metadata is writen after raid level change

Message-id: <1409563584-9000-48-git-send-email-Jes.Sorensen@redhat.com>
Patchwork-id: 90010
O-Subject: [RHEL7.1 PATCH 47/82] md: ensure metadata is writen after raid level change.
Bugzilla: 1085530
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

From: NeilBrown <neilb@suse.de>

level_store() currently does not make sure the metadata is
updates to reflect the new raid level.  It simply sets MD_CHANGE_DEVS.

Any level with a ->thread will quickly notice this and update the
metadata.  However RAID0 and Linear do not have a thread so no
metadata update happens until the array is stopped.  At that point the
metadata is written.

This is later that we would like.  While the delay doesn't risk any
data it can cause confusion.  So if there is no md thread, immediately
update the metadata after a level change.

Reported-by: Richard Michael <rmichael@edgeofthenet.org>
Signed-off-by: NeilBrown <neilb@suse.de>
(cherry picked from commit 830778a180f268ac106f072b8aad793a79088c87)
Signed-off-by: Jes Sorensen <Jes.Sorensen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/md.c b/drivers/md/md.c
index db55e48..07ce45e 100644
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@ -3599,6 +3599,8 @@ level_store(struct mddev *mddev, const char *buf, size_t len)
  pers->run(mddev);
  set_bit(MD_CHANGE_DEVS, &mddev->flags);
  mddev_resume(mddev);
+ if (!mddev->thread)
+  md_update_sb(mddev, 1);
  sysfs_notify(&mddev->kobj, NULL, "level");
  md_new_event(mddev);
  return rv;
-- 
1.7.1