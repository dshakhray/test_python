From 99809c2e81241873cd92a436164f3606c63bb7fe Mon Sep 17 00:00:00 2001
From: John Greene <jogreene@redhat.com>
Date: Thu, 14 Aug 2014 14:42:08 -0400
Subject: [ethernet] e1000e: Fix Explicitly set Transmit Control Register

Message-id: <1408027348-9610-15-git-send-email-jogreene@redhat.com>
Patchwork-id: 87714
O-Subject: [RHEL7.1 PATCH 14/34] e1000e: Fix Explicitly set Transmit Control Register
Bugzilla: 1091119
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

This patch causes the TCTL to be explicitly set to fix a problem with
poor network performance (throughput) on certain silicon when configured
for 100M HDX performance.

Cc: Todd Fujinaka <todd.fujinaka@intel.com>
Signed-off-by: Dave Ertman <davidx.m.ertman@intel.com>
Acked-by: Bruce W. Allan <bruce.w.allan@intel.com>
Tested-by: Jeff Pieper <jeffrey.e.pieper@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit e7e834aa71ea9b0d54a862d773a6d7730f1d8293)

BZ: 1091119
Testing: Acceptable, see BZ
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7834849
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/e1000e/netdev.c b/drivers/net/ethernet/intel/e1000e/netdev.c
index adadb2e..10e7847 100644
--- a/drivers/net/ethernet/intel/e1000e/netdev.c
+++ b/drivers/net/ethernet/intel/e1000e/netdev.c
@@ -2895,7 +2895,7 @@ static void e1000_configure_tx(struct e1000_adapter *adapter)
  struct e1000_hw *hw = &adapter->hw;
  struct e1000_ring *tx_ring = adapter->tx_ring;
  u64 tdba;
- u32 tdlen, tarc;
+ u32 tdlen, tctl, tarc;
 
  /* Setup the HW Tx Head and Tail descriptor pointers */
  tdba = tx_ring->dma;
@@ -2932,6 +2932,12 @@ static void e1000_configure_tx(struct e1000_adapter *adapter)
  /* erratum work around: set txdctl the same for both queues */
  ew32(TXDCTL(1), er32(TXDCTL(0)));
 
+ /* Program the Transmit Control Register */
+ tctl = er32(TCTL);
+ tctl &= ~E1000_TCTL_CT;
+ tctl |= E1000_TCTL_PSP | E1000_TCTL_RTLC |
+  (E1000_COLLISION_THRESHOLD << E1000_CT_SHIFT);
+
  if (adapter->flags & FLAG_TARC_SPEED_MODE_BIT) {
   tarc = er32(TARC(0));
   /* set the speed mode bit, we'll clear it if we're not at
@@ -2962,6 +2968,8 @@ static void e1000_configure_tx(struct e1000_adapter *adapter)
  /* enable Report Status bit */
  adapter->txd_cmd |= E1000_TXD_CMD_RS;
 
+ ew32(TCTL, tctl);
+
  hw->mac.ops.config_collision_dist(hw);
 }
 
-- 
1.7.1