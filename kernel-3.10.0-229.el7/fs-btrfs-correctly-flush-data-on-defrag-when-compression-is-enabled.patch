From bd4a590ed1bb2507a7f3e4ca7a4c3086f6c1bc1f Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:02:05 -0400
Subject: [fs] btrfs: correctly flush data on defrag when compression is enabled

Message-id: <1407179109-13714-239-git-send-email-sandeen@redhat.com>
Patchwork-id: 87218
O-Subject: [RHEL7.1 PATCH 238/422] Btrfs: correctly flush data on defrag when compression is enabled
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Filipe Manana <fdmanana@gmail.com>

commit dec8ef90552f7b8cc6612daa2e3aa3a2212b0402
Author: Filipe Manana <fdmanana@gmail.com>
Date:   Sat Mar 1 10:55:54 2014 +0000

    Btrfs: correctly flush data on defrag when compression is enabled

    When the defrag flag BTRFS_DEFRAG_RANGE_START_IO is set and compression
    enabled, we weren't flushing completely, as writing compressed extents
    is a 2 steps process, one to compress the data and another one to write
    the compressed data to disk.

    Signed-off-by: Filipe David Borba Manana <fdmanana@gmail.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/ioctl.c b/fs/btrfs/ioctl.c
index 7798da1..1e356c8 100644
--- a/fs/btrfs/ioctl.c
+++ b/fs/btrfs/ioctl.c
@@ -1382,8 +1382,12 @@ int btrfs_defrag_file(struct inode *inode, struct file *file,
   }
  }
 
- if ((range->flags & BTRFS_DEFRAG_RANGE_START_IO))
+ if ((range->flags & BTRFS_DEFRAG_RANGE_START_IO)) {
   filemap_flush(inode->i_mapping);
+  if (test_bit(BTRFS_INODE_HAS_ASYNC_EXTENT,
+        &BTRFS_I(inode)->runtime_flags))
+   filemap_flush(inode->i_mapping);
+ }
 
  if ((range->flags & BTRFS_DEFRAG_RANGE_COMPRESS)) {
   /* the filemap_flush will queue IO into the worker threads, but
-- 
1.7.1