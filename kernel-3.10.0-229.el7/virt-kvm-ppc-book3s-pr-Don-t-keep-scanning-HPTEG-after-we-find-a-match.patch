From 02d7f7a821993532264a106690ad167c903cc5c5 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:05:35 -0400
Subject: [virt] kvm/ppc: book3s pr - Don't keep scanning HPTEG after we find a match

Message-id: <1410545655-205645-107-git-send-email-dzickus@redhat.com>
Patchwork-id: 94119
O-Subject: [RHEL7 PATCH 106/626] KVM: PPC: Book3S PR: Don't keep scanning HPTEG after we find a match
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 6ed1485f65f0eb17aa7b649d5abe0b011b92f718
Author: Paul Mackerras <paulus@samba.org>
Date:   Sat Jun 22 17:14:48 2013 +1000

    KVM: PPC: Book3S PR: Don't keep scanning HPTEG after we find a match

    The loop in kvmppc_mmu_book3s_64_xlate() that looks up a translation
    in the guest hashed page table (HPT) keeps going if it finds an
    HPTE that matches but doesn't allow access.  This is incorrect; it
    is different from what the hardware does, and there should never be
    more than one matching HPTE anyway.  This fixes it to stop when any
    matching HPTE is found.

    Signed-off-by: Paul Mackerras <paulus@samba.org>
    Signed-off-by: Alexander Graf <agraf@suse.de>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kvm/book3s_64_mmu.c b/arch/powerpc/kvm/book3s_64_mmu.c
index b871721..2e93bb5 100644
--- a/arch/powerpc/kvm/book3s_64_mmu.c
+++ b/arch/powerpc/kvm/book3s_64_mmu.c
@@ -167,7 +167,6 @@ static int kvmppc_mmu_book3s_64_xlate(struct kvm_vcpu *vcpu, gva_t eaddr,
  int i;
  u8 key = 0;
  bool found = false;
- bool perm_err = false;
  int second = 0;
  ulong mp_ea = vcpu->arch.magic_page_ea;
 
@@ -248,11 +247,6 @@ do_second:
     break;
    }
 
-   if (!gpte->may_read) {
-    perm_err = true;
-    continue;
-   }
-
    dprintk("KVM MMU: Translated 0x%lx [0x%llx] -> 0x%llx "
     "-> 0x%lx\n",
     eaddr, avpn, gpte->vpage, gpte->raddr);
@@ -281,6 +275,8 @@ do_second:
   if (pteg[i+1] != oldr)
    copy_to_user((void __user *)ptegp, pteg, sizeof(pteg));
 
+  if (!gpte->may_read)
+   return -EPERM;
   return 0;
  } else {
   dprintk("KVM MMU: No PTE found (ea=0x%lx sdr1=0x%llx "
@@ -296,13 +292,7 @@ do_second:
   }
  }
 
-
 no_page_found:
-
-
- if (perm_err)
-  return -EPERM;
-
  return -ENOENT;
 
 no_seg_found:
-- 
1.7.1