From 4ff822a53e776b87943047e821c323047a289bce Mon Sep 17 00:00:00 2001
From: Florian Westphal <fwestpha@redhat.com>
Date: Wed, 26 Nov 2014 22:13:14 -0500
Subject: [ethernet] mlx4: Add VXLAN ndo calls to the PF net device ops too

Message-id: <1417039994-16749-1-git-send-email-fwestpha@redhat.com>
Patchwork-id: 100979
O-Subject: [PATCH 1/1] [RHEL7.1] net/mlx4_en: Add VXLAN ndo calls to the PF net device ops too
Bugzilla: 1168212
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Alexander Duyck <alexander.h.duyck@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>

Brew: brewweb.devel.redhat.com/brew/taskinfo?taskID=8303457
BZ: 1168212

removed ndo_gso_check callback, not present in rhel.

commit 9737c6ab7afbc950e997ef80cba2c40dbbd16ea4
Author: Or Gerlitz <ogerlitz@mellanox.com>
Date:   Tue Nov 18 17:51:27 2014 +0200

    net/mlx4_en: Add VXLAN ndo calls to the PF net device ops too

    This is currently missing, which results in a crash when one attempts
    to set VXLAN tunnel over the mlx4_en when acting as PF.

     [ 2408.785472] BUG: unable to handle kernel NULL pointer dereference at (null)
     [...]
     [ 2408.994104] Call Trace:
     [ 2408.996584]  [<ffffffffa021f7f5>] ? vxlan_get_rx_port+0xd6/0x103 [vxlan]
     [ 2409.003316]  [<ffffffffa021f71f>] ? vxlan_lowerdev_event+0xf2/0xf2 [vxlan]
     [ 2409.010225]  [<ffffffffa0630358>] mlx4_en_start_port+0x862/0x96a [mlx4_en]
     [ 2409.017132]  [<ffffffffa063070f>] mlx4_en_open+0x17f/0x1b8 [mlx4_en]

    While here, make sure to invoke vxlan_get_rx_port() only when VXLAN
    offloads are actually enabled and not when they are only supported.

    Reported-by: Ido Shamay <idos@mellanox.com>
    Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/mellanox/mlx4/en_netdev.c b/drivers/net/ethernet/mellanox/mlx4/en_netdev.c
index f656003..ab04be9 100644
--- a/drivers/net/ethernet/mellanox/mlx4/en_netdev.c
+++ b/drivers/net/ethernet/mellanox/mlx4/en_netdev.c
@@ -1693,7 +1693,7 @@ int mlx4_en_start_port(struct net_device *dev)
  mlx4_set_stats_bitmap(mdev->dev, &priv->stats_bitmap);
 
 #ifdef CONFIG_MLX4_EN_VXLAN
- if (priv->mdev->dev->caps.flags2 & MLX4_DEV_CAP_FLAG2_VXLAN_OFFLOADS)
+ if (priv->mdev->dev->caps.tunnel_offload_mode == MLX4_TUNNEL_OFFLOAD_MODE_VXLAN)
   vxlan_get_rx_port(dev);
 #endif
  priv->port_up = true;
@@ -2416,6 +2416,10 @@ static const struct net_device_ops mlx4_netdev_ops_master = {
  .ndo_rx_flow_steer = mlx4_en_filter_rfs,
 #endif
  .ndo_get_phys_port_id = mlx4_en_get_phys_port_id,
+#ifdef CONFIG_MLX4_EN_VXLAN
+ .ndo_add_vxlan_port = mlx4_en_add_vxlan_port,
+ .ndo_del_vxlan_port = mlx4_en_del_vxlan_port,
+#endif
 };
 
 int mlx4_en_init_netdev(struct mlx4_en_dev *mdev, int port,
-- 
1.7.1