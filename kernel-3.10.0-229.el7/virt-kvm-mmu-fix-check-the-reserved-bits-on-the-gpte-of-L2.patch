From a00a9f9927aa17ddaabf76ffe46539ea3a4869a5 Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:37:28 -0400
Subject: [virt] kvm/mmu: fix check the reserved bits on the gpte of L2

Message-id: <1406040016-3289-54-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86132
O-Subject: [RHEL7 PATCH v2 053/221] KVM: MMU: fix check the reserved bits on the gpte of L2
Bugzilla: 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Xiao Guangrong <xiaoguangrong@linux.vnet.ibm.com>

Current code always uses arch.mmu to check the reserved bits on guest gpte
which is valid only for L1 guest, we should use arch.nested_mmu instead when
we translate gva to gpa for the L2 guest

Fix it by using @mmu instead since it is adapted to the current mmu mode
automatically

The bug can be triggered when nested npt is used and L1 guest and L2 guest
use different mmu mode

Reported-by: Jan Kiszka <jan.kiszka@siemens.com>
Reviewed-by: Gleb Natapov <gleb@redhat.com>
Signed-off-by: Xiao Guangrong <xiaoguangrong@linux.vnet.ibm.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 027664216d37afe80101de91f73dfbaf6b36ee65)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kvm/paging_tmpl.h b/arch/x86/kvm/paging_tmpl.h
index 6b10d66..8e21bc0 100644
--- a/arch/x86/kvm/paging_tmpl.h
+++ b/arch/x86/kvm/paging_tmpl.h
@@ -218,8 +218,7 @@ retry_walk:
   if (unlikely(!is_present_gpte(pte)))
    goto error;
 
-  if (unlikely(is_rsvd_bits_set(&vcpu->arch.mmu, pte,
-           walker->level))) {
+  if (unlikely(is_rsvd_bits_set(mmu, pte, walker->level))) {
    errcode |= PFERR_RSVD_MASK | PFERR_PRESENT_MASK;
    goto error;
   }
-- 
1.7.1