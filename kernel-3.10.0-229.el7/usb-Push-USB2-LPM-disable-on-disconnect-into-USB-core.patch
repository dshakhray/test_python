From 64551a74257162596123e9db49ce45fb217cffb7 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:02:12 -0400
Subject: [usb] Push USB2 LPM disable on disconnect into USB core

Message-id: <1410887463-20674-61-git-send-email-dzickus@redhat.com>
Patchwork-id: 95117
O-Subject: [RHEL7 PATCH 060/591] usb: Push USB2 LPM disable on disconnect into USB core.
Bugzilla: 1032371
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1032371

commit f468f7b9467b285b87ea61e2a3c8c0e641117b0e
Author: Sarah Sharp <sarah.a.sharp@linux.intel.com>
Date:   Tue Oct 8 08:28:43 2013 -0700

    usb: Push USB2 LPM disable on disconnect into USB core.

    The USB core currently handles enabling and disabling optional USB power
    management features during device transitions (device suspend/resume,
    driver bind/unbind, device reset, and device disconnect).  Those
    optional power features include Latency Tolerance Messaging (LTM),
    USB 3.0 Link PM, and USB 2.0 Link PM.

    The USB core currently enables LPM on device enumeration and disables
    USB 2.0 Link PM when the device is reset.  However, the xHCI driver
    disables LPM when the device is disconnected and the device context is
    freed.  Push the call up into the USB core, in order to be consistent
    with the core handling all power management enabling and disabling.

    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/core/message.c b/drivers/usb/core/message.c
index 82927e1..bb31597 100644
--- a/drivers/usb/core/message.c
+++ b/drivers/usb/core/message.c
@@ -1182,8 +1182,12 @@ void usb_disable_device(struct usb_device *dev, int skip_ep0)
    put_device(&dev->actconfig->interface[i]->dev);
    dev->actconfig->interface[i] = NULL;
   }
+
+  if (dev->usb2_hw_lpm_enabled == 1)
+   usb_set_usb2_hardware_lpm(dev, 0);
   usb_unlocked_disable_lpm(dev);
   usb_disable_ltm(dev);
+
   dev->actconfig = NULL;
   if (dev->state == USB_STATE_CONFIGURED)
    usb_set_device_state(dev, USB_STATE_ADDRESS);
diff --git a/drivers/usb/host/xhci.c b/drivers/usb/host/xhci.c
index ed6c186..ab5de14 100644
--- a/drivers/usb/host/xhci.c
+++ b/drivers/usb/host/xhci.c
@@ -3583,11 +3583,6 @@ void xhci_free_dev(struct usb_hcd *hcd, struct usb_device *udev)
   del_timer_sync(&virt_dev->eps[i].stop_cmd_timer);
  }
 
- if (udev->usb2_hw_lpm_enabled) {
-  xhci_set_usb2_hardware_lpm(hcd, udev, 0);
-  udev->usb2_hw_lpm_enabled = 0;
- }
-
  spin_lock_irqsave(&xhci->lock, flags);
  /* Don't disable the slot if the host controller is dead. */
  state = xhci_readl(xhci, &xhci->op_regs->status);
-- 
1.7.1