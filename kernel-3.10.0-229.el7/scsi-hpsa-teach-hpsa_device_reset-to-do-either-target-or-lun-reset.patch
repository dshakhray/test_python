From 549843cb2c3e0cacfc48eacc1ada63b1286354eb Mon Sep 17 00:00:00 2001
From: Tomas Henzl <thenzl@redhat.com>
Date: Mon, 8 Sep 2014 14:31:17 -0400
Subject: [scsi] hpsa: teach hpsa_device_reset to do either target or lun reset

Message-id: <1410186734-19986-27-git-send-email-thenzl@redhat.com>
Patchwork-id: 92078
O-Subject: [RHEL6.6 e-stor PATCH 26/83] hpsa: teach hpsa_device_reset to do either target or lun reset
Bugzilla: 1069185
RH-Acked-by: Maurizio Lombardi <mlombard@redhat.com>
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Ewan Milne <emilne@redhat.com>

Signed-off-by: Scott Teel <scott.teel@hp.com>
Signed-off-by: Stephen M. Cameron <scameron@beardog.cce.hp.com>
Signed-off-by: James Bottomley <JBottomley@Parallels.com>
(cherry picked from commit bf711ac654539182bf6935cd019d7bac17b7ca95)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/hpsa.c b/drivers/scsi/hpsa.c
index c3c3df6..7d1c7de 100644
--- a/drivers/scsi/hpsa.c
+++ b/drivers/scsi/hpsa.c
@@ -1876,7 +1876,8 @@ out:
  return rc;
 }
 
-static int hpsa_send_reset(struct ctlr_info *h, unsigned char *scsi3addr)
+static int hpsa_send_reset(struct ctlr_info *h, unsigned char *scsi3addr,
+ u8 reset_type)
 {
  int rc = IO_OK;
  struct CommandList *c;
@@ -1890,8 +1891,9 @@ static int hpsa_send_reset(struct ctlr_info *h, unsigned char *scsi3addr)
  }
 
  /* fill_cmd can't fail here, no data buffer to map. */
- (void) fill_cmd(c, HPSA_DEVICE_RESET_MSG, h,
-   NULL, 0, 0, scsi3addr, TYPE_MSG);
+ (void) fill_cmd(c, HPSA_DEVICE_RESET_MSG, h, NULL, 0, 0,
+   scsi3addr, TYPE_MSG);
+ c->Request.CDB[1] = reset_type; /* fill_cmd defaults to LUN reset */
  hpsa_scsi_do_simple_cmd_core(h, c);
  /* no unmap needed here because no data xfer. */
 
@@ -3408,7 +3410,7 @@ static int hpsa_eh_device_reset_handler(struct scsi_cmnd *scsicmd)
  dev_warn(&h->pdev->dev, "resetting device %d:%d:%d:%d\n",
   h->scsi_host->host_no, dev->bus, dev->target, dev->lun);
  /* send a reset to the SCSI LUN which the command was sent to */
- rc = hpsa_send_reset(h, dev->scsi3addr);
+ rc = hpsa_send_reset(h, dev->scsi3addr, HPSA_RESET_TYPE_LUN);
  if (rc == 0 && wait_for_device_to_become_ready(h, dev->scsi3addr) == 0)
   return SUCCESS;
 
-- 
1.7.1