From 9fa4c812ea018b2ca6f82fb29183a186d3ec5cf3 Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:22:38 -0400
Subject: [net] libceph: fix error handling in handle_reply()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-52-git-send-email-sweil@redhat.com>
Patchwork-id: 89575
O-Subject: [PATCH 051/303] libceph: fix error handling in handle_reply()
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Dan Carpenter <dan.carpenter@oracle.com>

We've tried to fix the error paths in this function before, but there
is still a hidden goto in the ceph_decode_need() macro which goes to the
wrong place.  We need to release the "req" and unlock a mutex before
returning.

Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
Reviewed-by: Sage Weil <sage@inktank.com>
(cherry picked from commit 1874119664dafda3ef2ed9b51b4759a9540d4a1a)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ceph/osd_client.c b/net/ceph/osd_client.c
index 8ec65bc..3ee4a1d 100644
--- a/net/ceph/osd_client.c
+++ b/net/ceph/osd_client.c
@@ -1495,14 +1495,14 @@ static void handle_reply(struct ceph_osd_client *osdc, struct ceph_msg *msg,
  dout("handle_reply %p tid %llu req %p result %d\n", msg, tid,
       req, result);
 
- ceph_decode_need(&p, end, 4, bad);
+ ceph_decode_need(&p, end, 4, bad_put);
  numops = ceph_decode_32(&p);
  if (numops > CEPH_OSD_MAX_OP)
   goto bad_put;
  if (numops != req->r_num_ops)
   goto bad_put;
  payload_len = 0;
- ceph_decode_need(&p, end, numops * sizeof(struct ceph_osd_op), bad);
+ ceph_decode_need(&p, end, numops * sizeof(struct ceph_osd_op), bad_put);
  for (i = 0; i < numops; i++) {
   struct ceph_osd_op *op = p;
   int len;
@@ -1520,7 +1520,7 @@ static void handle_reply(struct ceph_osd_client *osdc, struct ceph_msg *msg,
   goto bad_put;
  }
 
- ceph_decode_need(&p, end, 4 + numops * 4, bad);
+ ceph_decode_need(&p, end, 4 + numops * 4, bad_put);
  retry_attempt = ceph_decode_32(&p);
  for (i = 0; i < numops; i++)
   req->r_reply_op_result[i] = ceph_decode_32(&p);
-- 
1.7.1