From 14b9d32186ca19efa21e088efeca5ba42b0b9133 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Wed, 6 Aug 2014 03:51:05 -0400
Subject: [pci] Log IDE resource quirk in dmesg

Message-id: <20140806035105.1438.19251.stgit@gir.stowe>
Patchwork-id: 87474
O-Subject: [RHEL7.1 PATCH 65/69] PCI: Log IDE resource quirk in dmesg
Bugzilla: 1110896
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110896
Upstream Status: 075eb9e35578c23ee2414f87d97d2e5065aa1bc1

commit 075eb9e35578c23ee2414f87d97d2e5065aa1bc1
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Wed Mar 5 14:07:03 2014 -0700

    PCI: Log IDE resource quirk in dmesg

    Make a note in dmesg when we overwrite legacy IDE BAR info.  We previously
    logged something like this:

      pci 0000:00:1f.1: reg 0x10: [io  0x0000-0x0007]

    and then silently overwrote the resource.  There's an example in the
    bugzilla below.  This doesn't fix the bugzilla; it just makes what's going
    on more obvious.

    No functional change; merely adds some dev_info() calls.

    Link: https://bugzilla.kernel.org/show_bug.cgi?id=48451
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/probe.c b/drivers/pci/probe.c
index b1a3114..9fa0033 100644
--- a/drivers/pci/probe.c
+++ b/drivers/pci/probe.c
@@ -1151,10 +1151,10 @@ int pci_setup_device(struct pci_dev *dev)
   pci_read_config_word(dev, PCI_SUBSYSTEM_ID, &dev->subsystem_device);
 
   /*
-   * Do the ugly legacy mode stuff here rather than broken chip
-   * quirk code. Legacy mode ATA controllers have fixed
-   * addresses. These are not always echoed in BAR0-3, and
-   * BAR0-3 in a few cases contain junk!
+   * Do the ugly legacy mode stuff here rather than broken chip
+   * quirk code. Legacy mode ATA controllers have fixed
+   * addresses. These are not always echoed in BAR0-3, and
+   * BAR0-3 in a few cases contain junk!
    */
   if (class == PCI_CLASS_STORAGE_IDE) {
    u8 progif;
@@ -1165,11 +1165,15 @@ int pci_setup_device(struct pci_dev *dev)
     res = &dev->resource[0];
     res->flags = LEGACY_IO_RESOURCE;
     pcibios_bus_to_resource(dev->bus, res, &region);
+    dev_info(&dev->dev, "legacy IDE quirk: reg 0x10: %pR\n",
+      res);
     region.start = 0x3F6;
     region.end = 0x3F6;
     res = &dev->resource[1];
     res->flags = LEGACY_IO_RESOURCE;
     pcibios_bus_to_resource(dev->bus, res, &region);
+    dev_info(&dev->dev, "legacy IDE quirk: reg 0x14: %pR\n",
+      res);
    }
    if ((progif & 4) == 0) {
     region.start = 0x170;
@@ -1177,11 +1181,15 @@ int pci_setup_device(struct pci_dev *dev)
     res = &dev->resource[2];
     res->flags = LEGACY_IO_RESOURCE;
     pcibios_bus_to_resource(dev->bus, res, &region);
+    dev_info(&dev->dev, "legacy IDE quirk: reg 0x18: %pR\n",
+      res);
     region.start = 0x376;
     region.end = 0x376;
     res = &dev->resource[3];
     res->flags = LEGACY_IO_RESOURCE;
     pcibios_bus_to_resource(dev->bus, res, &region);
+    dev_info(&dev->dev, "legacy IDE quirk: reg 0x1c: %pR\n",
+      res);
    }
   }
   break;
-- 
1.7.1