From f54d2ceee4a345770f9c22ecc8452d83cdbf44f7 Mon Sep 17 00:00:00 2001
From: Vivek Goyal <vgoyal@redhat.com>
Date: Tue, 6 May 2014 17:01:37 -0400
Subject: [virt] hyperv/vmbus: Negotiate version 3.0 when running on ws2012r2 hosts

Message-id: <1399395698-10215-2-git-send-email-vgoyal@redhat.com>
Patchwork-id: 79414
O-Subject: [RHEL7.0 PATCH 1/2] Drivers: hv: vmbus: Negotiate version 3.0 when running on ws2012r2 hosts
Bugzilla: 1037957
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Jason Wang <jasowang@redhat.com>

BZ:1037957

This is backport of upstream commit 03367ef5ea811475187a0732aada068919e14d61

Only ws2012r2 hosts support the ability to reconnect to the host on VMBUS. This functionality
is needed by kexec in Linux. To use this functionality we need to negotiate version 3.0 of the
VMBUS protocol.

Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
Cc: <stable@vger.kernel.org>        [3.9+]
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/hv/connection.c b/drivers/hv/connection.c
index d6b1e29..8dd98d4 100644
--- a/drivers/hv/connection.c
+++ b/drivers/hv/connection.c
@@ -55,6 +55,9 @@ static __u32 vmbus_get_next_version(__u32 current_version)
  case (VERSION_WIN8):
   return VERSION_WIN7;
 
+ case (VERSION_WIN8_1):
+  return VERSION_WIN8;
+
  case (VERSION_WS2008):
  default:
   return VERSION_INVAL;
@@ -79,7 +82,7 @@ static int vmbus_negotiate_version(struct vmbus_channel_msginfo *msginfo,
  msg->monitor_page2 = virt_to_phys(
    (void *)((unsigned long)vmbus_connection.monitor_pages +
      PAGE_SIZE));
- if (version == VERSION_WIN8)
+ if (version == VERSION_WIN8_1)
   msg->target_vcpu = hv_context.vp_index[smp_processor_id()];
 
  /*
diff --git a/include/linux/hyperv.h b/include/linux/hyperv.h
index d15d298..4274bdd 100644
--- a/include/linux/hyperv.h
+++ b/include/linux/hyperv.h
@@ -473,15 +473,17 @@ hv_get_ringbuffer_availbytes(struct hv_ring_buffer_info *rbi,
  * 0 . 13 (Windows Server 2008)
  * 1 . 1  (Windows 7)
  * 2 . 4  (Windows 8)
+ * 3 . 0  (Windows 8 R2)
  */
 
 #define VERSION_WS2008  ((0 << 16) | (13))
 #define VERSION_WIN7    ((1 << 16) | (1))
 #define VERSION_WIN8    ((2 << 16) | (4))
+#define VERSION_WIN8_1    ((3 << 16) | (0))
 
 #define VERSION_INVAL -1
 
-#define VERSION_CURRENT VERSION_WIN8
+#define VERSION_CURRENT VERSION_WIN8_1
 
 /* Make maximum size of pipe payload of 16K */
 #define MAX_PIPE_DATA_PAYLOAD  (sizeof(u8) * 16384)
-- 
1.7.1