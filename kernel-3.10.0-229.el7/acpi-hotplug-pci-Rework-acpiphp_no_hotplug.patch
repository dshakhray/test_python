From 57bd06948f5a1e99d993b6d42a62e45a65e4b2c6 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Fri, 19 Sep 2014 12:29:02 -0400
Subject: [acpi] hotplug/pci: Rework acpiphp_no_hotplug()

Message-id: <1411129776-21656-28-git-send-email-prarit@redhat.com>
Patchwork-id: 96351
O-Subject: [RHEL7.1 PATCH BZ 1141846 27/61] ACPI / hotplug / PCI: Rework acpiphp_no_hotplug()
Bugzilla: 1141846
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Myron Stowe <mstowe@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1141846

commit b2118d6a4073e394312072b6666cb576e18653b2
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Feb 4 00:39:20 2014 +0100

    ACPI / hotplug / PCI: Rework acpiphp_no_hotplug()

    If a struct acpi_device pointer is passed to acpiphp_no_hotplug()
    instead of an ACPI handle, the function won't need to call
    acpi_bus_get_device(), which may be costly, any more.  Then,
    trim_stale_devices() can call acpiphp_no_hotplug() passing
    the struct acpi_device object it already has directly to that
    function.

    Make those changes and update slot_no_hotplug() accordingly.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Mika Westerberg <mika.westerberg@linux.intel.com>

Cc: Myron Stowe <mstowe@redhat.com>
Cc: Andy Gospodarek <agospoda@redhat.com>
Cc: Tony Camuso <tcamuso@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/hotplug/acpiphp_glue.c b/drivers/pci/hotplug/acpiphp_glue.c
index b79f94e..96de0cc 100644
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@ -638,11 +638,8 @@ static void disable_slot(struct acpiphp_slot *slot)
  slot->flags &= (~SLOT_ENABLED);
 }
 
-static bool acpiphp_no_hotplug(acpi_handle handle)
+static bool acpiphp_no_hotplug(struct acpi_device *adev)
 {
- struct acpi_device *adev = NULL;
-
- acpi_bus_get_device(handle, &adev);
  return adev && adev->flags.no_hotplug;
 }
 
@@ -650,10 +647,13 @@ static bool slot_no_hotplug(struct acpiphp_slot *slot)
 {
  struct acpiphp_func *func;
 
- list_for_each_entry(func, &slot->funcs, sibling)
-  if (acpiphp_no_hotplug(func_to_handle(func)))
-   return true;
+ list_for_each_entry(func, &slot->funcs, sibling) {
+  struct acpi_device *adev = NULL;
 
+  acpi_bus_get_device(func_to_handle(func), &adev);
+  if (acpiphp_no_hotplug(adev))
+   return true;
+ }
  return false;
 }
 
@@ -710,13 +710,12 @@ static void trim_stale_devices(struct pci_dev *dev)
  bool alive = false;
 
  if (adev) {
-  acpi_handle handle = adev->handle;
   acpi_status status;
   unsigned long long sta;
 
-  status = acpi_evaluate_integer(handle, "_STA", NULL, &sta);
+  status = acpi_evaluate_integer(adev->handle, "_STA", NULL, &sta);
   alive = (ACPI_SUCCESS(status) && sta == ACPI_STA_ALL)
-   || acpiphp_no_hotplug(handle);
+   || acpiphp_no_hotplug(adev);
  }
  if (!alive) {
   u32 v;
-- 
1.7.1