From 7592987627d39a80ef6dbdcf3d2b73a9c331d859 Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:24:25 -0400
Subject: [block] rbd: drop an unsafe assertion
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-159-git-send-email-sweil@redhat.com>
Patchwork-id: 89835
O-Subject: [PATCH 158/303] rbd: drop an unsafe assertion
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Alex Elder <elder@linaro.org>

Olivier Bonvalet reported having repeated crashes due to a failed
assertion he was hitting in rbd_img_obj_callback():

    Assertion failure in rbd_img_obj_callback() at line 2165:
 rbd_assert(which >= img_request->next_completion);

With a lot of help from Olivier with reproducing the problem
we were able to determine the object and image requests had
already been completed (and often freed) at the point the
assertion failed.

There was a great deal of discussion on the ceph-devel mailing list
about this.  The problem only arose when there were two (or more)
object requests in an image request, and the problem was always
seen when the second request was being completed.

The problem is due to a race in the window between setting the
"done" flag on an object request and checking the image request's
next completion value.  When the first object request completes, it
checks to see if its successor request is marked "done", and if
so, that request is also completed.  In the process, the image
request's next_completion value is updated to reflect that both
the first and second requests are completed.  By the time the
second request is able to check the next_completion value, it
has been set to a value *greater* than its own "which" value,
which caused an assertion to fail.

Fix this problem by skipping over any completion processing
unless the completing object request is the next one expected.
Test only for inequality (not >=), and eliminate the bad
assertion.

Tested-by: Olivier Bonvalet <ob@daevel.fr>
Signed-off-by: Alex Elder <elder@linaro.org>
Reviewed-by: Sage Weil <sage@inktank.com>
Reviewed-by: Ilya Dryomov <ilya.dryomov@inktank.com>
(cherry picked from commit 638c323c4d1f8eaf25224946e21ce8818f1bcee1)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/block/rbd.c b/drivers/block/rbd.c
index 8112fed..fb97b07 100644
--- a/drivers/block/rbd.c
+++ b/drivers/block/rbd.c
@@ -2153,7 +2153,6 @@ static void rbd_img_obj_callback(struct rbd_obj_request *obj_request)
  rbd_assert(img_request->obj_request_count > 0);
  rbd_assert(which != BAD_WHICH);
  rbd_assert(which < img_request->obj_request_count);
- rbd_assert(which >= img_request->next_completion);
 
  spin_lock_irq(&img_request->completion_lock);
  if (which != img_request->next_completion)
-- 
1.7.1