From f7f80d944a566ab699d7f0f965b70c03baed16d5 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 10 Jul 2014 01:04:41 -0400
Subject: [base] use device get/put functions

Message-id: <20140710010440.22146.5627.stgit@gir.stowe>
Patchwork-id: 85601
O-Subject: [RHEL7.1 PATCH 062/105] drivers: base: use device get/put functions
Bugzilla: 1114228
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1114228
Upstream Status: df2b717c667d2cab37d1bbd585e891f10ed2bca4

commit df2b717c667d2cab37d1bbd585e891f10ed2bca4
Author: Seth Jennings <sjenning@linux.vnet.ibm.com>
Date:   Tue Aug 20 12:12:59 2013 -0500

    drivers: base: use device get/put functions

    Use the [get|put]_device functions for ref'ing the memory block device
    rather than the kobject functions which should be hidden away by the
    device layer.

    Signed-off-by: Seth Jennings <sjenning@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/base/memory.c b/drivers/base/memory.c
index f6d11f8..67f9255 100644
--- a/drivers/base/memory.c
+++ b/drivers/base/memory.c
@@ -618,14 +618,14 @@ static int add_memory_section(int nid, struct mem_section *section,
    if (scn_nr >= (*mem_p)->start_section_nr &&
        scn_nr <= (*mem_p)->end_section_nr) {
     mem = *mem_p;
-    kobject_get(&mem->dev.kobj);
+    get_device(&mem->dev);
    }
  } else
   mem = find_memory_block(section);
 
  if (mem) {
   mem->section_count++;
-  kobject_put(&mem->dev.kobj);
+  put_device(&mem->dev);
  } else {
   ret = init_memory_block(&mem, section, state);
   /* store memory_block pointer for next loop */
@@ -665,7 +665,7 @@ unregister_memory(struct memory_block *memory)
  BUG_ON(memory->dev.bus != &memory_subsys);
 
  /* drop the ref. we got in remove_memory_block() */
- kobject_put(&memory->dev.kobj);
+ put_device(&memory->dev);
  device_unregister(&memory->dev);
 }
 
@@ -682,7 +682,7 @@ static int remove_memory_block(unsigned long node_id,
  if (mem->section_count == 0)
   unregister_memory(mem);
  else
-  kobject_put(&mem->dev.kobj);
+  put_device(&mem->dev);
 
  mutex_unlock(&mem_sysfs_mutex);
  return 0;
-- 
1.7.1