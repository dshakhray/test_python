From ea1ccdefbc6d637cd19d19e50eb92e3a16d5dcec Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:04:39 -0400
Subject: [fs] btrfs: free ulist in qgroup_shared_accounting() error path

Message-id: <1407179109-13714-393-git-send-email-sandeen@redhat.com>
Patchwork-id: 87332
O-Subject: [RHEL7.1 PATCH 392/422] btrfs: free ulist in qgroup_shared_accounting() error path
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

commit d737278091fccda77f6896012ba86c5ffb57993f
Author: Eric Sandeen <sandeen@redhat.com>
Date:   Thu Jun 12 00:14:59 2014 -0500

    btrfs: free ulist in qgroup_shared_accounting() error path

    If tmp = ulist_alloc(GFP_NOFS) fails, we return without
    freeing the previously allocated qgroups = ulist_alloc(GFP_NOFS)
    and cause a memory leak.

    Signed-off-by: Eric Sandeen <sandeen@redhat.com>
    Signed-off-by: Chris Mason <clm@fb.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/qgroup.c b/fs/btrfs/qgroup.c
index cf5aead..98cb6b2 100644
--- a/fs/btrfs/qgroup.c
+++ b/fs/btrfs/qgroup.c
@@ -1798,8 +1798,10 @@ static int qgroup_shared_accounting(struct btrfs_trans_handle *trans,
   return -ENOMEM;
 
  tmp = ulist_alloc(GFP_NOFS);
- if (!tmp)
+ if (!tmp) {
+  ulist_free(qgroups);
   return -ENOMEM;
+ }
 
  btrfs_get_tree_mod_seq(fs_info, &elem);
  ret = btrfs_find_all_roots(trans, fs_info, oper->bytenr, elem.seq,
-- 
1.7.1