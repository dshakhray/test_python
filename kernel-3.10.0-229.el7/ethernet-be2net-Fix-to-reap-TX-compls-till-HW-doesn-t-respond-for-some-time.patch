From b870680826aaf61126ec6d2293f104ce7bb5afb2 Mon Sep 17 00:00:00 2001
From: Ivan Vecera <ivecera@redhat.com>
Date: Mon, 8 Sep 2014 16:13:46 -0400
Subject: [ethernet] be2net: Fix to reap TX compls till HW doesn't respond for some time

Message-id: <1410192881-30702-24-git-send-email-ivecera@redhat.com>
Patchwork-id: 92417
O-Subject: [RHEL7.1 PATCH 23/78] be2net: Fix to reap TX compls till HW doesn't respond for some time
Bugzilla: 1088575
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>

BZ: #1088575

Upstream commit(s):
commit 1a3d0717f68345730ae939b74b952200fb165f45
Author: Vasundhara Volam <vasundhara.volam@emulex.com>
Date:   Mon Apr 14 16:12:40 2014 +0530

    be2net: Fix to reap TX compls till HW doesn't respond for some time

    be_close() currently waits for a max of 200ms to receive all pending
    TX compls. This timeout value was roughly calculated based on 10G
    transmission speeds and the TX queue depth. This timeout may not be
    enough when the link is operating at lower speeds or in multi-channel/SR-IOV
    configs with TX-rate limiting setting.

    It is hard to calculate a "proper timeout value" that works in all
    configurations.  This patch solves this problem by continuing to reap
    TX completions till the HW is completely silent for a period of 10ms or
    a HW error is detected.

    v2: implements the new scheme (as suggested by David Laight) instead of
    just waiting longer than 200ms for reaping all completions.

    Signed-off-by: Vasundhara Volam <vasundhara.volam@emulex.com>
    Signed-off-by: Sathya Perla <sathya.perla@emulex.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Ivan Vecera <ivecera@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/emulex/benet/be_main.c b/drivers/net/ethernet/emulex/benet/be_main.c
index c71fdef..2215437 100644
--- a/drivers/net/ethernet/emulex/benet/be_main.c
+++ b/drivers/net/ethernet/emulex/benet/be_main.c
@@ -2033,11 +2033,13 @@ static void be_tx_compl_clean(struct be_adapter *adapter)
  bool dummy_wrb;
  int i, pending_txqs;
 
- /* Wait for a max of 200ms for all the tx-completions to arrive. */
+ /* Stop polling for compls when HW has been silent for 10ms */
  do {
   pending_txqs = adapter->num_tx_qs;
 
   for_all_tx_queues(adapter, txo, i) {
+   cmpl = 0;
+   num_wrbs = 0;
    txq = &txo->q;
    while ((txcp = be_tx_compl_get(&txo->cq))) {
     end_idx =
@@ -2050,14 +2052,13 @@ static void be_tx_compl_clean(struct be_adapter *adapter)
    if (cmpl) {
     be_cq_notify(adapter, txo->cq.id, false, cmpl);
     atomic_sub(num_wrbs, &txq->used);
-    cmpl = 0;
-    num_wrbs = 0;
+    timeo = 0;
    }
    if (atomic_read(&txq->used) == 0)
     pending_txqs--;
   }
 
-  if (pending_txqs == 0 || ++timeo > 200)
+  if (pending_txqs == 0 || ++timeo > 10 || be_hw_error(adapter))
    break;
 
   mdelay(1);
-- 
1.7.1