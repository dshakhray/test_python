From fa4ccaa960169076939841880aae726a52c66c7d Mon Sep 17 00:00:00 2001
From: Benjamin Tissoires <benjamin.tissoires@redhat.com>
Date: Mon, 22 Dec 2014 16:08:34 -0500
Subject: [input] alps: v7 - sometimes a single touch is reported in mt[1]

Message-id: <1419264516-15459-3-git-send-email-benjamin.tissoires@redhat.com>
Patchwork-id: 102380
O-Subject: [PATCH RHEL7.1 2/4] Input: alps - v7: sometimes a single touch is reported in mt[1]
Bugzilla: 1107819
RH-Acked-by: Hans de Goede <hdegoede@redhat.com>
RH-Acked-by: Aristeu S. Rozanski F. <arozansk@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1107819
Upstream: will be shipped in v3.20
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=8420761
Tested by me on a Toshiba Tecra W50-A with a v7 Alps touchpad

commit 7091c443dda8c6c6d8e70e33452252f9ad3e7814
(in the input maintainer's tree:
https://git.kernel.org/cgit/linux/kernel/git/dtor/input.git)
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Dec 18 09:53:34 2014 -0800

    Input: alps - v7: sometimes a single touch is reported in mt[1]

    The v7 proto differentiates between a primary touch (with high precision)
    and a secondary touch (with lower precision). Normally when 2 fingers are
    down and one is lifted the still present touch becomes the primary touch,
    but some traces have shown that this does not happen always.

    This commit deals with this by making alps_get_mt_count() not stop at the
    first empty mt slot, and if a touch is present in mt[1] and not mt[0]
    moving the data to mt[0] (for input_mt_assign_slots).

    BugLink: https://bugs.freedesktop.org/show_bug.cgi?id=86338
    Cc: stable@vger.kernel.org # 3.17
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Tested-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/input/mouse/alps.c b/drivers/input/mouse/alps.c
index b3d178d..4623321 100644
--- a/drivers/input/mouse/alps.c
+++ b/drivers/input/mouse/alps.c
@@ -919,12 +919,14 @@ static void alps_get_finger_coordinate_v7(struct input_mt_pos *mt,
 
 static int alps_get_mt_count(struct input_mt_pos *mt)
 {
- int i;
+ int i, fingers = 0;
 
- for (i = 0; i < MAX_TOUCHES && mt[i].x != 0 && mt[i].y != 0; i++)
-  /* empty */;
+ for (i = 0; i < MAX_TOUCHES; i++) {
+  if (mt[i].x != 0 || mt[i].y != 0)
+   fingers++;
+ }
 
- return i;
+ return fingers;
 }
 
 static int alps_decode_packet_v7(struct alps_fields *f,
@@ -970,6 +972,14 @@ static int alps_decode_packet_v7(struct alps_fields *f,
  else /* pkt_id == V7_PACKET_ID_MULTI */
   f->fingers = 3 + (p[5] & 0x03);
 
+ /* Sometimes a single touch is reported in mt[1] rather then mt[0] */
+ if (f->fingers == 1 && f->mt[0].x == 0 && f->mt[0].y == 0) {
+  f->mt[0].x = f->mt[1].x;
+  f->mt[0].y = f->mt[1].y;
+  f->mt[1].x = 0;
+  f->mt[1].y = 0;
+ }
+
  return 0;
 }
 
-- 
1.7.1