From b6e01d3763ae8ee74f2a30ad9a7720be086ee2a5 Mon Sep 17 00:00:00 2001
From: Dave Airlie <airlied@redhat.com>
Date: Fri, 12 Sep 2014 01:56:52 -0400
Subject: [drm] i915: only hook up hpd pulse for DP outputs

Message-id: <1410487019-24661-15-git-send-email-airlied@redhat.com>
Patchwork-id: 93923
O-Subject: [RHEL7.1 BZ1140440 PATCH 14/21] drm/i915: only hook up hpd pulse for DP outputs
Bugzilla: 1140440
RH-Acked-by: Jerome Glisse <jglisse@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Rob Clark <rclark@redhat.com>

From: Chris Wilson <chris@chris-wilson.co.uk>

bugzilla: 1140440
upstream: f68d697eaf3278200a7fc3c8b1d95d72837b84d8

On HSW+, the digital encoders are shared between HDMI and DP outputs,
with one encoder masquerading as both. The VBT should tell us if we need
to have DP or HDMI support on a particular port, but if we don't have DP
support and we enable the DP hpd pulse handler then we cause an oops.

Don't hook up the DP hpd handling if we don't have a DP port.

Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=81856
Reported-by: Intel QA Team.
Signed-off-by: Dave Airlie <airlied@redhat.com> # v1
[ickle: Fix the error handling after a malloc failure]
Reviewed-by: Dave Airlie <airlied@redhat.com>
Cc: Paulo Zanoni <przanoni@gmail.com>
Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
Signed-off-by: Dave Airlie <airlied@redhat.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/gpu/drm/i915/intel_ddi.c b/drivers/gpu/drm/i915/intel_ddi.c
index 9152936..77c30c2 100644
--- a/drivers/gpu/drm/i915/intel_ddi.c
+++ b/drivers/gpu/drm/i915/intel_ddi.c
@@ -1728,15 +1728,13 @@ void intel_ddi_init(struct drm_device *dev, enum port port)
  struct intel_digital_port *intel_dig_port;
  struct intel_encoder *intel_encoder;
  struct drm_encoder *encoder;
- struct intel_connector *hdmi_connector = NULL;
- struct intel_connector *dp_connector = NULL;
  bool init_hdmi, init_dp;
 
  init_hdmi = (dev_priv->vbt.ddi_port_info[port].supports_dvi ||
        dev_priv->vbt.ddi_port_info[port].supports_hdmi);
  init_dp = dev_priv->vbt.ddi_port_info[port].supports_dp;
  if (!init_dp && !init_hdmi) {
-  DRM_DEBUG_KMS("VBT says port %c is not DVI/HDMI/DP compatible\n",
+  DRM_DEBUG_KMS("VBT says port %c is not DVI/HDMI/DP compatible, assuming it is\n",
          port_name(port));
   init_hdmi = true;
   init_dp = true;
@@ -1766,23 +1764,28 @@ void intel_ddi_init(struct drm_device *dev, enum port port)
         DDI_A_4_LANES);
 
  intel_encoder->type = INTEL_OUTPUT_UNKNOWN;
- intel_encoder->crtc_mask =  (1 << 0) | (1 << 1) | (1 << 2);
+ intel_encoder->crtc_mask = (1 << 0) | (1 << 1) | (1 << 2);
  intel_encoder->cloneable = 0;
  intel_encoder->hot_plug = intel_ddi_hot_plug;
 
- intel_dig_port->hpd_pulse = intel_dp_hpd_pulse;
- dev_priv->hpd_irq_port[port] = intel_dig_port;
+ if (init_dp) {
+  if (!intel_ddi_init_dp_connector(intel_dig_port))
+   goto err;
 
- if (init_dp)
-  dp_connector = intel_ddi_init_dp_connector(intel_dig_port);
+  intel_dig_port->hpd_pulse = intel_dp_hpd_pulse;
+  dev_priv->hpd_irq_port[port] = intel_dig_port;
+ }
 
  /* In theory we don't need the encoder->type check, but leave it just in
   * case we have some really bad VBTs... */
- if (intel_encoder->type != INTEL_OUTPUT_EDP && init_hdmi)
-  hdmi_connector = intel_ddi_init_hdmi_connector(intel_dig_port);
-
- if (!dp_connector && !hdmi_connector) {
-  drm_encoder_cleanup(encoder);
-  kfree(intel_dig_port);
+ if (intel_encoder->type != INTEL_OUTPUT_EDP && init_hdmi) {
+  if (!intel_ddi_init_hdmi_connector(intel_dig_port))
+   goto err;
  }
+
+ return;
+
+err:
+ drm_encoder_cleanup(encoder);
+ kfree(intel_dig_port);
 }
-- 
1.7.1