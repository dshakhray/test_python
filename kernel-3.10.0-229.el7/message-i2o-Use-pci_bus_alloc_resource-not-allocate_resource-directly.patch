From f414e5585e3e282f4ed822308fefa0d3e51f8ddc Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Wed, 6 Aug 2014 03:49:27 -0400
Subject: [message] i2o: Use pci_bus_alloc_resource(), not allocate_resource() directly

Message-id: <20140806034926.1438.12818.stgit@gir.stowe>
Patchwork-id: 87459
O-Subject: [RHEL7.1 PATCH 50/69] i2o: Use pci_bus_alloc_resource(), not allocate_resource() directly
Bugzilla: 1110896
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110896
Upstream Status: d2e074ccbf84e91819ae07b3ca838120db2c97a9

commit d2e074ccbf84e91819ae07b3ca838120db2c97a9
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Wed Feb 26 11:25:57 2014 -0700

    i2o: Use pci_bus_alloc_resource(), not allocate_resource() directly

    Convert i2o_res_alloc() to use pci_bus_alloc_resource() rather than
    pci_find_parent_resource() and allocate_resource().  We don't have a
    resource to start with, so pci_find_parent_resource() can't do anything
    useful: a bus may have several memory resources available, so there might
    be several possible parents.  This is more likely on root buses because
    host bridges may have any number of apertures.

    I'm pretty sure this didn't work in the first place because it passed
    size == min == max to allocate_resource().  The min and max parameters are
    constraints on the *addresses* of the resource, not on its size, so I think
    it was impossible for allocate_resource() to succeed.

    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/message/i2o/iop.c b/drivers/message/i2o/iop.c
index bd971b1..92752fb 100644
--- a/drivers/message/i2o/iop.c
+++ b/drivers/message/i2o/iop.c
@@ -655,8 +655,8 @@ static int i2o_iop_activate(struct i2o_controller *c)
 static void i2o_res_alloc(struct i2o_controller *c, unsigned long flags)
 {
  i2o_status_block *sb = c->status_block.virt;
- struct resource *root, *res = &c->mem_resource;
- resource_size_t size, min, max, align;
+ struct resource *res = &c->mem_resource;
+ resource_size_t size, align;
  int err;
 
  res->name = c->pdev->bus->name;
@@ -664,21 +664,17 @@ static void i2o_res_alloc(struct i2o_controller *c, unsigned long flags)
  res->start = 0;
  res->end = 0;
  osm_info("%s: requires private memory resources.\n", c->name);
- root = pci_find_parent_resource(c->pdev, res);
- if (root == NULL) {
-  osm_warn("%s: Can't find parent resource!\n", c->name);
-  return;
- }
 
  if (flags & IORESOURCE_MEM) {
-  size = min = max = sb->desired_mem_size;
+  size = sb->desired_mem_size;
   align = 1 << 20; /* unspecified, use 1Mb and play safe */
  } else {
-  size = min = max = sb->desired_io_size;
+  size = sb->desired_io_size;
   align = 1 << 12; /* unspecified, use 4Kb and play safe */
  }
 
- err = allocate_resource(root, res, size, min, max, align, NULL, NULL);
+ err = pci_bus_alloc_resource(c->pdev->bus, res, size, align, 0, 0,
+         NULL, NULL);
  if (err < 0)
   return;
 
-- 
1.7.1