From 7dc4a0fc4d5936ec7c942c012336dc949cd6729b Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:48:49 -0400
Subject: [tools] perf/evsel: Skip ignored symbols while printing callchain

Message-id: <1408953210-26343-42-git-send-email-jolsa@redhat.com>
Patchwork-id: 88754
O-Subject: [PATCH RHEL7.1 BZ1133083 041/322] perf evsel: Skip ignored symbols while printing callchain
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit d2ff1b1499c8e0ad2fc79376a4215ba37771823f
Author: David Ahern <dsahern@gmail.com>
Date: Mon Nov 18 13:32:44 2013 -0700

description
===========
Allows a command to have a symbol_filter controlled by the user to skip
certain functions in a backtrace. One example is to allow the user to
reduce repeating patterns like:

    do_select  core_sys_select  sys_select

to just sys_select when dumping callchains, consuming less real estate
on the screen while still conveying the essential message - the process
is in a select call.

This option is leveraged by the upcoming timehist command.

[ Checked if al.sym is NULL before touching al.sym->ignored, as noted by Adrian Hunter ]
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/session.c b/tools/perf/util/session.c
index 6bee5f6..87540bc 100644
--- a/tools/perf/util/session.c
+++ b/tools/perf/util/session.c
@@ -1527,6 +1527,9 @@ void perf_evsel__print_ip(struct perf_evsel *evsel, union perf_event *event,
    if (!node)
     break;
 
+   if (node->sym && node->sym->ignore)
+    goto next;
+
    if (print_ip)
     printf("%c%16" PRIx64, s, node->ip);
 
@@ -1549,12 +1552,15 @@ void perf_evsel__print_ip(struct perf_evsel *evsel, union perf_event *event,
    if (!print_oneline)
     printf("\n");
 
-   callchain_cursor_advance(&callchain_cursor);
-
    stack_depth--;
+next:
+   callchain_cursor_advance(&callchain_cursor);
   }
 
  } else {
+  if (al.sym && al.sym->ignore)
+   return;
+
   if (print_ip)
    printf("%16" PRIx64, sample->ip);
 
-- 
1.7.1