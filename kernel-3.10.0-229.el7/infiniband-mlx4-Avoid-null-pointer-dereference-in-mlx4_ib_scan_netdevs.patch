From a3fbc0a0d8249e98aa23f8a0bbbd63d9f4f2e71b Mon Sep 17 00:00:00 2001
From: Amir Vadai <avadai@redhat.com>
Date: Thu, 11 Sep 2014 12:01:59 -0400
Subject: [infiniband] mlx4: Avoid null pointer dereference in mlx4_ib_scan_netdevs()

Message-id: <508e887c16e97f825208b1a4295d79b140961f81.1410425016.git.avadai@redhat.com>
Patchwork-id: 93725
O-Subject: [Patch RHEL7.1 V1 183/197] IB/mlx4: Avoid null pointer dereference in mlx4_ib_scan_netdevs()
Bugzilla: 1107617 1107618 1107619 1107620
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

From: Moni Shoua <monis@mellanox.com>

When Ethernet netdev is not present for a port (e.g. when the link
layer type of the port is InfiniBand) it's possible to dereference
a null pointer when we do netdevice scanning.

To fix that, we move a section of code that needs to run only when
netdev is present to a proper if () statement.

Fixes: ad4885d2 ('IB/mlx4: Build the port IBoE GID table properly under bonding')
Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
Signed-off-by: Moni Shoua <monis@mellanox.com>
Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>

Upstream: e381835cf1b8e3b2857277dbc3b77d8c5350f70a
Signed-off-by: Amir Vadai <avadai@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/infiniband/hw/mlx4/main.c b/drivers/infiniband/hw/mlx4/main.c
index 88cf2c1..2421ce6 100644
--- a/drivers/infiniband/hw/mlx4/main.c
+++ b/drivers/infiniband/hw/mlx4/main.c
@@ -1786,31 +1786,34 @@ static void mlx4_ib_scan_netdevs(struct mlx4_ib_dev *ibdev,
    port_state = (netif_running(curr_netdev) && netif_carrier_ok(curr_netdev)) ?
       IB_PORT_ACTIVE : IB_PORT_DOWN;
    mlx4_ib_set_default_gid(ibdev, curr_netdev, port);
-  } else {
-   reset_gid_table(ibdev, port);
-  }
-  /* if using bonding/team and a slave port is down, we don't the bond IP
-   * based gids in the table since flows that select port by gid may get
-   * the down port.
-   */
-  if (curr_master && (port_state == IB_PORT_DOWN)) {
-   reset_gid_table(ibdev, port);
-   mlx4_ib_set_default_gid(ibdev, curr_netdev, port);
-  }
-  /* if bonding is used it is possible that we add it to masters
-   * only after IP address is assigned to the net bonding
-   * interface.
-  */
-  if (curr_master && (old_master != curr_master)) {
-   reset_gid_table(ibdev, port);
-   mlx4_ib_set_default_gid(ibdev, curr_netdev, port);
-   mlx4_ib_get_dev_addr(curr_master, ibdev, port);
-  }
+   /* if using bonding/team and a slave port is down, we
+    * don't the bond IP based gids in the table since
+    * flows that select port by gid may get the down port.
+    */
+   if (curr_master && (port_state == IB_PORT_DOWN)) {
+    reset_gid_table(ibdev, port);
+    mlx4_ib_set_default_gid(ibdev,
+       curr_netdev, port);
+   }
+   /* if bonding is used it is possible that we add it to
+    * masters only after IP address is assigned to the
+    * net bonding interface.
+   */
+   if (curr_master && (old_master != curr_master)) {
+    reset_gid_table(ibdev, port);
+    mlx4_ib_set_default_gid(ibdev,
+       curr_netdev, port);
+    mlx4_ib_get_dev_addr(curr_master, ibdev, port);
+   }
 
-  if (!curr_master && (old_master != curr_master)) {
+   if (!curr_master && (old_master != curr_master)) {
+    reset_gid_table(ibdev, port);
+    mlx4_ib_set_default_gid(ibdev,
+       curr_netdev, port);
+    mlx4_ib_get_dev_addr(curr_netdev, ibdev, port);
+   }
+  } else {
    reset_gid_table(ibdev, port);
-   mlx4_ib_set_default_gid(ibdev, curr_netdev, port);
-   mlx4_ib_get_dev_addr(curr_netdev, ibdev, port);
   }
  }
 
-- 
1.7.1