From f5a1bc503ba25bd8c6f7b9142a49491e0011c4b7 Mon Sep 17 00:00:00 2001
From: Tomas Henzl <thenzl@redhat.com>
Date: Mon, 18 Aug 2014 12:26:35 -0400
Subject: [scsi] mpt2sas: Add free smids to the head, not tail of list

Message-id: <1408364797-18588-6-git-send-email-thenzl@redhat.com>
Patchwork-id: 87851
O-Subject: [RHEL7.1 e-stor PATCH 5/7] mpt2sas: Add free smids to the head, not tail of list
Bugzilla: 1041675
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Milburn <dmilburn@redhat.com>

Reusing a smid quickly means it's still cache-hot.  This yields a small
but noticable performance improvement in a well-known database benchmark.
This improvement is already present in the mpt3sas driver.

Signed-off-by: Matthew Wilcox <matthew.r.wilcox@intel.com>
Reviewed-by: Nicholas Bellinger <nab@linux-iscsi.org>
Reviewed-by: Praveen Krishnamoorthy <Praveen.krishnamoorthy@lsi.com>
Acked-by: Sreekanth Reddy <Sreekanth.reddy@lsi.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 049b3e81d79b1957c0be231d66a98b5715b347e4)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/mpt2sas/mpt2sas_base.c b/drivers/scsi/mpt2sas/mpt2sas_base.c
index bde63f7..8b88118 100644
--- a/drivers/scsi/mpt2sas/mpt2sas_base.c
+++ b/drivers/scsi/mpt2sas/mpt2sas_base.c
@@ -1739,14 +1739,14 @@ mpt2sas_base_free_smid(struct MPT2SAS_ADAPTER *ioc, u16 smid)
    list_for_each_entry_safe(chain_req, next,
        &ioc->scsi_lookup[i].chain_list, tracker_list) {
     list_del_init(&chain_req->tracker_list);
-    list_add_tail(&chain_req->tracker_list,
+    list_add(&chain_req->tracker_list,
         &ioc->free_chain_list);
    }
   }
   ioc->scsi_lookup[i].cb_idx = 0xFF;
   ioc->scsi_lookup[i].scmd = NULL;
   ioc->scsi_lookup[i].direct_io = 0;
-  list_add_tail(&ioc->scsi_lookup[i].tracker_list,
+  list_add(&ioc->scsi_lookup[i].tracker_list,
       &ioc->free_list);
   spin_unlock_irqrestore(&ioc->scsi_lookup_lock, flags);
 
@@ -1764,13 +1764,13 @@ mpt2sas_base_free_smid(struct MPT2SAS_ADAPTER *ioc, u16 smid)
   /* hi-priority */
   i = smid - ioc->hi_priority_smid;
   ioc->hpr_lookup[i].cb_idx = 0xFF;
-  list_add_tail(&ioc->hpr_lookup[i].tracker_list,
+  list_add(&ioc->hpr_lookup[i].tracker_list,
       &ioc->hpr_free_list);
  } else if (smid <= ioc->hba_queue_depth) {
   /* internal queue */
   i = smid - ioc->internal_smid;
   ioc->internal_lookup[i].cb_idx = 0xFF;
-  list_add_tail(&ioc->internal_lookup[i].tracker_list,
+  list_add(&ioc->internal_lookup[i].tracker_list,
       &ioc->internal_free_list);
  }
  spin_unlock_irqrestore(&ioc->scsi_lookup_lock, flags);
-- 
1.7.1