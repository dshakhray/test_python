From 35d3e62474cc92d542efc8802df2582ba7c48e3e Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Wed, 29 Oct 2014 16:34:45 -0400
Subject: [mm] Remove false WARN_ON from pagecache_isize_extended()

Message-id: <1414600485-1929-56-git-send-email-lczerner@redhat.com>
Patchwork-id: 98543
O-Subject: [RHEL 7.1 PATCH v2 55/55] mm: Remove false WARN_ON from pagecache_isize_extended()
Bugzilla: 1156096
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Jan Kara <jack@suse.cz>

BZ 1156096
https://bugzilla.redhat.com/show_bug.cgi?id=1156096

BREW 8169722
https://brewweb.devel.redhat.com/taskinfo?taskID=8169722

This patch was recently proposed on the list and was not yet included in
upstream kernel,even though it has been already accepted.

 The WARN_ON checking whether i_mutex is held in
 pagecache_isize_extended() was wrong because some filesystems (e.g.
 XFS) use different locks for serialization of truncates / writes. So
 just remove the check.

 Signed-off-by: Jan Kara <jack@suse.cz>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/mm/truncate.c b/mm/truncate.c
index 09df3aa..d445a4e 100644
--- a/mm/truncate.c
+++ b/mm/truncate.c
@@ -789,7 +789,6 @@ void pagecache_isize_extended(struct inode *inode, loff_t from, loff_t to)
  struct page *page;
  pgoff_t index;
 
- WARN_ON(!mutex_is_locked(&inode->i_mutex));
  WARN_ON(to > inode->i_size);
 
  if (from >= to || bsize == PAGE_CACHE_SIZE)
-- 
1.7.1