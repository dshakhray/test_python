From 099662fcb1f996c1f3edd62da969cc99cad6b563 Mon Sep 17 00:00:00 2001
From: Sai Vemuri <svemuri@redhat.com>
Date: Thu, 11 Sep 2014 22:43:56 -0400
Subject: [ethernet] cxgb4: only free allocated fls

Message-id: <1410475447-94392-98-git-send-email-svemuri@redhat.com>
Patchwork-id: 93878
O-Subject: [RHEL7.1 PATCH BZ 1124947 097/108] cxgb4: only free allocated fls
Bugzilla: 1124947
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5fa766946ba3ef88374445ec014f0e72481fd63a)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h b/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
index 6550cfc..e93a8d7 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
@@ -861,6 +861,7 @@ void t4_os_link_changed(struct adapter *adap, int port_id, int link_stat);
 void *t4_alloc_mem(size_t size);
 
 void t4_free_sge_resources(struct adapter *adap);
+void t4_free_ofld_rxqs(struct adapter *adap, int n, struct sge_ofld_rxq *q);
 irq_handler_t t4_intr_handler(struct adapter *adap);
 netdev_tx_t t4_eth_xmit(struct sk_buff *skb, struct net_device *dev);
 int t4_ethrx_handler(struct sge_rspq *q, const __be64 *rsp,
diff --git a/drivers/net/ethernet/chelsio/cxgb4/sge.c b/drivers/net/ethernet/chelsio/cxgb4/sge.c
index 8103a6e..46db6ce 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/sge.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/sge.c
@@ -2479,6 +2479,22 @@ static void free_rspq_fl(struct adapter *adap, struct sge_rspq *rq,
 }
 
 /**
+ *      t4_free_ofld_rxqs - free a block of consecutive Rx queues
+ *      @adap: the adapter
+ *      @n: number of queues
+ *      @q: pointer to first queue
+ *
+ *      Release the resources of a consecutive block of offload Rx queues.
+ */
+void t4_free_ofld_rxqs(struct adapter *adap, int n, struct sge_ofld_rxq *q)
+{
+ for ( ; n; n--, q++)
+  if (q->rspq.desc)
+   free_rspq_fl(adap, &q->rspq,
+         q->fl.size ? &q->fl : NULL);
+}
+
+/**
  * t4_free_sge_resources - free SGE resources
  * @adap: the adapter
  *
@@ -2489,12 +2505,12 @@ void t4_free_sge_resources(struct adapter *adap)
  int i;
  struct sge_eth_rxq *eq = adap->sge.ethrxq;
  struct sge_eth_txq *etq = adap->sge.ethtxq;
- struct sge_ofld_rxq *oq = adap->sge.ofldrxq;
 
  /* clean up Ethernet Tx/Rx queues */
  for (i = 0; i < adap->sge.ethqsets; i++, eq++, etq++) {
   if (eq->rspq.desc)
-   free_rspq_fl(adap, &eq->rspq, &eq->fl);
+   free_rspq_fl(adap, &eq->rspq,
+         eq->fl.size ? &eq->fl : NULL);
   if (etq->q.desc) {
    t4_eth_eq_free(adap, adap->fn, adap->fn, 0,
            etq->q.cntxt_id);
@@ -2505,18 +2521,9 @@ void t4_free_sge_resources(struct adapter *adap)
  }
 
  /* clean up RDMA and iSCSI Rx queues */
- for (i = 0; i < adap->sge.ofldqsets; i++, oq++) {
-  if (oq->rspq.desc)
-   free_rspq_fl(adap, &oq->rspq, &oq->fl);
- }
- for (i = 0, oq = adap->sge.rdmarxq; i < adap->sge.rdmaqs; i++, oq++) {
-  if (oq->rspq.desc)
-   free_rspq_fl(adap, &oq->rspq, &oq->fl);
- }
- for (i = 0, oq = adap->sge.rdmaciq; i < adap->sge.rdmaciqs; i++, oq++) {
-  if (oq->rspq.desc)
-   free_rspq_fl(adap, &oq->rspq, &oq->fl);
- }
+ t4_free_ofld_rxqs(adap, adap->sge.ofldqsets, adap->sge.ofldrxq);
+ t4_free_ofld_rxqs(adap, adap->sge.rdmaqs, adap->sge.rdmarxq);
+ t4_free_ofld_rxqs(adap, adap->sge.rdmaciqs, adap->sge.rdmaciq);
 
  /* clean up offload Tx queues */
  for (i = 0; i < ARRAY_SIZE(adap->sge.ofldtxq); i++) {
-- 
1.7.1