From 356b55b7fa4a318d8d82490ce4fcddbf1a19116c Mon Sep 17 00:00:00 2001
From: Sai Vemuri <svemuri@redhat.com>
Date: Wed, 12 Nov 2014 19:08:07 -0500
Subject: [ethernet] cxgb4: Updated the LSO transfer length in CPL_TX_PKT_LSO for T5

Message-id: <1415819300-32670-7-git-send-email-svemuri@redhat.com>
Patchwork-id: 99862
O-Subject: [RHEL7.1 PATCH BZ 1163467 06/19] cxgb4/cxgb4vf: Updated the LSO transfer length in CPL_TX_PKT_LSO for T5
Bugzilla: 1163467
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>

Update the lso length for T5 adapter and fix PIDX_T5 macro

Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7207c0d1540b679993d1f0bb9c1ff8e068958c75)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/chelsio/cxgb4/sge.c b/drivers/net/ethernet/chelsio/cxgb4/sge.c
index a8aee36..409e20d 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/sge.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/sge.c
@@ -1125,7 +1125,10 @@ out_free: dev_kfree_skb_any(skb);
   lso->c.ipid_ofst = htons(0);
   lso->c.mss = htons(ssi->gso_size);
   lso->c.seqno_offset = htonl(0);
-  lso->c.len = htonl(skb->len);
+  if (is_t4(adap->params.chip))
+   lso->c.len = htonl(skb->len);
+  else
+   lso->c.len = htonl(LSO_T5_XFER_SIZE(skb->len));
   cpl = (void *)(lso + 1);
   cntrl = TXPKT_CSUM_TYPE(v6 ? TX_CSUM_TCPIP6 : TX_CSUM_TCPIP) |
    TXPKT_IPHDR_LEN(l3hdr_len) |
diff --git a/drivers/net/ethernet/chelsio/cxgb4/t4_msg.h b/drivers/net/ethernet/chelsio/cxgb4/t4_msg.h
index 8132ae2..0233ae6 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/t4_msg.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4_msg.h
@@ -527,6 +527,7 @@ struct cpl_tx_pkt_lso_core {
 #define LSO_LAST_SLICE    (1 << 22)
 #define LSO_FIRST_SLICE   (1 << 23)
 #define LSO_OPCODE(x)     ((x) << 24)
+#define LSO_T5_XFER_SIZE(x) ((x) << 0)
  __be16 ipid_ofst;
  __be16 mss;
  __be32 seqno_offset;
diff --git a/drivers/net/ethernet/chelsio/cxgb4/t4_regs.h b/drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
index 93f6f1c..7b0c96f 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
@@ -72,9 +72,8 @@
 #define  PIDX_MASK   0x00003fffU
 #define  PIDX_SHIFT  0
 #define  PIDX(x)     ((x) << PIDX_SHIFT)
-#define  S_PIDX_T5   0
-#define  M_PIDX_T5   0x1fffU
-#define  PIDX_T5(x)  (((x) >> S_PIDX_T5) & M_PIDX_T5)
+#define  PIDX_SHIFT_T5   0
+#define  PIDX_T5(x)  ((x) << PIDX_SHIFT_T5)
 
 
 #define SGE_TIMERREGS 6
diff --git a/drivers/net/ethernet/chelsio/cxgb4vf/sge.c b/drivers/net/ethernet/chelsio/cxgb4vf/sge.c
index 2360546..142b99c 100644
--- a/drivers/net/ethernet/chelsio/cxgb4vf/sge.c
+++ b/drivers/net/ethernet/chelsio/cxgb4vf/sge.c
@@ -1208,7 +1208,10 @@ int t4vf_eth_xmit(struct sk_buff *skb, struct net_device *dev)
   lso->ipid_ofst = cpu_to_be16(0);
   lso->mss = cpu_to_be16(ssi->gso_size);
   lso->seqno_offset = cpu_to_be32(0);
-  lso->len = cpu_to_be32(skb->len);
+  if (is_t4(adapter->params.chip))
+   lso->len = cpu_to_be32(skb->len);
+  else
+   lso->len = cpu_to_be32(LSO_T5_XFER_SIZE(skb->len));
 
   /*
    * Set up TX Packet CPL pointer, control word and perform
-- 
1.7.1