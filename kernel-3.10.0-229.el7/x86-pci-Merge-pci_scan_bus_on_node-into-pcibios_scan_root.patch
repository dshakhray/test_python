From facfef1ec96af67df802e87d8d0bc72af5daa3a8 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Wed, 6 Aug 2014 03:44:44 -0400
Subject: [x86] pci: Merge pci_scan_bus_on_node() into pcibios_scan_root()

Message-id: <20140806034444.1438.39844.stgit@gir.stowe>
Patchwork-id: 87415
O-Subject: [RHEL7.1 PATCH 06/69] x86/PCI: Merge pci_scan_bus_on_node() into pcibios_scan_root()
Bugzilla: 1110896
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110896
Upstream Status: 289a24a699ff808a9ebfaaf4c2759cb86932f664

commit 289a24a699ff808a9ebfaaf4c2759cb86932f664
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Fri Jan 24 11:52:25 2014 -0700

    x86/PCI: Merge pci_scan_bus_on_node() into pcibios_scan_root()

    pci_scan_bus_on_node() is only called by pcibios_scan_root().
    This merges pci_scan_bus_on_node() into pcibios_scan_root() and removes
    pci_scan_bus_on_node().

    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/include/asm/pci.h b/arch/x86/include/asm/pci.h
index 75be9c5..39c62a5 100644
--- a/arch/x86/include/asm/pci.h
+++ b/arch/x86/include/asm/pci.h
@@ -26,10 +26,6 @@ extern int pci_routeirq;
 extern int noioapicquirk;
 extern int noioapicreroute;
 
-/* scan a bus after allocating a pci_sysdata for it */
-extern struct pci_bus *pci_scan_bus_on_node(int busno, struct pci_ops *ops,
-         int node);
-
 #ifdef CONFIG_PCI
 
 #ifdef CONFIG_PCI_DOMAINS
diff --git a/arch/x86/pci/common.c b/arch/x86/pci/common.c
index f530c7e..52ad00c 100644
--- a/arch/x86/pci/common.c
+++ b/arch/x86/pci/common.c
@@ -458,8 +458,25 @@ void __init dmi_check_pciprobe(void)
 
 struct pci_bus *pcibios_scan_root(int busnum)
 {
- return pci_scan_bus_on_node(busnum, &pci_root_ops,
-     get_mp_bus_to_node(busnum));
+ struct pci_bus *bus;
+ struct pci_sysdata *sd;
+ LIST_HEAD(resources);
+
+ sd = kzalloc(sizeof(*sd), GFP_KERNEL);
+ if (!sd) {
+  printk(KERN_ERR "PCI: OOM, skipping PCI bus %02x\n", busnum);
+  return NULL;
+ }
+ sd->node = get_mp_bus_to_node(busnum);
+ x86_pci_root_bus_resources(busnum, &resources);
+ printk(KERN_DEBUG "PCI: Probing PCI hardware (bus %02x)\n", busnum);
+ bus = pci_scan_root_bus(NULL, busnum, &pci_root_ops, sd, &resources);
+ if (!bus) {
+  pci_free_resource_list(&resources);
+  kfree(sd);
+ }
+
+ return bus;
 }
 
 void __init pcibios_set_cache_line_size(void)
@@ -669,34 +686,6 @@ int pci_ext_cfg_avail(void)
   return 0;
 }
 
-struct pci_bus *pci_scan_bus_on_node(int busno, struct pci_ops *ops, int node)
-{
- LIST_HEAD(resources);
- struct pci_bus *bus = NULL;
- struct pci_sysdata *sd;
-
- /*
-  * Allocate per-root-bus (not per bus) arch-specific data.
-  * TODO: leak; this memory is never freed.
-  * It's arguable whether it's worth the trouble to care.
-  */
- sd = kzalloc(sizeof(*sd), GFP_KERNEL);
- if (!sd) {
-  printk(KERN_ERR "PCI: OOM, skipping PCI bus %02x\n", busno);
-  return NULL;
- }
- sd->node = node;
- x86_pci_root_bus_resources(busno, &resources);
- printk(KERN_DEBUG "PCI: Probing PCI hardware (bus %02x)\n", busno);
- bus = pci_scan_root_bus(NULL, busno, ops, sd, &resources);
- if (!bus) {
-  pci_free_resource_list(&resources);
-  kfree(sd);
- }
-
- return bus;
-}
-
 /*
  * NUMA info for PCI busses
  *
-- 
1.7.1