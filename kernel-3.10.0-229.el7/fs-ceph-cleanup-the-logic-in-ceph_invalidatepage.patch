From 1240b3e06c9e9ef4c1c53b348bd7e3bca479ed92 Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:22:33 -0400
Subject: [fs] ceph: cleanup the logic in ceph_invalidatepage
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-47-git-send-email-sweil@redhat.com>
Patchwork-id: 89554
O-Subject: [PATCH 046/303] ceph: cleanup the logic in ceph_invalidatepage
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Milosz Tanski <milosz@adfin.com>

The invalidatepage code bails if it encounters a non-zero page offset. The
current logic that does is non-obvious with multiple if statements.

This should be logically and functionally equivalent.

Signed-off-by: Milosz Tanski <milosz@adfin.com>
Reviewed-by: Sage Weil <sage@inktank.com>
(cherry picked from commit b150f5c1c759d551da9146435d3dc9df5f7e15ef)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

Conflicts:

 fs/ceph/addr.c
---

diff --git a/fs/ceph/addr.c b/fs/ceph/addr.c
index f1d6c60..429720f 100644
--- a/fs/ceph/addr.c
+++ b/fs/ceph/addr.c
@@ -150,6 +150,13 @@ static void ceph_invalidatepage(struct page *page, unsigned long offset)
  struct ceph_snap_context *snapc = page_snap_context(page);
 
  inode = page->mapping->host;
+ ci = ceph_inode(inode);
+
+ if (offset != 0) {
+  dout("%p invalidatepage %p idx %lu partial dirty page %lu\n",
+       inode, page, page->index, offset);
+  return;
+ }
 
  /*
   * We can get non-dirty pages here due to races between
@@ -159,21 +166,15 @@ static void ceph_invalidatepage(struct page *page, unsigned long offset)
  if (!PageDirty(page))
   pr_err("%p invalidatepage %p page not dirty\n", inode, page);
 
- if (offset == 0)
-  ClearPageChecked(page);
+ ClearPageChecked(page);
 
- ci = ceph_inode(inode);
- if (offset == 0) {
-  dout("%p invalidatepage %p idx %lu full dirty page %lu\n",
-       inode, page, page->index, offset);
-  ceph_put_wrbuffer_cap_refs(ci, 1, snapc);
-  ceph_put_snap_context(snapc);
-  page->private = 0;
-  ClearPagePrivate(page);
- } else {
-  dout("%p invalidatepage %p idx %lu partial dirty page\n",
-       inode, page, page->index);
- }
+ dout("%p invalidatepage %p idx %lu full dirty page\n",
+      inode, page, page->index);
+
+ ceph_put_wrbuffer_cap_refs(ci, 1, snapc);
+ ceph_put_snap_context(snapc);
+ page->private = 0;
+ ClearPagePrivate(page);
 }
 
 /* just a sanity check */
-- 
1.7.1