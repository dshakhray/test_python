From 244d09f6b0c4faa08d34ef48be851d67cb914844 Mon Sep 17 00:00:00 2001
From: David Gibson <dgibson@redhat.com>
Date: Mon, 15 Sep 2014 07:12:46 -0400
Subject: [virt] kvm/ppc/book3s: rename lookup_linux_pte() to lookup_linux_pte_and_update()

Message-id: <1410765214-16377-31-git-send-email-dgibson@redhat.com>
Patchwork-id: 94749
O-Subject: [PATCH 30/78] kvm: book3s: rename lookup_linux_pte() to lookup_linux_pte_and_update()
Bugzilla: 1123145 1123133 1123367
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1123145

Prerequisite to backport 1ad9f23873a4ee837643be5a29c05e405ec54e18

Signed-off-by: David Gibson <dgibson@redhat.com>

commit 7c85e6b39ce880869929958bd7b95f72db03a9af
Author: Bharat Bhushan <r65777@freescale.com>
Date:   Fri Nov 15 11:01:14 2013 +0530

    kvm: book3s: rename lookup_linux_pte() to lookup_linux_pte_and_update()

    lookup_linux_pte() is doing more than lookup, updating the pte,
    so for clarity it is renamed to lookup_linux_pte_and_update()

    Signed-off-by: Bharat Bhushan <bharat.bhushan@freescale.com>
    Reviewed-by: Scott Wood <scottwood@freescale.com>
    Signed-off-by: Alexander Graf <agraf@suse.de>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kvm/book3s_hv_rm_mmu.c b/arch/powerpc/kvm/book3s_hv_rm_mmu.c
index ff56885..7bb02dd 100644
--- a/arch/powerpc/kvm/book3s_hv_rm_mmu.c
+++ b/arch/powerpc/kvm/book3s_hv_rm_mmu.c
@@ -135,7 +135,7 @@ static void remove_revmap_chain(struct kvm *kvm, long pte_index,
  unlock_rmap(rmap);
 }
 
-static pte_t lookup_linux_pte(pgd_t *pgdir, unsigned long hva,
+static pte_t lookup_linux_pte_and_update(pgd_t *pgdir, unsigned long hva,
          int writing, unsigned long *pte_sizep)
 {
  pte_t *ptep;
@@ -233,7 +233,8 @@ long kvmppc_do_h_enter(struct kvm *kvm, unsigned long flags,
 
   /* Look up the Linux PTE for the backing page */
   pte_size = psize;
-  pte = lookup_linux_pte(pgdir, hva, writing, &pte_size);
+  pte = lookup_linux_pte_and_update(pgdir, hva, writing,
+        &pte_size);
   if (pte_present(pte)) {
    if (writing && !pte_write(pte))
     /* make the actual HPTE be read-only */
@@ -673,7 +674,8 @@ long kvmppc_h_protect(struct kvm_vcpu *vcpu, unsigned long flags,
    memslot = __gfn_to_memslot(kvm_memslots_raw(kvm), gfn);
    if (memslot) {
     hva = __gfn_to_hva_memslot(memslot, gfn);
-    pte = lookup_linux_pte(pgdir, hva, 1, &psize);
+    pte = lookup_linux_pte_and_update(pgdir, hva,
+          1, &psize);
     if (pte_present(pte) && !pte_write(pte))
      r = hpte_make_readonly(r);
    }
-- 
1.7.1