From bff86992ebb89943dc41fcee6f4302c43aeede36 Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:38:56 -0400
Subject: [virt] kvm: remove redundant registration of BSP's hv_clock area

Message-id: <1406040016-3289-142-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86220
O-Subject: [RHEL7 PATCH v2 141/221] kvm: remove redundant registration of BSP's hv_clock area
Bugzilla: 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Fernando Luis Vazquez Cao <fernando_b1@lab.ntt.co.jp>

These days hv_clock allocation is memblock based (i.e. the percpu
allocator is not involved), which means that the physical address
of each of the per-cpu hv_clock areas is guaranteed to remain
unchanged through all its lifetime and we do not need to update
its location after CPU bring-up.

Signed-off-by: Fernando Luis Vazquez Cao <fernando@oss.ntt.co.jp>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 0d75de4a65d99ba042b050620d479ab74b1919d4)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kernel/kvm.c b/arch/x86/kernel/kvm.c
index f81cade..26769b4 100644
--- a/arch/x86/kernel/kvm.c
+++ b/arch/x86/kernel/kvm.c
@@ -417,7 +417,6 @@ void kvm_disable_steal_time(void)
 #ifdef CONFIG_SMP
 static void __init kvm_smp_prepare_boot_cpu(void)
 {
- WARN_ON(kvm_register_clock("primary cpu clock"));
  kvm_guest_cpu_init();
  native_smp_prepare_boot_cpu();
  kvm_spinlock_init();
diff --git a/arch/x86/kernel/kvmclock.c b/arch/x86/kernel/kvmclock.c
index e604109..d9156ce 100644
--- a/arch/x86/kernel/kvmclock.c
+++ b/arch/x86/kernel/kvmclock.c
@@ -242,7 +242,7 @@ void __init kvmclock_init(void)
  hv_clock = __va(mem);
  memset(hv_clock, 0, size);
 
- if (kvm_register_clock("boot clock")) {
+ if (kvm_register_clock("primary cpu clock")) {
   hv_clock = NULL;
   memblock_free(mem, size);
   return;
-- 
1.7.1