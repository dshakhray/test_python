From f01f03ca7457a261b658997fdac3baa15a128bcf Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:26:27 -0400
Subject: [net] libceph: drop osd ref when canceling con work
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-281-git-send-email-sweil@redhat.com>
Patchwork-id: 89597
O-Subject: [PATCH 280/303] libceph: drop osd ref when canceling con work
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Ilya Dryomov <ilya.dryomov@inktank.com>

queue_con() bumps osd ref count.  We should do the reverse when
canceling con work.

Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>
Reviewed-by: Alex Elder <elder@linaro.org>
(cherry picked from commit 37ab77ac29b5bdec029a66f6d6eb4756679c7e12)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ceph/messenger.c b/net/ceph/messenger.c
index dc6398c..7ca026f 100644
--- a/net/ceph/messenger.c
+++ b/net/ceph/messenger.c
@@ -174,6 +174,7 @@ static struct lock_class_key socket_class;
 #define SKIP_BUF_SIZE 1024
 
 static void queue_con(struct ceph_connection *con);
+static void cancel_con(struct ceph_connection *con);
 static void con_work(struct work_struct *);
 static void con_fault(struct ceph_connection *con);
 
@@ -680,7 +681,7 @@ void ceph_con_close(struct ceph_connection *con)
 
  reset_connection(con);
  con->peer_global_seq = 0;
- cancel_delayed_work(&con->work);
+ cancel_con(con);
  con_close_socket(con);
  mutex_unlock(&con->mutex);
 }
@@ -2672,19 +2673,16 @@ static int queue_con_delay(struct ceph_connection *con, unsigned long delay)
 {
  if (!con->ops->get(con)) {
   dout("%s %p ref count 0\n", __func__, con);
-
   return -ENOENT;
  }
 
  if (!queue_delayed_work(ceph_msgr_wq, &con->work, delay)) {
   dout("%s %p - already queued\n", __func__, con);
   con->ops->put(con);
-
   return -EBUSY;
  }
 
  dout("%s %p %lu\n", __func__, con, delay);
-
  return 0;
 }
 
@@ -2693,6 +2691,14 @@ static void queue_con(struct ceph_connection *con)
  (void) queue_con_delay(con, 0);
 }
 
+static void cancel_con(struct ceph_connection *con)
+{
+ if (cancel_delayed_work(&con->work)) {
+  dout("%s %p\n", __func__, con);
+  con->ops->put(con);
+ }
+}
+
 static bool con_sock_closed(struct ceph_connection *con)
 {
  if (!con_flag_test_and_clear(con, CON_FLAG_SOCK_CLOSED))
-- 
1.7.1