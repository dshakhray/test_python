From 1f0360adda900558b5aa13de99d0e639daa00f69 Mon Sep 17 00:00:00 2001
From: Ewan Milne <emilne@redhat.com>
Date: Tue, 20 Jan 2015 18:01:31 -0500
Subject: [scsi] Avoid crashing if device uses DIX but adapter does not support it

Message-id: <1421776891-3731-1-git-send-email-emilne@redhat.com>
Patchwork-id: 103210
O-Subject: [RHEL7.1 PATCH e-stor] scsi: Avoid crashing if device uses DIX but adapter does not support it
Bugzilla: 1093012
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Maurizio Lombardi <mlombard@redhat.com>
RH-Acked-by: Tomas Henzl <thenzl@redhat.com>

This can happen if a multipathed device uses DIX and another path is
added via an adapter that does not support it.  Multipath should not
allow this path to be added, but we should not depend upon that to avoid
crashing.

From upstream scsi-queue tree (scsi-for-3.19 branch) and
upstream linux-scsi tree (fixes branch).  Scheduled to be
pushed for 3.19
http://git.infradead.org/users/hch/scsi-queue.git/commit/91724c20613484555ba7e7b3d8549dac1e24f7a8
http://git.kernel.org/cgit/linux/kernel/git/jejb/scsi.git/commit/?id=91724c20613484555ba7e7b3d8549dac1e24f7a8

Tested: Tested by Ewan D. Milne using 2 copies of the scsi_debug module
 to load some devices with dix=1 and one without.  Without the
 fix this paniced every time, with the fix there is no panic.

upstream commit 91724c20613484555ba7e7b3d8549dac1e24f7a8
Author: Ewan D. Milne <emilne@redhat.com>
Date:   Thu Jan 15 10:02:12 2015 -0500

    scsi: Avoid crashing if device uses DIX but adapter does not support it

    This can happen if a multipathed device uses DIX and another path is
    added via an adapter that does not support it.  Multipath should not
    allow this path to be added, but we should not depend upon that to avoid
    crashing.

    Signed-off-by: Ewan D. Milne <emilne@redhat.com>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

Signed-off-by: Ewan D. Milne <emilne@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/scsi_lib.c b/drivers/scsi/scsi_lib.c
index ca09bb9..2eb9f58 100644
--- a/drivers/scsi/scsi_lib.c
+++ b/drivers/scsi/scsi_lib.c
@@ -984,7 +984,17 @@ int scsi_init_io(struct scsi_cmnd *cmd, gfp_t gfp_mask)
   struct scsi_data_buffer *prot_sdb = cmd->prot_sdb;
   int ivecs, count;
 
-  BUG_ON(prot_sdb == NULL);
+  if (prot_sdb == NULL) {
+   /*
+    * This can happen if someone (e.g. multipath)
+    * queues a command to a device on an adapter
+    * that does not support DIX.
+    */
+   WARN_ON_ONCE(1);
+   error = BLKPREP_KILL;
+   goto err_exit;
+  }
+
   ivecs = blk_rq_count_integrity_sg(rq->q, rq->bio);
 
   if (scsi_alloc_sgtable(prot_sdb, ivecs, gfp_mask)) {
-- 
1.7.1