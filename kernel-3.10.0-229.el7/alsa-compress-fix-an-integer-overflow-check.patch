From 9f565a093c10442816fdb5fed98efec4b738ea88 Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <jkysela@redhat.com>
Date: Wed, 3 Sep 2014 07:39:07 -0400
Subject: [alsa] compress: fix an integer overflow check

Message-id: <140972823573-392-patchset-jkysela@redhat.com>
Patchwork-id: 91088
O-Subject: [RHEL 7.1 PATCH 391/442] ALSA: compress: fix an integer overflow check
Bugzilla: 1112200
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>

I previously added an integer overflow check here but looking at it now,
it's still buggy.

The bug happens in snd_compr_allocate_buffer().  We multiply
".fragments" and ".fragment_size" and that doesn't overflow but then we
save it in an unsigned int so it truncates the high bits away and we
allocate a smaller than expected size.

Fixes: b35cc8225845 ('ALSA: compress_core: integer overflow in snd_compr_allocate_buffer()')
Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
Signed-off-by: Takashi Iwai <tiwai@suse.de>

(picked from kernel: 6217e5ede23285ddfee10d2e4ba0cc2d4c046205)
rhbz#1112200
Signed-off-by: Jaroslav Kysela <jkysela@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/sound/core/compress_offload.c b/sound/core/compress_offload.c
index 7403f34..89028fa 100644
--- a/sound/core/compress_offload.c
+++ b/sound/core/compress_offload.c
@@ -491,7 +491,7 @@ static int snd_compress_check_input(struct snd_compr_params *params)
 {
  /* first let's check the buffer parameter's */
  if (params->buffer.fragment_size == 0 ||
-   params->buffer.fragments > SIZE_MAX / params->buffer.fragment_size)
+     params->buffer.fragments > INT_MAX / params->buffer.fragment_size)
   return -EINVAL;
 
  /* now codec parameters */
-- 
1.7.1