From 706695ffa7ab055d8b65d0d1a5747e64359fedfa Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Wed, 17 Dec 2014 16:55:31 -0500
Subject: [fs] xfs: catch invalid negative blknos in _xfs_buf_find()

Message-id: <5491B583.1060409@redhat.com>
Patchwork-id: 102134
O-Subject: [RHEL7.1 PATCH] [fs] xfs: catch invalid negative blknos in _xfs_buf_find()
Bugzilla: 1164128
RH-Acked-by: Robert S Peterson <rpeterso@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Brian Foster <bfoster@redhat.com>

Bugzilla: 1164128
Upstream Status: Committed upstream
Build Info: Local (trivial)
Tested: Locally w/ xfstests and fuzzed image from bug

Backport of this upstream commit:

    commit db52d09ecbf85c54e263a9d1ebfb615a9b2b3ba6
    Author: Eric Sandeen <sandeen@redhat.com>
    Date:   Fri Nov 28 14:03:55 2014 +1100

    xfs: catch invalid negative blknos in _xfs_buf_find()

    Here blkno is a daddr_t, which is a __s64; it's possible to hold
    a value which is negative, and thus pass the (blkno >= eofs)
    test.  Then we try to do a xfs_perag_get() for a ridiculous
    agno via xfs_daddr_to_agno(), and bad things happen when that
    fails, and returns a null pag which is dereferenced shortly
    thereafter.

    Found via a user-supplied fuzzed image...

    Signed-off-by: Eric Sandeen <sandeen@redhat.com>
    Reviewed-by: Mark Tinguely <tinguely@sgi.com>
    Signed-off-by: Dave Chinner <david@fromorbit.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/xfs/xfs_buf.c b/fs/xfs/xfs_buf.c
index 1069c2b..d68039d 100644
--- a/fs/xfs/xfs_buf.c
+++ b/fs/xfs/xfs_buf.c
@@ -504,7 +504,7 @@ _xfs_buf_find(
   * have to check that the buffer falls within the filesystem bounds.
   */
  eofs = XFS_FSB_TO_BB(btp->bt_mount, btp->bt_mount->m_sb.sb_dblocks);
- if (blkno >= eofs) {
+ if (blkno < 0 || blkno >= eofs) {
   /*
    * XXX (dgc): we should really be returning EFSCORRUPTED here,
    * but none of the higher level infrastructure supports
-- 
1.7.1