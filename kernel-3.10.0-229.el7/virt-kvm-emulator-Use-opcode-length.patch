From a4fc99f3a92d121bdd51fb2548bad0ef7c09759c Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:38:16 -0400
Subject: [virt] kvm/emulator: Use opcode length

Message-id: <1406040016-3289-102-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86180
O-Subject: [RHEL7 PATCH v2 101/221] kvm, emulator: Use opcode length
Bugzilla: 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Borislav Petkov <bp@suse.de>

Add a field to the current emulation context which contains the
instruction opcode length. This will streamline handling of opcodes of
different length.

Signed-off-by: Borislav Petkov <bp@suse.de>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 1ce19dc16ce9136cccb6087e4a383ec9321980d9)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/include/asm/kvm_emulate.h b/arch/x86/include/asm/kvm_emulate.h
index 15f960c..92a176a 100644
--- a/arch/x86/include/asm/kvm_emulate.h
+++ b/arch/x86/include/asm/kvm_emulate.h
@@ -279,8 +279,12 @@ struct x86_emulate_ctxt {
  bool have_exception;
  struct x86_exception exception;
 
- /* decode cache */
- u8 twobyte;
+ /*
+  * decode cache
+  */
+
+ /* current opcode length in bytes */
+ u8 opcode_len;
  u8 b;
  u8 intercept;
  u8 lock_prefix;
diff --git a/arch/x86/kvm/emulate.c b/arch/x86/kvm/emulate.c
index ef99302..23a276e 100644
--- a/arch/x86/kvm/emulate.c
+++ b/arch/x86/kvm/emulate.c
@@ -4148,6 +4148,7 @@ int x86_decode_insn(struct x86_emulate_ctxt *ctxt, void *insn, int insn_len)
  ctxt->_eip = ctxt->eip;
  ctxt->fetch.start = ctxt->_eip;
  ctxt->fetch.end = ctxt->fetch.start + insn_len;
+ ctxt->opcode_len = 1;
  if (insn_len > 0)
   memcpy(ctxt->fetch.data, insn, insn_len);
 
@@ -4230,7 +4231,7 @@ done_prefixes:
  opcode = opcode_table[ctxt->b];
  /* Two-byte opcode? */
  if (ctxt->b == 0x0f) {
-  ctxt->twobyte = 1;
+  ctxt->opcode_len = 2;
   ctxt->b = insn_fetch(u8, ctxt);
   opcode = twobyte_table[ctxt->b];
  }
@@ -4562,7 +4563,7 @@ special_insn:
   goto writeback;
  }
 
- if (ctxt->twobyte)
+ if (ctxt->opcode_len == 2)
   goto twobyte_insn;
 
  switch (ctxt->b) {
diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index 7a2af08..a9c636b 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -4821,8 +4821,8 @@ static void inject_emulated_exception(struct kvm_vcpu *vcpu)
 
 static void init_decode_cache(struct x86_emulate_ctxt *ctxt)
 {
- memset(&ctxt->twobyte, 0,
-        (void *)&ctxt->_regs - (void *)&ctxt->twobyte);
+ memset(&ctxt->opcode_len, 0,
+        (void *)&ctxt->_regs - (void *)&ctxt->opcode_len);
 
  ctxt->fetch.start = 0;
  ctxt->fetch.end = 0;
-- 
1.7.1