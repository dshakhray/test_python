From 94b6aa6733761bda77f1f99828d94bd27144a92b Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:28:03 -0400
Subject: [tools] perf: Use perf_evlist__{first, last}, perf_evsel__next

Message-id: <1408462094-14194-315-git-send-email-jolsa@redhat.com>
Patchwork-id: 88275
O-Subject: [PATCH RHEL7.1 BZ1131394 314/325] perf tools: Use perf_evlist__{first, last}, perf_evsel__next
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 9a354cdc2f40344a177d369fb4987a8270dd94df
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date: Wed Nov 13 15:54:30 2013 -0300

description
===========
In a few remaining places where the equivalent open coded variant was
still being used.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/tests/parse-events.c b/tools/perf/tests/parse-events.c
index ef671cd..3cbd104 100644
--- a/tools/perf/tests/parse-events.c
+++ b/tools/perf/tests/parse-events.c
@@ -441,9 +441,8 @@ static int test__checkevent_pmu_name(struct perf_evlist *evlist)
 
 static int test__checkevent_pmu_events(struct perf_evlist *evlist)
 {
- struct perf_evsel *evsel;
+ struct perf_evsel *evsel = perf_evlist__first(evlist);
 
- evsel = list_entry(evlist->entries.next, struct perf_evsel, node);
  TEST_ASSERT_VAL("wrong number of entries", 1 == evlist->nr_entries);
  TEST_ASSERT_VAL("wrong type", PERF_TYPE_RAW == evsel->attr.type);
  TEST_ASSERT_VAL("wrong exclude_user",
diff --git a/tools/perf/ui/browsers/hists.c b/tools/perf/ui/browsers/hists.c
index 16848bb..089fd37 100644
--- a/tools/perf/ui/browsers/hists.c
+++ b/tools/perf/ui/browsers/hists.c
@@ -1847,13 +1847,13 @@ browse_hists:
    switch (key) {
    case K_TAB:
     if (pos->node.next == &evlist->entries)
-     pos = list_entry(evlist->entries.next, struct perf_evsel, node);
+     pos = perf_evlist__first(evlist);
     else
-     pos = list_entry(pos->node.next, struct perf_evsel, node);
+     pos = perf_evsel__next(pos);
     goto browse_hists;
    case K_UNTAB:
     if (pos->node.prev == &evlist->entries)
-     pos = list_entry(evlist->entries.prev, struct perf_evsel, node);
+     pos = perf_evlist__last(evlist);
     else
      pos = list_entry(pos->node.prev, struct perf_evsel, node);
     goto browse_hists;
@@ -1943,8 +1943,7 @@ int perf_evlist__tui_browse_hists(struct perf_evlist *evlist, const char *help,
 
 single_entry:
  if (nr_entries == 1) {
-  struct perf_evsel *first = list_entry(evlist->entries.next,
-            struct perf_evsel, node);
+  struct perf_evsel *first = perf_evlist__first(evlist);
   const char *ev_name = perf_evsel__name(first);
 
   return perf_evsel__hists_browse(first, nr_entries, help,
-- 
1.7.1