From 704d5fd91f5eb35a07977d12095498c4736f48b1 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Thu, 9 Oct 2014 21:00:05 -0400
Subject: [fs] xfs: Fix wrong error codes being returned

Message-id: <1412888441-4181-12-git-send-email-sandeen@redhat.com>
Patchwork-id: 97332
O-Subject: [RHEL7.1 PATCH 11/47] [fs] xfs: Fix wrong error codes being returned
Bugzilla: 1145837
RH-Acked-by: Brian Foster <bfoster@redhat.com>
RH-Acked-by: Dave Chinner <dchinner@redhat.com>

Bugzilla: 1145837
Upstream Status: Committed upstream
Build Info: https://brewweb.devel.redhat.com/taskinfo?taskID=8082426
Tested: locally using xfstests

Thanks,
-Eric

    commit b28fd7b5fe232d7643d7c0595938e998ceb58508
    Author: From: Tuomas Tynkkynen <tuomas.tynkkynen@iki.fi>
    Date:   Mon May 5 17:30:20 2014 +1000

    xfs: Fix wrong error codes being returned

    xfs_{compat_,}attrmulti_by_handle could return an errno with incorrect
    sign in some cases. While at it, make sure ENOMEM is returned instead of
    E2BIG if kmalloc fails.

    Signed-off-by: Tuomas Tynkkynen <tuomas.tynkkynen@iki.fi>
    Reviewed-by: Dave Chinner <dchinner@redhat.com>
    Signed-off-by: Dave Chinner <david@fromorbit.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/xfs/xfs_ioctl.c b/fs/xfs/xfs_ioctl.c
index a995a4f..4d1a479 100644
--- a/fs/xfs/xfs_ioctl.c
+++ b/fs/xfs/xfs_ioctl.c
@@ -569,10 +569,11 @@ xfs_attrmulti_by_handle(
 
  ops = memdup_user(am_hreq.ops, size);
  if (IS_ERR(ops)) {
-  error = PTR_ERR(ops);
+  error = -PTR_ERR(ops);
   goto out_dput;
  }
 
+ error = ENOMEM;
  attr_name = kmalloc(MAXNAMELEN, GFP_KERNEL);
  if (!attr_name)
   goto out_kfree_ops;
@@ -582,7 +583,7 @@ xfs_attrmulti_by_handle(
   ops[i].am_error = strncpy_from_user((char *)attr_name,
     ops[i].am_attrname, MAXNAMELEN);
   if (ops[i].am_error == 0 || ops[i].am_error == MAXNAMELEN)
-   error = -ERANGE;
+   error = ERANGE;
   if (ops[i].am_error < 0)
    break;
 
diff --git a/fs/xfs/xfs_ioctl32.c b/fs/xfs/xfs_ioctl32.c
index a7992f8..944d5ba 100644
--- a/fs/xfs/xfs_ioctl32.c
+++ b/fs/xfs/xfs_ioctl32.c
@@ -424,10 +424,11 @@ xfs_compat_attrmulti_by_handle(
 
  ops = memdup_user(compat_ptr(am_hreq.ops), size);
  if (IS_ERR(ops)) {
-  error = PTR_ERR(ops);
+  error = -PTR_ERR(ops);
   goto out_dput;
  }
 
+ error = ENOMEM;
  attr_name = kmalloc(MAXNAMELEN, GFP_KERNEL);
  if (!attr_name)
   goto out_kfree_ops;
@@ -438,7 +439,7 @@ xfs_compat_attrmulti_by_handle(
     compat_ptr(ops[i].am_attrname),
     MAXNAMELEN);
   if (ops[i].am_error == 0 || ops[i].am_error == MAXNAMELEN)
-   error = -ERANGE;
+   error = ERANGE;
   if (ops[i].am_error < 0)
    break;
 
-- 
1.7.1