From 2a49e391fd501c673d19e94a134fcee4d3f0269d Mon Sep 17 00:00:00 2001
From: Steve Best <sbest@redhat.com>
Date: Thu, 18 Sep 2014 16:51:26 -0400
Subject: [powercap] intel_rapl: add support for ValleyView Soc

Message-id: <20140918165126.28669.24459.sendpatchset@ibm-p7r2-01.lab.bos.redhat.com>
Patchwork-id: 96281
O-Subject: [PATCH RHEL7.1 BZ1142597 1/3] powercap / RAPL: add support for ValleyView Soc
Bugzilla: 1142597
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

RHBZ#:
------
https://bugzilla.redhat.com/show_bug.cgi?id=1142597

Description:
------------
This patch adds support for RAPL on Intel ValleyView based SoC
platforms, such as Baytrail.

Besides adding CPU ID, special energy unit encoding is handled
for ValleyView.

Signed-off-by: Jacob Pan <jacob.jun.pan@linux.intel.com>
Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

RHEL Version Found:
-------------------
7.0

Upstream Status:
----------------
http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=ed93b71492da3464b4798613aa8a99bed914251b

----------------
Steve Best

Proposed Patch:
---------------

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/powercap/intel_rapl.c b/drivers/powercap/intel_rapl.c
index 2a786c5..3c67683 100644
--- a/drivers/powercap/intel_rapl.c
+++ b/drivers/powercap/intel_rapl.c
@@ -833,6 +833,11 @@ static int rapl_write_data_raw(struct rapl_domain *rd,
  return 0;
 }
 
+static const struct x86_cpu_id energy_unit_quirk_ids[] = {
+ { X86_VENDOR_INTEL, 6, 0x37},/* VLV */
+ {}
+};
+
 static int rapl_check_unit(struct rapl_package *rp, int cpu)
 {
  u64 msr_val;
@@ -853,8 +858,11 @@ static int rapl_check_unit(struct rapl_package *rp, int cpu)
   * time unit: 1/time_unit_divisor Seconds
   */
  value = (msr_val & ENERGY_UNIT_MASK) >> ENERGY_UNIT_OFFSET;
- rp->energy_unit_divisor = 1 << value;
-
+ /* some CPUs have different way to calculate energy unit */
+ if (x86_match_cpu(energy_unit_quirk_ids))
+  rp->energy_unit_divisor = 1000000 / (1 << value);
+ else
+  rp->energy_unit_divisor = 1 << value;
 
  value = (msr_val & POWER_UNIT_MASK) >> POWER_UNIT_OFFSET;
  rp->power_unit_divisor = 1 << value;
@@ -941,6 +949,7 @@ static void package_power_limit_irq_restore(int package_id)
 static const struct x86_cpu_id rapl_ids[] = {
  { X86_VENDOR_INTEL, 6, 0x2a},/* SNB */
  { X86_VENDOR_INTEL, 6, 0x2d},/* SNB EP */
+ { X86_VENDOR_INTEL, 6, 0x37},/* VLV */
  { X86_VENDOR_INTEL, 6, 0x3a},/* IVB */
  { X86_VENDOR_INTEL, 6, 0x45},/* HSW */
  /* TODO: Add more CPU IDs after testing */
-- 
1.7.1