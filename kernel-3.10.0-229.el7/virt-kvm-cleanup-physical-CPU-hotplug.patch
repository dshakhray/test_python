From d425e8dc327538cfcd6d953671a2f52c73aff73d Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:38:04 -0400
Subject: [virt] kvm: cleanup (physical) CPU hotplug

Message-id: <1406040016-3289-90-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86168
O-Subject: [RHEL7 PATCH v2 089/221] KVM: cleanup (physical) CPU hotplug
Bugzilla: 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Remove the useless argument, and do not do anything if there are no
VMs running at the time of the hotplug.

Cc: kvm@vger.kernel.org
Cc: gleb@redhat.com
Cc: jan.kiszka@siemens.com
Reviewed-by: Gleb Natapov <gleb@redhat.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 4fa92fb25ae5a2d79d872ab54df511c831b1f363)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index 24961c7..c8e1d5c 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -2659,10 +2659,11 @@ static void hardware_enable_nolock(void *junk)
  }
 }
 
-static void hardware_enable(void *junk)
+static void hardware_enable(void)
 {
  raw_spin_lock(&kvm_lock);
- hardware_enable_nolock(junk);
+ if (kvm_usage_count)
+  hardware_enable_nolock(NULL);
  raw_spin_unlock(&kvm_lock);
 }
 
@@ -2676,10 +2677,11 @@ static void hardware_disable_nolock(void *junk)
  kvm_arch_hardware_disable(NULL);
 }
 
-static void hardware_disable(void *junk)
+static void hardware_disable(void)
 {
  raw_spin_lock(&kvm_lock);
- hardware_disable_nolock(junk);
+ if (kvm_usage_count)
+  hardware_disable_nolock(NULL);
  raw_spin_unlock(&kvm_lock);
 }
 
@@ -2744,20 +2746,17 @@ static int kvm_cpu_hotplug(struct notifier_block *notifier, unsigned long val,
 {
  int cpu = (long)v;
 
- if (!kvm_usage_count)
-  return NOTIFY_OK;
-
  val &= ~CPU_TASKS_FROZEN;
  switch (val) {
  case CPU_DYING:
   printk(KERN_INFO "kvm: disabling virtualization on CPU%d\n",
          cpu);
-  hardware_disable(NULL);
+  hardware_disable();
   break;
  case CPU_STARTING:
   printk(KERN_INFO "kvm: enabling virtualization on CPU%d\n",
          cpu);
-  hardware_enable(NULL);
+  hardware_enable();
   break;
  }
  return NOTIFY_OK;
-- 
1.7.1