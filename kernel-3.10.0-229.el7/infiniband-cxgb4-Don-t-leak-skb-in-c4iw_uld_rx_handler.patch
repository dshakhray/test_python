From 055419e8af34ec3c16ec92cf97b1340750de9da1 Mon Sep 17 00:00:00 2001
From: Sai Vemuri <svemuri@redhat.com>
Date: Thu, 11 Sep 2014 22:42:51 -0400
Subject: [infiniband] cxgb4: Don't leak skb in c4iw_uld_rx_handler()

Message-id: <1410475447-94392-33-git-send-email-svemuri@redhat.com>
Patchwork-id: 93833
O-Subject: [RHEL7.1 PATCH BZ 1124947 032/108] RDMA/cxgb4: Don't leak skb in c4iw_uld_rx_handler()
Bugzilla: 1124947
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Signed-off-by: Steve Wise <swise@opengridcomputing.com>
Signed-off-by: Roland Dreier <roland@purestorage.com>
(cherry picked from commit dbb084cc5f52152f53b5fd22fa76b9bf69904594)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/infiniband/hw/cxgb4/device.c b/drivers/infiniband/hw/cxgb4/device.c
index ba7335f..9489a38 100644
--- a/drivers/infiniband/hw/cxgb4/device.c
+++ b/drivers/infiniband/hw/cxgb4/device.c
@@ -898,11 +898,13 @@ static int c4iw_uld_rx_handler(void *handle, const __be64 *rsp,
  }
 
  opcode = *(u8 *)rsp;
- if (c4iw_handlers[opcode])
+ if (c4iw_handlers[opcode]) {
   c4iw_handlers[opcode](dev, skb);
- else
+ } else {
   pr_info("%s no handler opcode 0x%x...\n", __func__,
          opcode);
+  kfree_skb(skb);
+ }
 
  return 0;
 nomem:
-- 
1.7.1