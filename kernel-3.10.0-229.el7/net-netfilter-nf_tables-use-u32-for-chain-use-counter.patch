From 45731d77d1f110495c365a63dbd54cf20ab06aca Mon Sep 17 00:00:00 2001
From: Marcelo Leitner <mleitner@redhat.com>
Date: Tue, 21 Oct 2014 16:18:52 -0400
Subject: [net] netfilter: nf_tables: use u32 for chain use counter

Message-id: <20141021161852.22888.79832.stgit@localhost.localdomain>
Patchwork-id: 97966
O-Subject: [RHEL7 net PATCH 069/124] netfilter: nf_tables: use u32 for chain use counter
Bugzilla: 1148041 1155088
RH-Acked-by: Florian Westphal <fwestpha@redhat.com>

Backport of upstream commit: a0a7379e16b6e4c229d082f24c7e3ef9e812ed46

 commit a0a7379e16b6e4c229d082f24c7e3ef9e812ed46
 Author: Pablo Neira Ayuso <pablo@netfilter.org>
 Date:   Tue Jun 10 10:53:01 2014 +0200

    netfilter: nf_tables: use u32 for chain use counter

    Since 4fefee5 ("netfilter: nf_tables: allow to delete several objects
    from a batch"), every new rule bumps the chain use counter. However,
    this is limited to 16 bits, which means that it will overrun after
    2^16 rules.

    Use a u32 chain counter and check for overflows (just like we do for
    table objects).

    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

Signed-off-by: Marcelo Ricardo Leitner <mleitner@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/net/netfilter/nf_tables.h b/include/net/netfilter/nf_tables.h
index 7ee6ce6..713b0b8 100644
--- a/include/net/netfilter/nf_tables.h
+++ b/include/net/netfilter/nf_tables.h
@@ -503,9 +503,9 @@ enum nft_chain_flags {
  * @net: net namespace that this chain belongs to
  * @table: table that this chain belongs to
  * @handle: chain handle
- * @flags: bitmask of enum nft_chain_flags
  * @use: number of jump references to this chain
  * @level: length of longest path to this chain
+ * @flags: bitmask of enum nft_chain_flags
  * @name: name of the chain
  */
 struct nft_chain {
@@ -514,9 +514,9 @@ struct nft_chain {
  struct net   *net;
  struct nft_table  *table;
  u64    handle;
- u8    flags;
- u16    use;
+ u32    use;
  u16    level;
+ u8    flags;
  char    name[NFT_CHAIN_MAXNAMELEN];
 };
 
diff --git a/net/netfilter/nf_tables_api.c b/net/netfilter/nf_tables_api.c
index ba37c10..5586426 100644
--- a/net/netfilter/nf_tables_api.c
+++ b/net/netfilter/nf_tables_api.c
@@ -1730,6 +1730,9 @@ static int nf_tables_newrule(struct sock *nlsk, struct sk_buff *skb,
   if (!create || nlh->nlmsg_flags & NLM_F_REPLACE)
    return -EINVAL;
   handle = nf_tables_alloc_handle(table);
+
+  if (chain->use == UINT_MAX)
+   return -EOVERFLOW;
  }
 
  if (nla[NFTA_RULE_POSITION]) {
-- 
1.7.1