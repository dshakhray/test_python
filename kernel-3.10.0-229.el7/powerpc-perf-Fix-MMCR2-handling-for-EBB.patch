From e46900b871a68bc5b8a3c89434d945f57e8f0ebf Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:13:52 -0400
Subject: [powerpc] perf: Fix MMCR2 handling for EBB

Message-id: <1410545655-205645-604-git-send-email-dzickus@redhat.com>
Patchwork-id: 94605
O-Subject: [RHEL7 PATCH 603/626] powerpc/perf: Fix MMCR2 handling for EBB
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 8903461c9bc56fcb041fb92d054e2529951770b6
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Wed Jul 23 17:20:04 2014 +1000

    powerpc/perf: Fix MMCR2 handling for EBB

    In the recent commit b50a6c584bb4 "Clear MMCR2 when enabling PMU", I
    screwed up the handling of MMCR2 for tasks using EBB.

    We must make sure we set MMCR2 *before* ebb_switch_in(), otherwise we
    overwrite the value of MMCR2 that userspace may have written. That
    potentially breaks a task that uses EBB and manually uses MMCR2 for
    event freezing.

    Fixes: b50a6c584bb4 ("powerpc/perf: Clear MMCR2 when enabling PMU")
    Cc: stable@vger.kernel.org
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/perf/core-book3s.c b/arch/powerpc/perf/core-book3s.c
index 6b0641c..fe52db2 100644
--- a/arch/powerpc/perf/core-book3s.c
+++ b/arch/powerpc/perf/core-book3s.c
@@ -1307,6 +1307,9 @@ static void power_pmu_enable(struct pmu *pmu)
  out_enable:
  pmao_restore_workaround(ebb);
 
+ if (ppmu->flags & PPMU_ARCH_207S)
+  mtspr(SPRN_MMCR2, 0);
+
  mmcr0 = ebb_switch_in(ebb, cpuhw->mmcr[0]);
 
  mb();
@@ -1315,9 +1318,6 @@ static void power_pmu_enable(struct pmu *pmu)
 
  write_mmcr0(cpuhw, mmcr0);
 
- if (ppmu->flags & PPMU_ARCH_207S)
-  mtspr(SPRN_MMCR2, 0);
-
  /*
   * Enable instruction sampling if necessary
   */
-- 
1.7.1