From ccedd3c9aaf53c4e5203ed0857a77fa3cb71e01c Mon Sep 17 00:00:00 2001
From: Vlad Yasevich <vyasevic@redhat.com>
Date: Wed, 10 Sep 2014 15:16:17 -0400
Subject: [net] bridge: Fix handling stacked vlan tags

Message-id: <1410362181-9327-5-git-send-email-vyasevic@redhat.com>
Patchwork-id: 93479
O-Subject: [RHEL7 PATCH 4/8] bridge: Fix handling stacked vlan tags
Bugzilla: 1139809
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: Jiri Benc <jbenc@redhat.com>
RH-Acked-by: Flavio Leitner <fbl@redhat.com>

Bugzilla: 1139809
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7936510

commit 99b192da9c99284ad3374132e56f66995cadc6b4
From: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
Date: Thu, 27 Mar 2014 21:46:56 +0900

    bridge: Fix handling stacked vlan tags

    If a bridge with vlan_filtering enabled receives frames with stacked
    vlan tags, i.e., they have two vlan tags, br_vlan_untag() strips not
    only the outer tag but also the inner tag.

    br_vlan_untag() is called only from br_handle_vlan(), and in this case,
    it is enough to set skb->vlan_tci to 0 here, because vlan_tci has already
    been set before calling br_handle_vlan().

    Signed-off-by: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
    Acked-by: Vlad Yasevich <vyasevic@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Vladislav Yasevich <vyasevic@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/bridge/br_vlan.c b/net/bridge/br_vlan.c
index 5fd1b27..bac6412 100644
--- a/net/bridge/br_vlan.c
+++ b/net/bridge/br_vlan.c
@@ -119,22 +119,6 @@ static void __vlan_flush(struct net_port_vlans *v)
  kfree_rcu(v, rcu);
 }
 
-/* Strip the tag from the packet.  Will return skb with tci set 0.  */
-static struct sk_buff *br_vlan_untag(struct sk_buff *skb)
-{
- if (skb->protocol != htons(ETH_P_8021Q)) {
-  skb->vlan_tci = 0;
-  return skb;
- }
-
- skb->vlan_tci = 0;
- skb = vlan_untag(skb);
- if (skb)
-  skb->vlan_tci = 0;
-
- return skb;
-}
-
 struct sk_buff *br_handle_vlan(struct net_bridge *br,
           const struct net_port_vlans *pv,
           struct sk_buff *skb)
@@ -150,7 +134,7 @@ struct sk_buff *br_handle_vlan(struct net_bridge *br,
   */
  br_vlan_get_tag(skb, &vid);
  if (test_bit(vid, pv->untagged_bitmap))
-  skb = br_vlan_untag(skb);
+  skb->vlan_tci = 0;
 
 out:
  return skb;
-- 
1.7.1