From bf07897e8a4cf7207de767feb5d3f76669bc497f Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Mon, 23 Jun 2014 21:49:54 -0400
Subject: [fs] nfsd: simplify saved/current fh uses in nfsd4_proc_compound

Message-id: <1403560314-32525-53-git-send-email-bfields@redhat.com>
Patchwork-id: 84586
O-Subject: [Patch RHEL7 052/172] NFSD: simplify saved/current fh uses in nfsd4_proc_compound
Bugzilla: 1111719
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Kinglong Mee <kinglongmee@gmail.com>

Signed-off-by: Kinglong Mee <kinglongmee@gmail.com>
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: 4daeed25aded7dd3febaeaf887f0364b5d05899b
Bugzilla: 1111719
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4proc.c b/fs/nfsd/nfs4proc.c
index e47c036..0b23dea 100644
--- a/fs/nfsd/nfs4proc.c
+++ b/fs/nfsd/nfs4proc.c
@@ -1272,6 +1272,8 @@ nfsd4_proc_compound(struct svc_rqst *rqstp,
  struct nfsd4_op *op;
  struct nfsd4_operation *opdesc;
  struct nfsd4_compound_state *cstate = &resp->cstate;
+ struct svc_fh *current_fh = &cstate->current_fh;
+ struct svc_fh *save_fh = &cstate->save_fh;
  int  slack_bytes;
  u32  plen = 0;
  __be32  status;
@@ -1287,11 +1289,11 @@ nfsd4_proc_compound(struct svc_rqst *rqstp,
  resp->tag = args->tag;
  resp->opcnt = 0;
  resp->rqstp = rqstp;
- resp->cstate.minorversion = args->minorversion;
- resp->cstate.replay_owner = NULL;
- resp->cstate.session = NULL;
- fh_init(&resp->cstate.current_fh, NFS4_FHSIZE);
- fh_init(&resp->cstate.save_fh, NFS4_FHSIZE);
+ cstate->minorversion = args->minorversion;
+ cstate->replay_owner = NULL;
+ cstate->session = NULL;
+ fh_init(current_fh, NFS4_FHSIZE);
+ fh_init(save_fh, NFS4_FHSIZE);
  /*
   * Don't use the deferral mechanism for NFSv4; compounds make it
   * too hard to avoid non-idempotency problems.
@@ -1344,12 +1346,12 @@ nfsd4_proc_compound(struct svc_rqst *rqstp,
 
   opdesc = OPDESC(op);
 
-  if (!cstate->current_fh.fh_dentry) {
+  if (!current_fh->fh_dentry) {
    if (!(opdesc->op_flags & ALLOWED_WITHOUT_FH)) {
     op->status = nfserr_nofilehandle;
     goto encode_op;
    }
-  } else if (cstate->current_fh.fh_export->ex_fslocs.migrated &&
+  } else if (current_fh->fh_export->ex_fslocs.migrated &&
      !(opdesc->op_flags & ALLOWED_ON_ABSENT_FS)) {
    op->status = nfserr_moved;
    goto encode_op;
@@ -1382,12 +1384,12 @@ nfsd4_proc_compound(struct svc_rqst *rqstp,
     clear_current_stateid(cstate);
 
    if (need_wrongsec_check(rqstp))
-    op->status = check_nfsd_access(cstate->current_fh.fh_export, rqstp);
+    op->status = check_nfsd_access(current_fh->fh_export, rqstp);
   }
 
 encode_op:
   /* Only from SEQUENCE */
-  if (resp->cstate.status == nfserr_replay_cache) {
+  if (cstate->status == nfserr_replay_cache) {
    dprintk("%s NFS4.1 replay from cache\n", __func__);
    status = op->status;
    goto out;
@@ -1416,10 +1418,10 @@ encode_op:
   nfsd4_increment_op_stats(op->opnum);
  }
 
- resp->cstate.status = status;
- fh_put(&resp->cstate.current_fh);
- fh_put(&resp->cstate.save_fh);
- BUG_ON(resp->cstate.replay_owner);
+ cstate->status = status;
+ fh_put(current_fh);
+ fh_put(save_fh);
+ BUG_ON(cstate->replay_owner);
 out:
  /* Reset deferral mechanism for RPC deferrals */
  rqstp->rq_usedeferral = 1;
-- 
1.7.1