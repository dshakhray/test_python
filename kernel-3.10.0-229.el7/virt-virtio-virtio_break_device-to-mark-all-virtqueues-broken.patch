From c7c73880381e4da50e4c305acd59a2cdc975dfc3 Mon Sep 17 00:00:00 2001
From: Hendrik Brueckner <brueckner@redhat.com>
Date: Wed, 23 Jul 2014 10:50:08 -0400
Subject: [virt] virtio: virtio_break_device() to mark all virtqueues broken

Message-id: <1406112611-9862-21-git-send-email-brueckner@redhat.com>
Patchwork-id: 86335
O-Subject: [RHEL7.1 PATCH 20/23] [virt] virtio: virtio_break_device() to mark all virtqueues broken.
Bugzilla: 1088554
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Description
-----------
commit e2dcdfe95c0bd67e37db6057edd9c4ee1f1c7b17
Author: Rusty Russell <rusty@rustcorp.com.au>
Commit: Rusty Russell <rusty@rustcorp.com.au>

    virtio: virtio_break_device() to mark all virtqueues broken.

    Good for post-apocalyptic scenarios, like S/390 hotplug.

    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

Bugzilla
--------
BZ 1088554
https://bugzilla.redhat.com/show_bug.cgi?id=1088554

Upstream status of the patch
----------------------------
The patch is upstream as of kernel version v3.16-rc1
http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=e2dcdfe95c0bd67e37db6057edd9c4ee1f1c7b17

Brew
----
https://brewweb.devel.redhat.com/taskinfo?taskID=7725759

Test status
-----------
The patch has been tested and fixes the problem.
The fix has been verified by the IBM test department.

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/virtio/virtio_ring.c b/drivers/virtio/virtio_ring.c
index 2e6e9f3..7001351 100644
--- a/drivers/virtio/virtio_ring.c
+++ b/drivers/virtio/virtio_ring.c
@@ -896,4 +896,19 @@ bool virtqueue_is_broken(struct virtqueue *_vq)
 }
 EXPORT_SYMBOL_GPL(virtqueue_is_broken);
 
+/*
+ * This should prevent the device from being used, allowing drivers to
+ * recover.  You may need to grab appropriate locks to flush.
+ */
+void virtio_break_device(struct virtio_device *dev)
+{
+ struct virtqueue *_vq;
+
+ list_for_each_entry(_vq, &dev->vqs, list) {
+  struct vring_virtqueue *vq = to_vvq(_vq);
+  vq->broken = true;
+ }
+}
+EXPORT_SYMBOL_GPL(virtio_break_device);
+
 MODULE_LICENSE("GPL");
diff --git a/include/linux/virtio.h b/include/linux/virtio.h
index 3c73730..1947217 100644
--- a/include/linux/virtio.h
+++ b/include/linux/virtio.h
@@ -113,6 +113,8 @@ static inline struct virtio_device *dev_to_virtio(struct device *_dev)
 int register_virtio_device(struct virtio_device *dev);
 void unregister_virtio_device(struct virtio_device *dev);
 
+void virtio_break_device(struct virtio_device *dev);
+
 /**
  * virtio_driver - operations for a virtio I/O driver
  * @driver: underlying device driver (populate name and owner).
-- 
1.7.1