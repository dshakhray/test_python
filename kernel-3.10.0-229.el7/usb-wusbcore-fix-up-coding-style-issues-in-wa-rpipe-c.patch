From afd5f23817ee90d473600435c1fe56b8b849a712 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:03:25 -0400
Subject: [usb] wusbcore: fix up coding style issues in wa-rpipe.c

Message-id: <1410887463-20674-134-git-send-email-dzickus@redhat.com>
Patchwork-id: 95306
O-Subject: [RHEL7 PATCH 133/591] USB: wusbcore: fix up coding style issues in wa-rpipe.c
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 0c106d0aeb9585d1b6c36f6bcb3e7c2032c65048
Author: Rahul Bedarkar <rahulbedarkar89@gmail.com>
Date:   Sat Jan 4 14:12:24 2014 +0530

    USB: wusbcore: fix up coding style issues in wa-rpipe.c

    Signed-off-by: Rahul Bedarkar <rahulbedarkar89@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/wusbcore/wa-rpipe.c b/drivers/usb/wusbcore/wa-rpipe.c
index c601c74..4f80f7c 100644
--- a/drivers/usb/wusbcore/wa-rpipe.c
+++ b/drivers/usb/wusbcore/wa-rpipe.c
@@ -184,7 +184,7 @@ EXPORT_SYMBOL_GPL(rpipe_destroy);
 /*
  * Locate an idle rpipe, create an structure for it and return it
  *
- * @wa    is referenced and unlocked
+ * @wa   is referenced and unlocked
  * @crs   enum rpipe_attr, required endpoint characteristics
  *
  * The rpipe can be used only sequentially (not in parallel).
@@ -329,7 +329,8 @@ static int rpipe_aim(struct wa_rpipe *rpipe, struct wahc *wa,
  }
  unauth = usb_dev->wusb && !usb_dev->authenticated ? 0x80 : 0;
  __rpipe_reset(wa, le16_to_cpu(rpipe->descr.wRPipeIndex));
- atomic_set(&rpipe->segs_available, le16_to_cpu(rpipe->descr.wRequests));
+ atomic_set(&rpipe->segs_available,
+  le16_to_cpu(rpipe->descr.wRequests));
  /* FIXME: block allocation system; request with queuing and timeout */
  /* FIXME: compute so seg_size > ep->maxpktsize */
  rpipe->descr.wBlocks = cpu_to_le16(16);  /* given */
@@ -553,4 +554,3 @@ void rpipe_clear_feature_stalled(struct wahc *wa, struct usb_host_endpoint *ep)
  mutex_unlock(&wa->rpipe_mutex);
 }
 EXPORT_SYMBOL_GPL(rpipe_clear_feature_stalled);
-
-- 
1.7.1