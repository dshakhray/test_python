From 45f07542fbd917dfa49b9fff1d6e464b59a20514 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:02:28 -0400
Subject: [fs] btrfs: fix race when updating existing ref head

Message-id: <1407179109-13714-262-git-send-email-sandeen@redhat.com>
Patchwork-id: 87203
O-Subject: [RHEL7.1 PATCH 261/422] Btrfs: fix race when updating existing ref head
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Filipe Manana <fdmanana@gmail.com>

commit 21543baddcdbaa49db5ac8766ae564381e7c64d9
Author: Filipe Manana <fdmanana@gmail.com>
Date:   Fri Mar 14 20:55:01 2014 +0000

    Btrfs: fix race when updating existing ref head

    While we update an existing ref head's extent_op, we're not holding
    its spinlock, so while we're updating its extent_op contents (key,
    flags) we can have a task running __btrfs_run_delayed_refs() that
    holds the ref head's lock and sets its extent_op to NULL right after
    the task updating the ref head just checked its extent_op was not NULL.

    Signed-off-by: Filipe David Borba Manana <fdmanana@gmail.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/delayed-ref.c b/fs/btrfs/delayed-ref.c
index 2502ba5..3129964 100644
--- a/fs/btrfs/delayed-ref.c
+++ b/fs/btrfs/delayed-ref.c
@@ -495,6 +495,7 @@ update_existing_head_ref(struct btrfs_delayed_ref_node *existing,
  ref = btrfs_delayed_node_to_head(update);
  BUG_ON(existing_ref->is_data != ref->is_data);
 
+ spin_lock(&existing_ref->lock);
  if (ref->must_insert_reserved) {
   /* if the extent was freed and then
    * reallocated before the delayed ref
@@ -536,7 +537,6 @@ update_existing_head_ref(struct btrfs_delayed_ref_node *existing,
   * only need the lock for this case cause we could be processing it
   * currently, for refs we just added we know we're a-ok.
   */
- spin_lock(&existing_ref->lock);
  existing->ref_mod += update->ref_mod;
  spin_unlock(&existing_ref->lock);
 }
-- 
1.7.1