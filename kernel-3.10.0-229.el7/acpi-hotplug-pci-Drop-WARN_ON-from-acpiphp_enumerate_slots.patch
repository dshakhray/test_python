From b542c7be2cd9a95895b356476edea7fefc4d6657 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 10 Jul 2014 01:07:15 -0400
Subject: [acpi] hotplug/pci: Drop WARN_ON() from acpiphp_enumerate_slots()

Message-id: <20140710010715.22146.41040.stgit@gir.stowe>
Patchwork-id: 85626
O-Subject: [RHEL7.1 PATCH 087/105] ACPI / hotplug / PCI: Drop WARN_ON() from acpiphp_enumerate_slots()
Bugzilla: 1114228
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1114228
Upstream Status: fd3cfebec3199bb89acead236b1ab12c349ed4e0

commit fd3cfebec3199bb89acead236b1ab12c349ed4e0
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Sat Oct 12 01:49:48 2013 +0200

    ACPI / hotplug / PCI: Drop WARN_ON() from acpiphp_enumerate_slots()

    The WARN_ON() in acpiphp_enumerate_slots() triggers unnecessarily for
    devices whose bridges are going to be handled by native PCIe hotplug
    (pciehp) and the simplest way to prevent that from happening is to
    drop the WARN_ON().

    References: https://bugzilla.kernel.org/show_bug.cgi?id=62831
    Reported-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/hotplug/acpiphp_glue.c b/drivers/pci/hotplug/acpiphp_glue.c
index 7b5166d..9d066b8 100644
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@ -995,12 +995,13 @@ void acpiphp_enumerate_slots(struct pci_bus *bus)
 
   /*
    * This bridge should have been registered as a hotplug function
-   * under its parent, so the context has to be there.  If not, we
-   * are in deep goo.
+   * under its parent, so the context should be there, unless the
+   * parent is going to be handled by pciehp, in which case this
+   * bridge is not interesting to us either.
    */
   mutex_lock(&acpiphp_context_lock);
   context = acpiphp_get_context(handle);
-  if (WARN_ON(!context)) {
+  if (!context) {
    mutex_unlock(&acpiphp_context_lock);
    put_device(&bus->dev);
    pci_dev_put(bridge->pci_dev);
-- 
1.7.1