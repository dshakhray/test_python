From 55cc992a4cc8ece004317cbc4e31b9ce6426918d Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:51:49 -0400
Subject: [tools] perf/evlist: Close fds on destructor

Message-id: <1408953210-26343-222-git-send-email-jolsa@redhat.com>
Patchwork-id: 88874
O-Subject: [PATCH RHEL7.1 BZ1133083 221/322] perf evlist: Close fds on destructor
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit f26e1c7cb279051d83e0b671f48b30fe88c2c788
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date: Fri Jan 3 16:54:12 2014 -0300

description
===========
Since it is safe to call perf_evlist__close() multiple times, autoclose
it and remove the calls to the close from existing tools, reducing the
tooling boilerplate.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-record.c b/tools/perf/builtin-record.c
index 5149b41..b7f5e43 100644
--- a/tools/perf/builtin-record.c
+++ b/tools/perf/builtin-record.c
@@ -970,7 +970,6 @@ int cmd_record(int argc, const char **argv, const char *prefix __maybe_unused)
  err = __cmd_record(&record, argc, argv);
 
  perf_evlist__munmap(rec->evlist);
- perf_evlist__close(rec->evlist);
 out_symbol_exit:
  symbol__exit();
  return err;
diff --git a/tools/perf/builtin-trace.c b/tools/perf/builtin-trace.c
index f4ddd14..aa8a5f4 100644
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@ -1909,7 +1909,7 @@ static int trace__run(struct trace *trace, int argc, const char **argv)
  err = perf_evlist__mmap(evlist, trace->opts.mmap_pages, false);
  if (err < 0) {
   fprintf(trace->output, "Couldn't mmap the events: %s\n", strerror(errno));
-  goto out_close_evlist;
+  goto out_delete_evlist;
  }
 
  perf_evlist__enable(evlist);
@@ -1994,8 +1994,6 @@ out_disable:
  }
 
  perf_evlist__munmap(evlist);
-out_close_evlist:
- perf_evlist__close(evlist);
 out_delete_evlist:
  perf_evlist__delete(evlist);
 out:
diff --git a/tools/perf/tests/code-reading.c b/tools/perf/tests/code-reading.c
index ddbc775..2c0ce72 100644
--- a/tools/perf/tests/code-reading.c
+++ b/tools/perf/tests/code-reading.c
@@ -541,7 +541,6 @@ static int do_test_code_reading(bool try_kcore)
 out_err:
  if (evlist) {
   perf_evlist__munmap(evlist);
-  perf_evlist__close(evlist);
   perf_evlist__delete(evlist);
  } else {
   cpu_map__delete(cpus);
diff --git a/tools/perf/tests/keep-tracking.c b/tools/perf/tests/keep-tracking.c
index f9bc1fc..dd1c677 100644
--- a/tools/perf/tests/keep-tracking.c
+++ b/tools/perf/tests/keep-tracking.c
@@ -143,7 +143,6 @@ out_err:
  if (evlist) {
   perf_evlist__disable(evlist);
   perf_evlist__munmap(evlist);
-  perf_evlist__close(evlist);
   perf_evlist__delete(evlist);
  } else {
   cpu_map__delete(cpus);
diff --git a/tools/perf/tests/mmap-basic.c b/tools/perf/tests/mmap-basic.c
index bbb334d..111dd4a 100644
--- a/tools/perf/tests/mmap-basic.c
+++ b/tools/perf/tests/mmap-basic.c
@@ -68,7 +68,7 @@ int test__basic_mmap(void)
   evsels[i] = perf_evsel__newtp("syscalls", name);
   if (evsels[i] == NULL) {
    pr_debug("perf_evsel__new\n");
-   goto out_free_evlist;
+   goto out_delete_evlist;
   }
 
   evsels[i]->attr.wakeup_events = 1;
@@ -80,7 +80,7 @@ int test__basic_mmap(void)
    pr_debug("failed to open counter: %s, "
      "tweak /proc/sys/kernel/perf_event_paranoid?\n",
      strerror(errno));
-   goto out_close_fd;
+   goto out_delete_evlist;
   }
 
   nr_events[i] = 0;
@@ -90,7 +90,7 @@ int test__basic_mmap(void)
  if (perf_evlist__mmap(evlist, 128, true) < 0) {
   pr_debug("failed to mmap events: %d (%s)\n", errno,
     strerror(errno));
-  goto out_close_fd;
+  goto out_delete_evlist;
  }
 
  for (i = 0; i < nsyscalls; ++i)
@@ -138,10 +138,7 @@ int test__basic_mmap(void)
 
 out_munmap:
  perf_evlist__munmap(evlist);
-out_close_fd:
- for (i = 0; i < nsyscalls; ++i)
-  perf_evsel__close_fd(evsels[i], 1, threads->nr);
-out_free_evlist:
+out_delete_evlist:
  perf_evlist__delete(evlist);
  cpus = NULL;
  threads = NULL;
diff --git a/tools/perf/tests/open-syscall-tp-fields.c b/tools/perf/tests/open-syscall-tp-fields.c
index 595b577..0a00638 100644
--- a/tools/perf/tests/open-syscall-tp-fields.c
+++ b/tools/perf/tests/open-syscall-tp-fields.c
@@ -54,7 +54,7 @@ int test__syscall_open_tp_fields(void)
  err = perf_evlist__mmap(evlist, UINT_MAX, false);
  if (err < 0) {
   pr_debug("perf_evlist__mmap: %s\n", strerror(errno));
-  goto out_close_evlist;
+  goto out_delete_evlist;
  }
 
  perf_evlist__enable(evlist);
@@ -112,8 +112,6 @@ out_ok:
  err = 0;
 out_munmap:
  perf_evlist__munmap(evlist);
-out_close_evlist:
- perf_evlist__close(evlist);
 out_delete_evlist:
  perf_evlist__delete(evlist);
 out:
diff --git a/tools/perf/tests/perf-record.c b/tools/perf/tests/perf-record.c
index 266da9d..682978e 100644
--- a/tools/perf/tests/perf-record.c
+++ b/tools/perf/tests/perf-record.c
@@ -132,7 +132,7 @@ int test__PERF_RECORD(void)
  err = perf_evlist__mmap(evlist, opts.mmap_pages, false);
  if (err < 0) {
   pr_debug("perf_evlist__mmap: %s\n", strerror(errno));
-  goto out_close_evlist;
+  goto out_delete_evlist;
  }
 
  /*
@@ -304,8 +304,6 @@ found_exit:
  }
 out_err:
  perf_evlist__munmap(evlist);
-out_close_evlist:
- perf_evlist__close(evlist);
 out_delete_evlist:
  perf_evlist__delete(evlist);
 out:
diff --git a/tools/perf/tests/perf-time-to-tsc.c b/tools/perf/tests/perf-time-to-tsc.c
index 97d08ff..3d50f2d 100644
--- a/tools/perf/tests/perf-time-to-tsc.c
+++ b/tools/perf/tests/perf-time-to-tsc.c
@@ -167,7 +167,6 @@ out_err:
  if (evlist) {
   perf_evlist__disable(evlist);
   perf_evlist__munmap(evlist);
-  perf_evlist__close(evlist);
   perf_evlist__delete(evlist);
  }
 
diff --git a/tools/perf/tests/sw-clock.c b/tools/perf/tests/sw-clock.c
index 266d381..b366f0e 100644
--- a/tools/perf/tests/sw-clock.c
+++ b/tools/perf/tests/sw-clock.c
@@ -70,7 +70,7 @@ static int __test__sw_clock_freq(enum perf_sw_ids clock_id)
  if (err < 0) {
   pr_debug("failed to mmap event: %d (%s)\n", errno,
     strerror(errno));
-  goto out_close_evlist;
+  goto out_delete_evlist;
  }
 
  perf_evlist__enable(evlist);
@@ -107,8 +107,6 @@ next_event:
 
 out_unmap_evlist:
  perf_evlist__munmap(evlist);
-out_close_evlist:
- perf_evlist__close(evlist);
 out_delete_evlist:
  perf_evlist__delete(evlist);
  return err;
diff --git a/tools/perf/tests/task-exit.c b/tools/perf/tests/task-exit.c
index fdeb2aa..5511a0a 100644
--- a/tools/perf/tests/task-exit.c
+++ b/tools/perf/tests/task-exit.c
@@ -89,7 +89,7 @@ int test__task_exit(void)
  if (perf_evlist__mmap(evlist, 128, true) < 0) {
   pr_debug("failed to mmap events: %d (%s)\n", errno,
     strerror(errno));
-  goto out_close_evlist;
+  goto out_delete_evlist;
  }
 
  perf_evlist__start_workload(evlist);
@@ -113,8 +113,6 @@ retry:
  }
 
  perf_evlist__munmap(evlist);
-out_close_evlist:
- perf_evlist__close(evlist);
 out_delete_evlist:
  perf_evlist__delete(evlist);
  return err;
diff --git a/tools/perf/util/evlist.c b/tools/perf/util/evlist.c
index 143eaf0..a083bdc 100644
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@ -107,6 +107,7 @@ void perf_evlist__exit(struct perf_evlist *evlist)
 
 void perf_evlist__delete(struct perf_evlist *evlist)
 {
+ perf_evlist__close(evlist);
  cpu_map__delete(evlist->cpus);
  thread_map__delete(evlist->threads);
  evlist->cpus = NULL;
-- 
1.7.1