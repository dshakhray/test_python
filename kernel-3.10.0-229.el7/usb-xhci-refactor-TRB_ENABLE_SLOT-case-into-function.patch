From 99291c65eb42aedc266eea063153d99af3113798 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:02:17 -0400
Subject: [usb] xhci: refactor TRB_ENABLE_SLOT case into function

Message-id: <1410887463-20674-66-git-send-email-dzickus@redhat.com>
Patchwork-id: 95578
O-Subject: [RHEL7 PATCH 065/591] xhci: refactor TRB_ENABLE_SLOT case into function
Bugzilla: 1032371
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1032371

commit b244b431f89e152dd4bf35d71786f1c0eb8cba7e
Author: Xenia Ragiadakou <burzalodowa@gmail.com>
Date:   Mon Sep 9 13:29:47 2013 +0300

    xhci: refactor TRB_ENABLE_SLOT case into function

    The function that handles xHCI command completion is much too long and
    there is need to be broken up into individual functions for each command
    completion to improve code readablity.
    This patch refactors the code in TRB_ENABLE_SLOT switch case in
    handle_cmd_completion() into a fuction named xhci_handle_cmd_enable_slot().

    Signed-off-by: Xenia Ragiadakou <burzalodowa@gmail.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/host/xhci-ring.c b/drivers/usb/host/xhci-ring.c
index e34f0c3..ea41118 100644
--- a/drivers/usb/host/xhci-ring.c
+++ b/drivers/usb/host/xhci-ring.c
@@ -1384,6 +1384,16 @@ static int handle_stopped_cmd_ring(struct xhci_hcd *xhci,
  return cur_trb_is_good;
 }
 
+static void xhci_handle_cmd_enable_slot(struct xhci_hcd *xhci, int slot_id,
+  u32 cmd_comp_code)
+{
+ if (cmd_comp_code == COMP_SUCCESS)
+  xhci->slot_id = slot_id;
+ else
+  xhci->slot_id = 0;
+ complete(&xhci->addr_dev);
+}
+
 static void handle_cmd_completion(struct xhci_hcd *xhci,
   struct xhci_event_cmd *event)
 {
@@ -1437,11 +1447,8 @@ static void handle_cmd_completion(struct xhci_hcd *xhci,
  switch (le32_to_cpu(xhci->cmd_ring->dequeue->generic.field[3])
   & TRB_TYPE_BITMASK) {
  case TRB_TYPE(TRB_ENABLE_SLOT):
-  if (GET_COMP_CODE(le32_to_cpu(event->status)) == COMP_SUCCESS)
-   xhci->slot_id = slot_id;
-  else
-   xhci->slot_id = 0;
-  complete(&xhci->addr_dev);
+  xhci_handle_cmd_enable_slot(xhci, slot_id,
+    GET_COMP_CODE(le32_to_cpu(event->status)));
   break;
  case TRB_TYPE(TRB_DISABLE_SLOT):
   if (xhci->devs[slot_id]) {
-- 
1.7.1