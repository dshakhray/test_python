From 568688a46bebd37d15683fe83b96376493d31eae Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:24:21 -0400
Subject: [cpufreq] intel_pstate: Set CPU number before accessing MSRs

Message-id: <1409235879-1283-168-git-send-email-prarit@redhat.com>
Patchwork-id: 89523
O-Subject: [RHEL7.1 PATCH BZ 1134639 167/185] intel_pstate: Set CPU number before accessing MSRs
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit 179e8471673ce0249cd4ecda796008f7757e5bad
Author: Vincent Minet <vincent@vincent-minet.net>
Date:   Sat Jul 5 01:51:33 2014 +0200

    intel_pstate: Set CPU number before accessing MSRs

    Ensure that cpu->cpu is set before writing MSR_IA32_PERF_CTL during CPU
    initialization. Otherwise only cpu0 has its P-state set and all other
    cores are left with their values unchanged.

    In most cases, this is not too serious because the P-states will be set
    correctly when the timer function is run.  But when the default governor
    is set to performance, the per-CPU current_pstate stays the same forever
    and no attempts are made to write the MSRs again.

    Signed-off-by: Vincent Minet <vincent@vincent-minet.net>
    Cc: All applicable <stable@vger.kernel.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
Cc: Tony Camuso <tcamuso@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/intel_pstate.c b/drivers/cpufreq/intel_pstate.c
index 127ead8..86631cb 100644
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@ -700,9 +700,8 @@ static int intel_pstate_init_cpu(unsigned int cpunum)
 
  cpu = all_cpu_data[cpunum];
 
- intel_pstate_get_cpu_pstates(cpu);
-
  cpu->cpu = cpunum;
+ intel_pstate_get_cpu_pstates(cpu);
 
  init_timer_deferrable(&cpu->timer);
  cpu->timer.function = intel_pstate_timer_func;
-- 
1.7.1