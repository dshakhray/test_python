From d1a2f2ea7269db52e1263b9752657cbf985c7444 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:23:20 -0400
Subject: [cpufreq] don't call cpufreq_update_policy() on CPU addition

Message-id: <1409235879-1283-107-git-send-email-prarit@redhat.com>
Patchwork-id: 89419
O-Subject: [RHEL7.1 PATCH BZ 1134639 106/185] cpufreq: don't call cpufreq_update_policy() on CPU addition
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit 1c0ca90207d61e4868043b5bbbbd7cc0bb1ac974
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Fri Feb 14 16:30:41 2014 +0530

    cpufreq: don't call cpufreq_update_policy() on CPU addition

    cpufreq_update_policy() is called from two places currently. From a
    workqueue handled queued from cpufreq_bp_resume() for boot CPU and
    from cpufreq_cpu_callback() whenever a CPU is added.

    The first one makes sure that boot CPU is running on the frequency
    present in policy->cpu. But we don't really need a call from
    cpufreq_cpu_callback(), because we always call cpufreq_driver->init()
    (which will set policy->cur correctly) whenever first CPU of any
    policy is added back. And so every policy structure is guaranteed to
    have the right frequency in policy->cur.

    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Reviewed-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/cpufreq.c b/drivers/cpufreq/cpufreq.c
index 9408351..f06ed2f 100644
--- a/drivers/cpufreq/cpufreq.c
+++ b/drivers/cpufreq/cpufreq.c
@@ -2185,7 +2185,6 @@ static int cpufreq_cpu_callback(struct notifier_block *nfb,
   switch (action & ~CPU_TASKS_FROZEN) {
   case CPU_ONLINE:
    __cpufreq_add_dev(dev, NULL, frozen);
-   cpufreq_update_policy(cpu);
    break;
 
   case CPU_DOWN_PREPARE:
-- 
1.7.1