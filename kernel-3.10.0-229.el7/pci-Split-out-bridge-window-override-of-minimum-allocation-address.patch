From d0515ff0650117984bfc22a00e35aa1405851b76 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Sat, 19 Jul 2014 04:27:08 -0400
Subject: [pci] Split out bridge window override of minimum allocation address

Message-id: <20140719042708.19438.45625.stgit@gir.stowe>
Patchwork-id: 86004
O-Subject: [RHEL7.1 PATCH 42/81] PCI: Split out bridge window override of minimum allocation address
Bugzilla: 1110895
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110895
Upstream Status: 36e097a8a29761e0e2c951c0390f1057df248a87

commit 36e097a8a29761e0e2c951c0390f1057df248a87
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Wed Dec 18 16:31:39 2013 -0700

    PCI: Split out bridge window override of minimum allocation address

    pci_bus_alloc_resource() avoids allocating space below the "min" supplied
    by the caller (usually PCIBIOS_MIN_IO or PCIBIOS_MIN_MEM).  This is to
    protect badly documented motherboard resources.  But if we're allocating
    space inside an already-configured PCI-PCI bridge window, we ignore "min".

    See 688d191821de ("pci: make bus resource start address override minimum IO
    address").

    This patch moves the check to make it more visible and simplify future
    patches.  No functional change.

    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/bus.c b/drivers/pci/bus.c
index a037d81..e22a4a6 100644
--- a/drivers/pci/bus.c
+++ b/drivers/pci/bus.c
@@ -147,11 +147,18 @@ pci_bus_alloc_resource(struct pci_bus *bus, struct resource *res,
       !(res->flags & IORESOURCE_PREFETCH))
    continue;
 
+  /*
+   * "min" is typically PCIBIOS_MIN_IO or PCIBIOS_MIN_MEM to
+   * protect badly documented motherboard resources, but if
+   * this is an already-configured bridge window, its start
+   * overrides "min".
+   */
+  if (r->start)
+   min = r->start;
+
   /* Ok, try it out.. */
-  ret = allocate_resource(r, res, size,
-     r->start ? : min,
-     max, align,
-     alignf, alignf_data);
+  ret = allocate_resource(r, res, size, min, max,
+     align, alignf, alignf_data);
   if (ret == 0)
    break;
  }
-- 
1.7.1