From e3a8b550b257c0110eea60eed7d5167badda924e Mon Sep 17 00:00:00 2001
From: Stefan Assmann <sassmann@redhat.com>
Date: Tue, 2 Sep 2014 11:36:15 -0400
Subject: [ethernet] i40e: Change MSIX to MSI-X

Message-id: <1409658042-22689-15-git-send-email-sassmann@redhat.com>
Patchwork-id: 90207
O-Subject: [RHEL7.1 PATCH 014/281] i40e: Change MSIX to MSI-X
Bugzilla: 1091126
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Catherine Sullivan <catherine.sullivan@intel.com>

Fix inconsistent use of MSIX and MSI-X in messages.

Change-ID: Iae9ffb42819677c34544719044ed77632e06147d
Signed-off-by: Catherine Sullivan <catherine.sullivan@intel.com>
Signed-off-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
Tested-by: Kavindya Deegala <kavindya.s.deegala@intel.com>
Signed-off-by: Aaron Brown <aaron.f.brown@intel.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Stefan Assmann <sassmann@redhat.com>
(cherry picked from commit 77fa28befce5319f19e486ef97c3c682201c0735)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/i40e/i40e_main.c b/drivers/net/ethernet/intel/i40e/i40e_main.c
index 5259a60..0d340d2 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_main.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_main.c
@@ -5925,7 +5925,7 @@ static int i40e_init_msix(struct i40e_pf *pf)
 
  } else if (vec == I40E_MIN_MSIX) {
   /* Adjust for minimal MSIX use */
-  dev_info(&pf->pdev->dev, "Features disabled, not enough MSIX vectors\n");
+  dev_info(&pf->pdev->dev, "Features disabled, not enough MSI-X vectors\n");
   pf->flags &= ~I40E_FLAG_VMDQ_ENABLED;
   pf->num_vmdq_vsis = 0;
   pf->num_vmdq_qps = 0;
@@ -6054,7 +6054,7 @@ static void i40e_init_interrupt_scheme(struct i40e_pf *pf)
 
  if (!(pf->flags & I40E_FLAG_MSIX_ENABLED) &&
      (pf->flags & I40E_FLAG_MSI_ENABLED)) {
-  dev_info(&pf->pdev->dev, "MSIX not available, trying MSI\n");
+  dev_info(&pf->pdev->dev, "MSI-X not available, trying MSI\n");
   err = pci_enable_msi(pf->pdev);
   if (err) {
    dev_info(&pf->pdev->dev, "MSI init failed - %d\n", err);
@@ -6063,7 +6063,7 @@ static void i40e_init_interrupt_scheme(struct i40e_pf *pf)
  }
 
  if (!(pf->flags & (I40E_FLAG_MSIX_ENABLED | I40E_FLAG_MSI_ENABLED)))
-  dev_info(&pf->pdev->dev, "MSIX and MSI not available, falling back to Legacy IRQ\n");
+  dev_info(&pf->pdev->dev, "MSI-X and MSI not available, falling back to Legacy IRQ\n");
 
  /* track first vector for misc interrupts */
  err = i40e_get_lump(pf, pf->irq_pile, 1, I40E_PILE_VALID_BIT-1);
@@ -6090,7 +6090,8 @@ static int i40e_setup_misc_vector(struct i40e_pf *pf)
       i40e_intr, 0, pf->misc_int_name, pf);
   if (err) {
    dev_info(&pf->pdev->dev,
-     "request_irq for msix_misc failed: %d\n", err);
+     "request_irq for %s failed: %d\n",
+     pf->misc_int_name, err);
    return -EFAULT;
   }
  }
-- 
1.7.1