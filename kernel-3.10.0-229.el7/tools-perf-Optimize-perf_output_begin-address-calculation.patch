From 37f922c6d651746051a489ce518ca04c035fe5e9 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:23:12 -0400
Subject: [tools] perf: Optimize perf_output_begin() -- address calculation

Message-id: <1408462094-14194-24-git-send-email-jolsa@redhat.com>
Patchwork-id: 88010
O-Subject: [PATCH RHEL7.1 BZ1131394 023/325] perf: Optimize perf_output_begin() -- address calculation
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 524feca5e9da9e5f9e5aa5d5613b1d762db9509e
Author: Peter Zijlstra <peterz@infradead.org>
Date: Thu Oct 31 17:36:25 2013 +0100

description
===========
Rewrite the handle address calculation code to be clearer.

Saves 8 bytes on x86_64-defconfig.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/kernel/events/ring_buffer.c b/kernel/events/ring_buffer.c
index e4d70f3..c52a32f 100644
--- a/kernel/events/ring_buffer.c
+++ b/kernel/events/ring_buffer.c
@@ -105,7 +105,7 @@ int perf_output_begin(struct perf_output_handle *handle,
 {
  struct ring_buffer *rb;
  unsigned long tail, offset, head;
- int have_lost;
+ int have_lost, page_shift;
  struct {
   struct perf_event_header header;
   u64    id;
@@ -159,12 +159,12 @@ int perf_output_begin(struct perf_output_handle *handle,
  if (unlikely(head - local_read(&rb->wakeup) > rb->watermark))
   local_add(rb->watermark, &rb->wakeup);
 
- handle->page = offset >> (PAGE_SHIFT + page_order(rb));
- handle->page &= rb->nr_pages - 1;
- handle->size = offset & ((PAGE_SIZE << page_order(rb)) - 1);
- handle->addr = rb->data_pages[handle->page];
- handle->addr += handle->size;
- handle->size = (PAGE_SIZE << page_order(rb)) - handle->size;
+ page_shift = PAGE_SHIFT + page_order(rb);
+
+ handle->page = (offset >> page_shift) & (rb->nr_pages - 1);
+ offset &= (1UL << page_shift) - 1;
+ handle->addr = rb->data_pages[handle->page] + offset;
+ handle->size = (1UL << page_shift) - offset;
 
  if (unlikely(have_lost)) {
   struct perf_sample_data sample_data;
-- 
1.7.1