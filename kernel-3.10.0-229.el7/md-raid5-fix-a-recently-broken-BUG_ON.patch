From 5d8993088b599a4babc7bedcf191b6dae3312dfe Mon Sep 17 00:00:00 2001
From: Jes Sorensen <Jes.Sorensen@redhat.com>
Date: Mon, 1 Sep 2014 09:25:44 -0400
Subject: [md] raid5: fix a recently broken BUG_ON()

Message-id: <1409563584-9000-43-git-send-email-Jes.Sorensen@redhat.com>
Patchwork-id: 89992
O-Subject: [RHEL7.1 PATCH 42/82] md/raid5: fix a recently broken BUG_ON().
Bugzilla: 1085530
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

From: NeilBrown <neilb@suse.de>

commit 6d183de4077191d1201283a9035ce57a9b05254d
    md/raid5: fix newly-broken locking in get_active_stripe.

simplified a BUG_ON, but removed too much so now it sometimes fires
when it shouldn't.

When the STRIPE_EXPANDING flag is set, the stripe_head might be on a
special list while multiple stripe_heads are collected, or it might
not be on any list, even a 'free' list when the refcount is zero.  As
long as STRIPE_EXPANDING is set, it will be found and added back to a
list eventually.

So both of the BUG_ONs which test for the ->lru being empty or not
need to avoid the case where STRIPE_EXPANDING is set.

The patch which broke this was marked for -stable, so this patch needs
to be applied to any branch that received 6d183de4

Fixes: 6d183de4077191d1201283a9035ce57a9b05254d
Cc: stable@vger.kernel.org (any release to which above was applied)
Signed-off-by: NeilBrown <neilb@suse.de>
(cherry picked from commit 5af9bef72c074dbe946da8b74eabd79cd5a9ff19)
Signed-off-by: Jes Sorensen <Jes.Sorensen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/raid5.c b/drivers/md/raid5.c
index ab6ae11..40d11e2 100644
--- a/drivers/md/raid5.c
+++ b/drivers/md/raid5.c
@@ -687,7 +687,8 @@ get_active_stripe(struct r5conf *conf, sector_t sector,
    } else {
     if (!test_bit(STRIPE_HANDLE, &sh->state))
      atomic_inc(&conf->active_stripes);
-    BUG_ON(list_empty(&sh->lru));
+    BUG_ON(list_empty(&sh->lru) &&
+           !test_bit(STRIPE_EXPANDING, &sh->state));
     list_del_init(&sh->lru);
     if (sh->group) {
      sh->group->stripes_cnt--;
-- 
1.7.1