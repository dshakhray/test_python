From a77fe01a406a175fe3cd2322cf17c13863718080 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Sat, 22 Nov 2014 23:56:41 -0500
Subject: [md] dm-mpath: stop queueing IO when no valid paths exist

Message-id: <1416700613-25142-2-git-send-email-snitzer@redhat.com>
Patchwork-id: 100846
O-Subject: [RHEL7.1 PATCH 01/13] dm mpath: stop queueing IO when no valid paths exist
Bugzilla: 1165246
RH-Acked-by: Joe Thornber <thornber@redhat.com>

BZ: 1165246

Upstream commit 1f271972478d84dd9e4d6dd82f414d70ed9e78ce
Author: Benjamin Marzinski <bmarzins@redhat.com>
Date:   Wed Aug 13 13:53:42 2014 -0500

    dm mpath: stop queueing IO when no valid paths exist

    'queue_io' is set so that IO is queued while paths are being
    initialized.  Clear queue_io in __choose_pgpath if there are no valid
    paths, since there are obviously no paths that can be initialized.
    Otherwise IOs to the device will back up.

    Signed-off-by: Benjamin Marzinski <bmarzins@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/dm-mpath.c b/drivers/md/dm-mpath.c
index d7f704a..7ed0e7b 100644
--- a/drivers/md/dm-mpath.c
+++ b/drivers/md/dm-mpath.c
@@ -317,8 +317,10 @@ static void __choose_pgpath(struct multipath *m, size_t nr_bytes)
  struct priority_group *pg;
  unsigned bypassed = 1;
 
- if (!m->nr_valid_paths)
+ if (!m->nr_valid_paths) {
+  m->queue_io = 0;
   goto failed;
+ }
 
  /* Were we instructed to switch PG? */
  if (m->next_pg) {
-- 
1.7.1