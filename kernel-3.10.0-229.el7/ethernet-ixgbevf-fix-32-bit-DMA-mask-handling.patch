From 59a151708ae899404618a832cb6f1dce4f841c06 Mon Sep 17 00:00:00 2001
From: John Greene <jogreene@redhat.com>
Date: Mon, 8 Sep 2014 15:07:16 -0400
Subject: [ethernet] ixgbevf: fix 32-bit DMA mask handling

Message-id: <1410188883-6595-2-git-send-email-jogreene@redhat.com>
Patchwork-id: 92381
O-Subject: [RHEL7.1 PATCH 01/48] DMA-API: net: intel/ixgbevf: fix 32-bit DMA mask handling
Bugzilla: 1091123
RH-Acked-by: Neil Horman <nhorman@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: John Linville <linville@redhat.com>

BZ: 1091123
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7919168
Tested: In beaker. See BZ for details

The fallback to 32-bit DMA mask is rather odd:
 if (!dma_set_mask(&pdev->dev, DMA_BIT_MASK(64)) &&
     !dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(64))) {
  pci_using_dac = 1;
 } else {
  err = dma_set_mask(&pdev->dev, DMA_BIT_MASK(32));
  if (err) {
   err = dma_set_coherent_mask(&pdev->dev,
          DMA_BIT_MASK(32));
   if (err) {
    dev_err(&pdev->dev, "No usable DMA "
     "configuration, aborting\n");
    goto err_dma;
   }
  }
  pci_using_dac = 0;
 }
This means we only set the coherent DMA mask in the fallback path if
the DMA mask set failed, which is silly.  This fixes it to set the
coherent DMA mask only if dma_set_mask() succeeded, and to error out
if either fails.

Acked-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
(cherry picked from commit 53567aa4e00399aa59339bba81b285a5b95f425c)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c b/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
index 885e407..5f54749 100644
--- a/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
+++ b/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
@@ -3325,19 +3325,14 @@ static int ixgbevf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
  if (err)
   return err;
 
- if (!dma_set_mask(&pdev->dev, DMA_BIT_MASK(64)) &&
-     !dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(64))) {
+ if (!dma_set_mask_and_coherent(&pdev->dev, DMA_BIT_MASK(64))) {
   pci_using_dac = 1;
  } else {
-  err = dma_set_mask(&pdev->dev, DMA_BIT_MASK(32));
+  err = dma_set_mask_and_coherent(&pdev->dev, DMA_BIT_MASK(32));
   if (err) {
-   err = dma_set_coherent_mask(&pdev->dev,
-          DMA_BIT_MASK(32));
-   if (err) {
-    dev_err(&pdev->dev, "No usable DMA "
-     "configuration, aborting\n");
-    goto err_dma;
-   }
+   dev_err(&pdev->dev, "No usable DMA "
+    "configuration, aborting\n");
+   goto err_dma;
   }
   pci_using_dac = 0;
  }
-- 
1.7.1