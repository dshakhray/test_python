From fd1e7b092aee92e08e744e6a2abaadaca279ae60 Mon Sep 17 00:00:00 2001
From: Amir Vadai <avadai@redhat.com>
Date: Thu, 11 Sep 2014 12:01:02 -0400
Subject: [infiniband] mlx5: Copy DIF fields only when input and output space values match

Message-id: <65a02a7887a846853f3fc2f04b4f77e3e68fdcf3.1410425016.git.avadai@redhat.com>
Patchwork-id: 93641
O-Subject: [Patch RHEL7.1 V1 126/197] mlx5_core: Copy DIF fields only when input and output space values match
Bugzilla: 1107617 1107618 1107619 1107620
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

From: Sagi Grimberg <sagig@mellanox.com>

Some DIF implementations (SCSI initiator/target) may want to use different
input/output values for application tag and/or reference tag. So in
case memory/wire domain values don't match HW must not copy them.

Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
Signed-off-by: Roland Dreier <roland@purestorage.com>
(cherry picked from commit c7f44fbda68a6b2d6ceb10e45c711750e779bace)
Signed-off-by: Amir Vadai <avadai@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/infiniband/hw/mlx5/qp.c b/drivers/infiniband/hw/mlx5/qp.c
index 00b5563..a89f704 100644
--- a/drivers/infiniband/hw/mlx5/qp.c
+++ b/drivers/infiniband/hw/mlx5/qp.c
@@ -2078,6 +2078,7 @@ static int mlx5_set_bsf(struct ib_mr *sig_mr,
  struct ib_sig_domain *wire = &sig_attrs->wire;
  int ret, selector;
 
+ memset(bsf, 0, sizeof(*bsf));
  switch (sig_attrs->mem.sig_type) {
  case IB_SIG_TYPE_T10_DIF:
   if (sig_attrs->wire.sig_type != IB_SIG_TYPE_T10_DIF)
@@ -2090,9 +2091,11 @@ static int mlx5_set_bsf(struct ib_mr *sig_mr,
    /* Same block structure */
    basic->bsf_size_sbs = 1 << 4;
    if (mem->sig.dif.bg_type == wire->sig.dif.bg_type)
-    basic->wire.copy_byte_mask = 0xff;
-   else
-    basic->wire.copy_byte_mask = 0x3f;
+    basic->wire.copy_byte_mask |= 0xc0;
+   if (mem->sig.dif.app_tag == wire->sig.dif.app_tag)
+    basic->wire.copy_byte_mask |= 0x30;
+   if (mem->sig.dif.ref_tag == wire->sig.dif.ref_tag)
+    basic->wire.copy_byte_mask |= 0x0f;
   } else
    basic->wire.bs_selector = bs_selector(wire->sig.dif.pi_interval);
 
-- 
1.7.1