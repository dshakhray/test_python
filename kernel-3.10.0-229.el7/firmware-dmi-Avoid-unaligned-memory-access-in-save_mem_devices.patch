From 1ca129381fe77af8242aa2dbf50887def1edd6bd Mon Sep 17 00:00:00 2001
From: Rui Wang <ruwang@redhat.com>
Date: Thu, 21 Aug 2014 04:13:45 -0400
Subject: [firmware] dmi: Avoid unaligned memory access in save_mem_devices()

Message-id: <1408594432-28006-11-git-send-email-ruwang@redhat.com>
Patchwork-id: 88492
O-Subject: [PATCH RHEL7.1 BZ1076655 10/17] dmi: Avoid unaligned memory access in save_mem_devices()
Bugzilla: 1076655
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: "Chen, Gong" <gong.chen@linux.intel.com>

Backport of:
Original commit: 0841c04d65937ad2808f59c43cb54a92473c8f0e
Original Author: "Luck, Tony" <tony.luck@intel.com>
Original Date: Fri, 1 Nov 2013 13:59:52 -0700

 Firmware is not required to maintain alignment of SMBIOS
 entries, so we should take care accessing fields within these
 structures. Use "get_unaligned()" to avoid problems.

 [ Found on ia64 (which grumbles about unaligned access) ]

Signed-off-by: Chen, Gong <gong.chen@linux.intel.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/firmware/dmi_scan.c b/drivers/firmware/dmi_scan.c
index 8c25162..fe0e82e 100644
--- a/drivers/firmware/dmi_scan.c
+++ b/drivers/firmware/dmi_scan.c
@@ -8,6 +8,7 @@
 #include <linux/bootmem.h>
 #include <linux/random.h>
 #include <asm/dmi.h>
+#include <asm/unaligned.h>
 
 /*
  * DMI stands for "Desktop Management Interface".  It is part
@@ -356,7 +357,7 @@ static void __init save_mem_devices(const struct dmi_header *dm, void *v)
   pr_warn(FW_BUG "Too many DIMM entries in SMBIOS table\n");
   return;
  }
- dmi_memdev[nr].handle = dm->handle;
+ dmi_memdev[nr].handle = get_unaligned(&dm->handle);
  dmi_memdev[nr].device = dmi_string(dm, d[0x10]);
  dmi_memdev[nr].bank = dmi_string(dm, d[0x11]);
  nr++;
-- 
1.7.1