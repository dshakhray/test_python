From a2754e73e0eef26f4c6f8e13ec463d31f8bc6dc7 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Sat, 19 Jul 2014 04:29:14 -0400
Subject: [pcmcia] Use global PCI rescan-remove locking

Message-id: <20140719042914.19438.87948.stgit@gir.stowe>
Patchwork-id: 86024
O-Subject: [RHEL7.1 PATCH 62/81] pcmcia: Use global PCI rescan-remove locking
Bugzilla: 1110895
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110895
Upstream Status: 5ef68e8867ca9d979644d05c6045b2c79d8989de

commit 5ef68e8867ca9d979644d05c6045b2c79d8989de
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Jan 10 15:25:34 2014 +0100

    pcmcia: Use global PCI rescan-remove locking

    Multiple race conditions are possible between the cardbus PCI device
    addition and removal and the generic PCI bus rescan and device removal that
    can be triggered via sysfs.

    To avoid those race conditions make the cardbus code use global PCI
    rescan-remove locking.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pcmcia/cardbus.c b/drivers/pcmcia/cardbus.c
index b2a98cd..8bde619 100644
--- a/drivers/pcmcia/cardbus.c
+++ b/drivers/pcmcia/cardbus.c
@@ -70,6 +70,8 @@ int __ref cb_alloc(struct pcmcia_socket *s)
  struct pci_dev *dev;
  unsigned int max, pass;
 
+ pci_lock_rescan_remove();
+
  s->functions = pci_scan_slot(bus, PCI_DEVFN(0, 0));
  pci_fixup_cardbus(bus);
 
@@ -93,6 +95,7 @@ int __ref cb_alloc(struct pcmcia_socket *s)
 
  pci_bus_add_devices(bus);
 
+ pci_unlock_rescan_remove();
  return 0;
 }
 
@@ -115,6 +118,10 @@ void cb_free(struct pcmcia_socket *s)
  if (!bus)
   return;
 
+ pci_lock_rescan_remove();
+
  list_for_each_entry_safe(dev, tmp, &bus->devices, bus_list)
   pci_stop_and_remove_bus_device(dev);
+
+ pci_unlock_rescan_remove();
 }
-- 
1.7.1