From 28098b6e0916e700a6f513b770b6095d94c64c1d Mon Sep 17 00:00:00 2001
From: Sai Vemuri <svemuri@redhat.com>
Date: Thu, 11 Sep 2014 23:11:10 -0400
Subject: [ethernet] cxgb4vf: Check if rx checksum offload is enabled, while reading hardware calculated checksum

Message-id: <1410477072-95160-6-git-send-email-svemuri@redhat.com>
Patchwork-id: 93898
O-Subject: [RHEL7.1 PATCH BZ 1070945 5/7] cxgb4vf: Check if rx checksum offload is enabled, while reading hardware calculated checksum
Bugzilla: 1070945
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c3136f5540b62f7a0ada3cbbd7345889a4879f23)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/chelsio/cxgb4vf/sge.c b/drivers/net/ethernet/chelsio/cxgb4vf/sge.c
index 0a517f5..a48ca91 100644
--- a/drivers/net/ethernet/chelsio/cxgb4vf/sge.c
+++ b/drivers/net/ethernet/chelsio/cxgb4vf/sge.c
@@ -1510,7 +1510,8 @@ int t4vf_ethrx_handler(struct sge_rspq *rspq, const __be64 *rsp,
 {
  struct sk_buff *skb;
  const struct cpl_rx_pkt *pkt = (void *)rsp;
- bool csum_ok = pkt->csum_calc && !pkt->err_vec;
+ bool csum_ok = pkt->csum_calc && !pkt->err_vec &&
+         (rspq->netdev->features & NETIF_F_RXCSUM);
  struct sge_eth_rxq *rxq = container_of(rspq, struct sge_eth_rxq, rspq);
 
  /*
@@ -1538,8 +1539,8 @@ int t4vf_ethrx_handler(struct sge_rspq *rspq, const __be64 *rsp,
  skb_record_rx_queue(skb, rspq->idx);
  rxq->stats.pkts++;
 
- if (csum_ok && (rspq->netdev->features & NETIF_F_RXCSUM) &&
-     !pkt->err_vec && (be32_to_cpu(pkt->l2info) & (RXF_UDP|RXF_TCP))) {
+ if (csum_ok && !pkt->err_vec &&
+     (be32_to_cpu(pkt->l2info) & (RXF_UDP|RXF_TCP))) {
   if (!pkt->ip_frag)
    skb->ip_summed = CHECKSUM_UNNECESSARY;
   else {
-- 
1.7.1