From 2a08bf197dc057eb683ec6d5ec1b891ff122e668 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:07:02 -0400
Subject: [tools] perf: Reference count map_groups objects

Message-id: <1410181752-25631-178-git-send-email-jolsa@redhat.com>
Patchwork-id: 91799
O-Subject: [PATCH RHEL7.1 BZ1134356 177/307] perf tools: Reference count map_groups objects
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit a26ca6716a6c683f40bd676cea7e89704653b98d
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date: Tue Mar 25 15:26:44 2014 -0300

description
===========
We will share it among threads in the same process.
Adding map_groups__get/map_groups__put interface for that.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/map.c b/tools/perf/util/map.c
index ae4c5e1..ba5f5c0 100644
--- a/tools/perf/util/map.c
+++ b/tools/perf/util/map.c
@@ -323,6 +323,7 @@ void map_groups__init(struct map_groups *mg)
   INIT_LIST_HEAD(&mg->removed_maps[i]);
  }
  mg->machine = NULL;
+ mg->refcnt = 1;
 }
 
 static void maps__delete(struct rb_root *maps)
@@ -374,6 +375,12 @@ void map_groups__delete(struct map_groups *mg)
  free(mg);
 }
 
+void map_groups__put(struct map_groups *mg)
+{
+ if (--mg->refcnt == 0)
+  map_groups__delete(mg);
+}
+
 void map_groups__flush(struct map_groups *mg)
 {
  int type;
diff --git a/tools/perf/util/map.h b/tools/perf/util/map.h
index 1073e2d..d6445b2 100644
--- a/tools/perf/util/map.h
+++ b/tools/perf/util/map.h
@@ -59,11 +59,20 @@ struct map_groups {
  struct rb_root  maps[MAP__NR_TYPES];
  struct list_head removed_maps[MAP__NR_TYPES];
  struct machine  *machine;
+ int   refcnt;
 };
 
 struct map_groups *map_groups__new(void);
 void map_groups__delete(struct map_groups *mg);
 
+static inline struct map_groups *map_groups__get(struct map_groups *mg)
+{
+ ++mg->refcnt;
+ return mg;
+}
+
+void map_groups__put(struct map_groups *mg);
+
 static inline struct kmap *map__kmap(struct map *map)
 {
  return (struct kmap *)(map + 1);
diff --git a/tools/perf/util/thread.c b/tools/perf/util/thread.c
index dc51d16..b501848 100644
--- a/tools/perf/util/thread.c
+++ b/tools/perf/util/thread.c
@@ -50,7 +50,7 @@ void thread__delete(struct thread *thread)
 {
  struct comm *comm, *tmp;
 
- map_groups__delete(thread->mg);
+ map_groups__put(thread->mg);
  thread->mg = NULL;
  list_for_each_entry_safe(comm, tmp, &thread->comm_list, list) {
   list_del(&comm->list);
-- 
1.7.1