From 281923377d635749cfd4ef46dbebf98acb728cb5 Mon Sep 17 00:00:00 2001
From: Tomas Henzl <thenzl@redhat.com>
Date: Mon, 8 Sep 2014 14:32:08 -0400
Subject: [scsi] hpsa: fix 6-byte READ/WRITE with 0 length data xfer

Message-id: <1410186734-19986-78-git-send-email-thenzl@redhat.com>
Patchwork-id: 92098
O-Subject: [RHEL6.6 e-stor PATCH 77/83] hpsa: fix 6-byte READ/WRITE with 0 length data xfer
Bugzilla: 1069185
RH-Acked-by: Maurizio Lombardi <mlombard@redhat.com>
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Ewan Milne <emilne@redhat.com>

a 6-byte READ/WRITE CDB with a 0 block data transfer really
means a 256 block data transfer.  The RAID mapping code failed
to handle this case.  For 10/12/16 byte READ/WRITEs, 0 just means
no data should be transferred, and should not trigger BUG_ON.

Signed-off-by: Stephen M. Cameron <scameron@beardog.cce.hp.com>
Reported-by: Robert Elliott <elliott@hp.com>
Reviewed-by: Robert Elliott <elliott@hp.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 3fa89a04e064e586df4ed3208a8e62012a65b17f)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/hpsa.c b/drivers/scsi/hpsa.c
index 002d02f..9762ee6 100644
--- a/drivers/scsi/hpsa.c
+++ b/drivers/scsi/hpsa.c
@@ -3692,6 +3692,8 @@ static int hpsa_scsi_ioaccel_raid_map(struct ctlr_info *h,
    (((u64) cmd->cmnd[2]) << 8) |
    cmd->cmnd[3];
   block_cnt = cmd->cmnd[4];
+  if (block_cnt == 0)
+   block_cnt = 256;
   break;
  case WRITE_10:
   is_write = 1;
@@ -3740,7 +3742,6 @@ static int hpsa_scsi_ioaccel_raid_map(struct ctlr_info *h,
  default:
   return IO_ACCEL_INELIGIBLE; /* process via normal I/O path */
  }
- BUG_ON(block_cnt == 0);
  last_block = first_block + block_cnt - 1;
 
  /* check for write to non-RAID-0 */
-- 
1.7.1