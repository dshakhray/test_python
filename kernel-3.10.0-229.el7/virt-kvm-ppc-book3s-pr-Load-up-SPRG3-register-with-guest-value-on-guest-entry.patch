From ce3c8814db9005553085576ba4ec2072930a43e7 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:05:41 -0400
Subject: [virt] kvm/ppc: book3s pr - Load up SPRG3 register with guest value on guest entry

Message-id: <1410545655-205645-113-git-send-email-dzickus@redhat.com>
Patchwork-id: 94669
O-Subject: [RHEL7 PATCH 112/626] KVM: PPC: Book3S PR: Load up SPRG3 register with guest value on guest entry
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit c8ae0ace104ff36d43311c148c8aeed9f194cbf2
Author: Paul Mackerras <paulus@samba.org>
Date:   Thu Jul 11 21:49:43 2013 +1000

    KVM: PPC: Book3S PR: Load up SPRG3 register with guest value on guest entry

    Unlike the other general-purpose SPRs, SPRG3 can be read by usermode
    code, and is used in recent kernels to store the CPU and NUMA node
    numbers so that they can be read by VDSO functions.  Thus we need to
    load the guest's SPRG3 value into the real SPRG3 register when entering
    the guest, and restore the host's value when exiting the guest.  We don't
    need to save the guest SPRG3 value when exiting the guest as usermode
    code can't modify SPRG3.

    Signed-off-by: Paul Mackerras <paulus@samba.org>
    Signed-off-by: Alexander Graf <agraf@suse.de>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kernel/asm-offsets.c b/arch/powerpc/kernel/asm-offsets.c
index 30836e0..6278edd 100644
--- a/arch/powerpc/kernel/asm-offsets.c
+++ b/arch/powerpc/kernel/asm-offsets.c
@@ -448,6 +448,7 @@ int main(void)
  DEFINE(VCPU_SPRG2, offsetof(struct kvm_vcpu, arch.shregs.sprg2));
  DEFINE(VCPU_SPRG3, offsetof(struct kvm_vcpu, arch.shregs.sprg3));
 #endif
+ DEFINE(VCPU_SHARED_SPRG3, offsetof(struct kvm_vcpu_arch_shared, sprg3));
  DEFINE(VCPU_SHARED_SPRG4, offsetof(struct kvm_vcpu_arch_shared, sprg4));
  DEFINE(VCPU_SHARED_SPRG5, offsetof(struct kvm_vcpu_arch_shared, sprg5));
  DEFINE(VCPU_SHARED_SPRG6, offsetof(struct kvm_vcpu_arch_shared, sprg6));
diff --git a/arch/powerpc/kvm/book3s_interrupts.S b/arch/powerpc/kvm/book3s_interrupts.S
index 48cbbf8..17cfae5 100644
--- a/arch/powerpc/kvm/book3s_interrupts.S
+++ b/arch/powerpc/kvm/book3s_interrupts.S
@@ -92,6 +92,11 @@ kvm_start_lightweight:
  PPC_LL r3, VCPU_HFLAGS(r4)
  rldicl r3, r3, 0, 63  /* r3 &= 1 */
  stb r3, HSTATE_RESTORE_HID5(r13)
+
+ /* Load up guest SPRG3 value, since it's user readable */
+ ld r3, VCPU_SHARED(r4)
+ ld r3, VCPU_SHARED_SPRG3(r3)
+ mtspr SPRN_SPRG3, r3
 #endif /* CONFIG_PPC_BOOK3S_64 */
 
  PPC_LL r4, VCPU_SHADOW_MSR(r4) /* get shadow_msr */
@@ -123,6 +128,15 @@ kvmppc_handler_highmem:
  /* R7 = vcpu */
  PPC_LL r7, GPR4(r1)
 
+#ifdef CONFIG_PPC_BOOK3S_64
+ /*
+  * Reload kernel SPRG3 value.
+  * No need to save guest value as usermode can't modify SPRG3.
+  */
+ ld r3, PACA_SPRG3(r13)
+ mtspr SPRN_SPRG3, r3
+#endif /* CONFIG_PPC_BOOK3S_64 */
+
  PPC_STL r14, VCPU_GPR(R14)(r7)
  PPC_STL r15, VCPU_GPR(R15)(r7)
  PPC_STL r16, VCPU_GPR(R16)(r7)
-- 
1.7.1