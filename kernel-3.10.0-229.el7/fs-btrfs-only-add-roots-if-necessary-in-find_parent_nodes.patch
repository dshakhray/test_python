From 61226fad97b04220a39cc8cc0e2d1f2b1aeff567 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:00:54 -0400
Subject: [fs] btrfs: only add roots if necessary in find_parent_nodes()

Message-id: <1407179109-13714-168-git-send-email-sandeen@redhat.com>
Patchwork-id: 87029
O-Subject: [RHEL7.1 PATCH 167/422] Btrfs: only add roots if necessary in find_parent_nodes()
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Wang Shilong <wangsl.fnst@cn.fujitsu.com>

commit 98cfee214394a3560bd4ce3209b55a71c4267783
Author: Wang Shilong <wangsl.fnst@cn.fujitsu.com>
Date:   Sat Feb 1 00:42:05 2014 +0800

    Btrfs: only add roots if necessary in find_parent_nodes()

    find_all_leafs() dosen't need add all roots actually, add roots only
    if we need, this can avoid unnecessary ulist dance.

    Signed-off-by: Wang Shilong <wangsl.fnst@cn.fujitsu.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/backref.c b/fs/btrfs/backref.c
index aded3ef..903fe68 100644
--- a/fs/btrfs/backref.c
+++ b/fs/btrfs/backref.c
@@ -965,7 +965,7 @@ again:
  while (!list_empty(&prefs)) {
   ref = list_first_entry(&prefs, struct __prelim_ref, list);
   WARN_ON(ref->count < 0);
-  if (ref->count && ref->root_id && ref->parent == 0) {
+  if (roots && ref->count && ref->root_id && ref->parent == 0) {
    /* no parent == root of tree */
    ret = ulist_add(roots, ref->root_id, 0, GFP_NOFS);
    if (ret < 0)
@@ -1061,22 +1061,14 @@ static int btrfs_find_all_leafs(struct btrfs_trans_handle *trans,
     u64 time_seq, struct ulist **leafs,
     const u64 *extent_item_pos)
 {
- struct ulist *tmp;
  int ret;
 
- tmp = ulist_alloc(GFP_NOFS);
- if (!tmp)
-  return -ENOMEM;
  *leafs = ulist_alloc(GFP_NOFS);
- if (!*leafs) {
-  ulist_free(tmp);
+ if (!*leafs)
   return -ENOMEM;
- }
 
  ret = find_parent_nodes(trans, fs_info, bytenr,
-    time_seq, *leafs, tmp, extent_item_pos);
- ulist_free(tmp);
-
+    time_seq, *leafs, NULL, extent_item_pos);
  if (ret < 0 && ret != -ENOENT) {
   free_leaf_list(*leafs);
   return ret;
-- 
1.7.1