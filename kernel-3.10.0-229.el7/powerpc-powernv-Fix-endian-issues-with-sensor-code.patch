From 6d0ce5dccdd72c533b3687941038004bf2073977 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:10:19 -0400
Subject: [powerpc] powernv: Fix endian issues with sensor code

Message-id: <1410545655-205645-391-git-send-email-dzickus@redhat.com>
Patchwork-id: 94534
O-Subject: [RHEL7 PATCH 390/626] powerpc/powernv: Fix endian issues with sensor code
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 9000c17dc0f9c910267d2661225c9d33a227b27e
Author: Anton Blanchard <anton@samba.org>
Date:   Fri Mar 28 16:34:10 2014 +1100

    powerpc/powernv: Fix endian issues with sensor code

    One OPAL call and one device tree property needed byte swapping.

    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/opal.h b/arch/powerpc/include/asm/opal.h
index fc73661..a13ab39 100644
--- a/arch/powerpc/include/asm/opal.h
+++ b/arch/powerpc/include/asm/opal.h
@@ -874,8 +874,7 @@ int64_t opal_get_param(uint64_t token, uint32_t param_id, uint64_t buffer,
   size_t length);
 int64_t opal_set_param(uint64_t token, uint32_t param_id, uint64_t buffer,
   size_t length);
-int64_t opal_sensor_read(uint32_t sensor_hndl, int token,
-  uint32_t *sensor_data);
+int64_t opal_sensor_read(uint32_t sensor_hndl, int token, __be32 *sensor_data);
 
 /* Internal functions */
 extern int early_init_dt_scan_opal(unsigned long node, const char *uname, int depth, void *data);
diff --git a/arch/powerpc/platforms/powernv/opal-sensor.c b/arch/powerpc/platforms/powernv/opal-sensor.c
index 7503e29..10271ad 100644
--- a/arch/powerpc/platforms/powernv/opal-sensor.c
+++ b/arch/powerpc/platforms/powernv/opal-sensor.c
@@ -33,6 +33,7 @@ int opal_get_sensor_data(u32 sensor_hndl, u32 *sensor_data)
 {
  int ret, token;
  struct opal_msg msg;
+ __be32 data;
 
  token = opal_async_get_token_interruptible();
  if (token < 0) {
@@ -42,7 +43,7 @@ int opal_get_sensor_data(u32 sensor_hndl, u32 *sensor_data)
  }
 
  mutex_lock(&opal_sensor_mutex);
- ret = opal_sensor_read(sensor_hndl, token, sensor_data);
+ ret = opal_sensor_read(sensor_hndl, token, &data);
  if (ret != OPAL_ASYNC_COMPLETION)
   goto out_token;
 
@@ -53,6 +54,7 @@ int opal_get_sensor_data(u32 sensor_hndl, u32 *sensor_data)
   goto out_token;
  }
 
+ *sensor_data = be32_to_cpu(data);
  ret = be64_to_cpu(msg.params[1]);
 
 out_token:
-- 
1.7.1