From e7b488c0bc49d169e8467bd6c7e74d98b135aff0 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:12:43 -0400
Subject: [powerpc] powernv: Make it possible to skip the IRQHAPPENED check in power7_nap()

Message-id: <1410545655-205645-535-git-send-email-dzickus@redhat.com>
Patchwork-id: 94624
O-Subject: [RHEL7 PATCH 534/626] powerpc/powernv: Make it possible to skip the IRQHAPPENED check in power7_nap()
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 8d6f7c5aa3db6f3e5e43d09f8a0166c7d96f33f3
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Fri May 23 18:15:26 2014 +1000

    powerpc/powernv: Make it possible to skip the IRQHAPPENED check in power7_nap()

    To support split core we need to be able to force all secondaries into
    nap, so the core can detect they are idle and do an unsplit.

    Currently power7_nap() will return without napping if there is an irq
    pending. We want to ignore the pending irq and nap anyway, we will deal
    with the interrupt later.

    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Michael Neuling <mikey@neuling.org>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/processor.h b/arch/powerpc/include/asm/processor.h
index a31120a..7fb3545 100644
--- a/arch/powerpc/include/asm/processor.h
+++ b/arch/powerpc/include/asm/processor.h
@@ -496,7 +496,7 @@ extern unsigned long cpuidle_disable;
 enum idle_boot_override {IDLE_NO_OVERRIDE = 0, IDLE_POWERSAVE_OFF};
 
 extern int powersave_nap; /* set if nap mode can be used in idle loop */
-extern void power7_nap(void);
+extern void power7_nap(int check_irq);
 extern void power7_sleep(void);
 extern void flush_instruction_cache(void);
 extern void hard_reset_now(void);
diff --git a/arch/powerpc/kernel/idle_power7.S b/arch/powerpc/kernel/idle_power7.S
index dca6e16..2480256 100644
--- a/arch/powerpc/kernel/idle_power7.S
+++ b/arch/powerpc/kernel/idle_power7.S
@@ -39,6 +39,10 @@
  * Pass requested state in r3:
  *  0 - nap
  *  1 - sleep
+ *
+ * To check IRQ_HAPPENED in r4
+ *  0 - don't check
+ *  1 - check
  */
 _GLOBAL(power7_powersave_common)
  /* Use r3 to pass state nap/sleep/winkle */
@@ -71,6 +75,8 @@ _GLOBAL(power7_powersave_common)
  lbz r0,PACAIRQHAPPENED(r13)
  cmpwi cr0,r0,0
  beq 1f
+ cmpwi cr0,r4,0
+ beq 1f
  addi r1,r1,INT_FRAME_SIZE
  ld r0,16(r1)
  mtlr r0
@@ -114,15 +120,18 @@ _GLOBAL(power7_idle)
  lwz r4,ADDROFF(powersave_nap)(r3)
  cmpwi 0,r4,0
  beqlr
+ li r3, 1
  /* fall through */
 
 _GLOBAL(power7_nap)
+ mr r4,r3
  li r3,0
  b power7_powersave_common
  /* No return */
 
 _GLOBAL(power7_sleep)
  li r3,1
+ li r4,0
  b power7_powersave_common
  /* No return */
 
diff --git a/arch/powerpc/platforms/powernv/smp.c b/arch/powerpc/platforms/powernv/smp.c
index 1601a1e..65faf99 100644
--- a/arch/powerpc/platforms/powernv/smp.c
+++ b/arch/powerpc/platforms/powernv/smp.c
@@ -159,7 +159,7 @@ static void pnv_smp_cpu_kill_self(void)
  mtspr(SPRN_LPCR, mfspr(SPRN_LPCR) & ~(u64)LPCR_PECE1);
  while (!generic_check_cpu_restart(cpu)) {
   ppc64_runlatch_off();
-  power7_nap();
+  power7_nap(1);
   ppc64_runlatch_on();
   if (!generic_check_cpu_restart(cpu)) {
    DBG("CPU%d Unexpected exit while offline !\n", cpu);
-- 
1.7.1