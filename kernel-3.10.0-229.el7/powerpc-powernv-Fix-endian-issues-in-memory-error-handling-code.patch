From 0c0fb04fb233cdc8248c8df8de36942ca0ae5794 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:12:58 -0400
Subject: [powerpc] powernv: Fix endian issues in memory error handling code

Message-id: <1410545655-205645-550-git-send-email-dzickus@redhat.com>
Patchwork-id: 94473
O-Subject: [RHEL7 PATCH 549/626] powerpc/powernv: Fix endian issues in memory error handling code
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 223ca9d855ce32a4cc2d2b961e6e9d1fb36872ba
Author: Anton Blanchard <anton@samba.org>
Date:   Wed Jun 4 14:48:48 2014 +1000

    powerpc/powernv: Fix endian issues in memory error handling code

    struct OpalMemoryErrorData is passed to us from firmware, so we
    have to byteswap it.

    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/opal.h b/arch/powerpc/include/asm/opal.h
index ea8bba7..cb15cbb 100644
--- a/arch/powerpc/include/asm/opal.h
+++ b/arch/powerpc/include/asm/opal.h
@@ -510,7 +510,7 @@ enum OpalMemErr_DynErrType {
 struct OpalMemoryErrorData {
  enum OpalMemErr_Version version:8; /* 0x00 */
  enum OpalMemErrType type:8;  /* 0x01 */
- uint16_t  flags;  /* 0x02 */
+ __be16   flags;  /* 0x02 */
  uint8_t   reserved_1[4]; /* 0x04 */
 
  union {
@@ -518,15 +518,15 @@ struct OpalMemoryErrorData {
   struct {
    enum OpalMemErr_ResilErrType resil_err_type:8;
    uint8_t  reserved_1[7];
-   uint64_t physical_address_start;
-   uint64_t physical_address_end;
+   __be64  physical_address_start;
+   __be64  physical_address_end;
   } resilience;
   /* Dynamic memory deallocation error info */
   struct {
    enum OpalMemErr_DynErrType dyn_err_type:8;
    uint8_t  reserved_1[7];
-   uint64_t physical_address_start;
-   uint64_t physical_address_end;
+   __be64  physical_address_start;
+   __be64  physical_address_end;
   } dyn_dealloc;
  } u;
 };
diff --git a/arch/powerpc/platforms/powernv/opal-memory-errors.c b/arch/powerpc/platforms/powernv/opal-memory-errors.c
index ec41322..b17a34b 100644
--- a/arch/powerpc/platforms/powernv/opal-memory-errors.c
+++ b/arch/powerpc/platforms/powernv/opal-memory-errors.c
@@ -47,12 +47,12 @@ static void handle_memory_error_event(struct OpalMemoryErrorData *merr_evt)
     __func__, merr_evt->type);
  switch (merr_evt->type) {
  case OPAL_MEM_ERR_TYPE_RESILIENCE:
-  paddr_start = merr_evt->u.resilience.physical_address_start;
-  paddr_end = merr_evt->u.resilience.physical_address_end;
+  paddr_start = be64_to_cpu(merr_evt->u.resilience.physical_address_start);
+  paddr_end = be64_to_cpu(merr_evt->u.resilience.physical_address_end);
   break;
  case OPAL_MEM_ERR_TYPE_DYN_DALLOC:
-  paddr_start = merr_evt->u.dyn_dealloc.physical_address_start;
-  paddr_end = merr_evt->u.dyn_dealloc.physical_address_end;
+  paddr_start = be64_to_cpu(merr_evt->u.dyn_dealloc.physical_address_start);
+  paddr_end = be64_to_cpu(merr_evt->u.dyn_dealloc.physical_address_end);
   break;
  default:
   return;
-- 
1.7.1