From 4f163d1a8521bbb654303f4df1f1ebb8a5467dd6 Mon Sep 17 00:00:00 2001
From: Ewan Milne <emilne@redhat.com>
Date: Wed, 20 Aug 2014 18:59:15 -0400
Subject: [scsi] scsi_debug: fix NULL pointer dereference with parameters dif=0 dix=1

Message-id: <1408561176-18133-37-git-send-email-emilne@redhat.com>
Patchwork-id: 88470
O-Subject: [RHEL7.1 PATCH e-stor 36/57] [SCSI] scsi_debug: fix NULL pointer dereference with parameters dif=0 dix=1
Bugzilla: 1132100
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: "Ewan D. Milne" <emilne@redhat.com>

upstream commit 7cb69d0397233546d82191e524235fdb9d1d91aa

Tested by Ewan D. Milne and Barry Donahue with a combination
of manual and automated testing.  No issues seen.

upstream commit 7cb69d0397233546d82191e524235fdb9d1d91aa
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Sat Jun 29 17:59:16 2013 +0900

    [SCSI] scsi_debug: fix NULL pointer dereference with parameters dif=0 dix=1

    The protection info dif_storep is allocated only when parameter dif is
    not zero.  But it will be accessed when reading or writing to the storage
    installed with parameter dix is not zero.

    So kernel crashes if scsi_debug module is loaded with parameters dix=1 and
    dif=0.

    This fixes it by making dif_storep available if parameter dix is not zero
    instead of checking if parameter dif is not zero.

    Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com>
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Acked-by: "Martin K. Petersen" <martin.petersen@oracle.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

Signed-off-by: Ewan D. Milne <emilne@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/scsi_debug.c b/drivers/scsi/scsi_debug.c
index 38409c9..9eb6303 100644
--- a/drivers/scsi/scsi_debug.c
+++ b/drivers/scsi/scsi_debug.c
@@ -3372,7 +3372,7 @@ static int __init scsi_debug_init(void)
  if (scsi_debug_num_parts > 0)
   sdebug_build_parts(fake_storep, sz);
 
- if (scsi_debug_dif) {
+ if (scsi_debug_dix) {
   int dif_size;
 
   dif_size = sdebug_store_sectors * sizeof(struct sd_dif_tuple);
-- 
1.7.1