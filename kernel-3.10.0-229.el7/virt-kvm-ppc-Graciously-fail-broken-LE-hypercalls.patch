From 672572560ebe0f37372812ffa9b5f7740ecdbb8e Mon Sep 17 00:00:00 2001
From: David Gibson <dgibson@redhat.com>
Date: Mon, 15 Sep 2014 07:13:20 -0400
Subject: [virt] kvm/ppc: Graciously fail broken LE hypercalls

Message-id: <1410765214-16377-65-git-send-email-dgibson@redhat.com>
Patchwork-id: 94746
O-Subject: [PATCH 64/78] KVM: PPC: Graciously fail broken LE hypercalls
Bugzilla: 1123145 1123133 1123367
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Signed-off-by: David Gibson <dgibson@redhat.com>

commit 42188365f92c2d6bc89c9441a5e9305c1354e8a6
Author: Alexander Graf <agraf@suse.de>
Date:   Tue May 13 17:05:51 2014 +0200

    KVM: PPC: Graciously fail broken LE hypercalls

    There are LE Linux guests out there that don't handle hypercalls correctly.
    Instead of interpreting the instruction stream from device tree as big endian
    they assume it's a little endian instruction stream and fail.

    When we see an illegal instruction from such a byte reversed instruction stream,
    bail out graciously and just declare every hcall as error.

    Signed-off-by: Alexander Graf <agraf@suse.de>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kvm/book3s_emulate.c b/arch/powerpc/kvm/book3s_emulate.c
index c992447..3f29526 100644
--- a/arch/powerpc/kvm/book3s_emulate.c
+++ b/arch/powerpc/kvm/book3s_emulate.c
@@ -94,8 +94,25 @@ int kvmppc_core_emulate_op_pr(struct kvm_run *run, struct kvm_vcpu *vcpu,
  int rs = get_rs(inst);
  int ra = get_ra(inst);
  int rb = get_rb(inst);
+ u32 inst_sc = 0x44000002;
 
  switch (get_op(inst)) {
+ case 0:
+  emulated = EMULATE_FAIL;
+  if ((kvmppc_get_msr(vcpu) & MSR_LE) &&
+      (inst == swab32(inst_sc))) {
+   /*
+    * This is the byte reversed syscall instruction of our
+    * hypercall handler. Early versions of LE Linux didn't
+    * swap the instructions correctly and ended up in
+    * illegal instructions.
+    * Just always fail hypercalls on these broken systems.
+    */
+   kvmppc_set_gpr(vcpu, 3, EV_UNIMPLEMENTED);
+   kvmppc_set_pc(vcpu, kvmppc_get_pc(vcpu) + 4);
+   emulated = EMULATE_DONE;
+  }
+  break;
  case 19:
   switch (get_xop(inst)) {
   case OP_19_XOP_RFID:
-- 
1.7.1