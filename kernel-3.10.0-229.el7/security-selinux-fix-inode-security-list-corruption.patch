From fceae8d7308b0f273410eebafba8a9d36bead2f1 Mon Sep 17 00:00:00 2001
From: Paul Moore <pmoore@redhat.com>
Date: Tue, 14 Oct 2014 12:38:51 -0400
Subject: [security] selinux: fix inode security list corruption

Message-id: <20141014123851.11548.68587.stgit@localhost>
Patchwork-id: 97568
O-Subject: [RHEL7 PATCH] selinux: fix inode security list corruption
Bugzilla: 1152274
RH-Acked-by: Eric Paris <eparis@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1152274
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=8096524
Upstream: yes, merged into the SELinux stable-3.18 branch
Testing: unable to reproduce, but verified the system still works

 commit 7c66bdc72bc3d792886c42bbab4b214c1fe536e0
 Author: Stephen Smalley <sds@tycho.nsa.gov>
 Date:   Mon Oct 6 16:32:52 2014 -0400

 selinux: fix inode security list corruption

 sb_finish_set_opts() can race with inode_free_security()
 when initializing inode security structures for inodes
 created prior to initial policy load or by the filesystem
 during ->mount().   This appears to have always been
 a possible race, but commit 3dc91d4 ("SELinux:  Fix possible
 NULL pointer dereference in selinux_inode_permission()")
 made it more evident by immediately reusing the unioned
 list/rcu element  of the inode security structure for call_rcu()
 upon an inode_free_security().  But the underlying issue
 was already present before that commit as a possible use-after-free
 of isec.

 Shivnandan Kumar reported the list corruption and proposed
 a patch to split the list and rcu elements out of the union
 as separate fields of the inode_security_struct so that setting
 the rcu element would not affect the list element.  However,
 this would merely hide the issue and not truly fix the code.

 This patch instead moves up the deletion of the list entry
 prior to dropping the sbsec->isec_lock initially.  Then,
 if the inode is dropped subsequently, there will be no further
 references to the isec.

 Reported-by: Shivnandan Kumar <shivnandan.k@samsung.com>
 Signed-off-by: Stephen Smalley <sds@tycho.nsa.gov>
 Cc: stable@vger.kernel.org
 Signed-off-by: Paul Moore <pmoore@redhat.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/security/selinux/hooks.c b/security/selinux/hooks.c
index 66b7da8..c222401 100644
--- a/security/selinux/hooks.c
+++ b/security/selinux/hooks.c
@@ -439,6 +439,7 @@ next_inode:
     list_entry(sbsec->isec_head.next,
         struct inode_security_struct, list);
   struct inode *inode = isec->inode;
+  list_del_init(&isec->list);
   spin_unlock(&sbsec->isec_lock);
   inode = igrab(inode);
   if (inode) {
@@ -447,7 +448,6 @@ next_inode:
    iput(inode);
   }
   spin_lock(&sbsec->isec_lock);
-  list_del_init(&isec->list);
   goto next_inode;
  }
  spin_unlock(&sbsec->isec_lock);
-- 
1.7.1