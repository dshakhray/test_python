From 8008330ca817dd76c66b09aaa7eee918712245b2 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Fri, 13 Jun 2014 14:35:18 -0400
Subject: [block] blk-mq: initialize request on allocation

Message-id: <1402670238-13916-31-git-send-email-snitzer@redhat.com>
Patchwork-id: 83776
O-Subject: [RHEL7.1 PATCH 030/150] blk-mq: initialize request on allocation
Bugzilla: 1105204
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Jeff Moyer <jmoyer@redhat.com>

BZ: 1105204

Upstream commit ed44832dea8a74f909e0187f350201402927f5e5
Author: Christoph Hellwig <hch@lst.de>
Date:   Mon Apr 14 10:30:10 2014 +0200

    blk-mq: initialize request on allocation

    If we want to share tag and request allocation between queues we cannot
    initialize the request at init/free time, but need to initialize it
    at allocation time as it might get used for different queues over its
    lifetime.

    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@fb.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/block/blk-mq.c b/block/blk-mq.c
index 48d2d84..2a5a0fe 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -82,6 +82,7 @@ static struct request *__blk_mq_alloc_request(struct blk_mq_hw_ctx *hctx,
  tag = blk_mq_get_tag(hctx->tags, gfp, reserved);
  if (tag != BLK_MQ_TAG_FAIL) {
   rq = hctx->rqs[tag];
+  blk_rq_init(hctx->queue, rq);
   rq->tag = tag;
 
   return rq;
@@ -257,9 +258,7 @@ static void __blk_mq_free_request(struct blk_mq_hw_ctx *hctx,
  const int tag = rq->tag;
  struct request_queue *q = rq->q;
 
- blk_rq_init(hctx->queue, rq);
  blk_mq_put_tag(hctx->tags, tag);
-
  blk_mq_queue_exit(q);
 }
 
@@ -1122,7 +1121,6 @@ static int blk_mq_init_rq_map(struct blk_mq_hw_ctx *hctx,
   left -= to_do * rq_size;
   for (j = 0; j < to_do; j++) {
    hctx->rqs[i] = p;
-   blk_rq_init(hctx->queue, hctx->rqs[i]);
    if (reg->ops->init_request) {
     error = reg->ops->init_request(driver_data,
       hctx, hctx->rqs[i], i);
-- 
1.7.1