From b137b92a58b9541450de53712a902fb98d446f3e Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:02:59 -0400
Subject: [fs] btrfs: Change the hole range to a more accurate value

Message-id: <1407179109-13714-293-git-send-email-sandeen@redhat.com>
Patchwork-id: 87255
O-Subject: [RHEL7.1 PATCH 292/422] btrfs: Change the hole range to a more accurate value.
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Qu Wenruo <quwenruo@cn.fujitsu.com>

commit c5f7d0bb29df2e1848a236e58e201daf5b4e0f21
Author: Qu Wenruo <quwenruo@cn.fujitsu.com>
Date:   Tue Apr 15 10:41:00 2014 +0800

    btrfs: Change the hole range to a more accurate value.

    Commit 3ac0d7b96a268a98bd474cab8bce3a9f125aaccf fixed the btrfs expanding
    write problem but the hole punched is sometimes too large for some
    iovec, which has unmapped data ranges.
    This patch will change to hole range to a more accurate value using the
    counts checked by the write check routines.

    Reported-by: Al Viro <viro@ZenIV.linux.org.uk>
    Signed-off-by: Qu Wenruo <quwenruo@cn.fujitsu.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/file.c b/fs/btrfs/file.c
index a96aa9a..cd63bfb 100644
--- a/fs/btrfs/file.c
+++ b/fs/btrfs/file.c
@@ -1783,7 +1783,7 @@ static ssize_t btrfs_file_aio_write(struct kiocb *iocb,
  start_pos = round_down(pos, root->sectorsize);
  if (start_pos > i_size_read(inode)) {
   /* Expand hole size to cover write data, preventing empty gap */
-  end_pos = round_up(pos + iov->iov_len, root->sectorsize);
+  end_pos = round_up(pos + count, root->sectorsize);
   err = btrfs_cont_expand(inode, i_size_read(inode), end_pos);
   if (err) {
    mutex_unlock(&inode->i_mutex);
-- 
1.7.1