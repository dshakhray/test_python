From 38c165abc7c51a28fa4467b5df092905086b0d34 Mon Sep 17 00:00:00 2001
From: Jes Sorensen <Jes.Sorensen@redhat.com>
Date: Mon, 1 Sep 2014 09:26:00 -0400
Subject: [md] raid5: fix a race of stripe count check

Message-id: <1409563584-9000-59-git-send-email-Jes.Sorensen@redhat.com>
Patchwork-id: 89974
O-Subject: [RHEL7.1 PATCH 58/82] raid5: fix a race of stripe count check
Bugzilla: 1085530
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

From: Shaohua Li <shli@kernel.org>

I hit another BUG_ON with e240c1839d11152b0355442. In __get_priority_stripe(),
stripe count equals to 0 initially. Between atomic_inc and BUG_ON,
get_active_stripe() finds the stripe. So the stripe count isn't 1 any more.

V2: keeps the BUG_ON suggested by Neil.

Signed-off-by: Shaohua Li <shli@fusionio.com>
Signed-off-by: NeilBrown <neilb@suse.de>
(cherry picked from commit c7a6d35e463caacab08ca0333bdec5b8bdce8bbb)
Signed-off-by: Jes Sorensen <Jes.Sorensen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/raid5.c b/drivers/md/raid5.c
index 7d8f45e..4d8eea7 100644
--- a/drivers/md/raid5.c
+++ b/drivers/md/raid5.c
@@ -4371,8 +4371,7 @@ static struct stripe_head *__get_priority_stripe(struct r5conf *conf, int group)
   sh->group = NULL;
  }
  list_del_init(&sh->lru);
- atomic_inc(&sh->count);
- BUG_ON(atomic_read(&sh->count) != 1);
+ BUG_ON(atomic_inc_return(&sh->count) != 1);
  return sh;
 }
 
-- 
1.7.1