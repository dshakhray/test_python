From 428b1e5c6668a9929803381cef398a5ed52d8bc1 Mon Sep 17 00:00:00 2001
From: Radim Krcmar <rkrcmar@redhat.com>
Date: Wed, 12 Nov 2014 16:31:58 -0500
Subject: [virt] kvm: add kvm_arch_sched_in

Message-id: <1415809922-10128-2-git-send-email-rkrcmar@redhat.com>
Patchwork-id: 99845
O-Subject: [RHEL7.1 kernel PATCH 1/5] KVM: add kvm_arch_sched_in
Bugzilla: 1163296
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Andrew Jones <drjones@redhat.com>
RH-Acked-by: Paolo Bonzini <pbonzini@redhat.com>

Introduce preempt notifiers for architecture specific code.
Advantage over creating a new notifier in every arch is slightly simpler
code and guaranteed call order with respect to kvm_sched_in.

Signed-off-by: Radim Krcmar <rkrcmar@redhat.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit e790d9ef6405633b007339d746b709aed43a928d)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

Conflicts:
 arch/arm/kvm/arm.c [not in RHEL7]
 arch/mips/kvm/kvm_mips.c [not in RHEL7]

Signed-off-by: Radim Krcmar <rkrcmar@redhat.com>

diff --git a/arch/powerpc/kvm/powerpc.c b/arch/powerpc/kvm/powerpc.c
index 7efc2b7..31662f4 100644
--- a/arch/powerpc/kvm/powerpc.c
+++ b/arch/powerpc/kvm/powerpc.c
@@ -614,6 +614,10 @@ void kvm_arch_vcpu_uninit(struct kvm_vcpu *vcpu)
  kvmppc_subarch_vcpu_uninit(vcpu);
 }
 
+void kvm_arch_sched_in(struct kvm_vcpu *vcpu, int cpu)
+{
+}
+
 void kvm_arch_vcpu_load(struct kvm_vcpu *vcpu, int cpu)
 {
 #ifdef CONFIG_BOOKE
diff --git a/arch/s390/kvm/kvm-s390.c b/arch/s390/kvm/kvm-s390.c
index 99dd586..50f3b4a 100644
--- a/arch/s390/kvm/kvm-s390.c
+++ b/arch/s390/kvm/kvm-s390.c
@@ -365,6 +365,10 @@ void kvm_arch_vcpu_uninit(struct kvm_vcpu *vcpu)
  /* Nothing todo */
 }
 
+void kvm_arch_sched_in(struct kvm_vcpu *vcpu, int cpu)
+{
+}
+
 void kvm_arch_vcpu_load(struct kvm_vcpu *vcpu, int cpu)
 {
  save_fp_ctl(&vcpu->arch.host_fpregs.fpc);
diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index e05c6f0..793ffab 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -7126,6 +7126,10 @@ void kvm_arch_vcpu_uninit(struct kvm_vcpu *vcpu)
   static_key_slow_dec(&kvm_no_apic_vcpu);
 }
 
+void kvm_arch_sched_in(struct kvm_vcpu *vcpu, int cpu)
+{
+}
+
 int kvm_arch_init_vm(struct kvm *kvm, unsigned long type)
 {
  if (type)
diff --git a/include/linux/kvm_host.h b/include/linux/kvm_host.h
index d5ad8e3..9be71a0 100644
--- a/include/linux/kvm_host.h
+++ b/include/linux/kvm_host.h
@@ -615,6 +615,8 @@ void kvm_arch_exit(void);
 int kvm_arch_vcpu_init(struct kvm_vcpu *vcpu);
 void kvm_arch_vcpu_uninit(struct kvm_vcpu *vcpu);
 
+void kvm_arch_sched_in(struct kvm_vcpu *vcpu, int cpu);
+
 void kvm_arch_vcpu_free(struct kvm_vcpu *vcpu);
 void kvm_arch_vcpu_load(struct kvm_vcpu *vcpu, int cpu);
 void kvm_arch_vcpu_put(struct kvm_vcpu *vcpu);
diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index d11a9e5..c3a2bdc 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -3132,6 +3132,8 @@ static void kvm_sched_in(struct preempt_notifier *pn, int cpu)
  if (vcpu->preempted)
   vcpu->preempted = false;
 
+ kvm_arch_sched_in(vcpu, cpu);
+
  kvm_arch_vcpu_load(vcpu, cpu);
 }
 
-- 
1.7.1