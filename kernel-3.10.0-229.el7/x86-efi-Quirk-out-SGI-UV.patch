From cbfb9f98ba5d7d2c19f54bfdd1712f8d560d84a5 Mon Sep 17 00:00:00 2001
From: Dave Young <dyoung@redhat.com>
Date: Thu, 22 May 2014 02:43:27 -0400
Subject: [x86] efi: Quirk out SGI UV

Message-id: <1400726607-13717-36-git-send-email-dyoung@redhat.com>
Patchwork-id: 80136
O-Subject: [RHEL7.1 PATCH 35/35] x86/efi: Quirk out SGI UV
Bugzilla: 1080109
RH-Acked-by: Chao WANG <chaowang@redhat.com>
RH-Acked-by: Vivek Goyal <vgoyal@redhat.com>

Resolves: bz1080109

Brew build:
https://brewweb.devel.redhat.com/taskinfo?taskID=7480539

Test: Tested kexec/kdump on HP workstation and qemu.

Upstream commit:
commit a5d90c923bcfb9632d998ed06e9569216ad695f3
Author: Borislav Petkov <bp@suse.de>
Date:   Tue Mar 4 17:02:17 2014 +0100

    x86/efi: Quirk out SGI UV

    Alex reported hitting the following BUG after the EFI 1:1 virtual
    mapping work was merged,

     kernel BUG at arch/x86/mm/init_64.c:351!
     invalid opcode: 0000 [#1] SMP
     Call Trace:
      [<ffffffff818aa71d>] init_extra_mapping_uc+0x13/0x15
      [<ffffffff818a5e20>] uv_system_init+0x22b/0x124b
      [<ffffffff8108b886>] ? clockevents_register_device+0x138/0x13d
      [<ffffffff81028dbb>] ? setup_APIC_timer+0xc5/0xc7
      [<ffffffff8108b620>] ? clockevent_delta2ns+0xb/0xd
      [<ffffffff818a3a92>] ? setup_boot_APIC_clock+0x4a8/0x4b7
      [<ffffffff8153d955>] ? printk+0x72/0x74
      [<ffffffff818a1757>] native_smp_prepare_cpus+0x389/0x3d6
      [<ffffffff818957bc>] kernel_init_freeable+0xb7/0x1fb
      [<ffffffff81535530>] ? rest_init+0x74/0x74
      [<ffffffff81535539>] kernel_init+0x9/0xff
      [<ffffffff81541dfc>] ret_from_fork+0x7c/0xb0
      [<ffffffff81535530>] ? rest_init+0x74/0x74

    Getting this thing to work with the new mapping scheme would need more
    work, so automatically switch to the old memmap layout for SGI UV.

    Acked-by: Russ Anderson <rja@sgi.com>
    Cc: Alex Thorlton <athorlton@sgi.com
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/include/asm/efi.h b/arch/x86/include/asm/efi.h
index a1f3189..46e39ba 100644
--- a/arch/x86/include/asm/efi.h
+++ b/arch/x86/include/asm/efi.h
@@ -134,6 +134,7 @@ extern int efi_setup_page_tables(unsigned long pa_memmap, unsigned num_pages);
 extern void efi_cleanup_page_tables(unsigned long pa_memmap, unsigned num_pages);
 extern void __init old_map_region(efi_memory_desc_t *md);
 extern void __init efi_dump_pagetable(void);
+extern void __init efi_apply_memmap_quirks(void);
 
 struct efi_setup_data {
  u64 fw_vendor;
diff --git a/arch/x86/kernel/setup.c b/arch/x86/kernel/setup.c
index 961d33d..20ac806 100644
--- a/arch/x86/kernel/setup.c
+++ b/arch/x86/kernel/setup.c
@@ -1297,14 +1297,8 @@ void __init setup_arch(char **cmdline_p)
  register_refined_jiffies(CLOCK_TICK_RATE);
 
 #ifdef CONFIG_EFI
- /* Once setup is done above, unmap the EFI memory map on
-  * mismatched firmware/kernel archtectures since there is no
-  * support for runtime services.
-  */
- if (efi_enabled(EFI_BOOT) && !efi_is_native()) {
-  pr_info("efi: Setup done, disabling due to 32/64-bit mismatch\n");
-  efi_unmap_memmap();
- }
+ if (efi_enabled(EFI_BOOT))
+  efi_apply_memmap_quirks();
 #endif
 
  rh_check_supported();
diff --git a/arch/x86/platform/efi/efi.c b/arch/x86/platform/efi/efi.c
index 6221e37..3c90af9 100644
--- a/arch/x86/platform/efi/efi.c
+++ b/arch/x86/platform/efi/efi.c
@@ -52,6 +52,7 @@
 #include <asm/tlbflush.h>
 #include <asm/x86_init.h>
 #include <asm/rtc.h>
+#include <asm/uv/uv.h>
 
 #define EFI_DEBUG
 
@@ -1320,3 +1321,22 @@ static int __init parse_efi_cmdline(char *str)
  return 0;
 }
 early_param("efi", parse_efi_cmdline);
+
+void __init efi_apply_memmap_quirks(void)
+{
+ /*
+  * Once setup is done earlier, unmap the EFI memory map on mismatched
+  * firmware/kernel architectures since there is no support for runtime
+  * services.
+  */
+ if (!efi_is_native()) {
+  pr_info("efi: Setup done, disabling due to 32/64-bit mismatch\n");
+  efi_unmap_memmap();
+ }
+
+ /*
+  * UV doesn't support the new EFI pagetable mapping yet.
+  */
+ if (is_uv_system())
+  set_bit(EFI_OLD_MEMMAP, &x86_efi_facility);
+}
-- 
1.7.1