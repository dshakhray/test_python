From bbbbf74c9a771c17f4cfb6fd2a16ffc4ca9ab1c7 Mon Sep 17 00:00:00 2001
From: Steve Dickson <SteveD@redhat.com>
Date: Thu, 18 Sep 2014 14:20:50 -0400
Subject: [fs] nfs: Don't busy-wait on SIGKILL in __nfs_iocounter_wait

Message-id: <1411050057-12417-88-git-send-email-steved@redhat.com>
Patchwork-id: 96220
O-Subject: [RHEL7.1 PATCH 87/94] nfs: Don't busy-wait on SIGKILL in __nfs_iocounter_wait
Bugzilla: 1111708
RH-Acked-by: J. Bruce Fields <bfields@redhat.com>
RH-Acked-by: Benjamin Coddington <bcodding@redhat.com>

From: David Jeffery <djeffery@redhat.com>

If a SIGKILL is sent to a task waiting in __nfs_iocounter_wait,
it will busy-wait or soft lockup in its while loop.
nfs_wait_bit_killable won't sleep, and the loop won't exit on
the error return.

Stop the busy-wait by breaking out of the loop when
nfs_wait_bit_killable returns an error.

Signed-off-by: David Jeffery <djeffery@redhat.com>
Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
Upstream Id: 92a56555bd576c61b27a5cab9f38a33a1e9a1df5
Bugzilla: 1111708
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfs/pagelist.c b/fs/nfs/pagelist.c
index b39470d..a1df2bd 100644
--- a/fs/nfs/pagelist.c
+++ b/fs/nfs/pagelist.c
@@ -116,7 +116,7 @@ __nfs_iocounter_wait(struct nfs_io_counter *c)
   if (atomic_read(&c->io_count) == 0)
    break;
   ret = nfs_wait_bit_killable(&c->flags);
- } while (atomic_read(&c->io_count) != 0);
+ } while (atomic_read(&c->io_count) != 0 && !ret);
  finish_wait(wq, &q.wait);
  return ret;
 }
-- 
1.7.1