From 84554d73b01765c6c9e1fe4a91cca850ae6ceb56 Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <jkysela@redhat.com>
Date: Wed, 3 Sep 2014 07:24:35 -0400
Subject: [alsa] oxygen: Use standard printk helpers

Message-id: <140972823573-186-patchset-jkysela@redhat.com>
Patchwork-id: 90886
O-Subject: [RHEL 7.1 PATCH 185/442] ALSA: oxygen: Use standard printk helpers
Bugzilla: 1112200
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>

Convert with dev_err() and co from snd_printk(), etc.

Signed-off-by: Takashi Iwai <tiwai@suse.de>

(picked from kernel: 03d3ac21780be4d78f8d7679e428bb98fa9411ea)
rhbz#1112200
Signed-off-by: Jaroslav Kysela <jkysela@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/sound/pci/oxygen/oxygen_io.c b/sound/pci/oxygen/oxygen_io.c
index 3274907..4b8a32c 100644
--- a/sound/pci/oxygen/oxygen_io.c
+++ b/sound/pci/oxygen/oxygen_io.c
@@ -147,7 +147,7 @@ void oxygen_write_ac97(struct oxygen *chip, unsigned int codec,
    return;
   }
  }
- snd_printk(KERN_ERR "AC'97 write timeout\n");
+ dev_err(chip->card->dev, "AC'97 write timeout\n");
 }
 EXPORT_SYMBOL(oxygen_write_ac97);
 
@@ -179,7 +179,7 @@ u16 oxygen_read_ac97(struct oxygen *chip, unsigned int codec,
    reg ^= 0xffff;
   }
  }
- snd_printk(KERN_ERR "AC'97 read timeout on codec %u\n", codec);
+ dev_err(chip->card->dev, "AC'97 read timeout on codec %u\n", codec);
  return 0;
 }
 EXPORT_SYMBOL(oxygen_read_ac97);
@@ -208,7 +208,7 @@ static int oxygen_wait_spi(struct oxygen *chip)
       OXYGEN_SPI_BUSY) == 0)
    return 0;
  }
- snd_printk(KERN_ERR "oxygen: SPI wait timeout\n");
+ dev_err(chip->card->dev, "oxygen: SPI wait timeout\n");
  return -EIO;
 }
 
@@ -288,5 +288,5 @@ void oxygen_write_eeprom(struct oxygen *chip, unsigned int index, u16 value)
         & OXYGEN_EEPROM_BUSY))
    return;
  }
- snd_printk(KERN_ERR "EEPROM write timeout\n");
+ dev_err(chip->card->dev, "EEPROM write timeout\n");
 }
diff --git a/sound/pci/oxygen/oxygen_lib.c b/sound/pci/oxygen/oxygen_lib.c
index efa610c..b67e306 100644
--- a/sound/pci/oxygen/oxygen_lib.c
+++ b/sound/pci/oxygen/oxygen_lib.c
@@ -313,7 +313,7 @@ static void oxygen_restore_eeprom(struct oxygen *chip,
   oxygen_clear_bits8(chip, OXYGEN_MISC,
        OXYGEN_MISC_WRITE_PCI_SUBID);
 
-  snd_printk(KERN_INFO "EEPROM ID restored\n");
+  dev_info(chip->card->dev, "EEPROM ID restored\n");
  }
 }
 
@@ -617,13 +617,13 @@ int oxygen_pci_probe(struct pci_dev *pci, int index, char *id,
 
  err = pci_request_regions(pci, DRIVER);
  if (err < 0) {
-  snd_printk(KERN_ERR "cannot reserve PCI resources\n");
+  dev_err(card->dev, "cannot reserve PCI resources\n");
   goto err_pci_enable;
  }
 
  if (!(pci_resource_flags(pci, 0) & IORESOURCE_IO) ||
      pci_resource_len(pci, 0) < OXYGEN_IO_SIZE) {
-  snd_printk(KERN_ERR "invalid PCI I/O range\n");
+  dev_err(card->dev, "invalid PCI I/O range\n");
   err = -ENXIO;
   goto err_pci_regions;
  }
@@ -658,7 +658,7 @@ int oxygen_pci_probe(struct pci_dev *pci, int index, char *id,
  err = request_irq(pci->irq, oxygen_interrupt, IRQF_SHARED,
      KBUILD_MODNAME, chip);
  if (err < 0) {
-  snd_printk(KERN_ERR "cannot grab interrupt %d\n", pci->irq);
+  dev_err(card->dev, "cannot grab interrupt %d\n", pci->irq);
   goto err_card;
  }
  chip->irq = pci->irq;
@@ -796,7 +796,7 @@ static int oxygen_pci_resume(struct device *dev)
  pci_set_power_state(pci, PCI_D0);
  pci_restore_state(pci);
  if (pci_enable_device(pci) < 0) {
-  snd_printk(KERN_ERR "cannot reenable device");
+  dev_err(dev, "cannot reenable device");
   snd_card_disconnect(card);
   return -EIO;
  }
diff --git a/sound/pci/oxygen/xonar_hdmi.c b/sound/pci/oxygen/xonar_hdmi.c
index 136dac6..91d92bc 100644
--- a/sound/pci/oxygen/xonar_hdmi.c
+++ b/sound/pci/oxygen/xonar_hdmi.c
@@ -120,7 +120,7 @@ void xonar_hdmi_uart_input(struct oxygen *chip)
  if (chip->uart_input_count >= 2 &&
      chip->uart_input[chip->uart_input_count - 2] == 'O' &&
      chip->uart_input[chip->uart_input_count - 1] == 'K') {
-  printk(KERN_DEBUG "message from HDMI chip received:\n");
+  dev_dbg(chip->card->dev, "message from HDMI chip received:\n");
   print_hex_dump_bytes("", DUMP_PREFIX_OFFSET,
          chip->uart_input, chip->uart_input_count);
   chip->uart_input_count = 0;
diff --git a/sound/pci/oxygen/xonar_lib.c b/sound/pci/oxygen/xonar_lib.c
index 0ebe7f5..706b1a4 100644
--- a/sound/pci/oxygen/xonar_lib.c
+++ b/sound/pci/oxygen/xonar_lib.c
@@ -56,9 +56,9 @@ static void xonar_ext_power_gpio_changed(struct oxygen *chip)
  if (has_power != data->has_power) {
   data->has_power = has_power;
   if (has_power) {
-   snd_printk(KERN_NOTICE "power restored\n");
+   dev_notice(chip->card->dev, "power restored\n");
   } else {
-   snd_printk(KERN_CRIT
+   dev_crit(chip->card->dev,
        "Hey! Don't unplug the power cable!\n");
    /* TODO: stop PCMs */
   }
-- 
1.7.1