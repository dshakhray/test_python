From a80345520ab546cc3feeece65bd562a2a93ae4ef Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:24:46 -0400
Subject: [fs] ceph: use fl->fl_type to decide flock operation
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-180-git-send-email-sweil@redhat.com>
Patchwork-id: 89729
O-Subject: [PATCH 179/303] ceph: use fl->fl_type to decide flock operation
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: "Yan, Zheng" <zheng.z.yan@intel.com>

VFS does not directly pass flock's operation code to filesystem's
flock callback. It translates the operation code to the form how
posix lock's parameters are presented.

Signed-off-by: Yan, Zheng <zheng.z.yan@intel.com>
(cherry picked from commit 0e8e95d6d74b2326e32274bb0401404cf3486038)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ceph/locks.c b/fs/ceph/locks.c
index ae6d14e..133e006 100644
--- a/fs/ceph/locks.c
+++ b/fs/ceph/locks.c
@@ -91,10 +91,10 @@ int ceph_lock(struct file *file, int cmd, struct file_lock *fl)
  dout("ceph_lock, fl_pid:%d", fl->fl_pid);
 
  /* set wait bit as appropriate, then make command as Ceph expects it*/
- if (F_SETLKW == cmd)
-  wait = 1;
- if (F_GETLK == cmd)
+ if (IS_GETLK(cmd))
   op = CEPH_MDS_OP_GETFILELOCK;
+ else if (IS_SETLKW(cmd))
+  wait = 1;
 
  if (F_RDLCK == fl->fl_type)
   lock_cmd = CEPH_LOCK_SHARED;
@@ -131,20 +131,17 @@ int ceph_flock(struct file *file, int cmd, struct file_lock *fl)
 {
  u8 lock_cmd;
  int err;
- u8 wait = 1;
+ u8 wait = 0;
 
  fl->fl_nspid = get_pid(task_tgid(current));
  dout("ceph_flock, fl_pid:%d", fl->fl_pid);
 
- /* set wait bit, then clear it out of cmd*/
- if (cmd & LOCK_NB)
-  wait = 0;
- cmd = cmd & (LOCK_SH | LOCK_EX | LOCK_UN);
- /* set command sequence that Ceph wants to see:
-    shared lock, exclusive lock, or unlock */
- if (LOCK_SH == cmd)
+ if (IS_SETLKW(cmd))
+  wait = 1;
+
+ if (F_RDLCK == fl->fl_type)
   lock_cmd = CEPH_LOCK_SHARED;
- else if (LOCK_EX == cmd)
+ else if (F_WRLCK == fl->fl_type)
   lock_cmd = CEPH_LOCK_EXCL;
  else
   lock_cmd = CEPH_LOCK_UNLOCK;
-- 
1.7.1