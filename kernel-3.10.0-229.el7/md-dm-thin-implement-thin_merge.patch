From c9e2dc97be0935060c76e9ca0881ef68cfe21cf4 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Thu, 23 Oct 2014 20:01:25 -0400
Subject: [md] dm-thin: implement thin_merge

Message-id: <1414094494-22068-16-git-send-email-snitzer@redhat.com>
Patchwork-id: 98359
O-Subject: [RHEL7.2 PATCH 15/24] dm thin: implement thin_merge
Bugzilla: 1156164
RH-Acked-by: Heinz Mauelshagen <heinzm@redhat.com>
RH-Acked-by: Joe Thornber <thornber@redhat.com>

BZ: 1156164

Upstream linux-dm.git commit 817f7b58e9572fce01d3e6119464cc47e2a51f0a
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Thu Oct 9 15:24:12 2014 -0400

    dm thin: implement thin_merge

    Introduce thin_merge so that any additional constraints from the data
    volume may be taken into account when determing the maximum number of
    sectors that can be issued relative to the specified logical offset.

    This is particularly important if/when the data volume is layered ontop
    of a more sophisticated device (e.g. dm-raid or some other DM target).

    Reviewed-by: Heinz Mauelshagen <heinzm@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/dm-thin.c b/drivers/md/dm-thin.c
index c8ad0df..677346c 100644
--- a/drivers/md/dm-thin.c
+++ b/drivers/md/dm-thin.c
@@ -3287,7 +3287,7 @@ static struct target_type pool_target = {
  .name = "thin-pool",
  .features = DM_TARGET_SINGLETON | DM_TARGET_ALWAYS_WRITEABLE |
       DM_TARGET_IMMUTABLE,
- .version = {1, 13, 0},
+ .version = {1, 14, 0},
  .module = THIS_MODULE,
  .ctr = pool_ctr,
  .dtr = pool_dtr,
@@ -3614,6 +3614,21 @@ err:
  DMEMIT("Error");
 }
 
+static int thin_merge(struct dm_target *ti, struct bvec_merge_data *bvm,
+        struct bio_vec *biovec, int max_size)
+{
+ struct thin_c *tc = ti->private;
+ struct request_queue *q = bdev_get_queue(tc->pool_dev->bdev);
+
+ if (!q->merge_bvec_fn)
+  return max_size;
+
+ bvm->bi_bdev = tc->pool_dev->bdev;
+ bvm->bi_sector = dm_target_offset(ti, bvm->bi_sector);
+
+ return min(max_size, q->merge_bvec_fn(q, bvm, biovec));
+}
+
 static int thin_iterate_devices(struct dm_target *ti,
     iterate_devices_callout_fn fn, void *data)
 {
@@ -3638,7 +3653,7 @@ static int thin_iterate_devices(struct dm_target *ti,
 
 static struct target_type thin_target = {
  .name = "thin",
- .version = {1, 13, 0},
+ .version = {1, 14, 0},
  .module = THIS_MODULE,
  .ctr = thin_ctr,
  .dtr = thin_dtr,
@@ -3648,6 +3663,7 @@ static struct target_type thin_target = {
  .presuspend = thin_presuspend,
  .postsuspend = thin_postsuspend,
  .status = thin_status,
+ .merge = thin_merge,
  .iterate_devices = thin_iterate_devices,
 };
 
-- 
1.7.1