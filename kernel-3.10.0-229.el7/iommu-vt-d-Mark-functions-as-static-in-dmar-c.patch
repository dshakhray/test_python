From 2ebe01ba32c39984b6564a2405bf64352734e917 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 01:31:27 -0400
Subject: [iommu] vt-d: Mark functions as static in dmar.c

Message-id: <20140905013127.30867.24647.stgit@gir.stowe>
Patchwork-id: 91267
O-Subject: [RHEL7.1 PATCH 03/28] iommu/vt-d: Mark functions as static in dmar.c
Bugzilla: 1129808
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Dutile <ddutile@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1129808
Upstream Status: 21004dcd3ba25163d620eddc703185cd50c89a93

commit 21004dcd3ba25163d620eddc703185cd50c89a93
Author: Rashika Kheria <rashika.kheria@gmail.com>
Date:   Wed Dec 18 12:01:46 2013 +0530

    iommu/vt-d: Mark functions as static in dmar.c

    Mark the functions check_zero_address() and dmar_get_fault_reason() as
    static in dmar.c because they are not used outside this file.

    This eliminates the following warnings in dmar.c:
    drivers/iommu/dmar.c:491:12: warning: no previous prototype for 'check_zero_
    drivers/iommu/dmar.c:1116:13: warning: no previous prototype for 'dmar_get_f

    Signed-off-by: Rashika Kheria <rashika.kheria@gmail.com>
    Reviewed-by: Josh Triplett <josh@joshtriplett.org>
    Signed-off-by: Joerg Roedel <joro@8bytes.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/dmar.c b/drivers/iommu/dmar.c
index fda1e8e..b255f06 100644
--- a/drivers/iommu/dmar.c
+++ b/drivers/iommu/dmar.c
@@ -489,7 +489,7 @@ static inline void warn_invalid_dmar(u64 addr, const char *message)
  add_taint(TAINT_FIRMWARE_WORKAROUND, LOCKDEP_STILL_OK);
 }
 
-int __init check_zero_address(void)
+static int __init check_zero_address(void)
 {
  struct acpi_table_dmar *dmar;
  struct acpi_dmar_header *entry_header;
@@ -1114,7 +1114,7 @@ static const char *irq_remap_fault_reasons[] =
 
 #define MAX_FAULT_REASON_IDX  (ARRAY_SIZE(fault_reason_strings) - 1)
 
-const char *dmar_get_fault_reason(u8 fault_reason, int *fault_type)
+static const char *dmar_get_fault_reason(u8 fault_reason, int *fault_type)
 {
  if (fault_reason >= 0x20 && (fault_reason - 0x20 <
      ARRAY_SIZE(irq_remap_fault_reasons))) {
-- 
1.7.1