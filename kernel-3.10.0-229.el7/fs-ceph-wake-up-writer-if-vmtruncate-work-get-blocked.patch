From 5f4d12084f8eb0f5f6bf4be69374f1af3433a63d Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:22:23 -0400
Subject: [fs] ceph: wake up writer if vmtruncate work get blocked
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-37-git-send-email-sweil@redhat.com>
Patchwork-id: 89671
O-Subject: [PATCH 036/303] ceph: wake up writer if vmtruncate work get blocked
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: "Yan, Zheng" <zheng.z.yan@intel.com>

To write data, the writer first acquires the i_mutex, then try getting
caps. The writer may sleep while holding the i_mutex. If the MDS revokes
Fb cap in this case, vmtruncate work can't do its job because i_mutex
is locked. We should wake up the writer and let it truncate the pages.

Signed-off-by: Yan, Zheng <zheng.z.yan@intel.com>
Reviewed-by: Sage Weil <sage@inktank.com>
(cherry picked from commit 85ce127a9adf5ab9e9d57ddf64c858927d5e546d)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ceph/inode.c b/fs/ceph/inode.c
index f3a2abf..2f5edff 100644
--- a/fs/ceph/inode.c
+++ b/fs/ceph/inode.c
@@ -1465,7 +1465,14 @@ static void ceph_vmtruncate_work(struct work_struct *work)
  struct inode *inode = &ci->vfs_inode;
 
  dout("vmtruncate_work %p\n", inode);
- mutex_lock(&inode->i_mutex);
+ if (!mutex_trylock(&inode->i_mutex)) {
+  /*
+   * the i_mutex can be hold by a writer who is waiting for
+   * caps. wake up waiters, they will do pending vmtruncate.
+   */
+  wake_up_all(&ci->i_cap_wq);
+  mutex_lock(&inode->i_mutex);
+ }
  __ceph_do_pending_vmtruncate(inode);
  mutex_unlock(&inode->i_mutex);
  iput(inode);
-- 
1.7.1