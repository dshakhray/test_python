From e6b6639bcd17f1fd57f7b80ca96b8d2b32faaadf Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:13:56 -0400
Subject: [pci] Rename pci_is_bridge() to pci_has_subordinate()

Message-id: <1410545655-205645-608-git-send-email-dzickus@redhat.com>
Patchwork-id: 94542
O-Subject: [RHEL7 PATCH 607/626] PCI: Rename pci_is_bridge() to pci_has_subordinate()
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>
RH-Acked-by: Myron Stowe <mstowe@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 326c1cdae74186bfab3464e8f3378c7fa324be12
Author: Yijing Wang <wangyijing@huawei.com>
Date:   Sun May 4 12:23:36 2014 +0800

    PCI: Rename pci_is_bridge() to pci_has_subordinate()

    Previously, pci_is_bridge() returned true only when a subordinate bus
    existed.  Rename pci_is_bridge() to pci_has_subordinate() to better
    indicate what we're checking.

    No functional change.

    [bhelgaas: changelog]
    Signed-off-by: Yijing Wang <wangyijing@huawei.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/pci-driver.c b/drivers/pci/pci-driver.c
index f51b9f1..260b28a 100644
--- a/drivers/pci/pci-driver.c
+++ b/drivers/pci/pci-driver.c
@@ -637,14 +637,14 @@ static void pci_pm_default_resume(struct pci_dev *pci_dev)
 {
  pci_fixup_device(pci_fixup_resume, pci_dev);
 
- if (!pci_is_bridge(pci_dev))
+ if (!pci_has_subordinate(pci_dev))
   pci_enable_wake(pci_dev, PCI_D0, false);
 }
 
 static void pci_pm_default_suspend(struct pci_dev *pci_dev)
 {
  /* Disable non-bridge devices without PM support */
- if (!pci_is_bridge(pci_dev))
+ if (!pci_has_subordinate(pci_dev))
   pci_disable_enabled_device(pci_dev);
 }
 
@@ -768,7 +768,7 @@ static int pci_pm_suspend_noirq(struct device *dev)
 
  if (!pci_dev->state_saved) {
   pci_save_state(pci_dev);
-  if (!pci_is_bridge(pci_dev))
+  if (!pci_has_subordinate(pci_dev))
    pci_prepare_to_sleep(pci_dev);
  }
 
@@ -1011,7 +1011,7 @@ static int pci_pm_poweroff_noirq(struct device *dev)
    return error;
  }
 
- if (!pci_dev->state_saved && !pci_is_bridge(pci_dev))
+ if (!pci_dev->state_saved && !pci_has_subordinate(pci_dev))
   pci_prepare_to_sleep(pci_dev);
 
  /*
diff --git a/drivers/pci/pci.h b/drivers/pci/pci.h
index 17bbab3..2d3e136 100644
--- a/drivers/pci/pci.h
+++ b/drivers/pci/pci.h
@@ -77,7 +77,7 @@ static inline void pci_wakeup_event(struct pci_dev *dev)
  pm_wakeup_event(&dev->dev, 100);
 }
 
-static inline bool pci_is_bridge(struct pci_dev *pci_dev)
+static inline bool pci_has_subordinate(struct pci_dev *pci_dev)
 {
  return !!(pci_dev->subordinate);
 }
-- 
1.7.1