From 851a0356199def35c66308141e54c640bef11bdc Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:10:40 -0400
Subject: [usb] Revert: pl2303: restrict the divisor based baud rate encoding method to the "HX" chip type

Message-id: <1410887463-20674-569-git-send-email-dzickus@redhat.com>
Patchwork-id: 95413
O-Subject: [RHEL7 PATCH 568/591] Revert "USB: pl2303: restrict the divisor based baud rate encoding method to the "HX" chip type"
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 54dc5792ea933a3ff8c62a1f9ea9e4e6cbdd324a
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Nov 1 09:19:56 2013 -0700

    Revert "USB: pl2303: restrict the divisor based baud rate encoding method to the "HX" chip type"

    This reverts commit b8bdad608213caffa081a97d2e937e5fe08c4046.

    Revert all of the pl2303 changes that went into 3.12-rc1 and -rc2 as
    they cause regressions on some versions of the chip.  This will all be
    revisited for later kernel versions when we can figure out how to handle
    this in a way that does not break working devices.

    Reported-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Cc: Frank Schafer <fschaefer.oss@googlemail.com>
    Acked-by: Johan Hovold <jhovold@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/serial/pl2303.c b/drivers/usb/serial/pl2303.c
index d3eb44a..1317e1b 100644
--- a/drivers/usb/serial/pl2303.c
+++ b/drivers/usb/serial/pl2303.c
@@ -309,14 +309,10 @@ static void pl2303_encode_baudrate(struct tty_struct *tty,
  if (spriv->type != HX)
   baud = min_t(int, baud, 1228800);
 
- if (spriv->type != HX || baud <= 115200) {
-  /* Direct (standard) baud rate encoding method */
+ if (baud <= 115200) {
   put_unaligned_le32(baud, buf);
  } else {
   /*
-   * NOTE: it's not clear if the type_0/1 chips
-   * support this method
-   *
    * Apparently the formula for higher speeds is:
    * baudrate = 12M * 32 / (2^buf[1]) / buf[0]
    */
-- 
1.7.1