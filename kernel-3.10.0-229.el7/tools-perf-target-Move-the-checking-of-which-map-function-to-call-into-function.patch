From 34203536b4fab458b000934ce267f8c0599d166c Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:49:19 -0400
Subject: [tools] perf/target: Move the checking of which map function to call into function

Message-id: <1408953210-26343-72-git-send-email-jolsa@redhat.com>
Patchwork-id: 88800
O-Subject: [PATCH RHEL7.1 BZ1133083 071/322] perf target: Move the checking of which map function to call into function.
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 9c105fbc94a67ea5943d309d9a78ca669e0ddc61
Author: Dongsheng Yang <yangds.fnst@cn.fujitsu.com>
Date: Wed Dec 4 17:56:40 2013 -0500

description
===========
Check for cpu_map__dummy_new() or cpu_map__new() to be called in
perf_evlist__create_maps() is more complicated.

This patch moves the checking work into target.h, combining two
conditions and making perf_evlist__create_maps() more readable.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/evlist.c b/tools/perf/util/evlist.c
index 76fa764..7bb6ee1 100644
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@ -819,13 +819,7 @@ int perf_evlist__create_maps(struct perf_evlist *evlist, struct target *target)
  if (evlist->threads == NULL)
   return -1;
 
- if (target->default_per_cpu)
-  evlist->cpus = target->per_thread ?
-     cpu_map__dummy_new() :
-     cpu_map__new(target->cpu_list);
- else if (target__has_task(target))
-  evlist->cpus = cpu_map__dummy_new();
- else if (!target__has_cpu(target) && !target->uses_mmap)
+ if (target__uses_dummy_map(target))
   evlist->cpus = cpu_map__dummy_new();
  else
   evlist->cpus = cpu_map__new(target->cpu_list);
diff --git a/tools/perf/util/target.h b/tools/perf/util/target.h
index 31dd2e9..7381b1c 100644
--- a/tools/perf/util/target.h
+++ b/tools/perf/util/target.h
@@ -63,4 +63,17 @@ static inline bool target__none(struct target *target)
  return !target__has_task(target) && !target__has_cpu(target);
 }
 
+static inline bool target__uses_dummy_map(struct target *target)
+{
+ bool use_dummy = false;
+
+ if (target->default_per_cpu)
+  use_dummy = target->per_thread ? true : false;
+ else if (target__has_task(target) ||
+          (!target__has_cpu(target) && !target->uses_mmap))
+  use_dummy = true;
+
+ return use_dummy;
+}
+
 #endif /* _PERF_TARGET_H */
-- 
1.7.1