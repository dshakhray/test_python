From a13badf2288367427d3c70bf122b3bf8483fbb5c Mon Sep 17 00:00:00 2001
From: Jason Wang <jasowang@redhat.com>
Date: Mon, 29 Sep 2014 00:58:46 -0400
Subject: [virt] hyperv/vmbus: Fix a bug in the channel callback dispatch code

Message-id: <1411952358-34104-3-git-send-email-jasowang@redhat.com>
Patchwork-id: 96761
O-Subject: [RHEL7.1 PATCH 02/34] Drivers: hv: vmbus: Fix a bug in the channel callback dispatch code
Bugzilla: 1146357
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Vitaly Kuznetsov <vkuznets@redhat.com>

From: K. Y. Srinivasan <kys@microsoft.com>

Starting with Win8, we have implemented several optimizations to improve the
scalability and performance of the VMBUS transport between the Host and the
Guest. Some of the non-performance critical services cannot leverage these
optimization since they only read and process one message at a time.
Make adjustments to the callback dispatch code to account for the way
non-performance critical drivers handle reading of the channel.

Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
Cc: <stable@vger.kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit affb1aff300ddee54df307812b38f166e8a865ef)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/hv/connection.c b/drivers/hv/connection.c
index 3d96218..cad8295 100644
--- a/drivers/hv/connection.c
+++ b/drivers/hv/connection.c
@@ -340,9 +340,13 @@ static void process_chn_event(u32 relid)
    */
 
   do {
-   hv_begin_read(&channel->inbound);
+   if (read_state)
+    hv_begin_read(&channel->inbound);
    channel->onchannel_callback(arg);
-   bytes_to_read = hv_end_read(&channel->inbound);
+   if (read_state)
+    bytes_to_read = hv_end_read(&channel->inbound);
+   else
+    bytes_to_read = 0;
   } while (read_state && (bytes_to_read != 0));
  } else {
   pr_err("no channel callback for relid - %u\n", relid);
-- 
1.7.1