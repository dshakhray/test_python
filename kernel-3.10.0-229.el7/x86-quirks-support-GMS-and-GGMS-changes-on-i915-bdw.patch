From db0a63933d3458f75c071ce7d81dc0b3d8ff2bde Mon Sep 17 00:00:00 2001
From: Rob Clark <rclark@redhat.com>
Date: Mon, 27 Oct 2014 18:36:33 -0400
Subject: [x86] quirks: support GMS and GGMS changes on i915/bdw

Message-id: <1414434997-7515-3-git-send-email-rclark@redhat.com>
Patchwork-id: 98475
O-Subject: [RHEL7 drm 2/6] drm/i915/bdw: support GMS and GGMS changes
Bugzilla: 1154053
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Dave Airlie <airlied@redhat.com>

RHBZ: 1154053
Upstream: 9459d252378aea80d28dc12bfec9a0d31b2a61bf

Note the drivers/gpu/drm/i915 part of this patch is already in rhel7
(commit-id 4f0d0bf54174520ca87cff123a77a0d6c69dc51b)

commit 9459d252378aea80d28dc12bfec9a0d31b2a61bf
Author:     Ben Widawsky <benjamin.widawsky@intel.com>
AuthorDate: Sun Nov 3 16:53:55 2013 -0800
Commit:     Daniel Vetter <daniel.vetter@ffwll.ch>
CommitDate: Fri Nov 8 18:09:39 2013 +0100

    drm/i915/bdw: support GMS and GGMS changes

    All the BARs have the ability to grow.

    v2: Pulled out the simulator workaround to a separate patch.
    Rebased.

    v3: Rebase onto latest vlv patches from Jesse.

    v4: Rebased on top of the early stolen quirk patch from Jesse.

    v5: Use the new macro names.
    s/INTEL_BDW_PCI_IDS_D/INTEL_BDW_D_IDS
    s/INTEL_BDW_PCI_IDS_M/INTEL_BDW_M_IDS
    It's Jesse's fault for not following the convention I originally set.

    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Jesse Barnes <jbarnes@virtuousgeek.org>
    Signed-off-by: Ben Widawsky <ben@bwidawsk.net>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>

Signed-off-by: Rob Clark <rclark@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kernel/early-quirks.c b/arch/x86/kernel/early-quirks.c
index b3cd3eb..96f958d 100644
--- a/arch/x86/kernel/early-quirks.c
+++ b/arch/x86/kernel/early-quirks.c
@@ -313,6 +313,16 @@ static size_t __init gen6_stolen_size(int num, int slot, int func)
  return gmch_ctrl << 25; /* 32 MB units */
 }
 
+static inline size_t gen8_stolen_size(int num, int slot, int func)
+{
+ u16 gmch_ctrl;
+
+ gmch_ctrl = read_pci_config_16(num, slot, func, SNB_GMCH_CTRL);
+ gmch_ctrl >>= BDW_GMCH_GMS_SHIFT;
+ gmch_ctrl &= BDW_GMCH_GMS_MASK;
+ return gmch_ctrl << 25; /* 32 MB units */
+}
+
 typedef size_t (*stolen_size_fn)(int num, int slot, int func);
 
 static struct pci_device_id intel_stolen_ids[] __initdata = {
@@ -336,6 +346,8 @@ static struct pci_device_id intel_stolen_ids[] __initdata = {
  INTEL_IVB_D_IDS(gen6_stolen_size),
  INTEL_HSW_D_IDS(gen6_stolen_size),
  INTEL_HSW_M_IDS(gen6_stolen_size),
+ INTEL_BDW_M_IDS(gen8_stolen_size),
+ INTEL_BDW_D_IDS(gen8_stolen_size)
 };
 
 static void __init intel_graphics_stolen(int num, int slot, int func)
-- 
1.7.1