From ae1c91d09ef37b8844d40d8f3117135fd1fd8dd0 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:05:02 -0400
Subject: [fs] btrfs: fix use-after-free when cloning a trailing file hole

Message-id: <1407179109-13714-416-git-send-email-sandeen@redhat.com>
Patchwork-id: 87344
O-Subject: [RHEL7.1 PATCH 415/422] Btrfs: fix use-after-free when cloning a trailing file hole
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Filipe Manana <fdmanana@gmail.com>

commit 14f5979633a67de81b9bd4a36a0eb99125728f9b
Author: Filipe Manana <fdmanana@gmail.com>
Date:   Sun Jun 29 21:45:40 2014 +0100

    Btrfs: fix use-after-free when cloning a trailing file hole

    The transaction handle was being used after being freed.

    Cc: Chris Mason <clm@fb.com>
    Signed-off-by: Filipe David Borba Manana <fdmanana@gmail.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/ioctl.c b/fs/btrfs/ioctl.c
index 6ea1546..dfb460e 100644
--- a/fs/btrfs/ioctl.c
+++ b/fs/btrfs/ioctl.c
@@ -3139,7 +3139,6 @@ out:
 static void clone_update_extent_map(struct inode *inode,
         const struct btrfs_trans_handle *trans,
         const struct btrfs_path *path,
-        struct btrfs_file_extent_item *fi,
         const u64 hole_offset,
         const u64 hole_len)
 {
@@ -3154,7 +3153,11 @@ static void clone_update_extent_map(struct inode *inode,
   return;
  }
 
- if (fi) {
+ if (path) {
+  struct btrfs_file_extent_item *fi;
+
+  fi = btrfs_item_ptr(path->nodes[0], path->slots[0],
+        struct btrfs_file_extent_item);
   btrfs_extent_item_to_extent_map(inode, path, fi, false, em);
   em->generation = -1;
   if (btrfs_file_extent_type(path->nodes[0], fi) ==
@@ -3508,18 +3511,15 @@ process_slot:
          btrfs_item_ptr_offset(leaf, slot),
          size);
     inode_add_bytes(inode, datal);
-    extent = btrfs_item_ptr(leaf, slot,
-      struct btrfs_file_extent_item);
    }
 
    /* If we have an implicit hole (NO_HOLES feature). */
    if (drop_start < new_key.offset)
     clone_update_extent_map(inode, trans,
-      path, NULL, drop_start,
+      NULL, drop_start,
       new_key.offset - drop_start);
 
-   clone_update_extent_map(inode, trans, path,
-      extent, 0, 0);
+   clone_update_extent_map(inode, trans, path, 0, 0);
 
    btrfs_mark_buffer_dirty(leaf);
    btrfs_release_path(path);
@@ -3562,12 +3562,10 @@ process_slot:
    btrfs_end_transaction(trans, root);
    goto out;
   }
+  clone_update_extent_map(inode, trans, NULL, last_dest_end,
+     destoff + len - last_dest_end);
   ret = clone_finish_inode_update(trans, inode, destoff + len,
       destoff, olen);
-  if (ret)
-   goto out;
-  clone_update_extent_map(inode, trans, path, NULL, last_dest_end,
-     destoff + len - last_dest_end);
  }
 
 out:
-- 
1.7.1