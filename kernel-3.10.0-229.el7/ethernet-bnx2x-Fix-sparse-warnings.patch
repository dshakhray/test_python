From b5587e1f3efc0913ad7b51f55d631929085329e0 Mon Sep 17 00:00:00 2001
From: Michal Schmidt <mschmidt@redhat.com>
Date: Fri, 5 Sep 2014 19:50:01 -0400
Subject: [ethernet] bnx2x: Fix sparse warnings

Message-id: <1409946615-5862-57-git-send-email-mschmidt@redhat.com>
Patchwork-id: 91602
O-Subject: [RHEL7.1 PATCH 56/70] bnx2x: Fix sparse warnings
Bugzilla: 1119861 1060671 1089402
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

BZ: https://bugzilla.redhat.com/show_bug.cgi?id=1060671
BZ: https://bugzilla.redhat.com/show_bug.cgi?id=1089402
BZ: https://bugzilla.redhat.com/show_bug.cgi?id=1119861

Upstream commit:
commit 56daf66d3ca9558a71683779eec4f03c878f4de2
Author: Yuval Mintz <Yuval.Mintz@qlogic.com>
Date:   Thu Aug 28 08:07:32 2014 +0300

    bnx2x: Fix sparse warnings

    This fixes a sprase warning introduced recently by commit
    eeed018cbfa30 ("bnx2x: Add timestamping and PTP hardware clock support"),
    as well as another unrelated sparse endian issue.

    Signed-off-by: Yuval Mintz <Yuval.Mintz@qlogic.com>
    Signed-off-by: Ariel Elior <Ariel.Elior@qlogic.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c
index 396b67c..ec5af12 100644
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c
@@ -1064,7 +1064,7 @@ reuse_rx:
   skb_record_rx_queue(skb, fp->rx_queue);
 
   /* Check if this packet was timestamped */
-  if (unlikely(le16_to_cpu(cqe->fast_path_cqe.type_error_flags) &
+  if (unlikely(cqe->fast_path_cqe.type_error_flags &
         (1 << ETH_FAST_PATH_RX_CQE_PTP_PKT_SHIFT)))
    bnx2x_set_rx_ts(bp, skb);
 
diff --git a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_sp.c b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_sp.c
index 954b35b..8e10bd2 100644
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_sp.c
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_sp.c
@@ -4063,6 +4063,13 @@ static int bnx2x_setup_rss(struct bnx2x *bp,
  if (test_bit(BNX2X_RSS_GRE_INNER_HDRS, &p->rss_flags))
   caps |= ETH_RSS_UPDATE_RAMROD_DATA_GRE_INNER_HDRS_CAPABILITY;
 
+ /* RSS keys */
+ if (test_bit(BNX2X_RSS_SET_SRCH, &p->rss_flags)) {
+  memcpy(&data->rss_key[0], &p->rss_key[0],
+         sizeof(data->rss_key));
+  caps |= ETH_RSS_UPDATE_RAMROD_DATA_UPDATE_RSS_KEY;
+ }
+
  data->capabilities = cpu_to_le16(caps);
 
  /* Hashing mask */
@@ -4084,13 +4091,6 @@ static int bnx2x_setup_rss(struct bnx2x *bp,
  if (netif_msg_ifup(bp))
   bnx2x_debug_print_ind_table(bp, p);
 
- /* RSS keys */
- if (test_bit(BNX2X_RSS_SET_SRCH, &p->rss_flags)) {
-  memcpy(&data->rss_key[0], &p->rss_key[0],
-         sizeof(data->rss_key));
-  data->capabilities |= ETH_RSS_UPDATE_RAMROD_DATA_UPDATE_RSS_KEY;
- }
-
  /* No need for an explicit memory barrier here as long as we
   * ensure the ordering of writing to the SPQ element
   * and updating of the SPQ producer which involves a memory
-- 
1.7.1