From e2d6ff24555d4d8d3a7c2ec0375b332cb8951052 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:06:15 -0400
Subject: [usb] uas: Fix reset locking

Message-id: <1410887463-20674-304-git-send-email-dzickus@redhat.com>
Patchwork-id: 95517
O-Subject: [RHEL7 PATCH 303/591] uas: Fix reset locking
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit be326f4c9bdfdff8a85145fb89b0a44c4d20ebc6
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Sep 22 16:27:02 2013 +0200

    uas: Fix reset locking

    Fix the uas_eh_bus_reset_handler not properly taking the usbdev lock
    before calling usb_device_reset, the usb-core expects this lock to be
    taken when usb_device_reset is called.

    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/storage/uas.c b/drivers/usb/storage/uas.c
index 6ad5de9..36ef82a 100644
--- a/drivers/usb/storage/uas.c
+++ b/drivers/usb/storage/uas.c
@@ -804,6 +804,13 @@ static int uas_eh_bus_reset_handler(struct scsi_cmnd *cmnd)
  struct usb_device *udev = devinfo->udev;
  int err;
 
+ err = usb_lock_device_for_reset(udev, devinfo->intf);
+ if (err) {
+  shost_printk(KERN_ERR, sdev->host,
+        "%s FAILED to get lock err %d\n", __func__, err);
+  return FAILED;
+ }
+
  shost_printk(KERN_INFO, sdev->host, "%s start\n", __func__);
  devinfo->resetting = 1;
  uas_abort_work(devinfo);
@@ -817,6 +824,8 @@ static int uas_eh_bus_reset_handler(struct scsi_cmnd *cmnd)
   uas_configure_endpoints(devinfo);
  devinfo->resetting = 0;
 
+ usb_unlock_device(udev);
+
  if (err) {
   shost_printk(KERN_INFO, sdev->host, "%s FAILED\n", __func__);
   return FAILED;
-- 
1.7.1