From a4b3ad72eb25b6fb474646b091d6c4362c5e86e8 Mon Sep 17 00:00:00 2001
From: Chad Dupuis <cdupuis@redhat.com>
Date: Thu, 21 Aug 2014 13:05:01 -0400
Subject: [ethernet] qlcnic: Convert uses of compare_ether_addr to ether_addr_equal

Message-id: <1408626422-3941-18-git-send-email-cdupuis@redhat.com>
Patchwork-id: 88564
O-Subject: [PATCH RHEL 7.1 017/138] drivers/net/ethernet/qlogic: Convert uses of compare_ether_addr to ether_addr_equal
Bugzilla: 1089352
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Joe Perches <joe@perches.com>

Bug 1089352 (https://bugzilla.redhat.com/show_bug.cgi?id=1089352)

net commit id 7367d0b573d149550d2ae25c402984b98f8f422e

Use the new bool function ether_addr_equal to add
some clarity and reduce the likelihood for misuse
of compare_ether_addr for sorting.

Done via cocci script: (and a little typing)

$ cat compare_ether_addr.cocci
@@
expression a,b;
@@
- !compare_ether_addr(a, b)
+ ether_addr_equal(a, b)

@@
expression a,b;
@@
- compare_ether_addr(a, b)
+ !ether_addr_equal(a, b)

@@
expression a,b;
@@
- !ether_addr_equal(a, b) == 0
+ ether_addr_equal(a, b)

@@
expression a,b;
@@
- !ether_addr_equal(a, b) != 0
+ !ether_addr_equal(a, b)

@@
expression a,b;
@@
- ether_addr_equal(a, b) == 0
+ !ether_addr_equal(a, b)

@@
expression a,b;
@@
- ether_addr_equal(a, b) != 0
+ ether_addr_equal(a, b)

@@
expression a,b;
@@
- !!ether_addr_equal(a, b)
+ ether_addr_equal(a, b)

Signed-off-by: Joe Perches <joe@perches.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_sriov_pf.c b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_sriov_pf.c
index a9bc651..330d9a8 100644
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_sriov_pf.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_sriov_pf.c
@@ -1652,14 +1652,14 @@ int qlcnic_sriov_set_vf_mac(struct net_device *netdev, int vf, u8 *mac)
  if (!is_valid_ether_addr(mac) || vf >= num_vfs)
   return -EINVAL;
 
- if (!compare_ether_addr(adapter->mac_addr, mac)) {
+ if (ether_addr_equal(adapter->mac_addr, mac)) {
   netdev_err(netdev, "MAC address is already in use by the PF\n");
   return -EINVAL;
  }
 
  for (i = 0; i < num_vfs; i++) {
   vf_info = &sriov->vf_info[i];
-  if (!compare_ether_addr(vf_info->vp->mac, mac)) {
+  if (ether_addr_equal(vf_info->vp->mac, mac)) {
    netdev_err(netdev,
        "MAC address is already in use by VF %d\n",
        i);
-- 
1.7.1