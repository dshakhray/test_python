From 77c89e9a667b1245950b0d1545f16552e57e5184 Mon Sep 17 00:00:00 2001
From: Hannes Frederic Sowa <hannes@redhat.com>
Date: Mon, 8 Dec 2014 17:33:05 -0500
Subject: [net] ipv6: move ip6_sk_accept_pmtu from generic pmtu update path to ipv6 one

Message-id: <9485b7053790b54b0ebc6ba9a50f86f9963af935.1418058212.git.hannes@redhat.com>
Patchwork-id: 101183
O-Subject: [RHEL7.1 net 09/13] ipv6: move ip6_sk_accept_pmtu from generic pmtu update path to ipv6 one
Bugzilla: 1170116
RH-Acked-by: Jiri Benc <jbenc@redhat.com>
RH-Acked-by: Flavio Leitner <fbl@redhat.com>
RH-Acked-by: Daniel Borkmann <dborkman@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1170116
Upstream Status: 790e38bc26c4db72a1905c51daaa502e48081616
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=8344420

Upstream Commit:
commit 790e38bc26c4db72a1905c51daaa502e48081616
Author: Hannes Frederic Sowa <hannes@stressinduktion.org>
Date:   Thu Dec 19 12:54:58 2013 +0100

    ipv6: move ip6_sk_accept_pmtu from generic pmtu update path to ipv6 one

    In commit 93b36cf3425b9b ("ipv6: support IPV6_PMTU_INTERFACE on sockets")
    I made a horrible mistake to add ip6_sk_accept_pmtu to the generic
    sctp_icmp_frag_needed path. This results in build warnings if IPv6 is
    disabled which were luckily caught by Fengguang's kbuild bot. But it
    also leads to a kernel panic IPv4 frag-needed packet is received.

    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Acked-by: Daniel Borkmann <dborkman@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Hannes Frederic Sowa <hannes@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/sctp/input.c b/net/sctp/input.c
index 3144291..cdb16dc 100644
--- a/net/sctp/input.c
+++ b/net/sctp/input.c
@@ -400,9 +400,6 @@ void sctp_icmp_frag_needed(struct sock *sk, struct sctp_association *asoc,
  if (!t || (t->pathmtu <= pmtu))
   return;
 
- if (!ip6_sk_accept_pmtu(sk))
-  return;
-
  if (sock_owned_by_user(sk)) {
   asoc->pmtu_pending = 1;
   t->pmtu_pending = 1;
diff --git a/net/sctp/ipv6.c b/net/sctp/ipv6.c
index c8dd427..c3a2fde 100644
--- a/net/sctp/ipv6.c
+++ b/net/sctp/ipv6.c
@@ -179,7 +179,8 @@ SCTP_STATIC void sctp_v6_err(struct sk_buff *skb, struct inet6_skb_parm *opt,
 
  switch (type) {
  case ICMPV6_PKT_TOOBIG:
-  sctp_icmp_frag_needed(sk, asoc, transport, ntohl(info));
+  if (ip6_sk_accept_pmtu(sk))
+   sctp_icmp_frag_needed(sk, asoc, transport, ntohl(info));
   goto out_unlock;
  case ICMPV6_PARAMPROB:
   if (ICMPV6_UNK_NEXTHDR == code) {
-- 
1.7.1