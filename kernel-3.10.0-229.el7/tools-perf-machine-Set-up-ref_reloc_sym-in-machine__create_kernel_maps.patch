From c58b372bf3ca92902a7fa1c3c2b1e56a6645f40e Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:53:10 -0400
Subject: [tools] perf/machine: Set up ref_reloc_sym in machine__create_kernel_maps()

Message-id: <1408953210-26343-303-git-send-email-jolsa@redhat.com>
Patchwork-id: 88935
O-Subject: [PATCH RHEL7.1 BZ1133083 302/322] perf machine: Set up ref_reloc_sym in machine__create_kernel_maps()
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 5512cf24bed2de56f1ef44b6cc9a0a9b15499cea
Author: Adrian Hunter <adrian.hunter@intel.com>
Date: Wed Jan 29 16:14:39 2014 +0200

description
===========
The ref_reloc_sym is always needed for the kernel map in order to check
for relocation.  Consequently set it up when the kernel map is created.
Otherwise it was only being set up by 'perf record'.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/machine.c b/tools/perf/util/machine.c
index 290c2e6..c872991 100644
--- a/tools/perf/util/machine.c
+++ b/tools/perf/util/machine.c
@@ -832,9 +832,25 @@ static int machine__create_modules(struct machine *machine)
  return 0;
 }
 
+const char *ref_reloc_sym_names[] = {"_text", "_stext", NULL};
+
 int machine__create_kernel_maps(struct machine *machine)
 {
  struct dso *kernel = machine__get_kernel(machine);
+ char filename[PATH_MAX];
+ const char *name;
+ u64 addr = 0;
+ int i;
+
+ machine__get_kallsyms_filename(machine, filename, PATH_MAX);
+
+ for (i = 0; (name = ref_reloc_sym_names[i]) != NULL; i++) {
+  addr = kallsyms__get_function_start(filename, name);
+  if (addr)
+   break;
+ }
+ if (!addr)
+  return -1;
 
  if (kernel == NULL ||
      __machine__create_kernel_maps(machine, kernel) < 0)
@@ -853,6 +869,13 @@ int machine__create_kernel_maps(struct machine *machine)
   * Now that we have all the maps created, just set the ->end of them:
   */
  map_groups__fixup_end(&machine->kmaps);
+
+ if (maps__set_kallsyms_ref_reloc_sym(machine->vmlinux_maps, name,
+          addr)) {
+  machine__destroy_kernel_maps(machine);
+  return -1;
+ }
+
  return 0;
 }
 
diff --git a/tools/perf/util/machine.h b/tools/perf/util/machine.h
index 4771330..f77e91e 100644
--- a/tools/perf/util/machine.h
+++ b/tools/perf/util/machine.h
@@ -18,6 +18,8 @@ union perf_event;
 #define HOST_KERNEL_ID   (-1)
 #define DEFAULT_GUEST_KERNEL_ID  (0)
 
+extern const char *ref_reloc_sym_names[];
+
 struct machine {
  struct rb_node   rb_node;
  pid_t    pid;
-- 
1.7.1