From 21b2af869e97dd41e82db71500411abda0dfdb95 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Wed, 16 Jul 2014 20:42:29 -0400
Subject: [md] dm-mpath: do not call pg_init when it is already running

Message-id: <1405543364-20901-26-git-send-email-snitzer@redhat.com>
Patchwork-id: 85904
O-Subject: [RHEL7.1 PATCH 25/40] dm mpath: do not call pg_init when it is already running
Bugzilla: 1117872
RH-Acked-by: Mikulas Patocka <mpatocka@redhat.com>
RH-Acked-by: Heinz Mauelshagen <heinzm@redhat.com>

BZ: 1117872

Upstream commit 17f4ff45b58742e2cb32fce6e406dbdb4b32a1e7
Author: Hannes Reinecke <hare@suse.de>
Date:   Fri Feb 28 15:33:42 2014 +0100

    dm mpath: do not call pg_init when it is already running

    This patch moves condition checks as a preparation of following
    patches and has no effect on behaviour.
    process_queued_ios() is the only caller of __pg_init_all_paths()
    and 2 condition checks are moved from outside to inside without
    side effects.

    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Reviewed-by: Jun'ichi Nomura <j-nomura@ce.jp.nec.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/dm-mpath.c b/drivers/md/dm-mpath.c
index 3b7ea3e..b42d040 100644
--- a/drivers/md/dm-mpath.c
+++ b/drivers/md/dm-mpath.c
@@ -261,6 +261,9 @@ static void __pg_init_all_paths(struct multipath *m)
  struct pgpath *pgpath;
  unsigned long pg_init_delay = 0;
 
+ if (m->pg_init_in_progress || m->pg_init_disabled)
+  return;
+
  m->pg_init_count++;
  m->pg_init_required = 0;
  if (m->pg_init_delay_retry)
@@ -501,8 +504,7 @@ static void process_queued_ios(struct work_struct *work)
      (!pgpath && !m->queue_if_no_path))
   must_queue = 0;
 
- if (m->pg_init_required && !m->pg_init_in_progress && pgpath &&
-     !m->pg_init_disabled)
+ if (pgpath && m->pg_init_required)
   __pg_init_all_paths(m);
 
  spin_unlock_irqrestore(&m->lock, flags);
-- 
1.7.1