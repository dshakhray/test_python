From 9732d4612f1eab48a257ffab346ec4e1d4b10626 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:12:04 -0400
Subject: [powerpc] powernv: Don't use pe->pbus to get the domain number

Message-id: <1410545655-205645-496-git-send-email-dzickus@redhat.com>
Patchwork-id: 94433
O-Subject: [RHEL7 PATCH 495/626] powerpc/powernv: Don't use pe->pbus to get the domain number
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit e9bc03fe2274bfdac8870025f81571ebfbc92c78
Author: Gavin Shan <gwshan@linux.vnet.ibm.com>
Date:   Thu Apr 24 18:00:29 2014 +1000

    powerpc/powernv: Don't use pe->pbus to get the domain number

    If the PE contains single PCI function, "pe->pbus" would be NULL.
    It's not reliable to be used by pci_domain_nr().  We just grab the
    PCI domain number from the PCI host controller (struct pci_controller)
    instance.

    Signed-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/platforms/powernv/pci-ioda.c b/arch/powerpc/platforms/powernv/pci-ioda.c
index 207911e..e219129 100644
--- a/arch/powerpc/platforms/powernv/pci-ioda.c
+++ b/arch/powerpc/platforms/powernv/pci-ioda.c
@@ -649,7 +649,7 @@ static void pnv_pci_ioda_setup_dma_pe(struct pnv_phb *phb,
      TCE_PCI_SWINV_PAIR);
  }
  iommu_init_table(tbl, phb->hose->node);
- iommu_register_group(tbl, pci_domain_nr(pe->pbus), pe->pe_number);
+ iommu_register_group(tbl, phb->hose->global_number, pe->pe_number);
 
  if (pe->pdev)
   set_iommu_table_base_and_group(&pe->pdev->dev, tbl);
@@ -775,7 +775,7 @@ static void pnv_pci_ioda2_setup_dma_pe(struct pnv_phb *phb,
   tbl->it_type |= (TCE_PCI_SWINV_CREATE | TCE_PCI_SWINV_FREE);
  }
  iommu_init_table(tbl, phb->hose->node);
- iommu_register_group(tbl, pci_domain_nr(pe->pbus), pe->pe_number);
+ iommu_register_group(tbl, phb->hose->global_number, pe->pe_number);
 
  if (pe->pdev)
   set_iommu_table_base_and_group(&pe->pdev->dev, tbl);
-- 
1.7.1