From 5d48c31a0b0f23d0ead1de5a2a684ef5060a06c8 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Fri, 19 Sep 2014 13:17:33 -0400
Subject: [acpi] scan: ACPI device object sysfs attribute for _STA evaluation

Message-id: <1411132654-23843-2-git-send-email-prarit@redhat.com>
Patchwork-id: 96404
O-Subject: [RHEL7.1 PATCH BZ 1140567 1/2] ACPI / scan: ACPI device object sysfs attribute for _STA evaluation
Bugzilla: 1140567
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Jarod Wilson <jarod@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1140567

commit c713cd7f2d799c50a0721bf51d178ea9567215dd
Author: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Date:   Fri Jan 10 16:00:05 2014 -0800

    ACPI / scan: ACPI device object sysfs attribute for _STA evaluation

    This patch adds a "status" attribute for an ACPI device. This status
    attribute shows the value of the _STA object. The _STA object returns
    current status of an ACPI device: enabled, disabled, functioning,
    present.

    Signed-off-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    [rjw: Subject and changelog]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
Cc: Tony Camuso <tcamuso@redhat.com>
Cc: Stefan Assmann <sassmann@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/acpi/scan.c b/drivers/acpi/scan.c
index bc06fa8..1318b2b 100644
--- a/drivers/acpi/scan.c
+++ b/drivers/acpi/scan.c
@@ -571,6 +571,20 @@ acpi_device_sun_show(struct device *dev, struct device_attribute *attr,
 }
 static DEVICE_ATTR(sun, 0444, acpi_device_sun_show, NULL);
 
+static ssize_t status_show(struct device *dev, struct device_attribute *attr,
+    char *buf) {
+ struct acpi_device *acpi_dev = to_acpi_device(dev);
+ acpi_status status;
+ unsigned long long sta;
+
+ status = acpi_evaluate_integer(acpi_dev->handle, "_STA", NULL, &sta);
+ if (ACPI_FAILURE(status))
+  return -ENODEV;
+
+ return sprintf(buf, "%llu\n", sta);
+}
+static DEVICE_ATTR_RO(status);
+
 static int acpi_device_setup_files(struct acpi_device *dev)
 {
  struct acpi_buffer buffer = {ACPI_ALLOCATE_BUFFER, NULL};
@@ -626,6 +640,12 @@ static int acpi_device_setup_files(struct acpi_device *dev)
   dev->pnp.sun = (unsigned long)-1;
  }
 
+ if (acpi_has_method(dev->handle, "_STA")) {
+  result = device_create_file(&dev->dev, &dev_attr_status);
+  if (result)
+   goto end;
+ }
+
         /*
          * If device has _EJ0, 'eject' file is created that is used to trigger
          * hot-removal function from userland.
@@ -681,6 +701,8 @@ static void acpi_device_remove_files(struct acpi_device *dev)
   device_remove_file(&dev->dev, &dev_attr_adr);
  device_remove_file(&dev->dev, &dev_attr_modalias);
  device_remove_file(&dev->dev, &dev_attr_hid);
+ if (acpi_has_method(dev->handle, "_STA"))
+  device_remove_file(&dev->dev, &dev_attr_status);
  if (dev->handle)
   device_remove_file(&dev->dev, &dev_attr_path);
 }
-- 
1.7.1