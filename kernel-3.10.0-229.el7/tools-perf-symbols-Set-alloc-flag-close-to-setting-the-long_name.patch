From b150c1790532c17ff3c194d02a848a0183d369e9 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:50:17 -0400
Subject: [tools] perf/symbols: Set alloc flag close to setting the long_name

Message-id: <1408953210-26343-130-git-send-email-jolsa@redhat.com>
Patchwork-id: 88879
O-Subject: [PATCH RHEL7.1 BZ1133083 129/322] perf symbols: Set alloc flag close to setting the long_name
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 5230fb7db42914e47786a6e920d2624739b0f896
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date: Tue Dec 10 11:58:52 2013 -0300

description
===========
This is a preparatory patch to do with dso__set_long_name what was done
with the short name variant.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/probe-event.c b/tools/perf/util/probe-event.c
index 9c6989c..d7cff57 100644
--- a/tools/perf/util/probe-event.c
+++ b/tools/perf/util/probe-event.c
@@ -154,7 +154,7 @@ static struct dso *kernel_get_module_dso(const char *module)
 
  vmlinux_name = symbol_conf.vmlinux_name;
  if (vmlinux_name) {
-  if (dso__load_vmlinux(dso, map, vmlinux_name, NULL) <= 0)
+  if (dso__load_vmlinux(dso, map, vmlinux_name, false, NULL) <= 0)
    return NULL;
  } else {
   if (dso__load_vmlinux_path(dso, map, NULL) <= 0) {
diff --git a/tools/perf/util/symbol.c b/tools/perf/util/symbol.c
index 265a149..9a5de88 100644
--- a/tools/perf/util/symbol.c
+++ b/tools/perf/util/symbol.c
@@ -1408,7 +1408,8 @@ struct map *map_groups__find_by_name(struct map_groups *mg,
 }
 
 int dso__load_vmlinux(struct dso *dso, struct map *map,
-        const char *vmlinux, symbol_filter_t filter)
+        const char *vmlinux, bool vmlinux_allocated,
+        symbol_filter_t filter)
 {
  int err = -1;
  struct symsrc ss;
@@ -1438,6 +1439,7 @@ int dso__load_vmlinux(struct dso *dso, struct map *map,
   else
    dso->data_type = DSO_BINARY_TYPE__VMLINUX;
   dso__set_long_name(dso, (char *)vmlinux);
+  dso->long_name_allocated = vmlinux_allocated;
   dso__set_loaded(dso, map->type);
   pr_debug("Using %s for symbols\n", symfs_vmlinux);
  }
@@ -1456,21 +1458,16 @@ int dso__load_vmlinux_path(struct dso *dso, struct map *map,
 
  filename = dso__build_id_filename(dso, NULL, 0);
  if (filename != NULL) {
-  err = dso__load_vmlinux(dso, map, filename, filter);
-  if (err > 0) {
-   dso->long_name_allocated = 1;
+  err = dso__load_vmlinux(dso, map, filename, true, filter);
+  if (err > 0)
    goto out;
-  }
   free(filename);
  }
 
  for (i = 0; i < vmlinux_path__nr_entries; ++i) {
-  err = dso__load_vmlinux(dso, map, vmlinux_path[i], filter);
-  if (err > 0) {
-   dso__set_long_name(dso, strdup(vmlinux_path[i]));
-   dso->long_name_allocated = 1;
+  err = dso__load_vmlinux(dso, map, vmlinux_path[i], false, filter);
+  if (err > 0)
    break;
-  }
  }
 out:
  return err;
@@ -1607,15 +1604,8 @@ static int dso__load_kernel_sym(struct dso *dso, struct map *map,
  }
 
  if (!symbol_conf.ignore_vmlinux && symbol_conf.vmlinux_name != NULL) {
-  err = dso__load_vmlinux(dso, map,
-     symbol_conf.vmlinux_name, filter);
-  if (err > 0) {
-   dso__set_long_name(dso,
-        strdup(symbol_conf.vmlinux_name));
-   dso->long_name_allocated = 1;
-   return err;
-  }
-  return err;
+  return dso__load_vmlinux(dso, map, symbol_conf.vmlinux_name,
+      false, filter);
  }
 
  if (!symbol_conf.ignore_vmlinux && vmlinux_path != NULL) {
@@ -1671,7 +1661,8 @@ static int dso__load_guest_kernel_sym(struct dso *dso, struct map *map,
    */
   if (symbol_conf.default_guest_vmlinux_name != NULL) {
    err = dso__load_vmlinux(dso, map,
-    symbol_conf.default_guest_vmlinux_name, filter);
+      symbol_conf.default_guest_vmlinux_name,
+      false, filter);
    return err;
   }
 
diff --git a/tools/perf/util/symbol.h b/tools/perf/util/symbol.h
index f1031a1..6de9c2b 100644
--- a/tools/perf/util/symbol.h
+++ b/tools/perf/util/symbol.h
@@ -206,7 +206,8 @@ bool symsrc__possibly_runtime(struct symsrc *ss);
 
 int dso__load(struct dso *dso, struct map *map, symbol_filter_t filter);
 int dso__load_vmlinux(struct dso *dso, struct map *map,
-        const char *vmlinux, symbol_filter_t filter);
+        const char *vmlinux, bool vmlinux_allocated,
+        symbol_filter_t filter);
 int dso__load_vmlinux_path(struct dso *dso, struct map *map,
       symbol_filter_t filter);
 int dso__load_kallsyms(struct dso *dso, const char *filename, struct map *map,
-- 
1.7.1