From 5e75b3f01d0a59e36782e790adb1b956f9dab489 Mon Sep 17 00:00:00 2001
From: David Milburn <dmilburn@redhat.com>
Date: Mon, 18 Aug 2014 19:58:36 -0400
Subject: [block] nvme: Protect against badly formatted CQEs

Message-id: <1408391935-24886-4-git-send-email-dmilburn@redhat.com>
Patchwork-id: 87885
O-Subject: [RHEL7.1 PATCH BZ 1111259 03/22] NVMe: Protect against badly formatted CQEs
Bugzilla: 1111259
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Keith Busch <keith.busch@intel.com>

If a misbehaving device posts a CQE with a command id < depth but for
one that was never allocated, the command info will have a callback
function set to NULL and we don't want to try invoking that.

Signed-off-by: Keith Busch <keith.busch@intel.com>
Signed-off-by: Matthew Wilcox <matthew.r.wilcox@intel.com>
(cherry picked from commit 94bbac4052eb93219ca0aa370ca741486b25fb98)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/block/nvme-core.c b/drivers/block/nvme-core.c
index 0ca2368..3cd51ef 100644
--- a/drivers/block/nvme-core.c
+++ b/drivers/block/nvme-core.c
@@ -243,8 +243,9 @@ static void *free_cmdid(struct nvme_queue *nvmeq, int cmdid,
  void *ctx;
  struct nvme_cmd_info *info = nvme_cmd_info(nvmeq);
 
- if (cmdid >= nvmeq->q_depth) {
-  *fn = special_completion;
+ if (cmdid >= nvmeq->q_depth || !info[cmdid].fn) {
+  if (fn)
+   *fn = special_completion;
   return CMD_CTX_INVALID;
  }
  if (fn)
-- 
1.7.1