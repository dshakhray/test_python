From 6e9ffb3bfb9e7adeffdd1895b83337750606cf5e Mon Sep 17 00:00:00 2001
From: Maurizio Lombardi <mlombard@redhat.com>
Date: Mon, 8 Sep 2014 11:07:39 -0400
Subject: [scsi] bnx2fc: fix memory leak and potential NULL pointer dereference

Message-id: <1410174472-14981-5-git-send-email-mlombard@redhat.com>
Patchwork-id: 91634
O-Subject: [RHEL7.1 e-stor PATCH 04/17] bnx2fc: fix memory leak and potential NULL pointer dereference.
Bugzilla: 1089399
RH-Acked-by: Ewan Milne <emilne@redhat.com>
RH-Acked-by: Rob Evers <revers@redhat.com>

If bnx2fc_allocate_hash_table() for some reasons fails, it is possible that the
hash_tbl_segments or the hash_tbl_pbl pointers are NULL.
In this case bnx2fc_free_hash_table() will panic the system.

this patch also fixes a memory leak, the hash_tbl_segments pointer was never
freed.

Signed-off-by: Maurizio Lombardi <mlombard@redhat.com>
Acked-by: Eddie Wai <eddie.wai@broadcom.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 91d9f809da44b42de95a0b9058deea7268bde3c2)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/bnx2fc/bnx2fc_hwi.c b/drivers/scsi/bnx2fc/bnx2fc_hwi.c
index 261af2a..f83bae4 100644
--- a/drivers/scsi/bnx2fc/bnx2fc_hwi.c
+++ b/drivers/scsi/bnx2fc/bnx2fc_hwi.c
@@ -1968,21 +1968,27 @@ static void bnx2fc_free_hash_table(struct bnx2fc_hba *hba)
  int segment_count;
  u32 *pbl;
 
- segment_count = hba->hash_tbl_segment_count;
-
- pbl = hba->hash_tbl_pbl;
- for (i = 0; i < segment_count; ++i) {
-  dma_addr_t dma_address;
-
-  dma_address = le32_to_cpu(*pbl);
-  ++pbl;
-  dma_address += ((u64)le32_to_cpu(*pbl)) << 32;
-  ++pbl;
-  dma_free_coherent(&hba->pcidev->dev,
-      BNX2FC_HASH_TBL_CHUNK_SIZE,
-      hba->hash_tbl_segments[i],
-      dma_address);
+ if (hba->hash_tbl_segments) {
+
+  pbl = hba->hash_tbl_pbl;
+  if (pbl) {
+   segment_count = hba->hash_tbl_segment_count;
+   for (i = 0; i < segment_count; ++i) {
+    dma_addr_t dma_address;
+
+    dma_address = le32_to_cpu(*pbl);
+    ++pbl;
+    dma_address += ((u64)le32_to_cpu(*pbl)) << 32;
+    ++pbl;
+    dma_free_coherent(&hba->pcidev->dev,
+        BNX2FC_HASH_TBL_CHUNK_SIZE,
+        hba->hash_tbl_segments[i],
+        dma_address);
+   }
+  }
 
+  kfree(hba->hash_tbl_segments);
+  hba->hash_tbl_segments = NULL;
  }
 
  if (hba->hash_tbl_pbl) {
-- 
1.7.1