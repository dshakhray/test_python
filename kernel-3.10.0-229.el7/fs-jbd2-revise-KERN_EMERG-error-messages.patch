From e9c41250db7f4a6027ba3c2812c0e2d44fcd2aed Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 23 Oct 2014 09:54:01 -0400
Subject: [fs] jbd2: revise KERN_EMERG error messages

Message-id: <1414058125-4183-88-git-send-email-lczerner@redhat.com>
Patchwork-id: 98181
O-Subject: [RHEL 7.1 PATCH v2 087/171] jbd2: revise KERN_EMERG error messages
Bugzilla: 1150139
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Jan Kara <jack@suse.cz>

BZ 1150139
https://bugzilla.redhat.com/show_bug.cgi?id=1150139

BREW 8142710
https://brewweb.devel.redhat.com/taskinfo?taskID=8142710

Upstream commit 75685071cd5b26d64fd2577330387aeab019ac97

 Some of KERN_EMERG printk messages do not really deserve this log
 level and the one in log_wait_commit() is even rather useless (the
 journal has been previously aborted and *that* is where we should have
 been complaining). So make some messages just KERN_ERR and remove the
 useless message.

 Signed-off-by: Jan Kara <jack@suse.cz>
 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/jbd2/journal.c b/fs/jbd2/journal.c
index 5203264..f66faed 100644
--- a/fs/jbd2/journal.c
+++ b/fs/jbd2/journal.c
@@ -702,7 +702,7 @@ int jbd2_log_wait_commit(journal_t *journal, tid_t tid)
  read_lock(&journal->j_state_lock);
 #ifdef CONFIG_JBD2_DEBUG
  if (!tid_geq(journal->j_commit_request, tid)) {
-  printk(KERN_EMERG
+  printk(KERN_ERR
          "%s: error: j_commit_request=%d, tid=%d\n",
          __func__, journal->j_commit_request, tid);
  }
@@ -718,10 +718,8 @@ int jbd2_log_wait_commit(journal_t *journal, tid_t tid)
  }
  read_unlock(&journal->j_state_lock);
 
- if (unlikely(is_journal_aborted(journal))) {
-  printk(KERN_EMERG "journal commit I/O error\n");
+ if (unlikely(is_journal_aborted(journal)))
   err = -EIO;
- }
  return err;
 }
 
@@ -2645,7 +2643,7 @@ static void __exit journal_exit(void)
 #ifdef CONFIG_JBD2_DEBUG
  int n = atomic_read(&nr_journal_heads);
  if (n)
-  printk(KERN_EMERG "JBD2: leaked %d journal_heads!\n", n);
+  printk(KERN_ERR "JBD2: leaked %d journal_heads!\n", n);
 #endif
  jbd2_remove_jbd_stats_proc_entry();
  jbd2_journal_destroy_caches();
diff --git a/fs/jbd2/transaction.c b/fs/jbd2/transaction.c
index b0b74e5..80797cf 100644
--- a/fs/jbd2/transaction.c
+++ b/fs/jbd2/transaction.c
@@ -932,7 +932,7 @@ repeat:
      jbd2_alloc(jh2bh(jh)->b_size,
         GFP_NOFS);
     if (!frozen_buffer) {
-     printk(KERN_EMERG
+     printk(KERN_ERR
             "%s: OOM for frozen_buffer\n",
             __func__);
      JBUFFER_TRACE(jh, "oom!");
@@ -1166,7 +1166,7 @@ repeat:
  if (!jh->b_committed_data) {
   committed_data = jbd2_alloc(jh2bh(jh)->b_size, GFP_NOFS);
   if (!committed_data) {
-   printk(KERN_EMERG "%s: No memory for committed data\n",
+   printk(KERN_ERR "%s: No memory for committed data\n",
     __func__);
    err = -ENOMEM;
    goto out;
@@ -1308,7 +1308,7 @@ int jbd2_journal_dirty_metadata(handle_t *handle, struct buffer_head *bh)
   JBUFFER_TRACE(jh, "fastpath");
   if (unlikely(jh->b_transaction !=
         journal->j_running_transaction)) {
-   printk(KERN_EMERG "JBD: %s: "
+   printk(KERN_ERR "JBD: %s: "
           "jh->b_transaction (%llu, %p, %u) != "
           "journal->j_running_transaction (%p, %u)",
           journal->j_devname,
@@ -1335,7 +1335,7 @@ int jbd2_journal_dirty_metadata(handle_t *handle, struct buffer_head *bh)
   JBUFFER_TRACE(jh, "already on other transaction");
   if (unlikely(jh->b_transaction !=
         journal->j_committing_transaction)) {
-   printk(KERN_EMERG "JBD: %s: "
+   printk(KERN_ERR "JBD: %s: "
           "jh->b_transaction (%llu, %p, %u) != "
           "journal->j_committing_transaction (%p, %u)",
           journal->j_devname,
@@ -1348,7 +1348,7 @@ int jbd2_journal_dirty_metadata(handle_t *handle, struct buffer_head *bh)
    ret = -EINVAL;
   }
   if (unlikely(jh->b_next_transaction != transaction)) {
-   printk(KERN_EMERG "JBD: %s: "
+   printk(KERN_ERR "JBD: %s: "
           "jh->b_next_transaction (%llu, %p, %u) != "
           "transaction (%p, %u)",
           journal->j_devname,
-- 
1.7.1