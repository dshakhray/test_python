From 9662452b6844759539d4d52e697cc257d31f97b5 Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Tue, 16 Sep 2014 20:18:44 -0400
Subject: [fs] nfsd: Convert nfsd4_process_open1() to work with lookup_clientid()

Message-id: <1410898849-22126-41-git-send-email-bfields@redhat.com>
Patchwork-id: 95715
O-Subject: [Patch RHEL7 040/165] nfsd: Convert nfsd4_process_open1() to work with lookup_clientid()
Bugzilla: 1044798 1123721 1141932
RH-Acked-by: Benjamin Coddington <bcodding@redhat.com>
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Trond Myklebust <trond.myklebust@primarydata.com>

...and have alloc_init_open_stateowner just use the cstate->clp pointer
instead of passing in a clp separately. This allows us to use the
cached nfs4_client pointer in the cstate instead of having to look it
up again.

Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
Signed-off-by: Jeff Layton <jlayton@primarydata.com>
Reviewed-by: Christoph Hellwig <hch@lst.de>
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: 13d6f66b0826029051518a71d513dbb1a1146992
Bugzilla: 1044798
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4state.c b/fs/nfsd/nfs4state.c
index c01d81e..3428819 100644
--- a/fs/nfsd/nfs4state.c
+++ b/fs/nfsd/nfs4state.c
@@ -2768,10 +2768,10 @@ static void hash_openowner(struct nfs4_openowner *oo, struct nfs4_client *clp, u
 }
 
 static struct nfs4_openowner *
-alloc_init_open_stateowner(unsigned int strhashval, struct nfs4_client *clp,
-      struct nfsd4_open *open,
+alloc_init_open_stateowner(unsigned int strhashval, struct nfsd4_open *open,
       struct nfsd4_compound_state *cstate)
 {
+ struct nfs4_client *clp = cstate->clp;
  struct nfs4_openowner *oo;
 
  oo = alloc_stateowner(openowner_slab, &open->op_owner, clp);
@@ -3054,10 +3054,10 @@ nfsd4_process_open1(struct nfsd4_compound_state *cstate,
  oo = find_openstateowner_str(strhashval, open, cstate->minorversion, nn);
  open->op_openowner = oo;
  if (!oo) {
-  clp = find_confirmed_client(clientid, cstate->minorversion,
-         nn);
-  if (clp == NULL)
-   return nfserr_expired;
+  status = lookup_clientid(clientid, cstate, nn);
+  if (status)
+   return status;
+  clp = cstate->clp;
   goto new_owner;
  }
  if (!(oo->oo_flags & NFS4_OO_CONFIRMED)) {
@@ -3073,7 +3073,7 @@ nfsd4_process_open1(struct nfsd4_compound_state *cstate,
  clp = oo->oo_owner.so_client;
  goto alloc_stateid;
 new_owner:
- oo = alloc_init_open_stateowner(strhashval, clp, open, cstate);
+ oo = alloc_init_open_stateowner(strhashval, open, cstate);
  if (oo == NULL)
   return nfserr_jukebox;
  open->op_openowner = oo;
-- 
1.7.1