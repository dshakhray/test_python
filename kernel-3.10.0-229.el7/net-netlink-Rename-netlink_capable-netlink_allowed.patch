From 0deeb14010984513104088cd9d0971e00585e4a3 Mon Sep 17 00:00:00 2001
From: Jiri Benc <jbenc@redhat.com>
Date: Tue, 3 Jun 2014 13:28:51 -0400
Subject: [net] netlink: Rename netlink_capable netlink_allowed

Message-id: <76fff317622ff9cd0378044c38635e6370172b45.1401801988.git.jbenc@redhat.com>
Patchwork-id: 82400
O-Subject: [RHEL7.1 net PATCH v2 3/6] netlink: Rename netlink_capable netlink_allowed
Bugzilla: 1094272
CVE: CVE-2014-0181
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: Vlad Yasevich <vyasevic@redhat.com>
RH-Acked-by: Daniel Borkmann <dborkman@redhat.com>
RH-Acked-by: Neil Horman <nhorman@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1094272
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7529840

commit 5187cd055b6e81fc6526109456f8b20623148d5f
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Wed Apr 23 14:25:48 2014 -0700

    netlink: Rename netlink_capable netlink_allowed

    netlink_capable is a static internal function in af_netlink.c and we
    have better uses for the name netlink_capable.

    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
---
 net/netlink/af_netlink.c |   10 +++++-----
 1 files changed, 5 insertions(+), 5 deletions(-)

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/netlink/af_netlink.c b/net/netlink/af_netlink.c
index adda7cd..196757e 100644
--- a/net/netlink/af_netlink.c
+++ b/net/netlink/af_netlink.c
@@ -1354,7 +1354,7 @@ retry:
  return err;
 }
 
-static inline int netlink_capable(const struct socket *sock, unsigned int flag)
+static inline int netlink_allowed(const struct socket *sock, unsigned int flag)
 {
  return (nl_table[sock->sk->sk_protocol].flags & flag) ||
   ns_capable(sock_net(sock->sk)->user_ns, CAP_NET_ADMIN);
@@ -1422,7 +1422,7 @@ static int netlink_bind(struct socket *sock, struct sockaddr *addr,
 
  /* Only superuser is allowed to listen multicasts */
  if (nladdr->nl_groups) {
-  if (!netlink_capable(sock, NL_CFG_F_NONROOT_RECV))
+  if (!netlink_allowed(sock, NL_CFG_F_NONROOT_RECV))
    return -EPERM;
   err = netlink_realloc_groups(sk);
   if (err)
@@ -1484,7 +1484,7 @@ static int netlink_connect(struct socket *sock, struct sockaddr *addr,
   return -EINVAL;
 
  if ((nladdr->nl_groups || nladdr->nl_pid) &&
-     !netlink_capable(sock, NL_CFG_F_NONROOT_SEND))
+     !netlink_allowed(sock, NL_CFG_F_NONROOT_SEND))
   return -EPERM;
 
  if (!nlk->portid)
@@ -2094,7 +2094,7 @@ static int netlink_setsockopt(struct socket *sock, int level, int optname,
   break;
  case NETLINK_ADD_MEMBERSHIP:
  case NETLINK_DROP_MEMBERSHIP: {
-  if (!netlink_capable(sock, NL_CFG_F_NONROOT_RECV))
+  if (!netlink_allowed(sock, NL_CFG_F_NONROOT_RECV))
    return -EPERM;
   err = netlink_realloc_groups(sk);
   if (err)
@@ -2245,7 +2245,7 @@ static int netlink_sendmsg(struct kiocb *kiocb, struct socket *sock,
   dst_group = ffs(addr->nl_groups);
   err =  -EPERM;
   if ((dst_group || dst_portid) &&
-      !netlink_capable(sock, NL_CFG_F_NONROOT_SEND))
+      !netlink_allowed(sock, NL_CFG_F_NONROOT_SEND))
    goto out;
  } else {
   dst_portid = nlk->dst_portid;
-- 
1.7.1