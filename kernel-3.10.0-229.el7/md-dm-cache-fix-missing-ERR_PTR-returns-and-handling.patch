From 98bc6be477d516352e10dcf70bccee5b40813f34 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Wed, 28 Jan 2015 15:52:57 -0500
Subject: [md] dm-cache: fix missing ERR_PTR returns and handling

Message-id: <20150128155257.GA11148@redhat.com>
Patchwork-id: 103778
O-Subject: [RHEL7.1 PATCH 3/2] dm cache: fix missing ERR_PTR returns and handling
Bugzilla: 1182665
RH-Acked-by: Heinz Mauelshagen <heinzm@redhat.com>
RH-Acked-by: Joe Thornber <thornber@redhat.com>

BZ: 1182665

Upstream commit 766a78882ddf79b162243649d7dfdbac1fb6fb88
Author: Joe Thornber <ejt@redhat.com>
Date:   Wed Jan 28 12:07:46 2015 +0000

    dm cache: fix missing ERR_PTR returns and handling

    Commit 9b1cc9f251 ("dm cache: share cache-metadata object across
    inactive and active DM tables") mistakenly ignored the use of ERR_PTR
    returns.  Restore missing IS_ERR checks and ERR_PTR returns where
    appropriate.

    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Cc: stable@vger.kernel.org

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/dm-cache-metadata.c b/drivers/md/dm-cache-metadata.c
index 21b1562..c1c0104 100644
--- a/drivers/md/dm-cache-metadata.c
+++ b/drivers/md/dm-cache-metadata.c
@@ -683,7 +683,7 @@ static struct dm_cache_metadata *metadata_open(struct block_device *bdev,
  cmd = kzalloc(sizeof(*cmd), GFP_KERNEL);
  if (!cmd) {
   DMERR("could not allocate metadata struct");
-  return NULL;
+  return ERR_PTR(-ENOMEM);
  }
 
  atomic_set(&cmd->ref_count, 1);
@@ -745,7 +745,7 @@ static struct dm_cache_metadata *lookup_or_open(struct block_device *bdev,
   return cmd;
 
  cmd = metadata_open(bdev, data_block_size, may_format_device, policy_hint_size);
- if (cmd) {
+ if (!IS_ERR(cmd)) {
   mutex_lock(&table_lock);
   cmd2 = lookup(bdev);
   if (cmd2) {
@@ -780,9 +780,10 @@ struct dm_cache_metadata *dm_cache_metadata_open(struct block_device *bdev,
 {
  struct dm_cache_metadata *cmd = lookup_or_open(bdev, data_block_size,
              may_format_device, policy_hint_size);
- if (cmd && !same_params(cmd, data_block_size)) {
+
+ if (!IS_ERR(cmd) && !same_params(cmd, data_block_size)) {
   dm_cache_metadata_close(cmd);
-  return NULL;
+  return ERR_PTR(-EINVAL);
  }
 
  return cmd;
-- 
1.7.1