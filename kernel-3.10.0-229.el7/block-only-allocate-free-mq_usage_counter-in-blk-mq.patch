From 21eed99c5a679c8566af0a58253e7e9e2f0f509b Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Fri, 13 Jun 2014 14:36:10 -0400
Subject: [block] only allocate/free mq_usage_counter in blk-mq

Message-id: <1402670238-13916-83-git-send-email-snitzer@redhat.com>
Patchwork-id: 83830
O-Subject: [RHEL7.1 PATCH 082/150] block: only allocate_free mq_usage_counter in blk-mq
Bugzilla: 1105204
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Jeff Moyer <jmoyer@redhat.com>

BZ: 1105204

Upstream commit 3d2936f457a847d9d88a9cc127e0eb7a0ebba0ff
Author: Ming Lei <tom.leiming@gmail.com>
Date:   Tue May 27 23:35:14 2014 +0800

    block: only allocate/free mq_usage_counter in blk-mq

    The percpu counter is only used for blk-mq, so move
    its allocation and free inside blk-mq, and don't
    allocate it for legacy queue device.

    Signed-off-by: Ming Lei <tom.leiming@gmail.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/block/blk-core.c b/block/blk-core.c
index 4710af5..ca094f5 100644
--- a/block/blk-core.c
+++ b/block/blk-core.c
@@ -576,12 +576,9 @@ struct request_queue *blk_alloc_queue_node(gfp_t gfp_mask, int node_id)
  if (!q)
   return NULL;
 
- if (percpu_counter_init(&q->mq_usage_counter, 0))
-  goto fail_q;
-
  q->id = ida_simple_get(&blk_queue_ida, 0, 0, gfp_mask);
  if (q->id < 0)
-  goto fail_c;
+  goto fail_q;
 
  q->backing_dev_info.ra_pages =
    (VM_MAX_READAHEAD * 1024) / PAGE_CACHE_SIZE;
@@ -639,8 +636,6 @@ fail_bdi:
  bdi_destroy(&q->backing_dev_info);
 fail_id:
  ida_simple_remove(&blk_queue_ida, q->id);
-fail_c:
- percpu_counter_destroy(&q->mq_usage_counter);
 fail_q:
  kmem_cache_free(blk_requestq_cachep, q);
  return NULL;
diff --git a/block/blk-mq.c b/block/blk-mq.c
index 0785175..e8b5f74 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -1781,6 +1781,9 @@ struct request_queue *blk_mq_init_queue(struct blk_mq_tag_set *set)
  if (!q)
   goto err_hctxs;
 
+ if (percpu_counter_init(&q->mq_usage_counter, 0))
+  goto err_map;
+
  q->mq_map = blk_mq_make_queue_map(set);
  if (!q->mq_map)
   goto err_map;
@@ -1867,6 +1870,8 @@ void blk_mq_free_queue(struct request_queue *q)
  blk_mq_exit_hw_queues(q, set, set->nr_hw_queues);
  blk_mq_free_hw_queues(q, set);
 
+ percpu_counter_destroy(&q->mq_usage_counter);
+
  free_percpu(q->queue_ctx);
  kfree(q->queue_hw_ctx);
  kfree(q->mq_map);
diff --git a/block/blk-sysfs.c b/block/blk-sysfs.c
index 89e54d0..35b4176 100644
--- a/block/blk-sysfs.c
+++ b/block/blk-sysfs.c
@@ -550,8 +550,6 @@ static void blk_release_queue(struct kobject *kobj)
  if (q->queue_tags)
   __blk_queue_free_tags(q);
 
- percpu_counter_destroy(&q->mq_usage_counter);
-
  if (q->mq_ops)
   blk_mq_free_queue(q);
 
-- 
1.7.1