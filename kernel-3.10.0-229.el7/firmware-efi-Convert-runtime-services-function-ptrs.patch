From 309b47755e20d03c7a97cb3a3fcdc6cbf752bf7b Mon Sep 17 00:00:00 2001
From: Dave Young <dyoung@redhat.com>
Date: Thu, 22 May 2014 02:42:57 -0400
Subject: [firmware] efi: Convert runtime services function ptrs

Message-id: <1400726607-13717-6-git-send-email-dyoung@redhat.com>
Patchwork-id: 80106
O-Subject: [RHEL7.1 PATCH 05/35] efi: Convert runtime services function ptrs
Bugzilla: 1080109
RH-Acked-by: Chao WANG <chaowang@redhat.com>
RH-Acked-by: Vivek Goyal <vgoyal@redhat.com>

Resolves: bz1080109

Brew build:
https://brewweb.devel.redhat.com/taskinfo?taskID=7480539

Test: Tested kexec/kdump on HP workstation and qemu.

Upstream commit:
commit 43ab0476a648053e5998bf081f47f215375a4502
Author: Borislav Petkov <bp@suse.de>
Date:   Sun Jun 2 14:56:07 2013 +0200

    efi: Convert runtime services function ptrs

    ... to void * like the boot services and lose all the void * casts. No
    functionality change.

    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/include/asm/efi.h b/arch/x86/include/asm/efi.h
index e9a9cb8..65c6e6e 100644
--- a/arch/x86/include/asm/efi.h
+++ b/arch/x86/include/asm/efi.h
@@ -52,40 +52,40 @@ extern u64 efi_call6(void *fp, u64 arg1, u64 arg2, u64 arg3,
        u64 arg4, u64 arg5, u64 arg6);
 
 #define efi_call_phys0(f)   \
- efi_call0((void *)(f))
+ efi_call0((f))
 #define efi_call_phys1(f, a1)   \
- efi_call1((void *)(f), (u64)(a1))
+ efi_call1((f), (u64)(a1))
 #define efi_call_phys2(f, a1, a2)   \
- efi_call2((void *)(f), (u64)(a1), (u64)(a2))
+ efi_call2((f), (u64)(a1), (u64)(a2))
 #define efi_call_phys3(f, a1, a2, a3)    \
- efi_call3((void *)(f), (u64)(a1), (u64)(a2), (u64)(a3))
+ efi_call3((f), (u64)(a1), (u64)(a2), (u64)(a3))
 #define efi_call_phys4(f, a1, a2, a3, a4)    \
- efi_call4((void *)(f), (u64)(a1), (u64)(a2), (u64)(a3),  \
+ efi_call4((f), (u64)(a1), (u64)(a2), (u64)(a3),  \
     (u64)(a4))
 #define efi_call_phys5(f, a1, a2, a3, a4, a5)    \
- efi_call5((void *)(f), (u64)(a1), (u64)(a2), (u64)(a3),  \
+ efi_call5((f), (u64)(a1), (u64)(a2), (u64)(a3),  \
     (u64)(a4), (u64)(a5))
 #define efi_call_phys6(f, a1, a2, a3, a4, a5, a6)   \
- efi_call6((void *)(f), (u64)(a1), (u64)(a2), (u64)(a3),  \
+ efi_call6((f), (u64)(a1), (u64)(a2), (u64)(a3),  \
     (u64)(a4), (u64)(a5), (u64)(a6))
 
 #define efi_call_virt0(f)    \
- efi_call0((void *)(efi.systab->runtime->f))
+ efi_call0((efi.systab->runtime->f))
 #define efi_call_virt1(f, a1)     \
- efi_call1((void *)(efi.systab->runtime->f), (u64)(a1))
+ efi_call1((efi.systab->runtime->f), (u64)(a1))
 #define efi_call_virt2(f, a1, a2)     \
- efi_call2((void *)(efi.systab->runtime->f), (u64)(a1), (u64)(a2))
+ efi_call2((efi.systab->runtime->f), (u64)(a1), (u64)(a2))
 #define efi_call_virt3(f, a1, a2, a3)     \
- efi_call3((void *)(efi.systab->runtime->f), (u64)(a1), (u64)(a2), \
+ efi_call3((efi.systab->runtime->f), (u64)(a1), (u64)(a2), \
     (u64)(a3))
 #define efi_call_virt4(f, a1, a2, a3, a4)    \
- efi_call4((void *)(efi.systab->runtime->f), (u64)(a1), (u64)(a2), \
+ efi_call4((efi.systab->runtime->f), (u64)(a1), (u64)(a2), \
     (u64)(a3), (u64)(a4))
 #define efi_call_virt5(f, a1, a2, a3, a4, a5)    \
- efi_call5((void *)(efi.systab->runtime->f), (u64)(a1), (u64)(a2), \
+ efi_call5((efi.systab->runtime->f), (u64)(a1), (u64)(a2), \
     (u64)(a3), (u64)(a4), (u64)(a5))
 #define efi_call_virt6(f, a1, a2, a3, a4, a5, a6)   \
- efi_call6((void *)(efi.systab->runtime->f), (u64)(a1), (u64)(a2), \
+ efi_call6((efi.systab->runtime->f), (u64)(a1), (u64)(a2), \
     (u64)(a3), (u64)(a4), (u64)(a5), (u64)(a6))
 
 extern void __iomem *efi_ioremap(unsigned long addr, unsigned long size,
diff --git a/include/linux/efi.h b/include/linux/efi.h
index d83b79c..1c3dd2f 100644
--- a/include/linux/efi.h
+++ b/include/linux/efi.h
@@ -292,20 +292,20 @@ typedef struct {
 
 typedef struct {
  efi_table_hdr_t hdr;
- unsigned long get_time;
- unsigned long set_time;
- unsigned long get_wakeup_time;
- unsigned long set_wakeup_time;
- unsigned long set_virtual_address_map;
- unsigned long convert_pointer;
- unsigned long get_variable;
- unsigned long get_next_variable;
- unsigned long set_variable;
- unsigned long get_next_high_mono_count;
- unsigned long reset_system;
- unsigned long update_capsule;
- unsigned long query_capsule_caps;
- unsigned long query_variable_info;
+ void *get_time;
+ void *set_time;
+ void *get_wakeup_time;
+ void *set_wakeup_time;
+ void *set_virtual_address_map;
+ void *convert_pointer;
+ void *get_variable;
+ void *get_next_variable;
+ void *set_variable;
+ void *get_next_high_mono_count;
+ void *reset_system;
+ void *update_capsule;
+ void *query_capsule_caps;
+ void *query_variable_info;
 } efi_runtime_services_t;
 
 typedef efi_status_t efi_get_time_t (efi_time_t *tm, efi_time_cap_t *tc);
-- 
1.7.1