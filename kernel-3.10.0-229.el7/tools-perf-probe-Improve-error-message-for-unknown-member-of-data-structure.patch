From 0311f34aaf7f31d83d98837cc32d479bec75c53c Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:08:52 -0400
Subject: [tools] perf/probe: Improve error message for unknown member of data structure

Message-id: <1410181752-25631-288-git-send-email-jolsa@redhat.com>
Patchwork-id: 91945
O-Subject: [PATCH RHEL7.1 BZ1134356 287/307] perf probe: Improve error message for unknown member of data structure
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit 36d789a4d75f3826faa6e75b018942b63ffed1a0
Author: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
Date: Fri Jun 6 07:13:45 2014 +0000

description
===========
Improve the error message if we can not find given member in the given
structure. Currently perf probe shows a wrong error message as below.

  -----
  # perf probe getname_flags:65 "result->BOGUS"
  result(type:filename) has no member BOGUS.
  Failed to find 'result' in this function.
    Error: Failed to add events. (-22)
  -----

The first message is correct, but the second one is not, since we didn't
fail to find a variable but fails to find the member of given variable.

  -----
  # perf probe getname_flags:65 "result->BOGUS"
  result(type:filename) has no member BOGUS.
    Error: Failed to add events. (-22)
  -----

With this patch, the error message shows only the first one.  And if we
really failed to find given variable, it tells us so.

  -----
  # perf probe getname_flags:65 "BOGUS"
  Failed to find 'BOGUS' in this function.
    Error: Failed to add events. (-2)
  -----
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/probe-finder.c b/tools/perf/util/probe-finder.c
index 9d8eb26..ce8faf4 100644
--- a/tools/perf/util/probe-finder.c
+++ b/tools/perf/util/probe-finder.c
@@ -573,14 +573,13 @@ static int find_variable(Dwarf_Die *sc_die, struct probe_finder *pf)
  if (!die_find_variable_at(sc_die, pf->pvar->var, pf->addr, &vr_die)) {
   /* Search again in global variables */
   if (!die_find_variable_at(&pf->cu_die, pf->pvar->var, 0, &vr_die))
+   pr_warning("Failed to find '%s' in this function.\n",
+       pf->pvar->var);
    ret = -ENOENT;
  }
  if (ret >= 0)
   ret = convert_variable(&vr_die, pf);
 
- if (ret < 0)
-  pr_warning("Failed to find '%s' in this function.\n",
-      pf->pvar->var);
  return ret;
 }
 
-- 
1.7.1