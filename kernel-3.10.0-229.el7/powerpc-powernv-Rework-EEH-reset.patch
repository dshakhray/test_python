From 8ddc9ccd0f0ba49344ff3ee61777d8ab3172aeaa Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:08:41 -0400
Subject: [powerpc] powernv: Rework EEH reset

Message-id: <1410545655-205645-293-git-send-email-dzickus@redhat.com>
Patchwork-id: 94262
O-Subject: [RHEL7 PATCH 292/626] powerpc/powernv: Rework EEH reset
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 5b2e198e50f6ba57081586b853163ea1bb95f1a8
Author: Gavin Shan <shangw@linux.vnet.ibm.com>
Date:   Wed Feb 12 15:24:54 2014 +0800

    powerpc/powernv: Rework EEH reset

    When doing reset in order to recover the affected PE, we issue
    hot reset on PE primary bus if it's not root bus. Otherwise, we
    issue hot or fundamental reset on root port or PHB accordingly.
    For the later case, we didn't cover the situation where PE only
    includes root port and it potentially causes kernel crash upon
    EEH error to the PE.

    The patch reworks the logic of EEH reset to improve the code
    readability and also avoid the kernel crash.

    Cc: stable@vger.kernel.org
    Reported-by: Thadeu Lima de Souza Cascardo <cascardo@linux.vnet.ibm.com>
    Signed-off-by: Gavin Shan <shangw@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/platforms/powernv/eeh-ioda.c b/arch/powerpc/platforms/powernv/eeh-ioda.c
index d47b9f7..4e38525 100644
--- a/arch/powerpc/platforms/powernv/eeh-ioda.c
+++ b/arch/powerpc/platforms/powernv/eeh-ioda.c
@@ -499,8 +499,7 @@ static int ioda_eeh_bridge_reset(struct pci_controller *hose,
 static int ioda_eeh_reset(struct eeh_pe *pe, int option)
 {
  struct pci_controller *hose = pe->phb;
- struct eeh_dev *edev;
- struct pci_dev *dev;
+ struct pci_bus *bus;
  int ret;
 
  /*
@@ -529,31 +528,11 @@ static int ioda_eeh_reset(struct eeh_pe *pe, int option)
  if (pe->type & EEH_PE_PHB) {
   ret = ioda_eeh_phb_reset(hose, option);
  } else {
-  if (pe->type & EEH_PE_DEVICE) {
-   /*
-    * If it's device PE, we didn't refer to the parent
-    * PCI bus yet. So we have to figure it out indirectly.
-    */
-   edev = list_first_entry(&pe->edevs,
-     struct eeh_dev, list);
-   dev = eeh_dev_to_pci_dev(edev);
-   dev = dev->bus->self;
-  } else {
-   /*
-    * If it's bus PE, the parent PCI bus is already there
-    * and just pick it up.
-    */
-   dev = pe->bus->self;
-  }
-
-  /*
-   * Do reset based on the fact that the direct upstream bridge
-   * is root bridge (port) or not.
-   */
-  if (dev->bus->number == 0)
+  bus = eeh_pe_bus_get(pe);
+  if (pci_is_root_bus(bus))
    ret = ioda_eeh_root_reset(hose, option);
   else
-   ret = ioda_eeh_bridge_reset(hose, dev, option);
+   ret = ioda_eeh_bridge_reset(hose, bus->self, option);
  }
 
  return ret;
-- 
1.7.1