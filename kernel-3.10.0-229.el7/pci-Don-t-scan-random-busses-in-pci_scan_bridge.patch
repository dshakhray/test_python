From c726f6fa4c9b77743872b0a668661b556cf25e9c Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Wed, 6 Aug 2014 03:46:52 -0400
Subject: [pci] Don't scan random busses in pci_scan_bridge()

Message-id: <20140806034652.1438.86816.stgit@gir.stowe>
Patchwork-id: 87435
O-Subject: [RHEL7.1 PATCH 26/69] PCI: Don't scan random busses in pci_scan_bridge()
Bugzilla: 1110896
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110896
Upstream Status: fc1b253141b360f9c669d391b4ff663b984ef0c9

commit fc1b253141b360f9c669d391b4ff663b984ef0c9
Author: Andreas Noever <andreas.noever@gmail.com>
Date:   Thu Jan 23 21:59:28 2014 +0100

    PCI: Don't scan random busses in pci_scan_bridge()

    When assigning a new bus number in pci_scan_bridge we check whether
    max+1 is free by calling pci_find_bus. If it does already exist then we
    assume that we are rescanning and that this is the right bus to scan.

    This is fragile. If max+1 lies outside of bus->busn_res.end then we will
    rescan some random bus from somewhere else in the hierachy. This patch
    checks for this case and prints a warning.

    [bhelgaas: add parent/child bus number info to dev_warn()]
    Signed-off-by: Andreas Noever <andreas.noever@gmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/probe.c b/drivers/pci/probe.c
index ee2b9e1..717ae9d 100644
--- a/drivers/pci/probe.c
+++ b/drivers/pci/probe.c
@@ -872,12 +872,16 @@ int pci_scan_bridge(struct pci_bus *bus, struct pci_dev *dev, int max, int pass)
    goto out;
   }
 
+  if (max >= bus->busn_res.end) {
+   dev_warn(&dev->dev, "can't allocate child bus %02x from %pR\n",
+     max, &bus->busn_res);
+   goto out;
+  }
+
   /* Clear errors */
   pci_write_config_word(dev, PCI_STATUS, 0xffff);
 
-  /* Prevent assigning a bus number that already exists.
-   * This can happen when a bridge is hot-plugged, so in
-   * this case we only re-scan this bus. */
+  /* The bus will already exist if we are rescanning */
   child = pci_find_bus(pci_domain_nr(bus), max+1);
   if (!child) {
    child = pci_add_new_bus(bus, dev, max+1);
-- 
1.7.1