From 49da039ecbdda82f0a02e79c83e40d10c93c7fa8 Mon Sep 17 00:00:00 2001
From: Daniel Borkmann <dborkman@redhat.com>
Date: Thu, 16 Jan 2014 15:19:41 -0500
Subject: [net] ipvs: sctp: add missing verdict assignments in sctp_conn_schedule

Message-id: <b0f9c987eeea15cd5de315e228a8cca861d4f43d.1389878943.git.dborkman@redhat.com>
Patchwork-id: 74346
O-Subject: [RHEL7 PATCH net 01/11] net: ipvs: sctp: add missing verdict assignments in sctp_conn_schedule
Bugzilla: 1054215
RH-Acked-by: Florian Westphal <fwestpha@redhat.com>
RH-Acked-by: Thomas Graf <tgraf@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1054215
Upstream Status: 6e7cd27c0f77847f1b07a81ae2ed17b937a7531a
Brew: http://brewweb.devel.redhat.com/brew/taskinfo?taskID=6885774
Tested: verified by QA in their IPVS lab and on beaker for basic tests

Upstream Commit:
commit 6e7cd27c0f77847f1b07a81ae2ed17b937a7531a
Author: Daniel Borkmann <dborkman@redhat.com>
Date:   Fri Oct 25 11:05:04 2013 +0200

    net: ipvs: sctp: add missing verdict assignments in sctp_conn_schedule

    If skb_header_pointer() fails, we need to assign a verdict, that is
    NF_DROP in this case, otherwise, we would leave the verdict from
    conn_schedule() uninitialized when returning.

    Signed-off-by: Daniel Borkmann <dborkman@redhat.com>
    Acked-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Acked-by: Julian Anastasov <ja@ssi.bg>
    Signed-off-by: Simon Horman <horms@verge.net.au>

Signed-off-by: Daniel Borkmann <dborkman@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/netfilter/ipvs/ip_vs_proto_sctp.c b/net/netfilter/ipvs/ip_vs_proto_sctp.c
index 295b410..bcf53bf 100644
--- a/net/netfilter/ipvs/ip_vs_proto_sctp.c
+++ b/net/netfilter/ipvs/ip_vs_proto_sctp.c
@@ -19,13 +19,18 @@ sctp_conn_schedule(int af, struct sk_buff *skb, struct ip_vs_proto_data *pd,
  sctp_sctphdr_t *sh, _sctph;
 
  sh = skb_header_pointer(skb, iph->len, sizeof(_sctph), &_sctph);
- if (sh == NULL)
+ if (sh == NULL) {
+  *verdict = NF_DROP;
   return 0;
+ }
 
  sch = skb_header_pointer(skb, iph->len + sizeof(sctp_sctphdr_t),
      sizeof(_schunkh), &_schunkh);
- if (sch == NULL)
+ if (sch == NULL) {
+  *verdict = NF_DROP;
   return 0;
+ }
+
  net = skb_net(skb);
  rcu_read_lock();
  if ((sch->type == SCTP_CID_INIT) &&
-- 
1.7.1