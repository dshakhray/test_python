From 0f9dd440dfabe2edb67ea5f4c75e32c56eeac23e Mon Sep 17 00:00:00 2001
From: Rik van Riel <riel@redhat.com>
Date: Fri, 5 Sep 2014 14:16:58 -0400
Subject: [kernel] take read_seqbegin_or_lock() and friends to seqlock.h

Message-id: <1409926623-25929-3-git-send-email-riel@redhat.com>
Patchwork-id: 91454
O-Subject: [RHEL7 PATCH 2/7] take read_seqbegin_or_lock() and friends to seqlock.h
Bugzilla: 1120307
RH-Acked-by: Larry Woodman <lwoodman@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stanislaw Gruszka <sgruszka@redhat.com>

From: Al Viro <viro@zeniv.linux.org.uk>

Fixes bug 1120307

commit 2bc74feba12fbf052ec97aee8624c9f13593a9ac
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Fri Oct 25 16:39:14 2013 -0400

    take read_seqbegin_or_lock() and friends to seqlock.h

    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

Signed-off-by: Rik van Riel <riel@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/dcache.c b/fs/dcache.c
index 18778e9..babbfc2 100644
--- a/fs/dcache.c
+++ b/fs/dcache.c
@@ -88,35 +88,6 @@ EXPORT_SYMBOL(rename_lock);
 
 static struct kmem_cache *dentry_cache __read_mostly;
 
-/**
- * read_seqbegin_or_lock - begin a sequence number check or locking block
- * @lock: sequence lock
- * @seq : sequence number to be checked
- *
- * First try it once optimistically without taking the lock. If that fails,
- * take the lock. The sequence number is also used as a marker for deciding
- * whether to be a reader (even) or writer (odd).
- * N.B. seq must be initialized to an even number to begin with.
- */
-static inline void read_seqbegin_or_lock(seqlock_t *lock, int *seq)
-{
- if (!(*seq & 1)) /* Even */
-  *seq = read_seqbegin(lock);
- else   /* Odd */
-  read_seqlock_excl(lock);
-}
-
-static inline int need_seqretry(seqlock_t *lock, int seq)
-{
- return !(seq & 1) && read_seqretry(lock, seq);
-}
-
-static inline void done_seqretry(seqlock_t *lock, int seq)
-{
- if (seq & 1)
-  read_sequnlock_excl(lock);
-}
-
 /*
  * This is the single most critical data structure when it comes
  * to the dcache: the hashtable for lookups. Somebody should try
diff --git a/include/linux/seqlock.h b/include/linux/seqlock.h
index 21a2093..2c61a24 100644
--- a/include/linux/seqlock.h
+++ b/include/linux/seqlock.h
@@ -289,6 +289,35 @@ static inline void read_sequnlock_excl(seqlock_t *sl)
  spin_unlock(&sl->lock);
 }
 
+/**
+ * read_seqbegin_or_lock - begin a sequence number check or locking block
+ * @lock: sequence lock
+ * @seq : sequence number to be checked
+ *
+ * First try it once optimistically without taking the lock. If that fails,
+ * take the lock. The sequence number is also used as a marker for deciding
+ * whether to be a reader (even) or writer (odd).
+ * N.B. seq must be initialized to an even number to begin with.
+ */
+static inline void read_seqbegin_or_lock(seqlock_t *lock, int *seq)
+{
+ if (!(*seq & 1)) /* Even */
+  *seq = read_seqbegin(lock);
+ else   /* Odd */
+  read_seqlock_excl(lock);
+}
+
+static inline int need_seqretry(seqlock_t *lock, int seq)
+{
+ return !(seq & 1) && read_seqretry(lock, seq);
+}
+
+static inline void done_seqretry(seqlock_t *lock, int seq)
+{
+ if (seq & 1)
+  read_sequnlock_excl(lock);
+}
+
 static inline void read_seqlock_excl_bh(seqlock_t *sl)
 {
  spin_lock_bh(&sl->lock);
-- 
1.7.1