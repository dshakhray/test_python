From bcee1142b45c67d2cfff97fe4671649410743fcc Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <jkysela@redhat.com>
Date: Wed, 3 Sep 2014 07:38:59 -0400
Subject: [alsa] control: Define SNDRV_CTL_TLV_OP_* constants

Message-id: <140972823573-390-patchset-jkysela@redhat.com>
Patchwork-id: 91086
O-Subject: [RHEL 7.1 PATCH 389/442] ALSA: control: Define SNDRV_CTL_TLV_OP_* constants
Bugzilla: 1112200
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>

Instead of hard-coded magic numbers, define constants for op_flag to
tlv callbacks.

Signed-off-by: Takashi Iwai <tiwai@suse.de>

(picked from kernel: 0cea76f3393782d67ccea8f07e9abf341bc4f60e)
rhbz#1112200
Signed-off-by: Jaroslav Kysela <jkysela@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/sound/control.h b/include/sound/control.h
index 5358892..0426139 100644
--- a/include/sound/control.h
+++ b/include/sound/control.h
@@ -31,10 +31,15 @@ typedef int (snd_kcontrol_info_t) (struct snd_kcontrol * kcontrol, struct snd_ct
 typedef int (snd_kcontrol_get_t) (struct snd_kcontrol * kcontrol, struct snd_ctl_elem_value * ucontrol);
 typedef int (snd_kcontrol_put_t) (struct snd_kcontrol * kcontrol, struct snd_ctl_elem_value * ucontrol);
 typedef int (snd_kcontrol_tlv_rw_t)(struct snd_kcontrol *kcontrol,
-        int op_flag, /* 0=read,1=write,-1=command */
+        int op_flag, /* SNDRV_CTL_TLV_OP_XXX */
         unsigned int size,
         unsigned int __user *tlv);
 
+enum {
+ SNDRV_CTL_TLV_OP_READ = 0,
+ SNDRV_CTL_TLV_OP_WRITE = 1,
+ SNDRV_CTL_TLV_OP_CMD = -1,
+};
 
 struct snd_kcontrol_new {
  snd_ctl_elem_iface_t iface; /* interface identifier */
diff --git a/sound/core/control.c b/sound/core/control.c
index d37aedc..2f1d4fa 100644
--- a/sound/core/control.c
+++ b/sound/core/control.c
@@ -1406,11 +1406,11 @@ static long snd_ctl_ioctl(struct file *file, unsigned int cmd, unsigned long arg
  case SNDRV_CTL_IOCTL_SUBSCRIBE_EVENTS:
   return snd_ctl_subscribe_events(ctl, ip);
  case SNDRV_CTL_IOCTL_TLV_READ:
-  return snd_ctl_tlv_ioctl(ctl, argp, 0);
+  return snd_ctl_tlv_ioctl(ctl, argp, SNDRV_CTL_TLV_OP_READ);
  case SNDRV_CTL_IOCTL_TLV_WRITE:
-  return snd_ctl_tlv_ioctl(ctl, argp, 1);
+  return snd_ctl_tlv_ioctl(ctl, argp, SNDRV_CTL_TLV_OP_WRITE);
  case SNDRV_CTL_IOCTL_TLV_COMMAND:
-  return snd_ctl_tlv_ioctl(ctl, argp, -1);
+  return snd_ctl_tlv_ioctl(ctl, argp, SNDRV_CTL_TLV_OP_CMD);
  case SNDRV_CTL_IOCTL_POWER:
   return -ENOPROTOOPT;
  case SNDRV_CTL_IOCTL_POWER_STATE:
-- 
1.7.1