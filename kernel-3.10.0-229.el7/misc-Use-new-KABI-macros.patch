From a853b001b200ace39bffbb8511dc751768251221 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 2 Dec 2014 21:03:30 -0500
Subject: [misc] Use new KABI macros

Message-id: <1417554215-238434-6-git-send-email-dzickus@redhat.com>
Patchwork-id: 101091
O-Subject: [RHEL7 PATCH 05/10] kabi, drivers: Use new KABI macros
Bugzilla: 1164383
RH-Acked-by: Jiri Benc <jbenc@redhat.com>
RH-Acked-by: Jarod Wilson <jarod@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1164383
Upstream: RHEL only

Convert some of the drivers GENKSYMS usage to use the new kabi macros.

Reviewed-by: Jeff Moyer <jmoyer@redhat.com>
Signed-off-by: Don Zickus <dzickus@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/char/ipmi/ipmi_msghandler.c b/drivers/char/ipmi/ipmi_msghandler.c
index ffbbcf1..088ca62 100644
--- a/drivers/char/ipmi/ipmi_msghandler.c
+++ b/drivers/char/ipmi/ipmi_msghandler.c
@@ -47,6 +47,8 @@
 #include <linux/rcupdate.h>
 #include <linux/interrupt.h>
 
+#include <linux/rh_kabi.h>
+
 #define PFX "IPMI message handler: "
 
 #define IPMI_DRIVER_VERSION "39.2"
@@ -444,15 +446,13 @@ struct ipmi_smi {
   */
  int run_to_completion;
 
-#ifndef __GENKSYMS__
  /*
   * More events that were queued because no one was there to receive
   * them.
   */
- atomic_t         event_waiters;
- unsigned int     ticks_to_req_ev;
- int              last_needs_timer;
-#endif
+ RH_KABI_EXTEND(atomic_t         event_waiters)
+ RH_KABI_EXTEND(unsigned int     ticks_to_req_ev)
+ RH_KABI_EXTEND(int              last_needs_timer)
 };
 #define to_si_intf_from_dev(device) container_of(device, struct ipmi_smi, dev)
 
diff --git a/drivers/scsi/sd.h b/drivers/scsi/sd.h
index abb738a..f88bfd6 100644
--- a/drivers/scsi/sd.h
+++ b/drivers/scsi/sd.h
@@ -1,6 +1,8 @@
 #ifndef _SCSI_DISK_H
 #define _SCSI_DISK_H
 
+#include <linux/rh_kabi.h>
+
 /*
  * More than enough for everybody ;)  The huge number of majors
  * is a leftover from 16bit dev_t days, we don't really need that
@@ -98,8 +100,8 @@ struct scsi_disk {
   */
  u32  xcopy_reserved;
 
- unsigned int rh_reserved1;
- unsigned int rh_reserved2;
+ RH_KABI_RESERVE(1)
+ RH_KABI_RESERVE(2)
 };
 #define to_scsi_disk(obj) container_of(obj,struct scsi_disk,dev)
 
-- 
1.7.1