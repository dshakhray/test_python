From bcb98dd0fad396199b9141898838588979d4bddb Mon Sep 17 00:00:00 2001
From: Takahiro MUNEDA <tmuneda@redhat.com>
Date: Wed, 14 May 2014 17:24:48 -0400
Subject: [kernel] trace: Make register/unregister_ftrace_command __init

Message-id: <1400088289-49498-2-git-send-email-tmuneda@redhat.com>
Patchwork-id: 79810
O-Subject: [RHEL7.1 Patch 1/2] tracing: Make register/unregister_ftrace_command __init
Bugzilla: 1061553
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steven Rostedt <srostedt@redhat.com>

From: Tom Zanussi <tom.zanussi@linux.intel.com>

RHBZ#:
------
https://bugzilla.redhat.com/show_bug.cgi?id=1061553

Upstream Status:
----------------
http://git.kernel.org/cgit/linux/kernel/git/next/linux-next.git/commit/?id=38de93abec8d8acd8d6dbbe9b0d92d6d5cdb3090

Brew:
-----
https://brewweb.devel.redhat.com/taskinfo?taskID=7452367

Test Status:
------------
Tested by Fujitsu and me

>From 38de93abec8d8acd8d6dbbe9b0d92d6d5cdb3090 Mon Sep 17 00:00:00 2001
From: Tom Zanussi <tom.zanussi@linux.intel.com>
Date: Thu, 24 Oct 2013 08:34:18 -0500
Subject: [RHEL7.1 Patch 1/2] tracing: Make register/unregister_ftrace_command
 __init

 register/unregister_ftrace_command() are only ever called from __init
 functions, so can themselves be made __init.

 Also make register_snapshot_cmd() __init for the same reason.

 Link: http://lkml.kernel.org/r/d4042c8cadb7ae6f843ac9a89a24e1c6a3099727.1382620672.git.tom.zanussi@linux.intel.com

 Signed-off-by: Tom Zanussi <tom.zanussi@linux.intel.com>
 Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

cc: srostedt@redhat.com
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/linux/ftrace.h b/include/linux/ftrace.h
index 99d0fbc..dd57211 100644
--- a/include/linux/ftrace.h
+++ b/include/linux/ftrace.h
@@ -533,11 +533,11 @@ static inline int ftrace_force_update(void) { return 0; }
 static inline void ftrace_disable_daemon(void) { }
 static inline void ftrace_enable_daemon(void) { }
 static inline void ftrace_release_mod(struct module *mod) {}
-static inline int register_ftrace_command(struct ftrace_func_command *cmd)
+static inline __init int register_ftrace_command(struct ftrace_func_command *cmd)
 {
  return -EINVAL;
 }
-static inline int unregister_ftrace_command(char *cmd_name)
+static inline __init int unregister_ftrace_command(char *cmd_name)
 {
  return -EINVAL;
 }
diff --git a/kernel/trace/ftrace.c b/kernel/trace/ftrace.c
index 331c102..4fecb3f 100644
--- a/kernel/trace/ftrace.c
+++ b/kernel/trace/ftrace.c
@@ -3267,7 +3267,11 @@ void unregister_ftrace_function_probe_all(char *glob)
 static LIST_HEAD(ftrace_commands);
 static DEFINE_MUTEX(ftrace_cmd_mutex);
 
-int register_ftrace_command(struct ftrace_func_command *cmd)
+/*
+ * Currently we only register ftrace commands from __init, so mark this
+ * __init too.
+ */
+__init int register_ftrace_command(struct ftrace_func_command *cmd)
 {
  struct ftrace_func_command *p;
  int ret = 0;
@@ -3286,7 +3290,11 @@ int register_ftrace_command(struct ftrace_func_command *cmd)
  return ret;
 }
 
-int unregister_ftrace_command(struct ftrace_func_command *cmd)
+/*
+ * Currently we only unregister ftrace commands from __init, so mark
+ * this __init too.
+ */
+__init int unregister_ftrace_command(struct ftrace_func_command *cmd)
 {
  struct ftrace_func_command *p, *n;
  int ret = -ENODEV;
diff --git a/kernel/trace/trace.c b/kernel/trace/trace.c
index 5546ae9..618792e 100644
--- a/kernel/trace/trace.c
+++ b/kernel/trace/trace.c
@@ -5452,12 +5452,12 @@ static struct ftrace_func_command ftrace_snapshot_cmd = {
  .func   = ftrace_trace_snapshot_callback,
 };
 
-static int register_snapshot_cmd(void)
+static __init int register_snapshot_cmd(void)
 {
  return register_ftrace_command(&ftrace_snapshot_cmd);
 }
 #else
-static inline int register_snapshot_cmd(void) { return 0; }
+static inline __init int register_snapshot_cmd(void) { return 0; }
 #endif /* defined(CONFIG_TRACER_SNAPSHOT) && defined(CONFIG_DYNAMIC_FTRACE) */
 
 struct dentry *tracing_init_dentry_tr(struct trace_array *tr)
-- 
1.7.1