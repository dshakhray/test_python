From 9666e2c05c57c2db3fc305925dcc28951f406bd9 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:06:48 -0400
Subject: [tools] perf/hists: Rename hists__inc_stats()

Message-id: <1410181752-25631-164-git-send-email-jolsa@redhat.com>
Patchwork-id: 91861
O-Subject: [PATCH RHEL7.1 BZ1134356 163/307] perf hists: Rename hists__inc_stats()
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit 6263835a1b1ad137f3c26a1383c0487a9388d06e
Author: Namhyung Kim <namhyung@kernel.org>
Date: Thu Apr 24 16:21:46 2014 +0900

description
===========
The existing hists__inc_nr_entries() is a misnomer as it's not only
increasing ->nr_entries but also other stats.  So rename it to more
general hists__inc_stats().
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-diff.c b/tools/perf/builtin-diff.c
index 6ef80f2..0e46fa1 100644
--- a/tools/perf/builtin-diff.c
+++ b/tools/perf/builtin-diff.c
@@ -586,7 +586,7 @@ static void hists__compute_resort(struct hists *hists)
   next = rb_next(&he->rb_node_in);
 
   insert_hist_entry_by_compute(&hists->entries, he, compute);
-  hists__inc_nr_entries(hists, he);
+  hists__inc_stats(hists, he);
  }
 }
 
diff --git a/tools/perf/util/hist.c b/tools/perf/util/hist.c
index 5a89247..12d6c1b 100644
--- a/tools/perf/util/hist.c
+++ b/tools/perf/util/hist.c
@@ -317,7 +317,7 @@ static struct hist_entry *hist_entry__new(struct hist_entry *template)
  return he;
 }
 
-void hists__inc_nr_entries(struct hists *hists, struct hist_entry *h)
+void hists__inc_stats(struct hists *hists, struct hist_entry *h)
 {
  if (!h->filtered) {
   hists__calc_col_len(hists, h);
@@ -686,7 +686,7 @@ void hists__output_resort(struct hists *hists)
   next = rb_next(&n->rb_node_in);
 
   __hists__insert_output_entry(&hists->entries, n, min_callchain_hits);
-  hists__inc_nr_entries(hists, n);
+  hists__inc_stats(hists, n);
  }
 }
 
@@ -853,7 +853,7 @@ static struct hist_entry *hists__add_dummy_entry(struct hists *hists,
   he->hists = hists;
   rb_link_node(&he->rb_node_in, parent, p);
   rb_insert_color(&he->rb_node_in, root);
-  hists__inc_nr_entries(hists, he);
+  hists__inc_stats(hists, he);
   he->dummy = true;
  }
 out:
diff --git a/tools/perf/util/hist.h b/tools/perf/util/hist.h
index 5a0343e..51478c9 100644
--- a/tools/perf/util/hist.h
+++ b/tools/perf/util/hist.h
@@ -116,7 +116,7 @@ void hists__decay_entries(struct hists *hists, bool zap_user, bool zap_kernel);
 void hists__output_recalc_col_len(struct hists *hists, int max_rows);
 
 u64 hists__total_period(struct hists *hists);
-void hists__inc_nr_entries(struct hists *hists, struct hist_entry *h);
+void hists__inc_stats(struct hists *hists, struct hist_entry *h);
 void hists__inc_nr_events(struct hists *hists, u32 type);
 void events_stats__inc(struct events_stats *stats, u32 type);
 size_t events_stats__fprintf(struct events_stats *stats, FILE *fp);
-- 
1.7.1