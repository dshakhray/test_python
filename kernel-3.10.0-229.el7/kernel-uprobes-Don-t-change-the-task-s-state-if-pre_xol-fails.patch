From 7a7c6b018033bbd5fd04b708bafd354c8cb948a4 Mon Sep 17 00:00:00 2001
From: Oleg Nesterov <oleg@redhat.com>
Date: Mon, 16 Jun 2014 16:01:59 -0400
Subject: [kernel] uprobes: Don't change the task's state if ->pre_xol() fails

Message-id: <20140616160159.GA15482@redhat.com>
Patchwork-id: 84086
O-Subject: [PATCH RHEL7 BZ 1073627 22/36] uprobes/x86: Don't change the task's state if ->pre_xol() fails
Bugzilla: 1073627
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

RHBZ: 1073627

Currently this doesn't matter, the only ->pre_xol() hook can't fail,
but we need to fix arch_uprobe_pre_xol() anyway. If ->pre_xol() fails
we should not change regs->ip/flags, we should just return the error
to make restart actually possible.

Signed-off-by: Oleg Nesterov <oleg@redhat.com>
Reviewed-by: Jim Keniston <jkenisto@us.ibm.com>
(cherry picked from commit dd91016dfc9ba9236cb0149984da3f0434278b49)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kernel/uprobes.c b/arch/x86/kernel/uprobes.c
index ecbffd1..f4464b1 100644
--- a/arch/x86/kernel/uprobes.c
+++ b/arch/x86/kernel/uprobes.c
@@ -687,6 +687,12 @@ int arch_uprobe_pre_xol(struct arch_uprobe *auprobe, struct pt_regs *regs)
 {
  struct uprobe_task *utask = current->utask;
 
+ if (auprobe->ops->pre_xol) {
+  int err = auprobe->ops->pre_xol(auprobe, regs);
+  if (err)
+   return err;
+ }
+
  regs->ip = utask->xol_vaddr;
  utask->autask.saved_trap_nr = current->thread.trap_nr;
  current->thread.trap_nr = UPROBE_TRAP_NR;
@@ -696,8 +702,6 @@ int arch_uprobe_pre_xol(struct arch_uprobe *auprobe, struct pt_regs *regs)
  if (test_tsk_thread_flag(current, TIF_BLOCKSTEP))
   set_task_blockstep(current, false);
 
- if (auprobe->ops->pre_xol)
-  return auprobe->ops->pre_xol(auprobe, regs);
  return 0;
 }
 
-- 
1.7.1