From 9a61f782c3602d1c117238ebecd9570cd6277bdb Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 28 Aug 2014 03:04:54 -0400
Subject: [acpi] pm: Drop two functions that are not used any more

Message-id: <20140828030454.2117.20986.stgit@gir.stowe>
Patchwork-id: 89301
O-Subject: [RHEL7.1 PATCH 13/30] ACPI / PM: Drop two functions that are not used any more
Bugzilla: 1128632
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1128632
Upstream Status: 2421ad48f4aed63bc890e8f3c53ed581a542fb66

commit 2421ad48f4aed63bc890e8f3c53ed581a542fb66
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Oct 17 15:44:48 2013 +0200

    ACPI / PM: Drop two functions that are not used any more

    Two functions defined in device_pm.c, acpi_dev_pm_add_dependent()
    and acpi_dev_pm_remove_dependent(), have no callers and may be
    dropped, so drop them.

    Moreover, they are the only functions adding entries to and removing
    entries from the power_dependent list in struct acpi_device, so drop
    that list too.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/acpi/device_pm.c b/drivers/acpi/device_pm.c
index 4ab807d..2efd5a5 100644
--- a/drivers/acpi/device_pm.c
+++ b/drivers/acpi/device_pm.c
@@ -1031,60 +1031,4 @@ void acpi_dev_pm_detach(struct device *dev, bool power_off)
  }
 }
 EXPORT_SYMBOL_GPL(acpi_dev_pm_detach);
-
-/**
- * acpi_dev_pm_add_dependent - Add physical device depending for PM.
- * @handle: Handle of ACPI device node.
- * @depdev: Device depending on that node for PM.
- */
-void acpi_dev_pm_add_dependent(acpi_handle handle, struct device *depdev)
-{
- struct acpi_device_physical_node *dep;
- struct acpi_device *adev;
-
- if (!depdev || acpi_bus_get_device(handle, &adev))
-  return;
-
- mutex_lock(&adev->physical_node_lock);
-
- list_for_each_entry(dep, &adev->power_dependent, node)
-  if (dep->dev == depdev)
-   goto out;
-
- dep = kzalloc(sizeof(*dep), GFP_KERNEL);
- if (dep) {
-  dep->dev = depdev;
-  list_add_tail(&dep->node, &adev->power_dependent);
- }
-
- out:
- mutex_unlock(&adev->physical_node_lock);
-}
-EXPORT_SYMBOL_GPL(acpi_dev_pm_add_dependent);
-
-/**
- * acpi_dev_pm_remove_dependent - Remove physical device depending for PM.
- * @handle: Handle of ACPI device node.
- * @depdev: Device depending on that node for PM.
- */
-void acpi_dev_pm_remove_dependent(acpi_handle handle, struct device *depdev)
-{
- struct acpi_device_physical_node *dep;
- struct acpi_device *adev;
-
- if (!depdev || acpi_bus_get_device(handle, &adev))
-  return;
-
- mutex_lock(&adev->physical_node_lock);
-
- list_for_each_entry(dep, &adev->power_dependent, node)
-  if (dep->dev == depdev) {
-   list_del(&dep->node);
-   kfree(dep);
-   break;
-  }
-
- mutex_unlock(&adev->physical_node_lock);
-}
-EXPORT_SYMBOL_GPL(acpi_dev_pm_remove_dependent);
 #endif /* CONFIG_PM */
diff --git a/drivers/acpi/scan.c b/drivers/acpi/scan.c
index baf5100..ddaff27 100644
--- a/drivers/acpi/scan.c
+++ b/drivers/acpi/scan.c
@@ -958,7 +958,6 @@ int acpi_device_add(struct acpi_device *device,
  INIT_LIST_HEAD(&device->wakeup_list);
  INIT_LIST_HEAD(&device->physical_node_list);
  mutex_init(&device->physical_node_lock);
- INIT_LIST_HEAD(&device->power_dependent);
 
  new_bus_id = kzalloc(sizeof(struct acpi_device_bus_id), GFP_KERNEL);
  if (!new_bus_id) {
diff --git a/include/acpi/acpi_bus.h b/include/acpi/acpi_bus.h
index 6e9ccd2..f40e6d7 100644
--- a/include/acpi/acpi_bus.h
+++ b/include/acpi/acpi_bus.h
@@ -312,7 +312,6 @@ struct acpi_device {
  unsigned int physical_node_count;
  struct list_head physical_node_list;
  struct mutex physical_node_lock;
- struct list_head power_dependent;
  void (*remove)(struct acpi_device *);
 };
 
@@ -454,8 +453,6 @@ acpi_status acpi_add_pm_notifier(struct acpi_device *adev,
 acpi_status acpi_remove_pm_notifier(struct acpi_device *adev,
         acpi_notify_handler handler);
 int acpi_pm_device_sleep_state(struct device *, int *, int);
-void acpi_dev_pm_add_dependent(acpi_handle handle, struct device *depdev);
-void acpi_dev_pm_remove_dependent(acpi_handle handle, struct device *depdev);
 #else
 static inline acpi_status acpi_add_pm_notifier(struct acpi_device *adev,
             acpi_notify_handler handler,
@@ -476,10 +473,6 @@ static inline int acpi_pm_device_sleep_state(struct device *d, int *p, int m)
  return (m >= ACPI_STATE_D0 && m <= ACPI_STATE_D3_COLD) ?
   m : ACPI_STATE_D0;
 }
-static inline void acpi_dev_pm_add_dependent(acpi_handle handle,
-          struct device *depdev) {}
-static inline void acpi_dev_pm_remove_dependent(acpi_handle handle,
-      struct device *depdev) {}
 #endif
 
 #ifdef CONFIG_PM_RUNTIME
-- 
1.7.1