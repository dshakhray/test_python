From 4a84446926e8e6c4fc68fc6e8f353b6e57faf26a Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:23:13 -0400
Subject: [cpufreq] acpi-cpufreq: De-register CPU notifier and free struct msr on error

Message-id: <1409235879-1283-100-git-send-email-prarit@redhat.com>
Patchwork-id: 89517
O-Subject: [RHEL7.1 PATCH BZ 1134639 099/185] acpi-cpufreq: De-register CPU notifier and free struct msr on error.
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit eb8c68ef558e6cba241e7ada54f6b3427cb2bf68
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Mon Jan 27 22:50:35 2014 -0500

    acpi-cpufreq: De-register CPU notifier and free struct msr on error.

    If cpufreq_register_driver() fails we would free the acpi driver
    related structures but not free the ones allocated
    by acpi_cpufreq_boost_init() function. This meant that as
    the driver error-ed out and a CPU online/offline event came
    we would crash and burn as one of the CPU notifiers would point
    to garbage.

    Fixes: cfc9c8ed03e4 (acpi-cpufreq: Adjust the code to use the common boost attribute)
    Acked-by: Lukasz Majewski <l.majewski@samsung.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/acpi-cpufreq.c b/drivers/cpufreq/acpi-cpufreq.c
index 967b24e..c02f1c6 100644
--- a/drivers/cpufreq/acpi-cpufreq.c
+++ b/drivers/cpufreq/acpi-cpufreq.c
@@ -920,7 +920,7 @@ static void __init acpi_cpufreq_boost_init(void)
  }
 }
 
-static void __exit acpi_cpufreq_boost_exit(void)
+static void acpi_cpufreq_boost_exit(void)
 {
  if (msrs) {
   unregister_cpu_notifier(&boost_nb);
@@ -970,9 +970,10 @@ static int __init acpi_cpufreq_init(void)
  acpi_cpufreq_boost_init();
 
  ret = cpufreq_register_driver(&acpi_cpufreq_driver);
- if (ret)
+ if (ret) {
   free_acpi_perf_data();
-
+  acpi_cpufreq_boost_exit();
+ }
  return ret;
 }
 
-- 
1.7.1