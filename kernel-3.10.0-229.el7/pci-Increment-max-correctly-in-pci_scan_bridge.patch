From b77e77b72f39d7eb24f5eb171fd8d30ccfb6be9f Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Wed, 6 Aug 2014 03:46:08 -0400
Subject: [pci] Increment max correctly in pci_scan_bridge()

Message-id: <20140806034607.1438.19326.stgit@gir.stowe>
Patchwork-id: 87428
O-Subject: [RHEL7.1 PATCH 19/69] PCI: Increment max correctly in pci_scan_bridge()
Bugzilla: 1110896
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110896
Upstream Status: 9a4d7d87197e3ff9138981e196aa5021d13a51a8

commit 9a4d7d87197e3ff9138981e196aa5021d13a51a8
Author: Andreas Noever <andreas.noever@gmail.com>
Date:   Thu Jan 23 21:59:21 2014 +0100

    PCI: Increment max correctly in pci_scan_bridge()

    This patch fixes two small issues:
     - If pci_add_new_bus() fails, max must not be incremented. Otherwise
       an incorrect value is returned from pci_scan_bridge().
     - If the bus is already present, max must be incremented. I think
       that this case should only be hit if we trigger a manual rescan of a
       CardBus bridge.

    Signed-off-by: Andreas Noever <andreas.noever@gmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/probe.c b/drivers/pci/probe.c
index b3f5ee9..ddd7096 100644
--- a/drivers/pci/probe.c
+++ b/drivers/pci/probe.c
@@ -895,11 +895,12 @@ int pci_scan_bridge(struct pci_bus *bus, struct pci_dev *dev, int max, int pass)
    * this case we only re-scan this bus. */
   child = pci_find_bus(pci_domain_nr(bus), max+1);
   if (!child) {
-   child = pci_add_new_bus(bus, dev, ++max);
+   child = pci_add_new_bus(bus, dev, max+1);
    if (!child)
     goto out;
-   pci_bus_insert_busn_res(child, max, 0xff);
+   pci_bus_insert_busn_res(child, max+1, 0xff);
   }
+  max++;
   buses = (buses & 0xff000000)
         | ((unsigned int)(child->primary)     <<  0)
         | ((unsigned int)(child->busn_res.start)   <<  8)
-- 
1.7.1