From 43a1cd80d9ea7ac5d5bd7d61bb2671e0b52c9cd6 Mon Sep 17 00:00:00 2001
From: Florian Westphal <fwestpha@redhat.com>
Date: Tue, 2 Sep 2014 10:14:56 -0400
Subject: [net] Add skb_gro_postpull_rcsum to udp and vxlan

Message-id: <1409652920-431-34-git-send-email-fwestpha@redhat.com>
Patchwork-id: 90176
O-Subject: [PATCH 33/57] [RHEL7.1 net] net: Add skb_gro_postpull_rcsum to udp and vxlan
Bugzilla: 1131999
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: Vlad Yasevich <vyasevic@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>
RH-Acked-by: Jiri Benc <jbenc@redhat.com>

BZ: 1131999

commit 6bae1d4cc395ad46613e40c9e865ee171dc9de5c
Author: Tom Herbert <therbert@google.com>
Date:   Tue Jun 10 18:54:26 2014 -0700

    net: Add skb_gro_postpull_rcsum to udp and vxlan

    Need to gro_postpull_rcsum for GRO to work with checksum complete.

    Signed-off-by: Tom Herbert <therbert@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/vxlan.c b/drivers/net/vxlan.c
index 9095cdc..c00de04 100644
--- a/drivers/net/vxlan.c
+++ b/drivers/net/vxlan.c
@@ -567,6 +567,7 @@ static struct sk_buff **vxlan_gro_receive(struct sk_buff **head, struct sk_buff
    goto out;
  }
  skb_gro_pull(skb, sizeof(struct vxlanhdr)); /* pull vxlan header */
+ skb_gro_postpull_rcsum(skb, vh, sizeof(struct vxlanhdr));
 
  off_eth = skb_gro_offset(skb);
  hlen = off_eth + sizeof(*eh);
@@ -601,6 +602,7 @@ static struct sk_buff **vxlan_gro_receive(struct sk_buff **head, struct sk_buff
  }
 
  skb_gro_pull(skb, sizeof(*eh)); /* pull inner eth header */
+ skb_gro_postpull_rcsum(skb, eh, sizeof(*eh));
  pp = ptype->callbacks.gro_receive(head, skb);
 
 out_unlock:
diff --git a/net/ipv4/udp_offload.c b/net/ipv4/udp_offload.c
index 7b18401..546d2d4 100644
--- a/net/ipv4/udp_offload.c
+++ b/net/ipv4/udp_offload.c
@@ -200,6 +200,7 @@ unflush:
  }
 
  skb_gro_pull(skb, sizeof(struct udphdr)); /* pull encapsulating udp header */
+ skb_gro_postpull_rcsum(skb, uh, sizeof(struct udphdr));
  pp = uo_priv->offload->callbacks.gro_receive(head, skb);
 
 out_unlock:
-- 
1.7.1