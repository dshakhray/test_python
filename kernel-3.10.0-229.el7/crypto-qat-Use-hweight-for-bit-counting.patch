From b9c83a1c7d1439ff1fefa3e42cbfe84364258e17 Mon Sep 17 00:00:00 2001
From: Nikolay Aleksandrov <nikolay@redhat.com>
Date: Mon, 1 Sep 2014 13:33:18 -0400
Subject: [crypto] qat: Use hweight for bit counting

Message-id: <1409578401-26943-27-git-send-email-nikolay@redhat.com>
Patchwork-id: 90103
O-Subject: [RHEL7.1 PATCH BZ 1091130 26/29] crypto: qat - Use hweight for bit counting
Bugzilla: 1091130
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Herbert Xu <herbert.xu@redhat.com>

From: Tadeusz Struk <tadeusz.struk@intel.com>

Use predefined hweight32 function instead of writing a new one.

Signed-off-by: Pingchao Yang <pingchao.yang@intel.com>
Signed-off-by: Tadeusz Struk <tadeusz.struk@intel.com>
Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit d9a44abf3aede89c3dbb6dfa8a95c856b9ae8da3)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/crypto/qat/qat_common/qat_hal.c b/drivers/crypto/qat/qat_common/qat_hal.c
index 8d686a2..9b8a315 100644
--- a/drivers/crypto/qat/qat_common/qat_hal.c
+++ b/drivers/crypto/qat/qat_common/qat_hal.c
@@ -795,17 +795,6 @@ static void qat_hal_get_uwords(struct icp_qat_fw_loader_handle *handle,
  qat_hal_wr_ae_csr(handle, ae, USTORE_ADDRESS, ustore_addr);
 }
 
-static int qat_hal_count_bits(unsigned int word)
-{
- int n = 0;
-
- while (word) {
-  n++;
-  word &= word - 1;
- }
- return n;
-}
-
 void qat_hal_wr_umem(struct icp_qat_fw_loader_handle *handle,
        unsigned char ae, unsigned int uaddr,
        unsigned int words_num, unsigned int *data)
@@ -822,9 +811,9 @@ void qat_hal_wr_umem(struct icp_qat_fw_loader_handle *handle,
      ((data[i] & 0xff00) << 2) |
      (0x3 << 8) | (data[i] & 0xff);
   uwrd_hi = (0xf << 4) | ((data[i] & 0xf0000000) >> 28);
-  uwrd_hi |= (qat_hal_count_bits(data[i] & 0xffff) & 0x1) << 8;
+  uwrd_hi |= (hweight32(data[i] & 0xffff) & 0x1) << 8;
   tmp = ((data[i] >> 0x10) & 0xffff);
-  uwrd_hi |= (qat_hal_count_bits(tmp) & 0x1) << 9;
+  uwrd_hi |= (hweight32(tmp) & 0x1) << 9;
   qat_hal_wr_ae_csr(handle, ae, USTORE_DATA_LOWER, uwrd_lo);
   qat_hal_wr_ae_csr(handle, ae, USTORE_DATA_UPPER, uwrd_hi);
  }
-- 
1.7.1