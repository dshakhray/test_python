From 5fe81f748a9c8d65571ff285eb534594048ffa7e Mon Sep 17 00:00:00 2001
From: Gustavo Duarte <gduarte@redhat.com>
Date: Fri, 1 Aug 2014 00:50:24 -0400
Subject: [powerpc] perf: Avoid mutating event in power8_get_constraint()

Message-id: <1406854226-17977-4-git-send-email-gduarte@redhat.com>
Patchwork-id: 86925
O-Subject: [RHEL7.1 PATCH BZ 1121408 3/5] powerpc/perf: Avoid mutating event in power8_get_constraint()
Bugzilla: 1121408
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1121408
Upstream Status: 7cbba630288112e231558d055123cfc3e19feeb6

commit 7cbba630288112e231558d055123cfc3e19feeb6
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Fri Mar 14 16:00:32 2014 +1100

    powerpc/perf: Avoid mutating event in power8_get_constraint()

    We only need to mask the EBB bit out of the event for the check of the
    special PMC 5 & 6 events. So use a local to do it just for that code,
    rather than changing the event value for the life of the function.

    While we're there move the set of mask and value after all the checks.

    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/perf/power8-pmu.c b/arch/powerpc/perf/power8-pmu.c
index 19da3c8..945c744 100644
--- a/arch/powerpc/perf/power8-pmu.c
+++ b/arch/powerpc/perf/power8-pmu.c
@@ -239,18 +239,20 @@ static int power8_get_constraint(u64 event, unsigned long *maskp, unsigned long
  cache = (event >> EVENT_CACHE_SEL_SHIFT)  & EVENT_CACHE_SEL_MASK;
  ebb   = (event >> EVENT_EBB_SHIFT)        & EVENT_EBB_MASK;
 
- /* Clear the EBB bit in the event, so event checks work below */
- event &= ~(EVENT_EBB_MASK << EVENT_EBB_SHIFT);
-
  if (pmc) {
+  u64 base_event;
+
   if (pmc > 6)
    return -1;
 
-  mask  |= CNST_PMC_MASK(pmc);
-  value |= CNST_PMC_VAL(pmc);
+  /* Ignore Linux defined bits when checking event below */
+  base_event = event & ~(EVENT_EBB_MASK << EVENT_EBB_SHIFT);
 
-  if (pmc >= 5 && event != 0x500fa && event != 0x600f4)
+  if (pmc >= 5 && base_event != 0x500fa && base_event != 0x600f4)
    return -1;
+
+  mask  |= CNST_PMC_MASK(pmc);
+  value |= CNST_PMC_VAL(pmc);
  }
 
  if (pmc <= 4) {
-- 
1.7.1