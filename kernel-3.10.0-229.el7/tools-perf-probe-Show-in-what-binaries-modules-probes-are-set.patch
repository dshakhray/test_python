From 0a170244cc05e3b5df4f618785ddd59ea450956a Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:05:12 -0400
Subject: [tools] perf/probe: Show in what binaries/modules probes are set

Message-id: <1410181752-25631-68-git-send-email-jolsa@redhat.com>
Patchwork-id: 91805
O-Subject: [PATCH RHEL7.1 BZ1134356 067/307] perf probe: Show in what binaries/modules probes are set
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit fb226ccd2a6f77be13009edc196da2077800066b
Author: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
Date: Thu Feb 6 05:32:13 2014 +0000

description
===========
Show the name of binary file or modules in which the probes are set with
--list option.

Without this change;

  # ./perf probe -m drm drm_av_sync_delay
  # ./perf probe -x perf dso__load_vmlinux

  # ./perf probe -l
    probe:drm_av_sync_delay (on drm_av_sync_delay)
    probe_perf:dso__load_vmlinux (on 0x000000000006d110)

With this change;

  # ./perf probe -l
    probe:drm_av_sync_delay (on drm_av_sync_delay in drm)
    probe_perf:dso__load_vmlinux (on 0x000000000006d110 in /kbuild/ksrc/linux-3/tools/perf/perf)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/probe-event.c b/tools/perf/util/probe-event.c
index ace3ba3..de9fe90 100644
--- a/tools/perf/util/probe-event.c
+++ b/tools/perf/util/probe-event.c
@@ -1728,7 +1728,8 @@ static struct strlist *get_probe_trace_command_rawlist(int fd)
 }
 
 /* Show an event */
-static int show_perf_probe_event(struct perf_probe_event *pev)
+static int show_perf_probe_event(struct perf_probe_event *pev,
+     const char *module)
 {
  int i, ret;
  char buf[128];
@@ -1744,6 +1745,8 @@ static int show_perf_probe_event(struct perf_probe_event *pev)
   return ret;
 
  printf("  %-20s (on %s", buf, place);
+ if (module)
+  printf(" in %s", module);
 
  if (pev->nargs > 0) {
   printf(" with");
@@ -1781,7 +1784,8 @@ static int __show_perf_probe_events(int fd, bool is_kprobe)
    ret = convert_to_perf_probe_event(&tev, &pev,
         is_kprobe);
    if (ret >= 0)
-    ret = show_perf_probe_event(&pev);
+    ret = show_perf_probe_event(&pev,
+           tev.point.module);
   }
   clear_perf_probe_event(&pev);
   clear_probe_trace_event(&tev);
@@ -1980,7 +1984,7 @@ static int __add_probe_trace_events(struct perf_probe_event *pev,
   group = pev->group;
   pev->event = tev->event;
   pev->group = tev->group;
-  show_perf_probe_event(pev);
+  show_perf_probe_event(pev, tev->point.module);
   /* Trick here - restore current event/group */
   pev->event = (char *)event;
   pev->group = (char *)group;
-- 
1.7.1