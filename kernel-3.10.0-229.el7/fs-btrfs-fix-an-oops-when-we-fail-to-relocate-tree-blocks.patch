From 18f441dc9605d3196ca3db64c04b5eab8a88c842 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 18:59:31 -0400
Subject: [fs] btrfs: fix an oops when we fail to relocate tree blocks

Message-id: <1407179109-13714-85-git-send-email-sandeen@redhat.com>
Patchwork-id: 87007
O-Subject: [RHEL7.1 PATCH 084/422] Btrfs: fix an oops when we fail to relocate tree blocks
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Wang Shilong <wangsl.fnst@cn.fujitsu.com>

commit 1708cc5723cb775703b42a0ce8e521019c42dd67
Author: Wang Shilong <wangsl.fnst@cn.fujitsu.com>
Date:   Sat Dec 28 19:52:39 2013 +0800

    Btrfs: fix an oops when we fail to relocate tree blocks

    During balance test, we hit an oops:
    [ 2013.841551] kernel BUG at fs/btrfs/relocation.c:1174!

    The problem is that if we fail to relocate tree blocks, we should
    update backref cache, otherwise, some pending nodes are not updated
    while snapshot check @cache->last_trans is within one transaction
    and won't update it and then oops happen.

    Signed-off-by: Wang Shilong <wangsl.fnst@cn.fujitsu.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/relocation.c b/fs/btrfs/relocation.c
index 9189f9e..07b3b36 100644
--- a/fs/btrfs/relocation.c
+++ b/fs/btrfs/relocation.c
@@ -4009,6 +4009,12 @@ restart:
   if (!RB_EMPTY_ROOT(&blocks)) {
    ret = relocate_tree_blocks(trans, rc, &blocks);
    if (ret < 0) {
+    /*
+     * if we fail to relocate tree blocks, force to update
+     * backref cache when committing transaction.
+     */
+    rc->backref_cache.last_trans = trans->transid - 1;
+
     if (ret != -EAGAIN) {
      err = ret;
      break;
-- 
1.7.1