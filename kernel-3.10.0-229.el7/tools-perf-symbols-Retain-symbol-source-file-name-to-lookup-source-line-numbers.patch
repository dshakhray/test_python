From 66f48f7b8abf79fcf67f31310621321a13eacf74 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:49:15 -0400
Subject: [tools] perf/symbols: Retain symbol source file name to lookup source line numbers

Message-id: <1408953210-26343-68-git-send-email-jolsa@redhat.com>
Patchwork-id: 88765
O-Subject: [PATCH RHEL7.1 BZ1133083 067/322] perf symbols: Retain symbol source file name to lookup source line numbers
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 0058aef65eda9c9dde8253af702d542ba7eef697
Author: Adrian Hunter <adrian.hunter@intel.com>
Date: Tue Dec 3 09:23:08 2013 +0200

description
===========
Currently, lookup of an ip's source file name and line number is done
using the dso file name.

Instead retain the file name used to lookup the dso's symbols and use
that.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/dso.c b/tools/perf/util/dso.c
index 68aa55a..49da968 100644
--- a/tools/perf/util/dso.c
+++ b/tools/perf/util/dso.c
@@ -470,6 +470,7 @@ void dso__delete(struct dso *dso)
   free(dso->long_name);
  dso_cache__free(&dso->cache);
  dso__free_a2l(dso);
+ free(dso->symsrc_filename);
  free(dso);
 }
 
diff --git a/tools/perf/util/dso.h b/tools/perf/util/dso.h
index d8613dc..7142e52 100644
--- a/tools/perf/util/dso.h
+++ b/tools/perf/util/dso.h
@@ -78,6 +78,7 @@ struct dso {
  struct rb_root  symbol_names[MAP__NR_TYPES];
  struct rb_root  cache;
  void   *a2l;
+ char   *symsrc_filename;
  enum dso_kernel_type kernel;
  enum dso_swap_type needs_swap;
  enum dso_binary_type symtab_type;
diff --git a/tools/perf/util/srcline.c b/tools/perf/util/srcline.c
index 25b85b2..93795f9 100644
--- a/tools/perf/util/srcline.c
+++ b/tools/perf/util/srcline.c
@@ -249,11 +249,16 @@ char *get_srcline(struct dso *dso, unsigned long addr)
  char *file = NULL;
  unsigned line = 0;
  char *srcline;
- char *dso_name = dso->long_name;
+ char *dso_name;
 
  if (!dso->has_srcline)
   return SRCLINE_UNKNOWN;
 
+ if (dso->symsrc_filename)
+  dso_name = dso->symsrc_filename;
+ else
+  dso_name = dso->long_name;
+
  if (dso_name[0] == '[')
   goto out;
 
diff --git a/tools/perf/util/symbol.c b/tools/perf/util/symbol.c
index 360eefe..de87dba 100644
--- a/tools/perf/util/symbol.c
+++ b/tools/perf/util/symbol.c
@@ -1336,6 +1336,8 @@ int dso__load(struct dso *dso, struct map *map, symbol_filter_t filter)
   if (!syms_ss && symsrc__has_symtab(ss)) {
    syms_ss = ss;
    next_slot = true;
+   if (!dso->symsrc_filename)
+    dso->symsrc_filename = strdup(name);
   }
 
   if (!runtime_ss && symsrc__possibly_runtime(ss)) {
-- 
1.7.1