From a3f7e91458b353cbd91a0a7b5b1c2ac9ff234458 Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Mon, 23 Jun 2014 21:51:31 -0400
Subject: [fs] nfsd: Adds macro EX_UUID_LEN for exports uuid's length

Message-id: <1403560314-32525-150-git-send-email-bfields@redhat.com>
Patchwork-id: 84518
O-Subject: [Patch RHEL7 149/172] NFSD: Adds macro EX_UUID_LEN for exports uuid's length
Bugzilla: 1111719
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Kinglong Mee <kinglongmee@gmail.com>

Signed-off-by: Kinglong Mee <kinglongmee@gmail.com>
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: 94eb36892d727145794b80dceffc435d1d68edbb
Bugzilla: 1111719
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/export.c b/fs/nfsd/export.c
index 8771f41..90d37b6 100644
--- a/fs/nfsd/export.c
+++ b/fs/nfsd/export.c
@@ -487,10 +487,10 @@ uuid_parse(char **mesg, char *buf, unsigned char **puuid)
 
  /* expect a 16 byte uuid encoded as \xXXXX... */
  len = qword_get(mesg, buf, PAGE_SIZE);
- if (len != 16)
+ if (len != EX_UUID_LEN)
   return -EINVAL;
 
- *puuid = kmemdup(buf, 16, GFP_KERNEL);
+ *puuid = kmemdup(buf, EX_UUID_LEN, GFP_KERNEL);
  if (*puuid == NULL)
   return -ENOMEM;
 
@@ -663,7 +663,7 @@ static int svc_export_show(struct seq_file *m,
   if (exp->ex_uuid) {
    int i;
    seq_puts(m, ",uuid=");
-   for (i=0; i<16; i++) {
+   for (i = 0; i < EX_UUID_LEN; i++) {
     if ((i&3) == 0 && i)
      seq_putc(m, ':');
     seq_printf(m, "%02x", exp->ex_uuid[i]);
diff --git a/fs/nfsd/export.h b/fs/nfsd/export.h
index d7939a6..c7d4ed0 100644
--- a/fs/nfsd/export.h
+++ b/fs/nfsd/export.h
@@ -37,6 +37,7 @@ struct nfsd4_fs_locations {
  * spkm3i, and spkm3p (and using all 8 at once should be rare).
  */
 #define MAX_SECINFO_LIST 8
+#define EX_UUID_LEN  16
 
 struct exp_flavor_info {
  u32 pseudoflavor;
diff --git a/fs/nfsd/nfs4xdr.c b/fs/nfsd/nfs4xdr.c
index 470fe89..70d1472 100644
--- a/fs/nfsd/nfs4xdr.c
+++ b/fs/nfsd/nfs4xdr.c
@@ -2223,7 +2223,8 @@ nfsd4_encode_fattr(struct xdr_stream *xdr, struct svc_fh *fhp,
    *p++ = cpu_to_be32(MINOR(stat.dev));
    break;
   case FSIDSOURCE_UUID:
-   p = xdr_encode_opaque_fixed(p, exp->ex_uuid, 16);
+   p = xdr_encode_opaque_fixed(p, exp->ex_uuid,
+        EX_UUID_LEN);
    break;
   }
  }
-- 
1.7.1