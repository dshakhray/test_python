From ffeea723ec3466dff312cdfaaa0a08a07c04cc91 Mon Sep 17 00:00:00 2001
From: Tomas Henzl <thenzl@redhat.com>
Date: Thu, 16 Oct 2014 16:01:50 -0400
Subject: [scsi] mpt2sas: Added driver module parameter max_msix_vectors

Message-id: <1413475335-14737-8-git-send-email-thenzl@redhat.com>
Patchwork-id: 97588
O-Subject: [RHEL7.1 e-stor PATCH 07/32] mpt2sas: Added driver module parameter max_msix_vectors
Bugzilla: 1088524
RH-Acked-by: Maurizio Lombardi <mlombard@redhat.com>
RH-Acked-by: Rob Evers <revers@redhat.com>

Added driver module parameter max_msix_vectors. Using this
module parameter the maximum number of MSI-X vectors could be set.

The number of MSI-X vectors used would be the minimum of MSI-X vectors
supported by the HBA, the number of CPU cores and the value set to
max_msix_vectors module parameters.

Signed-off-by: Sreekanth Reddy <Sreekanth.Reddy@avagotech.com>
Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 4e1f20ae4f92706518d6c18b13da8c2bc28339c7)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/mpt2sas/mpt2sas_base.c b/drivers/scsi/mpt2sas/mpt2sas_base.c
index 2f262be..982703a 100644
--- a/drivers/scsi/mpt2sas/mpt2sas_base.c
+++ b/drivers/scsi/mpt2sas/mpt2sas_base.c
@@ -80,6 +80,10 @@ static int msix_disable = -1;
 module_param(msix_disable, int, 0);
 MODULE_PARM_DESC(msix_disable, " disable msix routed interrupts (default=0)");
 
+static int max_msix_vectors = -1;
+module_param(max_msix_vectors, int, 0);
+MODULE_PARM_DESC(max_msix_vectors, " max msix vectors ");
+
 static int mpt2sas_fwfault_debug;
 MODULE_PARM_DESC(mpt2sas_fwfault_debug, " enable detection of firmware fault "
  "and halt firmware - (default=0)");
@@ -1402,6 +1406,16 @@ _base_enable_msix(struct MPT2SAS_ADAPTER *ioc)
  ioc->reply_queue_count = min_t(int, ioc->cpu_count,
      ioc->msix_vector_count);
 
+ if (max_msix_vectors > 0) {
+  ioc->reply_queue_count = min_t(int, max_msix_vectors,
+      ioc->reply_queue_count);
+  ioc->msix_vector_count = ioc->reply_queue_count;
+ }
+
+ printk(MPT2SAS_INFO_FMT
+ "MSI-X vectors supported: %d, no of cores: %d, max_msix_vectors: %d\n",
+  ioc->name, ioc->msix_vector_count, ioc->cpu_count, max_msix_vectors);
+
  entries = kcalloc(ioc->reply_queue_count, sizeof(struct msix_entry),
      GFP_KERNEL);
  if (!entries) {
-- 
1.7.1