From ae26b23b6e9dbc56477cfdb1b826048b56c6b151 Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Mon, 23 Jun 2014 21:49:42 -0400
Subject: [fs] nfsd: fix encode_entryplus_baggage stack usage

Message-id: <1403560314-32525-41-git-send-email-bfields@redhat.com>
Patchwork-id: 84472
O-Subject: [Patch RHEL7 040/172] nfsd: fix encode_entryplus_baggage stack usage
Bugzilla: 1111719
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

We stick an extra svc_fh in nfsd3_readdirres to save the need to
kmalloc, though maybe it would be fine to kmalloc instead.

Acked-by: Jeff Layton <jlayton@redhat.com>
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: 068c34c0ce8add2e5f01ee6c85710e6fefb832ad
Bugzilla: 1111719
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs3xdr.c b/fs/nfsd/nfs3xdr.c
index 1ee6bae..de6e39e 100644
--- a/fs/nfsd/nfs3xdr.c
+++ b/fs/nfsd/nfs3xdr.c
@@ -842,21 +842,21 @@ out:
 
 static __be32 *encode_entryplus_baggage(struct nfsd3_readdirres *cd, __be32 *p, const char *name, int namlen)
 {
- struct svc_fh fh;
+ struct svc_fh *fh = &cd->scratch;
  __be32 err;
 
- fh_init(&fh, NFS3_FHSIZE);
- err = compose_entry_fh(cd, &fh, name, namlen);
+ fh_init(fh, NFS3_FHSIZE);
+ err = compose_entry_fh(cd, fh, name, namlen);
  if (err) {
   *p++ = 0;
   *p++ = 0;
   goto out;
  }
- p = encode_post_op_attr(cd->rqstp, p, &fh);
+ p = encode_post_op_attr(cd->rqstp, p, fh);
  *p++ = xdr_one;   /* yes, a file handle follows */
- p = encode_fh(p, &fh);
+ p = encode_fh(p, fh);
 out:
- fh_put(&fh);
+ fh_put(fh);
  return p;
 }
 
diff --git a/fs/nfsd/xdr3.h b/fs/nfsd/xdr3.h
index b6d5542..335e04a 100644
--- a/fs/nfsd/xdr3.h
+++ b/fs/nfsd/xdr3.h
@@ -174,6 +174,9 @@ struct nfsd3_linkres {
 struct nfsd3_readdirres {
  __be32   status;
  struct svc_fh  fh;
+ /* Just to save kmalloc on every readdirplus entry (svc_fh is a
+  * little large for the stack): */
+ struct svc_fh  scratch;
  int   count;
  __be32   verf[2];
 
-- 
1.7.1