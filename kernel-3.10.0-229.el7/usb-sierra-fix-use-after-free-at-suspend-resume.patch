From 3ba7e2f28104ad99fbaa5c4736f19819ef567395 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:08:14 -0400
Subject: [usb] sierra: fix use after free at suspend/resume

Message-id: <1410887463-20674-423-git-send-email-dzickus@redhat.com>
Patchwork-id: 95453
O-Subject: [RHEL7 PATCH 422/591] USB: sierra: fix use after free at suspend/resume
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 8452727de70f6ad850cd6d0aaa18b5d9050aa63b
Author: Johan Hovold <jhovold@gmail.com>
Date:   Mon May 26 19:22:51 2014 +0200

    USB: sierra: fix use after free at suspend/resume

    Fix use after free or NULL-pointer dereference during suspend and
    resume.

    The port data may never have been allocated (port probe failed)
    or may already have been released by port_remove (e.g. driver is
    unloaded) when suspend and resume are called.

    Fixes: e6929a9020ac ("USB: support for autosuspend in sierra while
    online")

    Cc: <stable@vger.kernel.org> # v2.6.32
    Signed-off-by: Johan Hovold <jhovold@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/serial/sierra.c b/drivers/usb/serial/sierra.c
index 07cbd98..2c5c5a9 100644
--- a/drivers/usb/serial/sierra.c
+++ b/drivers/usb/serial/sierra.c
@@ -933,6 +933,7 @@ static int sierra_port_remove(struct usb_serial_port *port)
  struct sierra_port_private *portdata;
 
  portdata = usb_get_serial_port_data(port);
+ usb_set_serial_port_data(port, NULL);
  kfree(portdata);
 
  return 0;
@@ -949,6 +950,8 @@ static void stop_read_write_urbs(struct usb_serial *serial)
  for (i = 0; i < serial->num_ports; ++i) {
   port = serial->port[i];
   portdata = usb_get_serial_port_data(port);
+  if (!portdata)
+   continue;
   sierra_stop_rx_urbs(port);
   usb_kill_anchored_urbs(&portdata->active);
  }
@@ -991,6 +994,9 @@ static int sierra_resume(struct usb_serial *serial)
   port = serial->port[i];
   portdata = usb_get_serial_port_data(port);
 
+  if (!portdata)
+   continue;
+
   while ((urb = usb_get_from_anchor(&portdata->delayed))) {
    usb_anchor_urb(urb, &portdata->active);
    intfdata->in_flight++;
-- 
1.7.1