From d2517dfc26342b933863afbd8f13370909a017e8 Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Wed, 29 Oct 2014 16:33:55 -0400
Subject: [fs] ext4: find the group descriptors on a 1k-block bigalloc, meta_bg filesystem

Message-id: <1414600485-1929-6-git-send-email-lczerner@redhat.com>
Patchwork-id: 98525
O-Subject: [RHEL 7.1 PATCH v2 05/55] ext4: find the group descriptors on a 1k-block bigalloc, meta_bg filesystem
Bugzilla: 1156096
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: "Darrick J. Wong" <darrick.wong@oracle.com>

BZ 1156096
https://bugzilla.redhat.com/show_bug.cgi?id=1156096

BREW 8169722
https://brewweb.devel.redhat.com/taskinfo?taskID=8169722

Upstream commit bd63f6b0cd577e94846869db0c86a7b2bee79b26

 On a filesystem with a 1k block size, the group descriptors live in
 block 2, not block 1.  If the filesystem has bigalloc,meta_bg set,
 however, the calculation of the group descriptor table location does
 not take this into account and returns the wrong block number.  Fix
 the calculation to return the correct value for this case.

 Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/super.c b/fs/ext4/super.c
index 00c701e..f763247 100644
--- a/fs/ext4/super.c
+++ b/fs/ext4/super.c
@@ -2402,6 +2402,16 @@ static ext4_fsblk_t descriptor_loc(struct super_block *sb,
  if (ext4_bg_has_super(sb, bg))
   has_super = 1;
 
+ /*
+  * If we have a meta_bg fs with 1k blocks, group 0's GDT is at
+  * block 2, not 1.  If s_first_data_block == 0 (bigalloc is enabled
+  * on modern mke2fs or blksize > 1k on older mke2fs) then we must
+  * compensate.
+  */
+ if (sb->s_blocksize == 1024 && nr == 0 &&
+     le32_to_cpu(EXT4_SB(sb)->s_es->s_first_data_block) == 0)
+  has_super++;
+
  return (has_super + ext4_group_first_block_no(sb, bg));
 }
 
-- 
1.7.1