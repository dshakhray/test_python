From 50e6c851d606613d9182574f767ede156a869833 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 18:58:56 -0400
Subject: [fs] btrfs: fix pass of transid with wrong endianness in send.c

Message-id: <1407179109-13714-50-git-send-email-sandeen@redhat.com>
Patchwork-id: 86996
O-Subject: [RHEL7.1 PATCH 049/422] Btrfs: fix pass of transid with wrong endianness in send.c
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Filipe David Borba Manana <fdmanana@gmail.com>

commit 5a0f4e2c2b47a755e37dbbb6f691e6504e3147b3
Author: Filipe David Borba Manana <fdmanana@gmail.com>
Date:   Tue Dec 3 15:55:48 2013 +0000

    Btrfs: fix pass of transid with wrong endianness in send.c

    fs/btrfs/send.c:2190:9: warning: incorrect type in argument 3 (different base types)
    fs/btrfs/send.c:2190:9:    expected unsigned long long [unsigned] [usertype] value
    fs/btrfs/send.c:2190:9:    got restricted __le64 [usertype] ctransid
    fs/btrfs/send.c:2195:17: warning: incorrect type in argument 3 (different base types)
    fs/btrfs/send.c:2195:17:    expected unsigned long long [unsigned] [usertype] value
    fs/btrfs/send.c:2195:17:    got restricted __le64 [usertype] ctransid
    fs/btrfs/send.c:3716:9: warning: incorrect type in argument 3 (different base types)
    fs/btrfs/send.c:3716:9:    expected unsigned long long [unsigned] [usertype] value
    fs/btrfs/send.c:3716:9:    got restricted __le64 [usertype] ctransid

    Signed-off-by: Filipe David Borba Manana <fdmanana@gmail.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/send.c b/fs/btrfs/send.c
index 29803b4..1896e39 100644
--- a/fs/btrfs/send.c
+++ b/fs/btrfs/send.c
@@ -2188,12 +2188,12 @@ static int send_subvol_begin(struct send_ctx *sctx)
  TLV_PUT_UUID(sctx, BTRFS_SEND_A_UUID,
    sctx->send_root->root_item.uuid);
  TLV_PUT_U64(sctx, BTRFS_SEND_A_CTRANSID,
-   sctx->send_root->root_item.ctransid);
+      le64_to_cpu(sctx->send_root->root_item.ctransid));
  if (parent_root) {
   TLV_PUT_UUID(sctx, BTRFS_SEND_A_CLONE_UUID,
     sctx->parent_root->root_item.uuid);
   TLV_PUT_U64(sctx, BTRFS_SEND_A_CLONE_CTRANSID,
-    sctx->parent_root->root_item.ctransid);
+       le64_to_cpu(sctx->parent_root->root_item.ctransid));
  }
 
  ret = send_cmd(sctx);
@@ -3714,7 +3714,7 @@ verbose_printk("btrfs: send_clone offset=%llu, len=%d, clone_root=%llu, "
  TLV_PUT_UUID(sctx, BTRFS_SEND_A_CLONE_UUID,
    clone_root->root->root_item.uuid);
  TLV_PUT_U64(sctx, BTRFS_SEND_A_CLONE_CTRANSID,
-   clone_root->root->root_item.ctransid);
+      le64_to_cpu(clone_root->root->root_item.ctransid));
  TLV_PUT_PATH(sctx, BTRFS_SEND_A_CLONE_PATH, p);
  TLV_PUT_U64(sctx, BTRFS_SEND_A_CLONE_OFFSET,
    clone_root->offset);
-- 
1.7.1