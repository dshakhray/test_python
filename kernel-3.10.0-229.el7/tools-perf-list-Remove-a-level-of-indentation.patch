From 3645e294966b1fad4229d48d9aa631e831f98e5f Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:27:16 -0400
Subject: [tools] perf/list: Remove a level of indentation

Message-id: <1408462094-14194-268-git-send-email-jolsa@redhat.com>
Patchwork-id: 88248
O-Subject: [PATCH RHEL7.1 BZ1131394 267/325] perf list: Remove a level of indentation
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 8e00ddc9dfe09ee131144fdaf6c96ebe95bbbbcb
Author: David Ahern <dsahern@gmail.com>
Date: Wed Oct 30 10:15:06 2013 -0600

description
===========
With a return after the if check an indentation level can be removed.
Indentation shift only; no functional changes.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-list.c b/tools/perf/builtin-list.c
index e79f423..45000e7 100644
--- a/tools/perf/builtin-list.c
+++ b/tools/perf/builtin-list.c
@@ -17,48 +17,49 @@
 
 int cmd_list(int argc, const char **argv, const char *prefix __maybe_unused)
 {
+ int i;
+
  setup_pager();
 
- if (argc == 1)
+ if (argc == 1) {
   print_events(NULL, false);
- else {
-  int i;
-
-  for (i = 1; i < argc; ++i) {
-   if (i > 2)
-    putchar('\n');
-   if (strncmp(argv[i], "tracepoint", 10) == 0)
-    print_tracepoint_events(NULL, NULL, false);
-   else if (strcmp(argv[i], "hw") == 0 ||
-     strcmp(argv[i], "hardware") == 0)
-    print_events_type(PERF_TYPE_HARDWARE);
-   else if (strcmp(argv[i], "sw") == 0 ||
-     strcmp(argv[i], "software") == 0)
-    print_events_type(PERF_TYPE_SOFTWARE);
-   else if (strcmp(argv[i], "cache") == 0 ||
-     strcmp(argv[i], "hwcache") == 0)
-    print_hwcache_events(NULL, false);
-   else if (strcmp(argv[i], "pmu") == 0)
-    print_pmu_events(NULL, false);
-   else if (strcmp(argv[i], "--raw-dump") == 0)
-    print_events(NULL, true);
-   else {
-    char *sep = strchr(argv[i], ':'), *s;
-    int sep_idx;
+  return 0;
+ }
 
-    if (sep == NULL) {
-     print_events(argv[i], false);
-     continue;
-    }
-    sep_idx = sep - argv[i];
-    s = strdup(argv[i]);
-    if (s == NULL)
-     return -1;
+ for (i = 1; i < argc; ++i) {
+  if (i > 2)
+   putchar('\n');
+  if (strncmp(argv[i], "tracepoint", 10) == 0)
+   print_tracepoint_events(NULL, NULL, false);
+  else if (strcmp(argv[i], "hw") == 0 ||
+    strcmp(argv[i], "hardware") == 0)
+   print_events_type(PERF_TYPE_HARDWARE);
+  else if (strcmp(argv[i], "sw") == 0 ||
+    strcmp(argv[i], "software") == 0)
+   print_events_type(PERF_TYPE_SOFTWARE);
+  else if (strcmp(argv[i], "cache") == 0 ||
+    strcmp(argv[i], "hwcache") == 0)
+   print_hwcache_events(NULL, false);
+  else if (strcmp(argv[i], "pmu") == 0)
+   print_pmu_events(NULL, false);
+  else if (strcmp(argv[i], "--raw-dump") == 0)
+   print_events(NULL, true);
+  else {
+   char *sep = strchr(argv[i], ':'), *s;
+   int sep_idx;
 
-    s[sep_idx] = '\0';
-    print_tracepoint_events(s, s + sep_idx + 1, false);
-    free(s);
+   if (sep == NULL) {
+    print_events(argv[i], false);
+    continue;
    }
+   sep_idx = sep - argv[i];
+   s = strdup(argv[i]);
+   if (s == NULL)
+    return -1;
+
+   s[sep_idx] = '\0';
+   print_tracepoint_events(s, s + sep_idx + 1, false);
+   free(s);
   }
  }
  return 0;
-- 
1.7.1