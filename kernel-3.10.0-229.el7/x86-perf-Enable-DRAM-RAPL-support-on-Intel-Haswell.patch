From b51fdfbe18f4fd9efeb3c68cb58c817e9a3d870e Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:04:14 -0400
Subject: [x86] perf: Enable DRAM RAPL support on Intel Haswell

Message-id: <1410181752-25631-10-git-send-email-jolsa@redhat.com>
Patchwork-id: 91689
O-Subject: [PATCH RHEL7.1 BZ1134356 009/307] perf/x86: Enable DRAM RAPL support on Intel Haswell
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit e69af4657e7764d03ad555f0b583d9c4217bcefa
Author: Vince Weaver <vincent.weaver@maine.edu>
Date: Wed Apr 2 00:49:55 2014 -0400

description
===========
It turns out all Haswell processors (including the Desktop
variant)  support RAPL DRAM readings in addition to package,
pp0, and pp1.

I've confirmed RAPL DRAM readings on my model 60 Haswell
desktop.

See the 4th-gen-core-family-desktop-vol-2-datasheet.pdf
available from the Intel website for confirmation.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kernel/cpu/perf_event_intel_rapl.c b/arch/x86/kernel/cpu/perf_event_intel_rapl.c
index 264c7c7..3cec947 100644
--- a/arch/x86/kernel/cpu/perf_event_intel_rapl.c
+++ b/arch/x86/kernel/cpu/perf_event_intel_rapl.c
@@ -59,7 +59,7 @@
 #define INTEL_RAPL_PKG  0x2 /* pseudo-encoding */
 #define RAPL_IDX_RAM_NRG_STAT 2 /* DRAM */
 #define INTEL_RAPL_RAM  0x3 /* pseudo-encoding */
-#define RAPL_IDX_PP1_NRG_STAT 3 /* DRAM */
+#define RAPL_IDX_PP1_NRG_STAT 3 /* gpu */
 #define INTEL_RAPL_PP1  0x4 /* pseudo-encoding */
 
 /* Clients have PP0, PKG */
@@ -72,6 +72,12 @@
     1<<RAPL_IDX_PKG_NRG_STAT|\
     1<<RAPL_IDX_RAM_NRG_STAT)
 
+/* Servers have PP0, PKG, RAM, PP1 */
+#define RAPL_IDX_HSW (1<<RAPL_IDX_PP0_NRG_STAT|\
+    1<<RAPL_IDX_PKG_NRG_STAT|\
+    1<<RAPL_IDX_RAM_NRG_STAT|\
+    1<<RAPL_IDX_PP1_NRG_STAT)
+
 /*
  * event code: LSB 8 bits, passed in attr->config
  * any other bit is reserved
@@ -425,6 +431,24 @@ static struct attribute *rapl_events_cln_attr[] = {
  NULL,
 };
 
+static struct attribute *rapl_events_hsw_attr[] = {
+ EVENT_PTR(rapl_cores),
+ EVENT_PTR(rapl_pkg),
+ EVENT_PTR(rapl_gpu),
+ EVENT_PTR(rapl_ram),
+
+ EVENT_PTR(rapl_cores_unit),
+ EVENT_PTR(rapl_pkg_unit),
+ EVENT_PTR(rapl_gpu_unit),
+ EVENT_PTR(rapl_ram_unit),
+
+ EVENT_PTR(rapl_cores_scale),
+ EVENT_PTR(rapl_pkg_scale),
+ EVENT_PTR(rapl_gpu_scale),
+ EVENT_PTR(rapl_ram_scale),
+ NULL,
+};
+
 static struct attribute_group rapl_pmu_events_group = {
  .name = "events",
  .attrs = NULL, /* patched at runtime */
@@ -631,10 +655,14 @@ static int __init rapl_pmu_init(void)
  switch (boot_cpu_data.x86_model) {
  case 42: /* Sandy Bridge */
  case 58: /* Ivy Bridge */
- case 60: /* Haswell */
   rapl_cntr_mask = RAPL_IDX_CLN;
   rapl_pmu_events_group.attrs = rapl_events_cln_attr;
   break;
+ case 60: /* Haswell */
+ case 69: /* Haswell-Celeron */
+  rapl_cntr_mask = RAPL_IDX_HSW;
+  rapl_pmu_events_group.attrs = rapl_events_hsw_attr;
+  break;
  case 45: /* Sandy Bridge-EP */
  case 62: /* IvyTown */
   rapl_cntr_mask = RAPL_IDX_SRV;
-- 
1.7.1