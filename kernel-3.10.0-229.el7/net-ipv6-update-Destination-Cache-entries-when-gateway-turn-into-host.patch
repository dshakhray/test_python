From 4b0c9d05f58c26d6b56bdabff34d9bed95fadff6 Mon Sep 17 00:00:00 2001
From: Jiri Pirko <jpirko@redhat.com>
Date: Tue, 16 Dec 2014 10:56:42 -0500
Subject: [net] ipv6: update Destination Cache entries when gateway turn into host

Message-id: <1418727402-2478-1-git-send-email-jpirko@redhat.com>
Patchwork-id: 102088
O-Subject: [patch rhel7.2 net] ipv6: update Destination Cache entries when gateway turn into host
Bugzilla: 1114781
RH-Acked-by: Daniel Borkmann <dborkman@redhat.com>
RH-Acked-by: Flavio Leitner <fbl@redhat.com>
RH-Acked-by: Hannes Frederic Sowa <hannes@redhat.com>

BZ1114781
https://brewweb.devel.redhat.com/taskinfo?taskID=8384725

upstream commit be7a010d6fa33dca9327ad8e91844278dfd1e712
Author: Duan Jiong <duanj.fnst@cn.fujitsu.com>
Date:   Thu May 15 15:56:14 2014 +0800

    ipv6: update Destination Cache entries when gateway turn into host

    RFC 4861 states in 7.2.5:

     The IsRouter flag in the cache entry MUST be set based on the
             Router flag in the received advertisement.  In those cases
             where the IsRouter flag changes from TRUE to FALSE as a result
             of this update, the node MUST remove that router from the
             Default Router List and update the Destination Cache entries
             for all destinations using that neighbor as a router as
             specified in Section 7.3.3.  This is needed to detect when a
             node that is used as a router stops forwarding packets due to
             being configured as a host.

    Currently, when dealing with NA Message which IsRouter flag changes from
    TRUE to FALSE, the kernel only removes router from the Default Router List,
    and don't update the Destination Cache entries.

    Now in order to update those Destination Cache entries, i introduce
    function rt6_clean_tohost().

Signed-off-by: Jiri Pirko <jpirko@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/net/ip6_route.h b/include/net/ip6_route.h
index 02f3bb1..7125617 100644
--- a/include/net/ip6_route.h
+++ b/include/net/ip6_route.h
@@ -149,6 +149,7 @@ extern int rt6_dump_route(struct rt6_info *rt, void *p_arg);
 extern void rt6_ifdown(struct net *net, struct net_device *dev);
 extern void rt6_mtu_change(struct net_device *dev, unsigned int mtu);
 extern void rt6_remove_prefsrc(struct inet6_ifaddr *ifp);
+extern void rt6_clean_tohost(struct net *net, struct in6_addr *gateway);
 
 
 /*
diff --git a/net/ipv6/ndisc.c b/net/ipv6/ndisc.c
index ae7c23f..72bd450 100644
--- a/net/ipv6/ndisc.c
+++ b/net/ipv6/ndisc.c
@@ -852,7 +852,7 @@ out:
 static void ndisc_recv_na(struct sk_buff *skb)
 {
  struct nd_msg *msg = (struct nd_msg *)skb_transport_header(skb);
- const struct in6_addr *saddr = &ipv6_hdr(skb)->saddr;
+ struct in6_addr *saddr = &ipv6_hdr(skb)->saddr;
  const struct in6_addr *daddr = &ipv6_hdr(skb)->daddr;
  u8 *lladdr = NULL;
  u32 ndoptlen = skb_tail_pointer(skb) - (skb_transport_header(skb) +
@@ -945,10 +945,7 @@ static void ndisc_recv_na(struct sk_buff *skb)
    /*
     * Change: router to host
     */
-   struct rt6_info *rt;
-   rt = rt6_get_dflt_router(saddr, dev);
-   if (rt)
-    ip6_del_rt(rt);
+   rt6_clean_tohost(dev_net(dev),  saddr);
   }
 
 out:
diff --git a/net/ipv6/route.c b/net/ipv6/route.c
index 44f77ce..2f320d6 100644
--- a/net/ipv6/route.c
+++ b/net/ipv6/route.c
@@ -2247,6 +2247,27 @@ void rt6_remove_prefsrc(struct inet6_ifaddr *ifp)
  fib6_clean_all(net, fib6_remove_prefsrc, &adni);
 }
 
+#define RTF_RA_ROUTER  (RTF_ADDRCONF | RTF_DEFAULT | RTF_GATEWAY)
+#define RTF_CACHE_GATEWAY (RTF_GATEWAY | RTF_CACHE)
+
+/* Remove routers and update dst entries when gateway turn into host. */
+static int fib6_clean_tohost(struct rt6_info *rt, void *arg)
+{
+ struct in6_addr *gateway = (struct in6_addr *)arg;
+
+ if ((((rt->rt6i_flags & RTF_RA_ROUTER) == RTF_RA_ROUTER) ||
+      ((rt->rt6i_flags & RTF_CACHE_GATEWAY) == RTF_CACHE_GATEWAY)) &&
+      ipv6_addr_equal(gateway, &rt->rt6i_gateway)) {
+  return -1;
+ }
+ return 0;
+}
+
+void rt6_clean_tohost(struct net *net, struct in6_addr *gateway)
+{
+ fib6_clean_all(net, fib6_clean_tohost, gateway);
+}
+
 struct arg_dev_net {
  struct net_device *dev;
  struct net *net;
-- 
1.7.1