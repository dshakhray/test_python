From fcca036a0b6d38806edcaafea85f8953d87e48d9 Mon Sep 17 00:00:00 2001
From: Rich Bono <rbono@redhat.com>
Date: Thu, 20 Nov 2014 21:23:24 -0500
Subject: [scsi] pm80xx: Enable BAR shift to avoid BIOS conflict with MPI space for ATTO pm8001 based HBAs

Message-id: <1416518623-7080-4-git-send-email-rbono@redhat.com>
Patchwork-id: 100396
O-Subject: [RHEL7.1 e-stor PATCH V3 03/22] [SCSI] pm80xx: Enable BAR shift to avoid BIOS conflict with MPI space for ATTO pm8001 based HBAs.
Bugzilla: 1110943
RH-Acked-by: Rob Evers <revers@redhat.com>
RH-Acked-by: Tomas Henzl <thenzl@redhat.com>

From: Bradley Grove <bgrove@attotech.com>

Signed-off-by: Bradley Grove <bgrove@attotech.com>
Signed-off-by: James Bottomley <JBottomley@Parallels.com>
(cherry picked from commit 81b86d4d275244ad7e134e95cbcfee49198da854)

Signed-off-by: Rich Bono <rbono@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/pm8001/pm8001_hwi.c b/drivers/scsi/pm8001/pm8001_hwi.c
index 942ce23..dacccc9 100644
--- a/drivers/scsi/pm8001/pm8001_hwi.c
+++ b/drivers/scsi/pm8001/pm8001_hwi.c
@@ -644,7 +644,7 @@ static int pm8001_chip_init(struct pm8001_hba_info *pm8001_ha)
  pci_read_config_word(pm8001_ha->pdev, PCI_DEVICE_ID, &deviceid);
  /* 8081 controllers need BAR shift to access MPI space
  * as this is shared with BIOS data */
- if (deviceid == 0x8081) {
+ if (deviceid == 0x8081 || deviceid == 0x0042) {
   if (-1 == pm8001_bar4_shift(pm8001_ha, GSM_SM_BASE)) {
    PM8001_FAIL_DBG(pm8001_ha,
     pm8001_printk("Shift Bar4 to 0x%x failed\n",
@@ -673,7 +673,7 @@ static int pm8001_chip_init(struct pm8001_hba_info *pm8001_ha)
  for (i = 0; i < PM8001_MAX_OUTB_NUM; i++)
   update_outbnd_queue_table(pm8001_ha, i);
  /* 8081 controller donot require these operations */
- if (deviceid != 0x8081) {
+ if (deviceid != 0x8081 && deviceid != 0x0042) {
   mpi_set_phys_g3_with_ssc(pm8001_ha, 0);
   /* 7->130ms, 34->500ms, 119->1.5s */
   mpi_set_open_retry_interval_reg(pm8001_ha, 119);
@@ -701,7 +701,7 @@ static int mpi_uninit_check(struct pm8001_hba_info *pm8001_ha)
  u32 gst_len_mpistate;
  u16 deviceid;
  pci_read_config_word(pm8001_ha->pdev, PCI_DEVICE_ID, &deviceid);
- if (deviceid == 0x8081) {
+ if (deviceid == 0x8081 || deviceid == 0x0042) {
   if (-1 == pm8001_bar4_shift(pm8001_ha, GSM_SM_BASE)) {
    PM8001_FAIL_DBG(pm8001_ha,
     pm8001_printk("Shift Bar4 to 0x%x failed\n",
-- 
1.7.1