From ee14d618c53a6dbb2637af2f1480f089f7a47e43 Mon Sep 17 00:00:00 2001
From: Hendrik Brueckner <brueckner@redhat.com>
Date: Wed, 18 Jun 2014 10:27:56 -0400
Subject: [s390] setup: get rid of MACHINE_HAS_MVCOS machine flag

Message-id: <1403087280-902-11-git-send-email-brueckner@redhat.com>
Patchwork-id: 84245
O-Subject: [RHEL7.1 PATCH 10/14] [s390] s390/setup: get rid of MACHINE_HAS_MVCOS machine flag
Bugzilla: 1099147
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Description
-----------
commit ca04ddbf537d30b25f6e240b70f19be35fac4313
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Commit: Martin Schwidefsky <schwidefsky@de.ibm.com>

    s390/setup: get rid of MACHINE_HAS_MVCOS machine flag

    MACHINE_HAS_MVCOS is used exactly once when the machine is brought up.
    There is no need to cache the flag in the machine_flags.

    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

Bugzilla
--------
BZ 1099147
https://bugzilla.redhat.com/show_bug.cgi?id=1099147

Upstream status of the patch
----------------------------
The patch is upstream as of kernel version v3.15-rc1
http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=ca04ddbf537d30b25f6e240b70f19be35fac4313

Brew
----
https://brewweb.devel.redhat.com/taskinfo?taskID=7588402

Test status
-----------
The patch has been tested and fixes the problem.
The fix has been verified by the IBM test department.

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/s390/include/asm/setup.h b/arch/s390/include/asm/setup.h
index 94cfbe4..406f3a1 100644
--- a/arch/s390/include/asm/setup.h
+++ b/arch/s390/include/asm/setup.h
@@ -59,7 +59,6 @@ void create_mem_hole(struct mem_chunk mem_chunk[], unsigned long addr,
 #define MACHINE_FLAG_DIAG44 (1UL << 4)
 #define MACHINE_FLAG_IDTE (1UL << 5)
 #define MACHINE_FLAG_DIAG9C (1UL << 6)
-#define MACHINE_FLAG_MVCOS (1UL << 7)
 #define MACHINE_FLAG_KVM (1UL << 8)
 #define MACHINE_FLAG_ESOP (1UL << 9)
 #define MACHINE_FLAG_EDAT1 (1UL << 10)
@@ -85,7 +84,6 @@ void create_mem_hole(struct mem_chunk mem_chunk[], unsigned long addr,
 #define MACHINE_HAS_IDTE (0)
 #define MACHINE_HAS_DIAG44 (1)
 #define MACHINE_HAS_MVPG (S390_lowcore.machine_flags & MACHINE_FLAG_MVPG)
-#define MACHINE_HAS_MVCOS (0)
 #define MACHINE_HAS_EDAT1 (0)
 #define MACHINE_HAS_EDAT2 (0)
 #define MACHINE_HAS_LPP  (0)
@@ -98,7 +96,6 @@ void create_mem_hole(struct mem_chunk mem_chunk[], unsigned long addr,
 #define MACHINE_HAS_IDTE (S390_lowcore.machine_flags & MACHINE_FLAG_IDTE)
 #define MACHINE_HAS_DIAG44 (S390_lowcore.machine_flags & MACHINE_FLAG_DIAG44)
 #define MACHINE_HAS_MVPG (1)
-#define MACHINE_HAS_MVCOS (S390_lowcore.machine_flags & MACHINE_FLAG_MVCOS)
 #define MACHINE_HAS_EDAT1 (S390_lowcore.machine_flags & MACHINE_FLAG_EDAT1)
 #define MACHINE_HAS_EDAT2 (S390_lowcore.machine_flags & MACHINE_FLAG_EDAT2)
 #define MACHINE_HAS_LPP  (S390_lowcore.machine_flags & MACHINE_FLAG_LPP)
diff --git a/arch/s390/kernel/early.c b/arch/s390/kernel/early.c
index 7e16350..74b1c98 100644
--- a/arch/s390/kernel/early.c
+++ b/arch/s390/kernel/early.c
@@ -378,8 +378,6 @@ static __init void detect_machine_facilities(void)
   S390_lowcore.machine_flags |= MACHINE_FLAG_EDAT2;
  if (test_facility(3))
   S390_lowcore.machine_flags |= MACHINE_FLAG_IDTE;
- if (test_facility(27))
-  S390_lowcore.machine_flags |= MACHINE_FLAG_MVCOS;
  if (test_facility(40))
   S390_lowcore.machine_flags |= MACHINE_FLAG_LPP;
  if (test_facility(50) && test_facility(73))
diff --git a/arch/s390/lib/uaccess_mvcos.c b/arch/s390/lib/uaccess_mvcos.c
index 8c01f3a..e2685ff 100644
--- a/arch/s390/lib/uaccess_mvcos.c
+++ b/arch/s390/lib/uaccess_mvcos.c
@@ -10,6 +10,7 @@
 #include <linux/errno.h>
 #include <linux/init.h>
 #include <linux/mm.h>
+#include <asm/facility.h>
 #include <asm/uaccess.h>
 #include <asm/futex.h>
 #include "uaccess.h"
@@ -242,7 +243,7 @@ EXPORT_SYMBOL(__strncpy_from_user);
 
 static int __init uaccess_init(void)
 {
- if (!MACHINE_HAS_MVCOS)
+ if (IS_ENABLED(CONFIG_32BIT) || !test_facility(27))
   static_key_slow_dec(&have_mvcos);
  return 0;
 }
-- 
1.7.1