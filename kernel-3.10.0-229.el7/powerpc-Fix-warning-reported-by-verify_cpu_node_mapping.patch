From fbe311ae888408e19684df692aea83d4ba02a5f2 Mon Sep 17 00:00:00 2001
From: Gustavo Duarte <gduarte@redhat.com>
Date: Tue, 4 Nov 2014 22:07:11 -0500
Subject: [powerpc] Fix warning reported by verify_cpu_node_mapping()

Message-id: <1415138837-28185-3-git-send-email-gduarte@redhat.com>
Patchwork-id: 99393
O-Subject: [RHEL7.1 PATCH BZ 1150097 2/8] powerpc: Fix warning reported by verify_cpu_node_mapping()
Bugzilla: 1150097
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

BZ 1150097
Upstream Status: 70ad237515d99595ed03848bd8e549e50e83c4f2

commit 70ad237515d99595ed03848bd8e549e50e83c4f2
Author: Li Zhong <zhong@linux.vnet.ibm.com>
Date:   Wed Aug 27 17:33:59 2014 +0800

    powerpc: Fix warning reported by verify_cpu_node_mapping()

    With commit 2fabf084b6ad ("powerpc: reorder per-cpu NUMA information's
    initialization"), during boottime, cpu_numa_callback() is called
    earlier(before their online) for each cpu, and verify_cpu_node_mapping()
    uses cpu_to_node() to check whether siblings are in the same node.

    It skips the checking for siblings that are not online yet. So the only
    check done here is for the bootcpu, which is online at that time. But
    the per-cpu numa_node cpu_to_node() uses hasn't been set up yet (which
    will be set up in smp_prepare_cpus()).

    So I saw something like following reported:
    [    0.000000] CPU thread siblings 1/2/3 and 0 don't belong to the same
    node!

    As we don't actually do the checking during this early stage, so maybe
    we could directly call numa_setup_cpu() in do_init_bootmem().

    Cc: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>
    Cc: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Li Zhong <zhong@linux.vnet.ibm.com>
    Acked-by: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/mm/numa.c b/arch/powerpc/mm/numa.c
index 6e9bc08..853bc48 100644
--- a/arch/powerpc/mm/numa.c
+++ b/arch/powerpc/mm/numa.c
@@ -1129,8 +1129,7 @@ void __init do_init_bootmem(void)
   * early in boot, cf. smp_prepare_cpus().
   */
  for_each_possible_cpu(cpu) {
-  cpu_numa_callback(&ppc64_numa_nb, CPU_UP_PREPARE,
-      (void *)(unsigned long)cpu);
+  numa_setup_cpu((unsigned long)cpu);
  }
 }
 
-- 
1.7.1