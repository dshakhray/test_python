From 91d617053b75e250c43fa3ec02477a521ca8b184 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:06:26 -0400
Subject: [virt] kvm/ppc: book3s - drop is_hv_enabled

Message-id: <1410545655-205645-158-git-send-email-dzickus@redhat.com>
Patchwork-id: 94307
O-Subject: [RHEL7 PATCH 157/626] kvm: powerpc: book3s: drop is_hv_enabled
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit a78b55d1c0218b6d91d504941d20e36435c276f5
Author: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
Date:   Mon Oct 7 22:18:02 2013 +0530

    kvm: powerpc: book3s: drop is_hv_enabled

    drop is_hv_enabled, because that should not be a callback property

    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Signed-off-by: Alexander Graf <agraf@suse.de>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/kvm_ppc.h b/arch/powerpc/include/asm/kvm_ppc.h
index 31e01b8..cf1d7d1 100644
--- a/arch/powerpc/include/asm/kvm_ppc.h
+++ b/arch/powerpc/include/asm/kvm_ppc.h
@@ -181,7 +181,6 @@ union kvmppc_one_reg {
 
 struct kvmppc_ops {
  struct module *owner;
- bool is_hv_enabled;
  int (*get_sregs)(struct kvm_vcpu *vcpu, struct kvm_sregs *sregs);
  int (*set_sregs)(struct kvm_vcpu *vcpu, struct kvm_sregs *sregs);
  int (*get_one_reg)(struct kvm_vcpu *vcpu, u64 id,
@@ -230,6 +229,11 @@ struct kvmppc_ops {
 extern struct kvmppc_ops *kvmppc_hv_ops;
 extern struct kvmppc_ops *kvmppc_pr_ops;
 
+static inline bool is_kvmppc_hv_enabled(struct kvm *kvm)
+{
+ return kvm->arch.kvm_ops == kvmppc_hv_ops;
+}
+
 /*
  * Cuts out inst bits with ordering according to spec.
  * That means the leftmost bit is zero. All given bits are included.
diff --git a/arch/powerpc/kvm/book3s.c b/arch/powerpc/kvm/book3s.c
index f00b856..8a104fa 100644
--- a/arch/powerpc/kvm/book3s.c
+++ b/arch/powerpc/kvm/book3s.c
@@ -72,7 +72,7 @@ void kvmppc_core_load_guest_debugstate(struct kvm_vcpu *vcpu)
 
 static inline unsigned long kvmppc_interrupt_offset(struct kvm_vcpu *vcpu)
 {
- if (!vcpu->kvm->arch.kvm_ops->is_hv_enabled)
+ if (!is_kvmppc_hv_enabled(vcpu->kvm))
   return to_book3s(vcpu)->hior;
  return 0;
 }
@@ -80,7 +80,7 @@ static inline unsigned long kvmppc_interrupt_offset(struct kvm_vcpu *vcpu)
 static inline void kvmppc_update_int_pending(struct kvm_vcpu *vcpu,
    unsigned long pending_now, unsigned long old_pending)
 {
- if (vcpu->kvm->arch.kvm_ops->is_hv_enabled)
+ if (is_kvmppc_hv_enabled(vcpu->kvm))
   return;
  if (pending_now)
   vcpu->arch.shared->int_pending = 1;
@@ -94,7 +94,7 @@ static inline bool kvmppc_critical_section(struct kvm_vcpu *vcpu)
  ulong crit_r1;
  bool crit;
 
- if (vcpu->kvm->arch.kvm_ops->is_hv_enabled)
+ if (is_kvmppc_hv_enabled(vcpu->kvm))
   return false;
 
  crit_raw = vcpu->arch.shared->critical;
diff --git a/arch/powerpc/kvm/book3s_hv.c b/arch/powerpc/kvm/book3s_hv.c
index 0fd26b5..3fa99b2 100644
--- a/arch/powerpc/kvm/book3s_hv.c
+++ b/arch/powerpc/kvm/book3s_hv.c
@@ -2160,7 +2160,6 @@ static long kvm_arch_vm_ioctl_hv(struct file *filp,
 }
 
 static struct kvmppc_ops kvm_ops_hv = {
- .is_hv_enabled = true,
  .get_sregs = kvm_arch_vcpu_ioctl_get_sregs_hv,
  .set_sregs = kvm_arch_vcpu_ioctl_set_sregs_hv,
  .get_one_reg = kvmppc_get_one_reg_hv,
diff --git a/arch/powerpc/kvm/book3s_pr.c b/arch/powerpc/kvm/book3s_pr.c
index 32a9c59..a8fb7ed 100644
--- a/arch/powerpc/kvm/book3s_pr.c
+++ b/arch/powerpc/kvm/book3s_pr.c
@@ -1518,7 +1518,6 @@ static long kvm_arch_vm_ioctl_pr(struct file *filp,
 }
 
 static struct kvmppc_ops kvm_ops_pr = {
- .is_hv_enabled = false,
  .get_sregs = kvm_arch_vcpu_ioctl_get_sregs_pr,
  .set_sregs = kvm_arch_vcpu_ioctl_set_sregs_pr,
  .get_one_reg = kvmppc_get_one_reg_pr,
diff --git a/arch/powerpc/kvm/book3s_xics.c b/arch/powerpc/kvm/book3s_xics.c
index f7a5108..02a17dc 100644
--- a/arch/powerpc/kvm/book3s_xics.c
+++ b/arch/powerpc/kvm/book3s_xics.c
@@ -818,7 +818,7 @@ int kvmppc_xics_hcall(struct kvm_vcpu *vcpu, u32 req)
  }
 
  /* Check for real mode returning too hard */
- if (xics->real_mode && vcpu->kvm->arch.kvm_ops->is_hv_enabled)
+ if (xics->real_mode && is_kvmppc_hv_enabled(vcpu->kvm))
   return kvmppc_xics_rm_complete(vcpu, req);
 
  switch (req) {
diff --git a/arch/powerpc/kvm/powerpc.c b/arch/powerpc/kvm/powerpc.c
index 0e61cae..3a7dcb6 100644
--- a/arch/powerpc/kvm/powerpc.c
+++ b/arch/powerpc/kvm/powerpc.c
@@ -200,7 +200,7 @@ int kvmppc_sanity_check(struct kvm_vcpu *vcpu)
   goto out;
 
  /* HV KVM can only do PAPR mode for now */
- if (!vcpu->arch.papr_enabled && vcpu->kvm->arch.kvm_ops->is_hv_enabled)
+ if (!vcpu->arch.papr_enabled && is_kvmppc_hv_enabled(vcpu->kvm))
   goto out;
 
 #ifdef CONFIG_KVM_BOOKE_HV
-- 
1.7.1