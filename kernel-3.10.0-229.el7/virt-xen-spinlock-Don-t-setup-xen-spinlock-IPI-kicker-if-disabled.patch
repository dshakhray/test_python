From 174c332cd7aec07f3cdf352333f97926cf28f9cc Mon Sep 17 00:00:00 2001
From: Vitaly Kuznetsov <vkuznets@redhat.com>
Date: Thu, 29 May 2014 16:49:35 -0400
Subject: [virt] xen/spinlock: Don't setup xen spinlock IPI kicker if disabled

Message-id: <1401382177-12769-5-git-send-email-vkuznets@redhat.com>
Patchwork-id: 81161
O-Subject: [RHEL7.1 PATCH 4/6] xen/spinlock: Don't setup xen spinlock IPI kicker if disabled.
Bugzilla: 1006977
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Andrew Jones <drjones@redhat.com>
RH-Acked-by: Laszlo Ersek <lersek@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1006977
Upstream commit: 3310bbedac497b793b96184e1b9b5da4f747d53a
Brew build: https://brewweb.devel.redhat.com/taskinfo?taskID=7482680

Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Mon Aug 26 14:28:06 2013 -0400

There is no need to setup this kicker IPI if we are never going
to use the paravirtualized ticketlock mechanism.

Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Reviewed-by: David Vrabel <david.vrabel@citrix.com>
Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/xen/spinlock.c b/arch/x86/xen/spinlock.c
index 71db82c..e1bff87 100644
--- a/arch/x86/xen/spinlock.c
+++ b/arch/x86/xen/spinlock.c
@@ -105,6 +105,7 @@ static DEFINE_PER_CPU(char *, irq_name);
 static DEFINE_PER_CPU(struct xen_lock_waiting, lock_waiting);
 static cpumask_t waiting_cpus;
 
+static bool xen_pvspin __initdata = true;
 static void xen_lock_spinning(struct arch_spinlock *lock, __ticket_t want)
 {
  int irq = __this_cpu_read(lock_kicker_irq);
@@ -223,6 +224,9 @@ void xen_init_lock_cpu(int cpu)
  int irq;
  char *name;
 
+ if (!xen_pvspin)
+  return;
+
  WARN(per_cpu(lock_kicker_irq, cpu) >= 0, "spinlock on CPU%d exists on IRQ%d!\n",
       cpu, per_cpu(lock_kicker_irq, cpu));
 
@@ -259,13 +263,15 @@ void xen_uninit_lock_cpu(int cpu)
  if (xen_hvm_domain())
   return;
 
+ if (!xen_pvspin)
+  return;
+
  unbind_from_irqhandler(per_cpu(lock_kicker_irq, cpu), NULL);
  per_cpu(lock_kicker_irq, cpu) = -1;
  kfree(per_cpu(irq_name, cpu));
  per_cpu(irq_name, cpu) = NULL;
 }
 
-static bool xen_pvspin __initdata = true;
 
 void __init xen_init_spinlocks(void)
 {
@@ -305,6 +311,9 @@ static int __init xen_spinlock_debugfs(void)
  if (d_xen == NULL)
   return -ENOMEM;
 
+ if (!xen_pvspin)
+  return 0;
+
  d_spin_debug = debugfs_create_dir("spinlocks", d_xen);
 
  debugfs_create_u8("zero_stats", 0644, d_spin_debug, &zero_stats);
-- 
1.7.1