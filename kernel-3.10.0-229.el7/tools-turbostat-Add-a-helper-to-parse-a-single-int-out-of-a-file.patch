From 210b71d37e8867e581f40a4ec547c097a78e56b3 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Tue, 26 Aug 2014 12:49:20 -0400
Subject: [tools] turbostat: Add a helper to parse a single int out of a file

Message-id: <1409057382-26432-10-git-send-email-prarit@redhat.com>
Patchwork-id: 89088
O-Subject: [RHEL7.1 PATCH BZ 1133893 09/31] turbostat: Add a helper to parse a single int out of a file
Bugzilla: 1133893
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1133893

commit 95aebc44e73b05d4e95774b983a63909de638808
Author: Josh Triplett <josh@joshtriplett.org>
Date:   Tue Aug 20 17:20:16 2013 -0700

    turbostat: Add a helper to parse a single int out of a file

    Many different chunks of code in turbostat open a file, parse a single
    int out of it, and close it.  Factor that out into a common function.

    Signed-off-by: Josh Triplett <josh@joshtriplett.org>
    Signed-off-by: Len Brown <len.brown@intel.com>

Cc: Tony Camuso <tcamuso@redhat.com>
Cc: Dean Nelson <dnelson@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/power/x86/turbostat/turbostat.c b/tools/power/x86/turbostat/turbostat.c
index 4e77f2c..3d092d8 100644
--- a/tools/power/x86/turbostat/turbostat.c
+++ b/tools/power/x86/turbostat/turbostat.c
@@ -21,6 +21,7 @@
 
 #define _GNU_SOURCE
 #include MSRHEADER
+#include <stdarg.h>
 #include <stdio.h>
 #include <unistd.h>
 #include <sys/types.h>
@@ -1192,27 +1193,38 @@ void free_all_buffers(void)
 }
 
 /*
- * cpu_is_first_sibling_in_core(cpu)
- * return 1 if given CPU is 1st HT sibling in the core
+ * Parse a file containing a single int.
  */
-int cpu_is_first_sibling_in_core(int cpu)
+int parse_int_file(const char *fmt, ...)
 {
- char path[64];
+ va_list args;
+ char path[PATH_MAX];
  FILE *filep;
- int first_cpu;
+ int value;
 
- sprintf(path, "/sys/devices/system/cpu/cpu%d/topology/thread_siblings_list", cpu);
+ va_start(args, fmt);
+ vsnprintf(path, sizeof(path), fmt, args);
+ va_end(args);
  filep = fopen(path, "r");
- if (filep == NULL) {
+ if (!filep) {
   perror(path);
   exit(1);
  }
- if (fscanf(filep, "%d", &first_cpu) != 1) {
+ if (fscanf(filep, "%d", &value) != 1) {
   perror(path);
   exit(1);
  }
  fclose(filep);
- return (cpu == first_cpu);
+ return value;
+}
+
+/*
+ * cpu_is_first_sibling_in_core(cpu)
+ * return 1 if given CPU is 1st HT sibling in the core
+ */
+int cpu_is_first_sibling_in_core(int cpu)
+{
+ return cpu == parse_int_file("/sys/devices/system/cpu/cpu%d/topology/thread_siblings_list", cpu);
 }
 
 /*
@@ -1221,62 +1233,17 @@ int cpu_is_first_sibling_in_core(int cpu)
  */
 int cpu_is_first_core_in_package(int cpu)
 {
- char path[64];
- FILE *filep;
- int first_cpu;
-
- sprintf(path, "/sys/devices/system/cpu/cpu%d/topology/core_siblings_list", cpu);
- filep = fopen(path, "r");
- if (filep == NULL) {
-  perror(path);
-  exit(1);
- }
- if (fscanf(filep, "%d", &first_cpu) != 1) {
-  perror(path);
-  exit(1);
- }
- fclose(filep);
- return (cpu == first_cpu);
+ return cpu == parse_int_file("/sys/devices/system/cpu/cpu%d/topology/core_siblings_list", cpu);
 }
 
 int get_physical_package_id(int cpu)
 {
- char path[80];
- FILE *filep;
- int pkg;
-
- sprintf(path, "/sys/devices/system/cpu/cpu%d/topology/physical_package_id", cpu);
- filep = fopen(path, "r");
- if (filep == NULL) {
-  perror(path);
-  exit(1);
- }
- if (fscanf(filep, "%d", &pkg) != 1) {
-  perror(path);
-  exit(1);
- }
- fclose(filep);
- return pkg;
+ return parse_int_file("/sys/devices/system/cpu/cpu%d/topology/physical_package_id", cpu);
 }
 
 int get_core_id(int cpu)
 {
- char path[80];
- FILE *filep;
- int core;
-
- sprintf(path, "/sys/devices/system/cpu/cpu%d/topology/core_id", cpu);
- filep = fopen(path, "r");
- if (filep == NULL) {
-  perror(path);
-  exit(1);
- }
- if (fscanf(filep, "%d", &core) != 1) {
-  perror(path);
-  exit(1);
- }
- fclose(filep);
- return core;
+ return parse_int_file("/sys/devices/system/cpu/cpu%d/topology/core_id", cpu);
 }
 
 int get_num_ht_siblings(int cpu)
-- 
1.7.1