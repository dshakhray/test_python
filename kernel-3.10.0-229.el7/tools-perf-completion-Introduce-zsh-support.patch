From 4590780cac2e80ae4d43bd5dd19741b2e62d0b92 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:48:35 -0400
Subject: [tools] perf/completion: Introduce zsh support

Message-id: <1408953210-26343-28-git-send-email-jolsa@redhat.com>
Patchwork-id: 88742
O-Subject: [PATCH RHEL7.1 BZ1133083 027/322] perf completion: Introduce zsh support
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit f38ab8af794c184c15f5e001d0eaa16f4a120978
Author: Ramkumar Ramachandra <artagnon@gmail.com>
Date: Sun Nov 17 21:43:26 2013 +0530

description
===========
__perfcomp(), __perfcomp_colon(), and _perf() have to be overridden.
Inspired by the way the git.git completion system is structured.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/bash_completion b/tools/perf/bash_completion
index 573599b..4949488 100644
--- a/tools/perf/bash_completion
+++ b/tools/perf/bash_completion
@@ -1,4 +1,4 @@
-# perf completion
+# perf bash and zsh completion
 
 # Taken from git.git's completion script.
 __my_reassemble_comp_words_by_ref()
@@ -129,6 +129,67 @@ __perf_main ()
  fi
 }
 
+if [[ -n ${ZSH_VERSION-} ]]; then
+ autoload -U +X compinit && compinit
+
+ __perfcomp ()
+ {
+  emulate -L zsh
+
+  local c IFS=$' \t\n'
+  local -a array
+
+  for c in ${=1}; do
+   case $c in
+   --*=*|*.) ;;
+   *) c="$c " ;;
+   esac
+   array[${#array[@]}+1]="$c"
+  done
+
+  compset -P '*[=:]'
+  compadd -Q -S '' -a -- array && _ret=0
+ }
+
+ __perfcomp_colon ()
+ {
+  emulate -L zsh
+
+  local cur_="${2-$cur}"
+  local c IFS=$' \t\n'
+  local -a array
+
+  if [[ "$cur_" == *:* ]]; then
+   local colon_word=${cur_%"${cur_##*:}"}
+  fi
+
+  for c in ${=1}; do
+   case $c in
+   --*=*|*.) ;;
+   *) c="$c " ;;
+   esac
+   array[$#array+1]=${c#"$colon_word"}
+  done
+
+  compset -P '*[=:]'
+  compadd -Q -S '' -a -- array && _ret=0
+ }
+
+ _perf ()
+ {
+  local _ret=1 cur cword prev
+  cur=${words[CURRENT]}
+  prev=${words[CURRENT-1]}
+  let cword=CURRENT-1
+  emulate ksh -c __perf_main
+  let _ret && _default && _ret=0
+  return _ret
+ }
+
+ compdef _perf perf
+ return
+fi
+
 type perf &>/dev/null &&
 _perf()
 {
-- 
1.7.1