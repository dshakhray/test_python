From 961c574902e74d06bf30850a72007106f7c2c753 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:01:09 -0400
Subject: [fs] btrfs: skip submitting barrier for missing device

Message-id: <1407179109-13714-183-git-send-email-sandeen@redhat.com>
Patchwork-id: 87108
O-Subject: [RHEL7.1 PATCH 182/422] Btrfs: skip submitting barrier for missing device
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Hidetoshi Seto <seto.hidetoshi@jp.fujitsu.com>

commit f88ba6a2a44ee98e8d59654463dc157bb6d13c43
Author: Hidetoshi Seto <seto.hidetoshi@jp.fujitsu.com>
Date:   Wed Feb 5 16:34:38 2014 +0900

    Btrfs: skip submitting barrier for missing device

    I got an error on v3.13:
     BTRFS error (device sdf1) in write_all_supers:3378: errno=-5 IO failure (errors while submitting device barriers.)

    how to reproduce:
      > mkfs.btrfs -f -d raid1 /dev/sdf1 /dev/sdf2
      > wipefs -a /dev/sdf2
      > mount -o degraded /dev/sdf1 /mnt
      > btrfs balance start -f -sconvert=single -mconvert=single -dconvert=single /mnt

    The reason of the error is that barrier_all_devices() failed to submit
    barrier to the missing device.  However it is clear that we cannot do
    anything on missing device, and also it is not necessary to care chunks
    on the missing device.

    This patch stops sending/waiting barrier if device is missing.

    Signed-off-by: Hidetoshi Seto <seto.hidetoshi@jp.fujitsu.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/disk-io.c b/fs/btrfs/disk-io.c
index 3c088d4..5891f2c 100644
--- a/fs/btrfs/disk-io.c
+++ b/fs/btrfs/disk-io.c
@@ -3255,6 +3255,8 @@ static int barrier_all_devices(struct btrfs_fs_info *info)
  /* send down all the barriers */
  head = &info->fs_devices->devices;
  list_for_each_entry_rcu(dev, head, dev_list) {
+  if (dev->missing)
+   continue;
   if (!dev->bdev) {
    errors_send++;
    continue;
@@ -3269,6 +3271,8 @@ static int barrier_all_devices(struct btrfs_fs_info *info)
 
  /* wait for all the barriers */
  list_for_each_entry_rcu(dev, head, dev_list) {
+  if (dev->missing)
+   continue;
   if (!dev->bdev) {
    errors_wait++;
    continue;
-- 
1.7.1