From b47f250a01a497f59b4338a7807febdb50accd93 Mon Sep 17 00:00:00 2001
From: Steve Best <sbest@redhat.com>
Date: Mon, 11 Aug 2014 16:19:11 -0400
Subject: [idle] intel_idle: Support Intel Atom Processor C2000 Product Family

Message-id: <20140811161910.48098.16422.sendpatchset@ibm-p7r2-01.lab.bos.redhat.com>
Patchwork-id: 87633
O-Subject: [PATCH RHEL7.1 BZ1048050 1/3] intel_idle: Support Intel Atom Processor C2000 Product Family
Bugzilla: 1048050
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

RHBZ#:
------
https://bugzilla.redhat.com/show_bug.cgi?id=1048050

Description:
------------
Support the "Intel(R) Atom(TM) Processor C2000 Product Family",
formerly code-named Avoton.  It is based on the next generation
Intel Atom processor architecture, formerly code-named Silvermont.

Signed-off-by: Len Brown <len.brown@intel.com>
Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

RHEL Version Found:
-------------------
7.0

Upstream Status:
----------------
http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=fab04b2208dd1d4121319f0096c5a5f4b70abc54

----------------
Steve Best

Proposed Patch:
---------------

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/idle/intel_idle.c b/drivers/idle/intel_idle.c
index 5d450ec..1d8d35e 100644
--- a/drivers/idle/intel_idle.c
+++ b/drivers/idle/intel_idle.c
@@ -1,7 +1,7 @@
 /*
  * intel_idle.c - native hardware idle loop for modern Intel processors
  *
- * Copyright (c) 2010, Intel Corporation.
+ * Copyright (c) 2013, Intel Corporation.
  * Len Brown <len.brown@intel.com>
  *
  * This program is free software; you can redistribute it and/or modify it
@@ -428,6 +428,22 @@ static struct cpuidle_state atom_cstates[] = {
  {
   .enter = NULL }
 };
+static struct cpuidle_state avn_cstates[CPUIDLE_STATE_MAX] = {
+ {
+  .name = "C1-AVN",
+  .desc = "MWAIT 0x00",
+  .flags = MWAIT2flg(0x00) | CPUIDLE_FLAG_TIME_VALID,
+  .exit_latency = 2,
+  .target_residency = 2,
+  .enter = &intel_idle },
+ {
+  .name = "C6-AVN",
+  .desc = "MWAIT 0x51",
+  .flags = MWAIT2flg(0x58) | CPUIDLE_FLAG_TIME_VALID | CPUIDLE_FLAG_TLB_FLUSHED,
+  .exit_latency = 15,
+  .target_residency = 45,
+  .enter = &intel_idle },
+};
 
 /**
  * intel_idle
@@ -560,6 +576,11 @@ static const struct idle_cpu idle_cpu_hsw = {
  .disable_promotion_to_c1e = true,
 };
 
+static const struct idle_cpu idle_cpu_avn = {
+ .state_table = avn_cstates,
+ .disable_promotion_to_c1e = true,
+};
+
 #define ICPU(model, cpu) \
  { X86_VENDOR_INTEL, 6, model, X86_FEATURE_MWAIT, (unsigned long)&cpu }
 
@@ -581,6 +602,7 @@ static const struct x86_cpu_id intel_idle_ids[] = {
  ICPU(0x3f, idle_cpu_hsw),
  ICPU(0x45, idle_cpu_hsw),
  ICPU(0x46, idle_cpu_hsw),
+ ICPU(0x4D, idle_cpu_avn),
  {}
 };
 MODULE_DEVICE_TABLE(x86cpu, intel_idle_ids);
-- 
1.7.1