From 88bd21f4b67ad58fede12f0aef668c55e2d6303e Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 23 Oct 2014 09:53:09 -0400
Subject: [fs] ext4: delete unused variables

Message-id: <1414058125-4183-36-git-send-email-lczerner@redhat.com>
Patchwork-id: 98129
O-Subject: [RHEL 7.1 PATCH v2 035/171] ext4: delete unused variables
Bugzilla: 1150139
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Jon Ernst <jonernst07@gmx.com>

BZ 1150139
https://bugzilla.redhat.com/show_bug.cgi?id=1150139

BREW 8142710
https://brewweb.devel.redhat.com/taskinfo?taskID=8142710

Upstream commit 03b40e349695dc700582568e5b410a89058f707e

 This patch removed several unused variables.

 Signed-off-by: Jon Ernst <jonernst07@gmx.com>
 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/move_extent.c b/fs/ext4/move_extent.c
index 986a838..f591a75 100644
--- a/fs/ext4/move_extent.c
+++ b/fs/ext4/move_extent.c
@@ -912,7 +912,6 @@ move_extent_per_page(struct file *o_filp, struct inode *donor_inode,
  struct page *pagep[2] = {NULL, NULL};
  handle_t *handle;
  ext4_lblk_t orig_blk_offset;
- long long offs = orig_page_offset << PAGE_CACHE_SHIFT;
  unsigned long blocksize = orig_inode->i_sb->s_blocksize;
  unsigned int w_flags = 0;
  unsigned int tmp_data_size, data_size, replaced_size;
@@ -940,8 +939,6 @@ again:
  orig_blk_offset = orig_page_offset * blocks_per_page +
   data_offset_in_page;
 
- offs = (long long)orig_blk_offset << orig_inode->i_blkbits;
-
  /* Calculate data_size */
  if ((orig_blk_offset + block_len_in_page - 1) ==
      ((orig_inode->i_size - 1) >> orig_inode->i_blkbits)) {
diff --git a/fs/ext4/resize.c b/fs/ext4/resize.c
index 9579efd..c5adbb3 100644
--- a/fs/ext4/resize.c
+++ b/fs/ext4/resize.c
@@ -1556,11 +1556,10 @@ int ext4_group_add(struct super_block *sb, struct ext4_new_group_data *input)
  int reserved_gdb = ext4_bg_has_super(sb, input->group) ?
   le16_to_cpu(es->s_reserved_gdt_blocks) : 0;
  struct inode *inode = NULL;
- int gdb_off, gdb_num;
+ int gdb_off;
  int err;
  __u16 bg_flags = 0;
 
- gdb_num = input->group / EXT4_DESC_PER_BLOCK(sb);
  gdb_off = input->group % EXT4_DESC_PER_BLOCK(sb);
 
  if (gdb_off == 0 && !EXT4_HAS_RO_COMPAT_FEATURE(sb,
diff --git a/fs/ext4/super.c b/fs/ext4/super.c
index 779e2f4..e1aed0a 100644
--- a/fs/ext4/super.c
+++ b/fs/ext4/super.c
@@ -1937,7 +1937,6 @@ static int ext4_fill_flex_info(struct super_block *sb)
  struct ext4_sb_info *sbi = EXT4_SB(sb);
  struct ext4_group_desc *gdp = NULL;
  ext4_group_t flex_group;
- unsigned int groups_per_flex = 0;
  int i, err;
 
  sbi->s_log_groups_per_flex = sbi->s_es->s_log_groups_per_flex;
@@ -1945,7 +1944,6 @@ static int ext4_fill_flex_info(struct super_block *sb)
   sbi->s_log_groups_per_flex = 0;
   return 1;
  }
- groups_per_flex = 1U << sbi->s_log_groups_per_flex;
 
  err = ext4_alloc_flex_bg_array(sb, sbi->s_groups_count);
  if (err)
-- 
1.7.1