From bdeefdaf77eb54f564f4bf717d338aabcce4e3dc Mon Sep 17 00:00:00 2001
From: Seth Jennings <sjenning@redhat.com>
Date: Mon, 18 Aug 2014 15:42:41 -0400
Subject: [edac] sb_edac: make node id retrieval per model

Message-id: <1408376571-8244-3-git-send-email-sjenning@redhat.com>
Patchwork-id: 87861
O-Subject: [RHEL7.1 PATCH 02/12] sb_edac: make node id retrieval per model
Bugzilla: 1127019
RH-Acked-by: Aristeu Rozanski <aris@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Aristeu Rozanski <aris@redhat.com>

Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7802951
Bugzilla: https://brewweb.devel.redhat.com/taskinfo?taskID=7802951
Upstream: f14d6892e4a6086d48fa77ac8e59003d3f4f8e16

Haswell has a different way to retrieve the node id, make so this procedure
can be reimplemented.

Cc: Tony Luck <tony.luck@intel.com>
Signed-off-by: Aristeu Rozanski <aris@redhat.com>
Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/edac/sb_edac.c b/drivers/edac/sb_edac.c
index f15bc5c..d66def3 100644
--- a/drivers/edac/sb_edac.c
+++ b/drivers/edac/sb_edac.c
@@ -176,8 +176,6 @@ static inline int sad_pkg(const struct interleave_pkg *table, u32 reg,
 
 #define SAD_CONTROL 0xf4
 
-#define NODE_ID(reg)  GET_BITFIELD(reg, 0, 2)
-
 /* Device 14 function 0 */
 
 static const u32 tad_dram_rule[] = {
@@ -303,6 +301,7 @@ struct sbridge_info {
  const struct interleave_pkg *interleave_pkg;
  u8  max_sad;
  u8  max_interleave;
+ u8  (*get_node_id)(struct sbridge_pvt *pvt);
  enum mem_type (*get_memory_type)(struct sbridge_pvt *pvt);
 };
 
@@ -606,6 +605,13 @@ static enum mem_type get_memory_type(struct sbridge_pvt *pvt)
  return mtype;
 }
 
+static u8 get_node_id(struct sbridge_pvt *pvt)
+{
+ u32 reg;
+ pci_read_config_dword(pvt->pci_br0, SAD_CONTROL, &reg);
+ return GET_BITFIELD(reg, 0, 2);
+}
+
 static inline u8 sad_pkg_socket(u8 pkg)
 {
  /* on Ivy Bridge, nodeID is SASS, where A is HA and S is node id */
@@ -682,8 +688,7 @@ static int get_dimm_config(struct mem_ctl_info *mci)
  pci_read_config_dword(pvt->pci_br0, SAD_TARGET, &reg);
  pvt->sbridge_dev->source_id = SOURCE_ID(reg);
 
- pci_read_config_dword(pvt->pci_br0, SAD_CONTROL, &reg);
- pvt->sbridge_dev->node_id = NODE_ID(reg);
+ pvt->sbridge_dev->node_id = pvt->info.get_node_id(pvt);
  edac_dbg(0, "mc#%d: Node ID: %d, source ID: %d\n",
    pvt->sbridge_dev->mc,
    pvt->sbridge_dev->node_id,
@@ -1984,6 +1989,7 @@ static int sbridge_register_mci(struct sbridge_dev *sbridge_dev, enum type type)
   pvt->info.get_tohm = ibridge_get_tohm;
   pvt->info.dram_rule = ibridge_dram_rule;
   pvt->info.get_memory_type = get_memory_type;
+  pvt->info.get_node_id = get_node_id;
   pvt->info.max_sad = ARRAY_SIZE(ibridge_dram_rule);
   pvt->info.interleave_list = ibridge_interleave_list;
   pvt->info.max_interleave = ARRAY_SIZE(ibridge_interleave_list);
@@ -2000,6 +2006,7 @@ static int sbridge_register_mci(struct sbridge_dev *sbridge_dev, enum type type)
   pvt->info.get_tohm = sbridge_get_tohm;
   pvt->info.dram_rule = sbridge_dram_rule;
   pvt->info.get_memory_type = get_memory_type;
+  pvt->info.get_node_id = get_node_id;
   pvt->info.max_sad = ARRAY_SIZE(sbridge_dram_rule);
   pvt->info.interleave_list = sbridge_interleave_list;
   pvt->info.max_interleave = ARRAY_SIZE(sbridge_interleave_list);
-- 
1.7.1