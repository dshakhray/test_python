From b4ac6055badb7cfccd14155d1b25c19712f44852 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:04:29 -0400
Subject: [kernel] perf: Fix perf_event_open(.flags) test

Message-id: <1410181752-25631-25-git-send-email-jolsa@redhat.com>
Patchwork-id: 91698
O-Subject: [PATCH RHEL7.1 BZ1134356 024/307] perf: Fix perf_event_open(.flags) test
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit 643fd0b9f5dc40fedbfbb908ebe6f1169284f7d8
Author: Peter Zijlstra <peterz@infradead.org>
Date: Wed Apr 23 12:22:54 2014 +0200

description
===========
Vince noticed that we test the (unsigned long) flags field against an
(unsigned int) constant. This would allow setting the high bits on 64bit
platforms and not get an error.

There is nothing that uses the high bits, so it should be entirely
harmless, but we don't want userspace to accidentally set them anyway,
so fix the constants.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/uapi/linux/perf_event.h b/include/uapi/linux/perf_event.h
index 49fbdd4..42bb5be 100644
--- a/include/uapi/linux/perf_event.h
+++ b/include/uapi/linux/perf_event.h
@@ -722,10 +722,10 @@ enum perf_callchain_context {
  PERF_CONTEXT_MAX  = (__u64)-4095,
 };
 
-#define PERF_FLAG_FD_NO_GROUP  (1U << 0)
-#define PERF_FLAG_FD_OUTPUT  (1U << 1)
-#define PERF_FLAG_PID_CGROUP  (1U << 2) /* pid=cgroup id, per-cpu mode only */
-#define PERF_FLAG_FD_CLOEXEC  (1U << 3) /* O_CLOEXEC */
+#define PERF_FLAG_FD_NO_GROUP  (1UL << 0)
+#define PERF_FLAG_FD_OUTPUT  (1UL << 1)
+#define PERF_FLAG_PID_CGROUP  (1UL << 2) /* pid=cgroup id, per-cpu mode only */
+#define PERF_FLAG_FD_CLOEXEC  (1UL << 3) /* O_CLOEXEC */
 
 union perf_mem_data_src {
  __u64 val;
-- 
1.7.1