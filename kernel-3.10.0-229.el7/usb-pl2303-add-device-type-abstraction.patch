From 9db39f4e1c5a58f9f0450d0cd229aeea6e5feac1 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:10:50 -0400
Subject: [usb] pl2303: add device-type abstraction

Message-id: <1410887463-20674-579-git-send-email-dzickus@redhat.com>
Patchwork-id: 95573
O-Subject: [RHEL7 PATCH 578/591] USB: pl2303: add device-type abstraction
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 359defdaa46c6ecf6a29600f3d57c663c9c35fd2
Author: Johan Hovold <jhovold@gmail.com>
Date:   Sun Dec 29 19:23:09 2013 +0100

    USB: pl2303: add device-type abstraction

    Encode all device-type specifics in a struct rather than testing for
    device type and spreading such information throughout the driver.

    Signed-off-by: Johan Hovold <jhovold@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/serial/pl2303.c b/drivers/usb/serial/pl2303.c
index eb3bd94..43848b9 100644
--- a/drivers/usb/serial/pl2303.c
+++ b/drivers/usb/serial/pl2303.c
@@ -134,10 +134,16 @@ MODULE_DEVICE_TABLE(usb, id_table);
 enum pl2303_type {
  TYPE_01, /* Type 0 and 1 (difference unknown) */
  TYPE_HX, /* HX version of the pl2303 chip */
+ TYPE_COUNT
+};
+
+struct pl2303_type_data {
+ speed_t max_baud_rate;
+ unsigned long quirks;
 };
 
 struct pl2303_serial_private {
- enum pl2303_type type;
+ struct pl2303_type_data *type;
  unsigned long quirks;
 };
 
@@ -149,6 +155,13 @@ struct pl2303_private {
  u8 line_settings[7];
 };
 
+static struct pl2303_type_data pl2303_type_data[TYPE_COUNT] = {
+ [TYPE_01] = {
+  .max_baud_rate = 1228800,
+  .quirks =  PL2303_QUIRK_LEGACY,
+ },
+};
+
 static int pl2303_vendor_read(struct usb_serial *serial, u16 value,
        unsigned char buf[1])
 {
@@ -225,10 +238,9 @@ static int pl2303_startup(struct usb_serial *serial)
   type = TYPE_01;  /* type 1 */
  dev_dbg(&serial->interface->dev, "device type: %d\n", type);
 
- spriv->type = type;
+ spriv->type = &pl2303_type_data[type];
  spriv->quirks = (unsigned long)usb_get_serial_data(serial);
- if (type == TYPE_01)
-  spriv->quirks |= PL2303_QUIRK_LEGACY;
+ spriv->quirks |= spriv->type->quirks;
 
  usb_set_serial_data(serial, spriv);
 
@@ -338,9 +350,8 @@ static void pl2303_encode_baudrate(struct tty_struct *tty,
  else
   baud = baud_sup[i];
 
- /* type_0, type_1 only support up to 1228800 baud */
- if (spriv->type == TYPE_01)
-  baud = min_t(speed_t, baud, 1228800);
+ if (spriv->type->max_baud_rate)
+  baud = min_t(speed_t, baud, spriv->type->max_baud_rate);
 
  if (baud <= 115200) {
   put_unaligned_le32(baud, buf);
-- 
1.7.1