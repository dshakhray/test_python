From 95188931d75f4aea48b569df0c152d21a90f0e07 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Mon, 12 May 2014 15:08:27 -0400
Subject: [x86] thinkpad: save and restore adaptive keyboard mode for suspend and, resume

Message-id: <1399907307-14181-3-git-send-email-dzickus@redhat.com>
Patchwork-id: 79766
O-Subject: [RHEL7 PATCH 2/2] save and restore adaptive keyboard mode for suspend and, resume
Bugzilla: 1094476
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1094476
Tested: by me on a X1 Carbon

commit 330947b84382479459e5296a0024c670367b0b57
Author: Shuduo Sang <shuduo.sang@canonical.com>
Date:   Thu Mar 27 18:06:25 2014 +0800

    save and restore adaptive keyboard mode for suspend and,resume

    Dan Aloni has submitted a patch to set adaptive mode to function mode
    when system resume back. Thanks Dan. :)

    Following patch can make it to be restored to previous mode like What
    Windows does.

    Thanks,
    Shuduo

    >From 0ca960138518ceab23110141a0d7c0cafd54a859 Mon Sep 17 00:00:00 2001
    From: Shuduo Sang <shuduo.sang@canonical.com>
    Date: Thu, 27 Mar 2014 17:51:24 +0800
    Subject: [PATCH] save and restore adaptive keyboard mode for suspend and
     resume

    The mode of adaptive keyboard on X1 Carbon need be saved first before
    suspend then it can be restored after resume. Otherwise it will be
    unusable.

    Signed-off-by: Bruce Ma <bruce.ma@canonical.com>
    Signed-off-by: Shuduo Sang <shuduo.sang@canonical.com>
    Signed-off-by: Matthew Garrett <matthew.garrett@nebula.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/platform/x86/thinkpad_acpi.c b/drivers/platform/x86/thinkpad_acpi.c
index 7f9d1a0..a884609 100644
--- a/drivers/platform/x86/thinkpad_acpi.c
+++ b/drivers/platform/x86/thinkpad_acpi.c
@@ -3859,13 +3859,28 @@ static void hotkey_notify(struct ibm_struct *ibm, u32 event)
 
 static void hotkey_suspend(void)
 {
+ int hkeyv;
+
  /* Do these on suspend, we get the events on early resume! */
  hotkey_wakeup_reason = TP_ACPI_WAKEUP_NONE;
  hotkey_autosleep_ack = 0;
+
+ /* save previous mode of adaptive keyboard of X1 Carbon */
+ if (acpi_evalf(hkey_handle, &hkeyv, "MHKV", "qd")) {
+  if ((hkeyv >> 8) == 2) {
+   if (!acpi_evalf(hkey_handle,
+      &adaptive_keyboard_prev_mode,
+      "GTRW", "dd", 0)) {
+    pr_err("Cannot read adaptive keyboard mode.\n");
+   }
+  }
+ }
 }
 
 static void hotkey_resume(void)
 {
+ int hkeyv;
+
  tpacpi_disable_brightness_delay();
 
  if (hotkey_status_set(true) < 0 ||
@@ -3878,6 +3893,18 @@ static void hotkey_resume(void)
  hotkey_wakeup_reason_notify_change();
  hotkey_wakeup_hotunplug_complete_notify_change();
  hotkey_poll_setup_safe(false);
+
+ /* restore previous mode of adapive keyboard of X1 Carbon */
+ if (acpi_evalf(hkey_handle, &hkeyv, "MHKV", "qd")) {
+  if ((hkeyv >> 8) == 2) {
+   if (!acpi_evalf(hkey_handle,
+      NULL,
+      "STRW", "vd",
+      adaptive_keyboard_prev_mode)) {
+    pr_err("Cannot set adaptive keyboard mode.\n");
+   }
+  }
+ }
 }
 
 /* procfs -------------------------------------------------------------- */
-- 
1.7.1