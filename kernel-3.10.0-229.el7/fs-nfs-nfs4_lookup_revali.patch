From f11245400abde4f675b92d88f246124426489183 Mon Sep 17 00:00:00 2001
From: Steve Dickson <SteveD@redhat.com>
Date: Thu, 18 Sep 2014 14:20:32 -0400
Subject: [fs] nfs: nfs4_lookup_revalidate: only evaluate parent if it will be used

Message-id: <1411050057-12417-70-git-send-email-steved@redhat.com>
Patchwork-id: 96269
O-Subject: [RHEL7.1 PATCH 69/94] NFS: nfs4_lookup_revalidate: only evaluate parent if it will be used.
Bugzilla: 1111708
RH-Acked-by: J. Bruce Fields <bfields@redhat.com>
RH-Acked-by: Benjamin Coddington <bcodding@redhat.com>

From: NeilBrown <neilb@suse.de>

nfs4_lookup_revalidate only uses 'parent' to get 'dir', and only
uses 'dir' if 'inode == NULL'.

So we don't need to find out what 'parent' or 'dir' is until we
know that 'inode' is NULL.

By moving 'dget_parent' inside the 'if', we can reduce the number of
call sites for 'dput(parent)'.

Signed-off-by: NeilBrown <neilb@suse.de>
Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
Upstream Id: 49317a7fdaa462b09b9bb4942b64c3a3316bd564
Bugzilla: 1111708
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfs/dir.c b/fs/nfs/dir.c
index 330ec1a..a2e05ca 100644
--- a/fs/nfs/dir.c
+++ b/fs/nfs/dir.c
@@ -1530,9 +1530,7 @@ EXPORT_SYMBOL_GPL(nfs_atomic_open);
 
 static int nfs4_lookup_revalidate(struct dentry *dentry, unsigned int flags)
 {
- struct dentry *parent = NULL;
  struct inode *inode;
- struct inode *dir;
  int ret = 0;
 
  if (flags & LOOKUP_RCU)
@@ -1546,34 +1544,35 @@ static int nfs4_lookup_revalidate(struct dentry *dentry, unsigned int flags)
   goto no_open;
 
  inode = dentry->d_inode;
- parent = dget_parent(dentry);
- dir = parent->d_inode;
 
  /* We can't create new files in nfs_open_revalidate(), so we
   * optimize away revalidation of negative dentries.
   */
  if (inode == NULL) {
+  struct dentry *parent;
+  struct inode *dir;
+
+  parent = dget_parent(dentry);
+  dir = parent->d_inode;
   if (!nfs_neg_need_reval(dir, dentry, flags))
    ret = 1;
+  dput(parent);
   goto out;
  }
 
  /* NFS only supports OPEN on regular files */
  if (!S_ISREG(inode->i_mode))
-  goto no_open_dput;
+  goto no_open;
  /* We cannot do exclusive creation on a positive dentry */
  if (flags & LOOKUP_EXCL)
-  goto no_open_dput;
+  goto no_open;
 
  /* Let f_op->open() actually open (and revalidate) the file */
  ret = 1;
 
 out:
- dput(parent);
  return ret;
 
-no_open_dput:
- dput(parent);
 no_open:
  return nfs_lookup_revalidate(dentry, flags);
 }
-- 
1.7.1