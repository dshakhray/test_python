From f0d832c77c5c5c126204db0a2aaccbbf02830915 Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Wed, 29 Oct 2014 16:34:34 -0400
Subject: [fs] ext4: fix mmap data corruption when blocksize < pagesize

Message-id: <1414600485-1929-45-git-send-email-lczerner@redhat.com>
Patchwork-id: 98574
O-Subject: [RHEL 7.1 PATCH v2 44/55] ext4: fix mmap data corruption when blocksize < pagesize
Bugzilla: 1156096
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Jan Kara <jack@suse.cz>

BZ 1156096
https://bugzilla.redhat.com/show_bug.cgi?id=1156096

BREW 8169722
https://brewweb.devel.redhat.com/taskinfo?taskID=8169722

Upstream commit d6320cbfc92910a3e5f10c42d98c231c98db4f60

 Use truncate_isize_extended() when hole is being created in a file so that
 ->page_mkwrite() will get called for the partial tail page if it is
 mmaped (see the first patch in the series for details).

 Signed-off-by: Jan Kara <jack@suse.cz>
 Signed-off-by: Theodore Ts'o <tytso@mit.edu>
 Cc: stable@vger.kernel.org
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/inode.c b/fs/ext4/inode.c
index 8cfe2cf..2bb027f 100644
--- a/fs/ext4/inode.c
+++ b/fs/ext4/inode.c
@@ -4550,8 +4550,12 @@ int ext4_setattr(struct dentry *dentry, struct iattr *attr)
     ext4_orphan_del(NULL, inode);
     goto err_out;
    }
-  } else
+  } else {
+   loff_t oldsize = inode->i_size;
+
    i_size_write(inode, attr->ia_size);
+   pagecache_isize_extended(inode, oldsize, inode->i_size);
+  }
 
   /*
    * Blocks are going to be removed from the inode. Wait
-- 
1.7.1