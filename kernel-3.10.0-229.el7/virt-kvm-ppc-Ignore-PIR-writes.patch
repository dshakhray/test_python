From 701b736c0f533b8ca6216154f422c4b8282b04cb Mon Sep 17 00:00:00 2001
From: David Gibson <dgibson@redhat.com>
Date: Mon, 15 Sep 2014 07:13:02 -0400
Subject: [virt] kvm/ppc: Ignore PIR writes

Message-id: <1410765214-16377-47-git-send-email-dgibson@redhat.com>
Patchwork-id: 94756
O-Subject: [PATCH 46/78] KVM: PPC: Ignore PIR writes
Bugzilla: 1123145 1123133 1123367
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Signed-off-by: David Gibson <dgibson@redhat.com>

commit a3ff5fbc94a829680d4aa005cd17add1c1a1fb5b
Author: Alexander Graf <agraf@suse.de>
Date:   Thu Jun 27 01:07:15 2013 +0200

    KVM: PPC: Ignore PIR writes

    While technically it's legal to write to PIR and have the identifier changed,
    we don't implement logic to do so because we simply expose vcpu_id to the guest.

    So instead, let's ignore writes to PIR. This ensures that we don't inject faults
    into the guest for something the guest is allowed to do. While at it, we cross
    our fingers hoping that it also doesn't mind that we broke its PIR read values.

    Signed-off-by: Alexander Graf <agraf@suse.de>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kvm/emulate.c b/arch/powerpc/kvm/emulate.c
index c1e29e1..da86d9b 100644
--- a/arch/powerpc/kvm/emulate.c
+++ b/arch/powerpc/kvm/emulate.c
@@ -126,6 +126,9 @@ static int kvmppc_emulate_mtspr(struct kvm_vcpu *vcpu, int sprn, int rs)
   kvmppc_set_sprg3(vcpu, spr_val);
   break;
 
+ /* PIR can legally be written, but we ignore it */
+ case SPRN_PIR: break;
+
  default:
   emulated = vcpu->kvm->arch.kvm_ops->emulate_mtspr(vcpu, sprn,
           spr_val);
-- 
1.7.1