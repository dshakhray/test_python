From 77d1d53f65793c659809bf3a4b23996d9e220b37 Mon Sep 17 00:00:00 2001
From: Steve Best <sbest@redhat.com>
Date: Wed, 19 Nov 2014 21:01:06 -0500
Subject: [scsi] ibmvfc: Fix for offlining devices during error recovery

Message-id: <20141119210106.11546.39927.sendpatchset@ibm-p7r2-01.lab.bos.redhat.com>
Patchwork-id: 100377
O-Subject: [PATCH RHEL7.1 BZ1159781 1/2] [SCSI] ibmvfc: Fix for offlining devices during error recovery
Bugzilla: 1159781
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

RHBZ#:
------
https://bugzilla.redhat.com/show_bug.cgi?id=1159781

Description:
------------

This fixes an issue seen with devices getting marked offline
in a scenario where a VIOS was getting rebooted while a
client VFC adapter is in SCSI EH and prevents unnecessary
EH escalation in some scenarios.

Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
Acked-by: Robert Jennings <rcj@linux.vnet.ibm.com>
Signed-off-by: James Bottomley <JBottomley@Parallels.com>

Upstream Status:
----------------
http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=c281e32aeea4af061264fd18843dc15984482fec

----------------
Steve Best

Proposed Patch:
---------------

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/ibmvscsi/ibmvfc.c b/drivers/scsi/ibmvscsi/ibmvfc.c
index 4e31caa..23f5ba5 100644
--- a/drivers/scsi/ibmvscsi/ibmvfc.c
+++ b/drivers/scsi/ibmvscsi/ibmvfc.c
@@ -2208,7 +2208,10 @@ static int ibmvfc_cancel_all(struct scsi_device *sdev, int type)
 
  if (rsp_rc != 0) {
   sdev_printk(KERN_ERR, sdev, "Failed to send cancel event. rc=%d\n", rsp_rc);
-  return -EIO;
+  /* If failure is received, the host adapter is most likely going
+   through reset, return success so the caller will wait for the command
+   being cancelled to get returned */
+  return 0;
  }
 
  sdev_printk(KERN_INFO, sdev, "Cancelling outstanding commands.\n");
@@ -2221,7 +2224,15 @@ static int ibmvfc_cancel_all(struct scsi_device *sdev, int type)
 
  if (status != IBMVFC_MAD_SUCCESS) {
   sdev_printk(KERN_WARNING, sdev, "Cancel failed with rc=%x\n", status);
-  return -EIO;
+  switch (status) {
+  case IBMVFC_MAD_DRIVER_FAILED:
+  case IBMVFC_MAD_CRQ_ERROR:
+   /* Host adapter most likely going through reset, return success to
+    the caller will wait for the command being cancelled to get returned */
+   return 0;
+  default:
+   return -EIO;
+  };
  }
 
  sdev_printk(KERN_INFO, sdev, "Successfully cancelled outstanding commands\n");
-- 
1.7.1