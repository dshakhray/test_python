From a1e2ab1a8e0199be82a4dfc3d0376a407e0b5ae1 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:06:17 -0400
Subject: [tools] perf: Improve error reporting

Message-id: <1410181752-25631-133-git-send-email-jolsa@redhat.com>
Patchwork-id: 91833
O-Subject: [PATCH RHEL7.1 BZ1134356 132/307] perf tools: Improve error reporting
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit ffa91880a992ec1aaee4b4f7c9ddffda0c277ba9
Author: Adrien BAK <adrien.bak@metascale.org>
Date: Fri Apr 18 11:00:43 2014 +0900

description
===========
In the current version, when using perf record, if something goes
wrong in tools/perf/builtin-record.c:375
  session = perf_session__new(file, false, NULL);

The error message:
"Not enough memory for reading per file header"

is issued. This error message seems to be outdated and is not very
helpful. This patch proposes to replace this error message by
"Perf session creation failed"

I believe this issue has been brought to lkml:
https://lkml.org/lkml/2014/2/24/458
although this patch only tackles a (small) part of the issue.

Additionnaly, this patch improves error reporting in
tools/perf/util/data.c open_file_write.

Currently, if the call to open fails, the user is unaware of it.
This patch logs the error, before returning the error code to
the caller.

[ Reorganize the changelog into paragraphs ]
[ Added empty line after fd declaration in open_file_write ]
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-record.c b/tools/perf/builtin-record.c
index eb524f9..8ce62ef 100644
--- a/tools/perf/builtin-record.c
+++ b/tools/perf/builtin-record.c
@@ -374,7 +374,7 @@ static int __cmd_record(struct record *rec, int argc, const char **argv)
 
  session = perf_session__new(file, false, NULL);
  if (session == NULL) {
-  pr_err("Not enough memory for reading perf file header\n");
+  pr_err("Perf session creation failed.\n");
   return -1;
  }
 
diff --git a/tools/perf/util/data.c b/tools/perf/util/data.c
index 1fbcd8b..55de44e 100644
--- a/tools/perf/util/data.c
+++ b/tools/perf/util/data.c
@@ -86,10 +86,17 @@ static int open_file_read(struct perf_data_file *file)
 
 static int open_file_write(struct perf_data_file *file)
 {
+ int fd;
+
  if (check_backup(file))
   return -1;
 
- return open(file->path, O_CREAT|O_RDWR|O_TRUNC, S_IRUSR|S_IWUSR);
+ fd = open(file->path, O_CREAT|O_RDWR|O_TRUNC, S_IRUSR|S_IWUSR);
+
+ if (fd < 0)
+  pr_err("failed to open %s : %s\n", file->path, strerror(errno));
+
+ return fd;
 }
 
 static int open_file(struct perf_data_file *file)
-- 
1.7.1