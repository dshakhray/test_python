From 68773a58c0a531f839d03d9954152743a28366e8 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 01:51:17 -0400
Subject: [iommu] vt-d: Include ACPI devices in iommu=pt

Message-id: <20140905015117.31297.56197.stgit@gir.stowe>
Patchwork-id: 91348
O-Subject: [RHEL7.1 PATCH 55/65] iommu/vt-d: Include ACPI devices in iommu=pt
Bugzilla: 1129880 1087643
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1087643
Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1129880
Upstream Status: cf04eee8bf0e842dd73a64d02cdcdcbb31b0102c

commit cf04eee8bf0e842dd73a64d02cdcdcbb31b0102c
Author: David Woodhouse <David.Woodhouse@intel.com>
Date:   Fri Mar 21 16:49:04 2014 +0000

    iommu/vt-d: Include ACPI devices in iommu=pt

    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c
index a180f10..6fbce01 100644
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@ -2595,30 +2595,65 @@ static int iommu_should_identity_map(struct device *dev, int startup)
  return 1;
 }
 
+static int __init dev_prepare_static_identity_mapping(struct device *dev, int hw)
+{
+ int ret;
+
+ if (!iommu_should_identity_map(dev, 1))
+  return 0;
+
+ ret = domain_add_dev_info(si_domain, dev,
+      hw ? CONTEXT_TT_PASS_THROUGH :
+           CONTEXT_TT_MULTI_LEVEL);
+ if (!ret)
+  pr_info("IOMMU: %s identity mapping for device %s\n",
+   hw ? "hardware" : "software", dev_name(dev));
+ else if (ret == -ENODEV)
+  /* device not associated with an iommu */
+  ret = 0;
+
+ return ret;
+}
+
+
 static int __init iommu_prepare_static_identity_mapping(int hw)
 {
  struct pci_dev *pdev = NULL;
- int ret;
+ struct dmar_drhd_unit *drhd;
+ struct intel_iommu *iommu;
+ struct device *dev;
+ int i;
+ int ret = 0;
 
  ret = si_domain_init(hw);
  if (ret)
   return -EFAULT;
 
  for_each_pci_dev(pdev) {
-  if (iommu_should_identity_map(&pdev->dev, 1)) {
-   ret = domain_add_dev_info(si_domain, &pdev->dev,
-          hw ? CONTEXT_TT_PASS_THROUGH :
-        CONTEXT_TT_MULTI_LEVEL);
-   if (ret) {
-    /* device not associated with an iommu */
-    if (ret == -ENODEV)
-     continue;
-    return ret;
+  ret = dev_prepare_static_identity_mapping(&pdev->dev, hw);
+  if (ret)
+   return ret;
+ }
+
+ for_each_active_iommu(iommu, drhd)
+  for_each_active_dev_scope(drhd->devices, drhd->devices_cnt, i, dev) {
+   struct acpi_device_physical_node *pn;
+   struct acpi_device *adev;
+
+   if (dev->bus != &acpi_bus_type)
+    continue;
+    
+   adev= to_acpi_device(dev);
+   mutex_lock(&adev->physical_node_lock);
+   list_for_each_entry(pn, &adev->physical_node_list, node) {
+    ret = dev_prepare_static_identity_mapping(pn->dev, hw);
+    if (ret)
+     break;
    }
-   pr_info("IOMMU: %s identity mapping for device %s\n",
-    hw ? "hardware" : "software", pci_name(pdev));
+   mutex_unlock(&adev->physical_node_lock);
+   if (ret)
+    return ret;
   }
- }
 
  return 0;
 }
-- 
1.7.1