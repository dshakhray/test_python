From 190f3bf231576694b3633788a3ffe714403e0d17 Mon Sep 17 00:00:00 2001
From: David Gibson <dgibson@redhat.com>
Date: Mon, 15 Sep 2014 07:13:22 -0400
Subject: [virt] kvm/ppc: book3s/pr - Disable AIL mode with OPAL

Message-id: <1410765214-16377-67-git-send-email-dgibson@redhat.com>
Patchwork-id: 94748
O-Subject: [PATCH 66/78] KVM: PPC: Book3s PR: Disable AIL mode with OPAL
Bugzilla: 1123145 1123133 1123367
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Signed-off-by: David Gibson <dgibson@redhat.com>

commit fb4188bad02f4871b26cf19b98e8d92499ca5d31
Author: Alexander Graf <agraf@suse.de>
Date:   Mon Jun 9 01:16:32 2014 +0200

    KVM: PPC: Book3s PR: Disable AIL mode with OPAL

    When we're using PR KVM we must not allow the CPU to take interrupts
    in virtual mode, as the SLB does not contain host kernel mappings
    when running inside the guest context.

    To make sure we get good performance for non-KVM tasks but still
    properly functioning PR KVM, let's just disable AIL whenever a vcpu
    is scheduled in.

    This is fundamentally different from how we deal with AIL on pSeries
    type machines where we disable AIL for the whole machine as soon as
    a single KVM VM is up.

    The reason for that is easy - on pSeries we do not have control over
    per-cpu configuration of AIL. We also don't want to mess with CPU hotplug
    races and AIL configuration, so setting it per CPU is easier and more
    flexible.

    This patch fixes running PR KVM on POWER8 bare metal for me.

    Signed-off-by: Alexander Graf <agraf@suse.de>
    Acked-by: Paul Mackerras <paulus@samba.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kvm/book3s_pr.c b/arch/powerpc/kvm/book3s_pr.c
index 7e77bb7..dc66e6d 100644
--- a/arch/powerpc/kvm/book3s_pr.c
+++ b/arch/powerpc/kvm/book3s_pr.c
@@ -71,6 +71,12 @@ static void kvmppc_core_vcpu_load_pr(struct kvm_vcpu *vcpu, int cpu)
  svcpu->in_use = 0;
  svcpu_put(svcpu);
 #endif
+
+ /* Disable AIL if supported */
+ if (cpu_has_feature(CPU_FTR_HVMODE) &&
+     cpu_has_feature(CPU_FTR_ARCH_207S))
+  mtspr(SPRN_LPCR, mfspr(SPRN_LPCR) & ~LPCR_AIL);
+
  vcpu->cpu = smp_processor_id();
 #ifdef CONFIG_PPC_BOOK3S_32
  current->thread.kvm_shadow_vcpu = vcpu->arch.shadow_vcpu;
@@ -91,6 +97,12 @@ static void kvmppc_core_vcpu_put_pr(struct kvm_vcpu *vcpu)
 
  kvmppc_giveup_ext(vcpu, MSR_FP | MSR_VEC | MSR_VSX);
  kvmppc_giveup_fac(vcpu, FSCR_TAR_LG);
+
+ /* Enable AIL if supported */
+ if (cpu_has_feature(CPU_FTR_HVMODE) &&
+     cpu_has_feature(CPU_FTR_ARCH_207S))
+  mtspr(SPRN_LPCR, mfspr(SPRN_LPCR) | LPCR_AIL_3);
+
  vcpu->cpu = -1;
 }
 
-- 
1.7.1