From 874fdf87379d3bbe0884acb3ef8df08eee752cd6 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 18:59:27 -0400
Subject: [fs] btrfs: Integer overflow in btrfs_ioctl_resize()

Message-id: <1407179109-13714-81-git-send-email-sandeen@redhat.com>
Patchwork-id: 87044
O-Subject: [RHEL7.1 PATCH 080/422] fs/btrfs: Integer overflow in btrfs_ioctl_resize()
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Wenliang Fan <fanwlexca@gmail.com>

commit eb8052e015f2c015926db45943f8ee724ace97e5
Author: Wenliang Fan <fanwlexca@gmail.com>
Date:   Fri Dec 20 15:28:56 2013 +0800

    fs/btrfs: Integer overflow in btrfs_ioctl_resize()

    The local variable 'new_size' comes from userspace. If a large number
    was passed, there would be an integer overflow in the following line:
     new_size = old_size + new_size;

    Signed-off-by: Wenliang Fan <fanwlexca@gmail.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/ioctl.c b/fs/btrfs/ioctl.c
index 72da49d..7233b3b 100644
--- a/fs/btrfs/ioctl.c
+++ b/fs/btrfs/ioctl.c
@@ -1474,6 +1474,10 @@ static noinline int btrfs_ioctl_resize(struct file *file,
   }
   new_size = old_size - new_size;
  } else if (mod > 0) {
+  if (new_size > ULLONG_MAX - old_size) {
+   ret = -EINVAL;
+   goto out_free;
+  }
   new_size = old_size + new_size;
  }
 
-- 
1.7.1