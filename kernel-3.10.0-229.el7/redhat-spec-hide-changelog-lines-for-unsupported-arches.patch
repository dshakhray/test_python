From a16e6a515445f2353cd3e9dbe711e34933c8cb5e Mon Sep 17 00:00:00 2001
From: Jarod Wilson <jarod@redhat.com>
Date: Tue, 15 Jul 2014 20:55:52 -0400
Subject: [redhat] spec: hide changelog lines for unsupported arches

Message-id: <20140715205551.GA8007@redhat.com>
Patchwork-id: 85841
O-Subject: [RHEL7 PATCH RFC] redhat/spec: hide changelog lines for unsupported arches
Bugzilla:
RH-Acked-by: Don Zickus <dzickus@redhat.com>

This is a quick hack to genspec.sh that more or less duplicates the logic
used to suppress the [redhat] commits from the public kernel changelog
stashed in the end-result kernel rpms, to hide any commits that start with
[xyz], where xyz is an arch we don't support. Pretty straight-forward
stuff, and should niftily cope with one of the major objections to us
merging patches that touch unsupported arches. If its not in the rpm
changelog, it didnt' happen, right?

List created by an ls of arch/ in the kernel, omitting Kconfig, x86, s390
and powerpc, for obvious reasons.

---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/redhat/genspec.sh b/redhat/genspec.sh
index 4376425..2e6024a 100755
--- a/redhat/genspec.sh
+++ b/redhat/genspec.sh
@@ -8,6 +8,8 @@ RELEASED_KERNEL=$5
 clogf="$SOURCES/changelog"
 # hide [redhat] entries from changelog
 HIDE_REDHAT=1;
+# hide entries for unsupported arches
+HIDE_UNSUPPORTED_ARCH=1;
 # override LC_TIME to avoid date conflicts when building the srpm
 LC_TIME=
 STAMP=$(echo $MARKER | cut -f 1 -d '-' | sed -e "s/v//");
@@ -133,6 +135,11 @@ if [ "x$HIDE_REDHAT" == "x1" ]; then
  cp $clogf.stripped $clogf
 fi
 
+if [ "x$HIDE_UNSUPPORTED_ARCH" == "x1" ]; then
+ cat $clogf | egrep -v "^- \[(alpha|arc|arm|arm64|avr32|blackfin|c6x|cris|frv|h8300|hexagon|ia64|m32r|m68k|metag|microblaze|mips|mn10300|openrisc|parisc|score|sh|sparc|tile|um|unicore32|xtensa)\]" > $clogf.stripped
+ cp $clogf.stripped $clogf
+fi
+
 LENGTH=$(wc -l $clogf | awk '{print $1}')
 
 #the changelog was created in reverse order
-- 
1.7.1