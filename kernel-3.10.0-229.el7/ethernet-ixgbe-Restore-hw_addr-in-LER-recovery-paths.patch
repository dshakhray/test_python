From 324efd59090ba5ac2cc708d49e07d829cd8c9197 Mon Sep 17 00:00:00 2001
From: John Greene <jogreene@redhat.com>
Date: Wed, 10 Sep 2014 18:28:39 -0400
Subject: [ethernet] ixgbe: Restore hw_addr in LER recovery paths

Message-id: <1410373750-11341-20-git-send-email-jogreene@redhat.com>
Patchwork-id: 93517
O-Subject: [RHEL7.1 PATCH 19/50] ixgbe: Restore hw_addr in LER recovery paths
Bugzilla: 1091123
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Neil Horman <nhorman@redhat.com>

BZ: 1091123
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7919168
Tested: In beaker. See BZ for details

The hw_addr needs to be restored in the pcie recovery path or
else the device will be perpetually removed. Also restore the
value in the resume path.

Signed-off-by: Mark Rustad <mark.d.rustad@intel.com>
Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com>
Signed-off-by: Aaron Brown <aaron.f.brown@intel.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0391bbe3e4ca653d1b5e4d453e9a0a049726d0e6)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c b/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
index bce8772..76c24dc 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
@@ -1,7 +1,7 @@
 /*******************************************************************************
 
   Intel 10 Gigabit PCI Express Linux driver
-  Copyright(c) 1999 - 2013 Intel Corporation.
+  Copyright(c) 1999 - 2014 Intel Corporation.
 
   This program is free software; you can redistribute it and/or modify it
   under the terms and conditions of the GNU General Public License,
@@ -66,7 +66,7 @@ static char ixgbe_default_device_descr[] =
 #define DRV_VERSION "3.19.1-k"
 const char ixgbe_driver_version[] = DRV_VERSION;
 static const char ixgbe_copyright[] =
-    "Copyright (c) 1999-2013 Intel Corporation.";
+    "Copyright (c) 1999-2014 Intel Corporation.";
 
 static const struct ixgbe_info *ixgbe_info_tbl[] = {
  [board_82598] = &ixgbe_82598_info,
@@ -5269,6 +5269,7 @@ static int ixgbe_resume(struct pci_dev *pdev)
  struct net_device *netdev = adapter->netdev;
  u32 err;
 
+ adapter->hw.hw_addr = adapter->io_addr;
  pci_set_power_state(pdev, PCI_D0);
  pci_restore_state(pdev);
  /*
@@ -8112,6 +8113,7 @@ static pci_ers_result_t ixgbe_io_slot_reset(struct pci_dev *pdev)
   e_err(probe, "Cannot re-enable PCI device after reset.\n");
   result = PCI_ERS_RESULT_DISCONNECT;
  } else {
+  adapter->hw.hw_addr = adapter->io_addr;
   pci_set_master(pdev);
   pci_restore_state(pdev);
   pci_save_state(pdev);
-- 
1.7.1