From 0a91bc5725e8078bdf6778fa4ad9f0c969be90b5 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Wed, 6 Aug 2014 03:44:50 -0400
Subject: [x86] pci: Drop return value of pcibios_scan_root()

Message-id: <20140806034450.1438.82853.stgit@gir.stowe>
Patchwork-id: 87416
O-Subject: [RHEL7.1 PATCH 07/69] x86/PCI: Drop return value of pcibios_scan_root()
Bugzilla: 1110896
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110896
Upstream Status: 49886cf4c4cd2ef77d0698c389199ad3e236f48e

commit 49886cf4c4cd2ef77d0698c389199ad3e236f48e
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Tue Jan 28 16:40:36 2014 -0700

    x86/PCI: Drop return value of pcibios_scan_root()

    Nobody really uses the return value of pcibios_scan_root() (one place uses
    it to control a printk, but the printk is not very useful).  This converts
    pcibios_scan_root() to a void function.

    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/include/asm/pci.h b/arch/x86/include/asm/pci.h
index 39c62a5..887e0af 100644
--- a/arch/x86/include/asm/pci.h
+++ b/arch/x86/include/asm/pci.h
@@ -65,7 +65,7 @@ extern unsigned long pci_mem_start;
 
 extern int pcibios_enabled;
 void pcibios_config_init(void);
-struct pci_bus *pcibios_scan_root(int bus);
+void pcibios_scan_root(int bus);
 
 void pcibios_set_master(struct pci_dev *dev);
 void pcibios_penalize_isa_irq(int irq, int active);
diff --git a/arch/x86/pci/common.c b/arch/x86/pci/common.c
index 52ad00c..600e592 100644
--- a/arch/x86/pci/common.c
+++ b/arch/x86/pci/common.c
@@ -456,7 +456,7 @@ void __init dmi_check_pciprobe(void)
  dmi_check_system(pciprobe_dmi_table);
 }
 
-struct pci_bus *pcibios_scan_root(int busnum)
+void pcibios_scan_root(int busnum)
 {
  struct pci_bus *bus;
  struct pci_sysdata *sd;
@@ -465,7 +465,7 @@ struct pci_bus *pcibios_scan_root(int busnum)
  sd = kzalloc(sizeof(*sd), GFP_KERNEL);
  if (!sd) {
   printk(KERN_ERR "PCI: OOM, skipping PCI bus %02x\n", busnum);
-  return NULL;
+  return;
  }
  sd->node = get_mp_bus_to_node(busnum);
  x86_pci_root_bus_resources(busnum, &resources);
@@ -475,8 +475,6 @@ struct pci_bus *pcibios_scan_root(int busnum)
   pci_free_resource_list(&resources);
   kfree(sd);
  }
-
- return bus;
 }
 
 void __init pcibios_set_cache_line_size(void)
diff --git a/arch/x86/pci/irq.c b/arch/x86/pci/irq.c
index 8658874..84112f5 100644
--- a/arch/x86/pci/irq.c
+++ b/arch/x86/pci/irq.c
@@ -138,9 +138,7 @@ static void __init pirq_peer_trick(void)
  for (i = 1; i < 256; i++) {
   if (!busmap[i] || pci_find_bus(0, i))
    continue;
-  if (pcibios_scan_root(i))
-   printk(KERN_INFO "PCI: Discovered primary peer "
-          "bus %02x [IRQ]\n", i);
+  pcibios_scan_root(i);
  }
  pcibios_last_bus = -1;
 }
-- 
1.7.1