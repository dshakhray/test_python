From c437abeb70f3871117ba39c54bc900073b9033dd Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:04:02 -0400
Subject: [net] usb/cdc_ncm: Export cdc_ncm_{tx, rx}_fixup functions for re-use

Message-id: <1410887463-20674-171-git-send-email-dzickus@redhat.com>
Patchwork-id: 95164
O-Subject: [RHEL7 PATCH 170/591] net: cdc_ncm: Export cdc_ncm_{tx, rx}_fixup functions for re-use
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 2f69702c4db5f1c3149fd17fe30bdeb87cba9698
Author: Enrico Mioso <mrkiko.rs@gmail.com>
Date:   Mon Nov 4 09:50:47 2013 +0100

    net: cdc_ncm: Export cdc_ncm_{tx, rx}_fixup functions for re-use

    Some drivers implementing NCM-like protocols, may re-use those functions, as is
    the case in the huawei_cdc_ncm driver.
    Export them via EXPORT_SYMBOL_GPL, in accordance with how other functions have
    been exported.

    Signed-off-by: Enrico Mioso <mrkiko.rs@gmail.com>
    Signed-off-by: Bjorn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/usb/cdc_ncm.c b/drivers/net/usb/cdc_ncm.c
index 89280ec..555d3ec 100644
--- a/drivers/net/usb/cdc_ncm.c
+++ b/drivers/net/usb/cdc_ncm.c
@@ -860,7 +860,7 @@ static void cdc_ncm_txpath_bh(unsigned long param)
  }
 }
 
-static struct sk_buff *
+struct sk_buff *
 cdc_ncm_tx_fixup(struct usbnet *dev, struct sk_buff *skb, gfp_t flags)
 {
  struct sk_buff *skb_out;
@@ -887,6 +887,7 @@ error:
 
  return NULL;
 }
+EXPORT_SYMBOL_GPL(cdc_ncm_tx_fixup);
 
 /* verify NTB header and return offset of first NDP, or negative error */
 int cdc_ncm_rx_verify_nth16(struct cdc_ncm_ctx *ctx, struct sk_buff *skb_in)
@@ -967,7 +968,7 @@ error:
 }
 EXPORT_SYMBOL_GPL(cdc_ncm_rx_verify_ndp16);
 
-static int cdc_ncm_rx_fixup(struct usbnet *dev, struct sk_buff *skb_in)
+int cdc_ncm_rx_fixup(struct usbnet *dev, struct sk_buff *skb_in)
 {
  struct sk_buff *skb;
  struct cdc_ncm_ctx *ctx = (struct cdc_ncm_ctx *)dev->data[0];
@@ -1042,6 +1043,7 @@ err_ndp:
 error:
  return 0;
 }
+EXPORT_SYMBOL_GPL(cdc_ncm_rx_fixup);
 
 static void
 cdc_ncm_speed_change(struct usbnet *dev,
diff --git a/include/linux/usb/cdc_ncm.h b/include/linux/usb/cdc_ncm.h
index 2300f74..c3fa807 100644
--- a/include/linux/usb/cdc_ncm.h
+++ b/include/linux/usb/cdc_ncm.h
@@ -125,5 +125,8 @@ void cdc_ncm_unbind(struct usbnet *dev, struct usb_interface *intf);
 struct sk_buff *cdc_ncm_fill_tx_frame(struct usbnet *dev, struct sk_buff *skb, __le32 sign);
 int cdc_ncm_rx_verify_nth16(struct cdc_ncm_ctx *ctx, struct sk_buff *skb_in);
 int cdc_ncm_rx_verify_ndp16(struct sk_buff *skb_in, int ndpoffset);
+struct sk_buff *
+cdc_ncm_tx_fixup(struct usbnet *dev, struct sk_buff *skb, gfp_t flags);
+int cdc_ncm_rx_fixup(struct usbnet *dev, struct sk_buff *skb_in);
 
 #endif /* __LINUX_USB_CDC_NCM_H */
-- 
1.7.1