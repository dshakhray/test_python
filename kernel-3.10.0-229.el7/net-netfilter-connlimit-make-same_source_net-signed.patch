From 72f668c00b7769d5fa18e66f14f90fdc28bdfa3c Mon Sep 17 00:00:00 2001
From: Florian Westphal <fwestpha@redhat.com>
Date: Thu, 24 Jul 2014 12:29:07 -0400
Subject: [net] netfilter: connlimit: make same_source_net signed

Message-id: <1406204949-17382-7-git-send-email-fwestpha@redhat.com>
Patchwork-id: 86624
O-Subject: [PATCH 6/8] [RHEL7.1 net] netfilter: connlimit: make same_source_net signed
Bugzilla: 1052282
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

BZ: 1052282

commit 50e0e9b12914dd82d1ece22d57bf8c146a1d1b52
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Mar 12 23:49:50 2014 +0100

    netfilter: connlimit: make same_source_net signed

    currently returns 1 if they're the same.  Make it work like mem/strcmp
    so it can be used as rbtree search function.

    Reviewed-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/netfilter/xt_connlimit.c b/net/netfilter/xt_connlimit.c
index dd20101..b027be0 100644
--- a/net/netfilter/xt_connlimit.c
+++ b/net/netfilter/xt_connlimit.c
@@ -78,13 +78,14 @@ static inline bool already_closed(const struct nf_conn *conn)
   return 0;
 }
 
-static inline unsigned int
+static int
 same_source_net(const union nf_inet_addr *addr,
   const union nf_inet_addr *mask,
   const union nf_inet_addr *u3, u_int8_t family)
 {
  if (family == NFPROTO_IPV4) {
-  return (addr->ip & mask->ip) == (u3->ip & mask->ip);
+  return ntohl(addr->ip & mask->ip) -
+         ntohl(u3->ip & mask->ip);
  } else {
   union nf_inet_addr lh, rh;
   unsigned int i;
@@ -94,7 +95,7 @@ same_source_net(const union nf_inet_addr *addr,
    rh.ip6[i] = u3->ip6[i] & mask->ip6[i];
   }
 
-  return memcmp(&lh.ip6, &rh.ip6, sizeof(lh.ip6)) == 0;
+  return memcmp(&lh.ip6, &rh.ip6, sizeof(lh.ip6));
  }
 }
 
@@ -143,7 +144,7 @@ static int count_hlist(struct net *net,
    continue;
   }
 
-  if (same_source_net(addr, mask, &conn->addr, family))
+  if (same_source_net(addr, mask, &conn->addr, family) == 0)
    /* same source network -> be counted! */
    ++matches;
   nf_ct_put(found_ct);
-- 
1.7.1