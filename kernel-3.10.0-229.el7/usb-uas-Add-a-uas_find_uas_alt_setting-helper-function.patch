From 420438339dba6f3921caba4ebd384fa6bdc38a20 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:06:21 -0400
Subject: [usb] uas: Add a uas_find_uas_alt_setting helper function

Message-id: <1410887463-20674-310-git-send-email-dzickus@redhat.com>
Patchwork-id: 95583
O-Subject: [RHEL7 PATCH 309/591] uas: Add a uas_find_uas_alt_setting helper function
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit e1be067b681054e963dfd01346c0d7fc0f8a63aa
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Oct 21 08:00:58 2013 +0100

    uas: Add a uas_find_uas_alt_setting helper function

    This is a preparation patch for teaching usb-storage to not bind to
    uas devices.

    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/storage/uas.c b/drivers/usb/storage/uas.c
index 3f021f2..54db365 100644
--- a/drivers/usb/storage/uas.c
+++ b/drivers/usb/storage/uas.c
@@ -892,10 +892,10 @@ static int uas_isnt_supported(struct usb_device *udev)
  return -ENODEV;
 }
 
-static int uas_switch_interface(struct usb_device *udev,
-      struct usb_interface *intf)
+static int uas_find_uas_alt_setting(struct usb_interface *intf)
 {
  int i;
+ struct usb_device *udev = interface_to_usbdev(intf);
  int sg_supported = udev->bus->sg_tablesize != 0;
 
  for (i = 0; i < intf->num_altsetting; i++) {
@@ -904,15 +904,26 @@ static int uas_switch_interface(struct usb_device *udev,
   if (uas_is_interface(alt)) {
    if (!sg_supported)
     return uas_isnt_supported(udev);
-   return usb_set_interface(udev,
-      alt->desc.bInterfaceNumber,
-      alt->desc.bAlternateSetting);
+   return alt->desc.bAlternateSetting;
   }
  }
 
  return -ENODEV;
 }
 
+static int uas_switch_interface(struct usb_device *udev,
+    struct usb_interface *intf)
+{
+ int alt;
+
+ alt = uas_find_uas_alt_setting(intf);
+ if (alt < 0)
+  return alt;
+
+ return usb_set_interface(udev,
+   intf->altsetting[0].desc.bInterfaceNumber, alt);
+}
+
 static void uas_configure_endpoints(struct uas_dev_info *devinfo)
 {
  struct usb_host_endpoint *eps[4] = { };
-- 
1.7.1