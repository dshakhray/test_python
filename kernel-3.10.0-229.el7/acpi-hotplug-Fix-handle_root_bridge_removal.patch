From eb3c89b66ff7f21fc7deb660a63e35e35d13c2a0 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 10 Jul 2014 01:07:52 -0400
Subject: [acpi] hotplug: Fix handle_root_bridge_removal()

Message-id: <20140710010752.22146.90161.stgit@gir.stowe>
Patchwork-id: 85632
O-Subject: [RHEL7.1 PATCH 093/105] ACPI / hotplug: Fix handle_root_bridge_removal()
Bugzilla: 1114228
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1114228
Upstream Status: 2441191a19039002b2c454a261fb45986df15184

commit 2441191a19039002b2c454a261fb45986df15184
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Nov 7 01:41:27 2013 +0100

    ACPI / hotplug: Fix handle_root_bridge_removal()

    It is required to do get_device() on the struct acpi_device in
    question before passing it to acpi_bus_hot_remove_device() through
    acpi_os_hotplug_execute(), because acpi_bus_hot_remove_device()
    calls acpi_scan_hot_remove() that does put_device() on that
    object.

    The ACPI PCI root removal routine, handle_root_bridge_removal(),
    doesn't do that, which may lead to premature freeing of the
    device object or to executing put_device() on an object that
    has been freed already.

    Fix this problem by making handle_root_bridge_removal() use
    get_device() as appropriate.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Acked-by: Toshi Kani <toshi.kani@hp.com>
    Cc: All applicable <stable@vger.kernel.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/acpi/pci_root.c b/drivers/acpi/pci_root.c
index 9fe9cf2..c0a7498 100644
--- a/drivers/acpi/pci_root.c
+++ b/drivers/acpi/pci_root.c
@@ -661,9 +661,12 @@ static void handle_root_bridge_removal(struct acpi_device *device)
  ej_event->device = device;
  ej_event->event = ACPI_NOTIFY_EJECT_REQUEST;
 
+ get_device(&device->dev);
  status = acpi_os_hotplug_execute(acpi_bus_hot_remove_device, ej_event);
- if (ACPI_FAILURE(status))
+ if (ACPI_FAILURE(status)) {
+  put_device(&device->dev);
   kfree(ej_event);
+ }
 }
 
 static void _handle_hotplug_event_root(struct work_struct *work)
-- 
1.7.1