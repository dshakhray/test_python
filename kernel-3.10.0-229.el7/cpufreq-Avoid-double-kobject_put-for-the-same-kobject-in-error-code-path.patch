From 76cb6426345c616afeaf8883f6afaf0d30aae6ee Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:21:47 -0400
Subject: [cpufreq] Avoid double kobject_put() for the same kobject in error code path

Message-id: <1409235879-1283-14-git-send-email-prarit@redhat.com>
Patchwork-id: 89359
O-Subject: [RHEL7.1 PATCH BZ 1134639 013/185] cpufreq: Avoid double kobject_put() for the same kobject in error code path
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit 10659ab7b50e963429f1a681882404ca37aa584c
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Sun Aug 4 01:19:41 2013 +0200

    cpufreq: Avoid double kobject_put() for the same kobject in error code path

    The only case triggering a jump to the err_out_unregister label in
    __cpufreq_add_dev() is when cpufreq_add_dev_interface() fails.
    However, if cpufreq_add_dev_interface() fails, it calls kobject_put()
    for the policy kobject in its error code path and since that causes
    the kobject's refcount to become 0, the additional kobject_put() for
    the same kobject under err_out_unregister and the
    wait_for_completion() following it are pointless, so drop them.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/cpufreq.c b/drivers/cpufreq/cpufreq.c
index b0dde9e..723ad37 100644
--- a/drivers/cpufreq/cpufreq.c
+++ b/drivers/cpufreq/cpufreq.c
@@ -1086,9 +1086,6 @@ err_out_unregister:
  }
  write_unlock_irqrestore(&cpufreq_driver_lock, flags);
 
- kobject_put(&policy->kobj);
- wait_for_completion(&policy->kobj_unregister);
-
 err_set_policy_cpu:
  per_cpu(cpufreq_policy_cpu, cpu) = -1;
  cpufreq_policy_free(policy);
-- 
1.7.1