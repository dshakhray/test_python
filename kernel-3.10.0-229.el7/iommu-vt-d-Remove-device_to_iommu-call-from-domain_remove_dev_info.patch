From 6ac2243e7b26c9f37be993e24c5f89f974659727 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 01:49:28 -0400
Subject: [iommu] vt-d: Remove device_to_iommu() call from domain_remove_dev_info()

Message-id: <20140905014928.31297.32569.stgit@gir.stowe>
Patchwork-id: 91330
O-Subject: [RHEL7.1 PATCH 37/65] iommu/vt-d: Remove device_to_iommu() call from domain_remove_dev_info()
Bugzilla: 1129880 1087643
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1087643
Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1129880
Upstream Status: 7c7faa11ecf3eec17699ae73fc6e336cbf993081

commit 7c7faa11ecf3eec17699ae73fc6e336cbf993081
Author: David Woodhouse <David.Woodhouse@intel.com>
Date:   Sun Mar 9 13:33:06 2014 -0700

    iommu/vt-d: Remove device_to_iommu() call from domain_remove_dev_info()

    This was problematic because it works by domain/bus/devfn and we want
    to make device_to_iommu() use only a struct device * (for handling non-PCI
    devices). Now that the iommu pointer is reliably stored in the
    device_domain_info, we don't need to look it up.

    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c
index dc322d0..aa8548c 100644
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@ -2084,7 +2084,6 @@ static void domain_remove_dev_info(struct dmar_domain *domain)
 {
  struct device_domain_info *info;
  unsigned long flags, flags2;
- struct intel_iommu *iommu;
 
  spin_lock_irqsave(&device_domain_lock, flags);
  while (!list_empty(&domain->devices)) {
@@ -2094,16 +2093,15 @@ static void domain_remove_dev_info(struct dmar_domain *domain)
   spin_unlock_irqrestore(&device_domain_lock, flags);
 
   iommu_disable_dev_iotlb(info);
-  iommu = device_to_iommu(info->segment, info->bus, info->devfn);
-  iommu_detach_dev(iommu, info->bus, info->devfn);
+  iommu_detach_dev(info->iommu, info->bus, info->devfn);
 
   if (domain->flags & DOMAIN_FLAG_VIRTUAL_MACHINE) {
-   iommu_detach_dependent_devices(iommu, info->dev);
+   iommu_detach_dependent_devices(info->iommu, info->dev);
    /* clear this iommu in iommu_bmp, update iommu count
     * and capabilities
     */
    spin_lock_irqsave(&domain->iommu_lock, flags2);
-   if (test_and_clear_bit(iommu->seq_id,
+   if (test_and_clear_bit(info->iommu->seq_id,
             domain->iommu_bmp)) {
     domain->iommu_count--;
     domain_update_iommu_cap(domain);
-- 
1.7.1