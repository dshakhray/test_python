From 9b17b0040f03e962f2b8ad02fe04a65b7df80294 Mon Sep 17 00:00:00 2001
From: Ilya Dryomov <ilya.dryomov@inktank.com>
Date: Tue, 18 Nov 2014 15:49:29 -0500
Subject: [block] rbd: add img_obj_request_simple() helper
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1416325805-26490-15-git-send-email-idryomov@redhat.com>
Patchwork-id: 100206
O-Subject: [RHEL7.1 PATCH 14/50] rbd: add img_obj_request_simple() helper
Bugzilla: 1165232
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Sage Weil <sweil@redhat.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>

From: Ilya Dryomov <ilya.dryomov@inktank.com>

To clarify the conditions and make it easier to add new ones.

Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>
(cherry picked from commit 70d045f660c7331bce8c9377929b52a9738a12cb)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/block/rbd.c b/drivers/block/rbd.c
index 3b3d36b..1bb453c 100644
--- a/drivers/block/rbd.c
+++ b/drivers/block/rbd.c
@@ -2786,11 +2786,10 @@ out:
  return ret;
 }
 
-static int rbd_img_obj_request_submit(struct rbd_obj_request *obj_request)
+static bool img_obj_request_simple(struct rbd_obj_request *obj_request)
 {
  struct rbd_img_request *img_request;
  struct rbd_device *rbd_dev;
- bool known;
 
  rbd_assert(obj_request_img_data_test(obj_request));
 
@@ -2798,22 +2797,35 @@ static int rbd_img_obj_request_submit(struct rbd_obj_request *obj_request)
  rbd_assert(img_request);
  rbd_dev = img_request->rbd_dev;
 
+ /* Reads */
+ if (!img_request_write_test(img_request))
+  return true;
+
+ /* Non-layered writes */
+ if (!img_request_layered_test(img_request))
+  return true;
+
  /*
-  * Only writes to layered images need special handling.
-  * Reads and non-layered writes are simple object requests.
-  * Layered writes that start beyond the end of the overlap
-  * with the parent have no parent data, so they too are
-  * simple object requests.  Finally, if the target object is
-  * known to already exist, its parent data has already been
-  * copied, so a write to the object can also be handled as a
-  * simple object request.
+  * Layered writes outside of the parent overlap range don't
+  * share any data with the parent.
   */
- if (!img_request_write_test(img_request) ||
-  !img_request_layered_test(img_request) ||
-  !obj_request_overlaps_parent(obj_request) ||
-  ((known = obj_request_known_test(obj_request)) &&
-   obj_request_exists_test(obj_request))) {
+ if (!obj_request_overlaps_parent(obj_request))
+  return true;
 
+ /*
+  * If the object is known to already exist, its parent data has
+  * already been copied.
+  */
+ if (obj_request_known_test(obj_request) &&
+     obj_request_exists_test(obj_request))
+  return true;
+
+ return false;
+}
+
+static int rbd_img_obj_request_submit(struct rbd_obj_request *obj_request)
+{
+ if (img_obj_request_simple(obj_request)) {
   struct rbd_device *rbd_dev;
   struct ceph_osd_client *osdc;
 
@@ -2829,7 +2841,7 @@ static int rbd_img_obj_request_submit(struct rbd_obj_request *obj_request)
   * start by reading the data for the full target object from
   * the parent so we can use it for a copyup to the target.
   */
- if (known)
+ if (obj_request_known_test(obj_request))
   return rbd_img_obj_parent_read_full(obj_request);
 
  /* We don't know whether the target exists.  Go find out. */
-- 
1.7.1