From 1956b6410232adce4c40280f7a079300d440e711 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:24:57 -0400
Subject: [tools] perf/annotate: Pass dso instead of dso_name to get_srcline()

Message-id: <1408462094-14194-129-git-send-email-jolsa@redhat.com>
Patchwork-id: 88123
O-Subject: [PATCH RHEL7.1 BZ1131394 128/325] perf annotate: Pass dso instead of dso_name to get_srcline()
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 86c98cab5a3137376ea7df5ffa5bd52e545fee95
Author: Namhyung Kim <namhyung.kim@lge.com>
Date: Wed Sep 11 14:09:30 2013 +0900

description
===========
This is a preparation of next change.  No functional changes are
intended.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/annotate.c b/tools/perf/util/annotate.c
index d48297d..d73e800 100644
--- a/tools/perf/util/annotate.c
+++ b/tools/perf/util/annotate.c
@@ -1081,8 +1081,7 @@ static void symbol__free_source_line(struct symbol *sym, int len)
 /* Get the filename:line for the colored entries */
 static int symbol__get_source_line(struct symbol *sym, struct map *map,
        struct perf_evsel *evsel,
-       struct rb_root *root, int len,
-       const char *filename)
+       struct rb_root *root, int len)
 {
  u64 start;
  int i, k;
@@ -1131,7 +1130,7 @@ static int symbol__get_source_line(struct symbol *sym, struct map *map,
    goto next;
 
   offset = start + i;
-  src_line->path = get_srcline(filename, offset);
+  src_line->path = get_srcline(map->dso, offset);
   insert_source_line(&tmp_root, src_line);
 
  next:
@@ -1338,7 +1337,6 @@ int symbol__tty_annotate(struct symbol *sym, struct map *map,
     bool full_paths, int min_pcnt, int max_lines)
 {
  struct dso *dso = map->dso;
- const char *filename = dso->long_name;
  struct rb_root source_line = RB_ROOT;
  u64 len;
 
@@ -1348,9 +1346,8 @@ int symbol__tty_annotate(struct symbol *sym, struct map *map,
  len = symbol__size(sym);
 
  if (print_lines) {
-  symbol__get_source_line(sym, map, evsel, &source_line,
-     len, filename);
-  print_summary(&source_line, filename);
+  symbol__get_source_line(sym, map, evsel, &source_line, len);
+  print_summary(&source_line, dso->long_name);
  }
 
  symbol__annotate_printf(sym, map, evsel, full_paths,
diff --git a/tools/perf/util/dso.h b/tools/perf/util/dso.h
index dbd9241..72eedd6 100644
--- a/tools/perf/util/dso.h
+++ b/tools/perf/util/dso.h
@@ -6,6 +6,7 @@
 #include <stdbool.h>
 #include "types.h"
 #include "map.h"
+#include "build-id.h"
 
 enum dso_binary_type {
  DSO_BINARY_TYPE__KALLSYMS = 0,
diff --git a/tools/perf/util/sort.c b/tools/perf/util/sort.c
index d443593..f732120 100644
--- a/tools/perf/util/sort.c
+++ b/tools/perf/util/sort.c
@@ -259,7 +259,7 @@ static int hist_entry__srcline_snprintf(struct hist_entry *self, char *bf,
  if (!self->ms.map)
   goto out_ip;
 
- path = get_srcline(self->ms.map->dso->long_name, self->ip);
+ path = get_srcline(self->ms.map->dso, self->ip);
  self->srcline = path;
 
 out_path:
diff --git a/tools/perf/util/srcline.c b/tools/perf/util/srcline.c
index 777f918..c736d94 100644
--- a/tools/perf/util/srcline.c
+++ b/tools/perf/util/srcline.c
@@ -4,6 +4,7 @@
 
 #include <linux/kernel.h>
 
+#include "util/dso.h"
 #include "util/util.h"
 #include "util/debug.h"
 
@@ -53,11 +54,12 @@ out:
  return ret;
 }
 
-char *get_srcline(const char *dso_name, unsigned long addr)
+char *get_srcline(struct dso *dso, unsigned long addr)
 {
  char *file;
  unsigned line;
  char *srcline = SRCLINE_UNKNOWN;
+ char *dso_name = dso->long_name;
  size_t size;
 
  if (dso_name[0] == '[')
diff --git a/tools/perf/util/util.h b/tools/perf/util/util.h
index 7c8b43f..1f06ba4 100644
--- a/tools/perf/util/util.h
+++ b/tools/perf/util/util.h
@@ -300,6 +300,8 @@ unsigned long parse_tag_value(const char *str, struct parse_tag *tags);
 
 #define SRCLINE_UNKNOWN  ((char *) "??:0")
 
-char *get_srcline(const char *dso_name, unsigned long addr);
+struct dso;
+
+char *get_srcline(struct dso *dso, unsigned long addr);
 void free_srcline(char *srcline);
 #endif /* GIT_COMPAT_UTIL_H */
-- 
1.7.1