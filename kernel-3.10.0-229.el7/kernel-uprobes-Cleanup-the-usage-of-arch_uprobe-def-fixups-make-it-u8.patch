From c11e907bcf04409e1426af91c8bcc7c86ba1af6e Mon Sep 17 00:00:00 2001
From: Oleg Nesterov <oleg@redhat.com>
Date: Mon, 16 Jun 2014 16:02:11 -0400
Subject: [kernel] uprobes: Cleanup the usage of arch_uprobe->def.fixups, make it u8

Message-id: <20140616160211.GA15507@redhat.com>
Patchwork-id: 84091
O-Subject: [PATCH RHEL7 BZ 1073627 27/36] uprobes/x86: Cleanup the usage of arch_uprobe->def.fixups, make it u8
Bugzilla: 1073627
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

RHBZ: 1073627

handle_riprel_insn() assumes that nobody else could modify ->fixups
before. This is correct but fragile, change it to use "|=".

Also make ->fixups u8, we are going to add the new members into the
union. It is not clear why UPROBE_FIX_RIP_.X lived in the upper byte,
redefine them so that they can fit into u8.

Signed-off-by: Oleg Nesterov <oleg@redhat.com>
(cherry picked from commit 78d9af4cd375880a574327210eb9dab572618364)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/include/asm/uprobes.h b/arch/x86/include/asm/uprobes.h
index 1f0efd1..f6c6092 100644
--- a/arch/x86/include/asm/uprobes.h
+++ b/arch/x86/include/asm/uprobes.h
@@ -50,7 +50,7 @@ struct arch_uprobe {
 #ifdef CONFIG_X86_64
    long riprel_target;
 #endif
-   u16 fixups;
+   u8 fixups;
   }    def;
  };
 };
diff --git a/arch/x86/kernel/uprobes.c b/arch/x86/kernel/uprobes.c
index 7824ce2..a8e1d7e 100644
--- a/arch/x86/kernel/uprobes.c
+++ b/arch/x86/kernel/uprobes.c
@@ -33,16 +33,16 @@
 /* Post-execution fixups. */
 
 /* Adjust IP back to vicinity of actual insn */
-#define UPROBE_FIX_IP  0x1
+#define UPROBE_FIX_IP  0x01
 
 /* Adjust the return address of a call insn */
-#define UPROBE_FIX_CALL 0x2
+#define UPROBE_FIX_CALL  0x02
 
 /* Instruction will modify TF, don't change it */
-#define UPROBE_FIX_SETF 0x4
+#define UPROBE_FIX_SETF  0x04
 
-#define UPROBE_FIX_RIP_AX 0x8000
-#define UPROBE_FIX_RIP_CX 0x4000
+#define UPROBE_FIX_RIP_AX 0x08
+#define UPROBE_FIX_RIP_CX 0x10
 
 #define UPROBE_TRAP_NR  UINT_MAX
 
@@ -307,12 +307,12 @@ handle_riprel_insn(struct arch_uprobe *auprobe, struct insn *insn)
    * is NOT the register operand, so we use %rcx (register
    * #1) for the scratch register.
    */
-  auprobe->def.fixups = UPROBE_FIX_RIP_CX;
+  auprobe->def.fixups |= UPROBE_FIX_RIP_CX;
   /* Change modrm from 00 000 101 to 00 000 001. */
   *cursor = 0x1;
  } else {
   /* Use %rax (register #0) for the scratch register. */
-  auprobe->def.fixups = UPROBE_FIX_RIP_AX;
+  auprobe->def.fixups |= UPROBE_FIX_RIP_AX;
   /* Change modrm from 00 xxx 101 to 00 xxx 000 */
   *cursor = (reg << 3);
  }
-- 
1.7.1