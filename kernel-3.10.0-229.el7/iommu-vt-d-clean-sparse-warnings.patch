From 1df23a7696182c9205fcaafcc5bb149334710880 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 01:33:42 -0400
Subject: [iommu] vt-d: clean sparse warnings

Message-id: <20140905013342.30867.60021.stgit@gir.stowe>
Patchwork-id: 91290
O-Subject: [RHEL7.1 PATCH 26/28] iommu/vt-d, trivial: clean sparse warnings
Bugzilla: 1129808
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Dutile <ddutile@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1129808
Upstream Status: b707cb027edf5b7ff1b8637c184b9a58d74e5159

commit b707cb027edf5b7ff1b8637c184b9a58d74e5159
Author: Jiang Liu <jiang.liu@linux.intel.com>
Date:   Mon Jan 6 14:18:26 2014 +0800

    iommu/vt-d, trivial: clean sparse warnings

    Clean up most sparse warnings in Intel DMA and interrupt remapping
    drivers.

    Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
    Signed-off-by: Joerg Roedel <joro@8bytes.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/dmar.c b/drivers/iommu/dmar.c
index 808d2dd..06d740a 100644
--- a/drivers/iommu/dmar.c
+++ b/drivers/iommu/dmar.c
@@ -573,7 +573,7 @@ int __init detect_intel_iommu(void)
    x86_init.iommu.iommu_init = intel_iommu_init;
 #endif
  }
- early_acpi_os_unmap_memory(dmar_tbl, dmar_tbl_size);
+ early_acpi_os_unmap_memory((void __iomem *)dmar_tbl, dmar_tbl_size);
  dmar_tbl = NULL;
 
  return ret ? 1 : -ENODEV;
@@ -1065,7 +1065,7 @@ int dmar_enable_qi(struct intel_iommu *iommu)
  desc_page = alloc_pages_node(iommu->node, GFP_ATOMIC | __GFP_ZERO, 0);
  if (!desc_page) {
   kfree(qi);
-  iommu->qi = 0;
+  iommu->qi = NULL;
   return -ENOMEM;
  }
 
@@ -1075,7 +1075,7 @@ int dmar_enable_qi(struct intel_iommu *iommu)
  if (!qi->desc_status) {
   free_page((unsigned long) qi->desc);
   kfree(qi);
-  iommu->qi = 0;
+  iommu->qi = NULL;
   return -ENOMEM;
  }
 
diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c
index fa6912c..5c37940 100644
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@ -382,7 +382,7 @@ struct device_domain_info {
 
 static void flush_unmaps_timeout(unsigned long data);
 
-DEFINE_TIMER(unmap_timer,  flush_unmaps_timeout, 0, 0);
+static DEFINE_TIMER(unmap_timer,  flush_unmaps_timeout, 0, 0);
 
 #define HIGH_WATER_MARK 250
 struct deferred_flush_tables {
diff --git a/drivers/iommu/irq_remapping.c b/drivers/iommu/irq_remapping.c
index 3b05d1b..228632c 100644
--- a/drivers/iommu/irq_remapping.c
+++ b/drivers/iommu/irq_remapping.c
@@ -295,8 +295,8 @@ int setup_ioapic_remapped_entry(int irq,
           vector, attr);
 }
 
-int set_remapped_irq_affinity(struct irq_data *data, const struct cpumask *mask,
-         bool force)
+static int set_remapped_irq_affinity(struct irq_data *data,
+         const struct cpumask *mask, bool force)
 {
  if (!config_enabled(CONFIG_SMP) || !remap_ops ||
      !remap_ops->set_affinity)
-- 
1.7.1