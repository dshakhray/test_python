From 6c47f643617a43e4b2690d0178d8e6456f0bb0d6 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:09:21 -0400
Subject: [usb] move usb/usb-common.c to usb/common/usb-common.c

Message-id: <1410887463-20674-490-git-send-email-dzickus@redhat.com>
Patchwork-id: 95467
O-Subject: [RHEL7 PATCH 489/591] usb: move usb/usb-common.c to usb/common/usb-common.c
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit f4cbd33fd5f0587910fa9db403a1b42f1cabf820
Author: Peter Chen <peter.chen@freescale.com>
Date:   Tue Apr 29 08:35:58 2014 +0800

    usb: move usb/usb-common.c to usb/common/usb-common.c

    Since we will have more usb-common things, and it will let
    usb-common.c be larger and larger, we create a folder named usb/common
    for all usb common things.

    Cc: Felipe Balbi <balbi@ti.com>
    Signed-off-by: Peter Chen <peter.chen@freescale.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 create mode 100644 drivers/usb/common/Makefile
 create mode 100644 drivers/usb/common/usb-common.c
 delete mode 100644 drivers/usb/usb-common.c

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/Makefile b/drivers/usb/Makefile
index c41feba..58b0990 100644
--- a/drivers/usb/Makefile
+++ b/drivers/usb/Makefile
@@ -55,4 +55,4 @@ obj-$(CONFIG_USB_CHIPIDEA) += chipidea/
 obj-$(CONFIG_USB_RENESAS_USBHS) += renesas_usbhs/
 obj-$(CONFIG_USB_GADGET) += gadget/
 
-obj-$(CONFIG_USB_COMMON) += usb-common.o
+obj-$(CONFIG_USB_COMMON) += common/
diff --git a/drivers/usb/common/Makefile b/drivers/usb/common/Makefile
new file mode 100644
index 0000000..9b320d1
--- /dev/null
+++ b/drivers/usb/common/Makefile
@@ -0,0 +1,5 @@
+#
+# Makefile for the usb common parts.
+#
+
+obj-$(CONFIG_USB_COMMON) += usb-common.o
diff --git a/drivers/usb/common/usb-common.c b/drivers/usb/common/usb-common.c
new file mode 100644
index 0000000..0db0a91
--- /dev/null
+++ b/drivers/usb/common/usb-common.c
@@ -0,0 +1,82 @@
+/*
+ * Provides code common for host and device side USB.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation, version 2.
+ *
+ * If either host side (ie. CONFIG_USB=y) or device side USB stack
+ * (ie. CONFIG_USB_GADGET=y) is compiled in the kernel, this module is
+ * compiled-in as well.  Otherwise, if either of the two stacks is
+ * compiled as module, this file is compiled as module as well.
+ */
+
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/usb/ch9.h>
+#include <linux/usb/otg.h>
+
+const char *usb_otg_state_string(enum usb_otg_state state)
+{
+ static const char *const names[] = {
+  [OTG_STATE_A_IDLE] = "a_idle",
+  [OTG_STATE_A_WAIT_VRISE] = "a_wait_vrise",
+  [OTG_STATE_A_WAIT_BCON] = "a_wait_bcon",
+  [OTG_STATE_A_HOST] = "a_host",
+  [OTG_STATE_A_SUSPEND] = "a_suspend",
+  [OTG_STATE_A_PERIPHERAL] = "a_peripheral",
+  [OTG_STATE_A_WAIT_VFALL] = "a_wait_vfall",
+  [OTG_STATE_A_VBUS_ERR] = "a_vbus_err",
+  [OTG_STATE_B_IDLE] = "b_idle",
+  [OTG_STATE_B_SRP_INIT] = "b_srp_init",
+  [OTG_STATE_B_PERIPHERAL] = "b_peripheral",
+  [OTG_STATE_B_WAIT_ACON] = "b_wait_acon",
+  [OTG_STATE_B_HOST] = "b_host",
+ };
+
+ if (state < 0 || state >= ARRAY_SIZE(names))
+  return "UNDEFINED";
+
+ return names[state];
+}
+EXPORT_SYMBOL_GPL(usb_otg_state_string);
+
+const char *usb_speed_string(enum usb_device_speed speed)
+{
+ static const char *const names[] = {
+  [USB_SPEED_UNKNOWN] = "UNKNOWN",
+  [USB_SPEED_LOW] = "low-speed",
+  [USB_SPEED_FULL] = "full-speed",
+  [USB_SPEED_HIGH] = "high-speed",
+  [USB_SPEED_WIRELESS] = "wireless",
+  [USB_SPEED_SUPER] = "super-speed",
+ };
+
+ if (speed < 0 || speed >= ARRAY_SIZE(names))
+  speed = USB_SPEED_UNKNOWN;
+ return names[speed];
+}
+EXPORT_SYMBOL_GPL(usb_speed_string);
+
+const char *usb_state_string(enum usb_device_state state)
+{
+ static const char *const names[] = {
+  [USB_STATE_NOTATTACHED] = "not attached",
+  [USB_STATE_ATTACHED] = "attached",
+  [USB_STATE_POWERED] = "powered",
+  [USB_STATE_RECONNECTING] = "reconnecting",
+  [USB_STATE_UNAUTHENTICATED] = "unauthenticated",
+  [USB_STATE_DEFAULT] = "default",
+  [USB_STATE_ADDRESS] = "addresssed",
+  [USB_STATE_CONFIGURED] = "configured",
+  [USB_STATE_SUSPENDED] = "suspended",
+ };
+
+ if (state < 0 || state >= ARRAY_SIZE(names))
+  return "UNKNOWN";
+
+ return names[state];
+}
+EXPORT_SYMBOL_GPL(usb_state_string);
+
+MODULE_LICENSE("GPL");
diff --git a/drivers/usb/usb-common.c b/drivers/usb/usb-common.c
deleted file mode 100644
index 0db0a91..0000000
--- a/drivers/usb/usb-common.c
+++ /dev/null
@@ -1,82 +0,0 @@
-/*
- * Provides code common for host and device side USB.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License as
- * published by the Free Software Foundation, version 2.
- *
- * If either host side (ie. CONFIG_USB=y) or device side USB stack
- * (ie. CONFIG_USB_GADGET=y) is compiled in the kernel, this module is
- * compiled-in as well.  Otherwise, if either of the two stacks is
- * compiled as module, this file is compiled as module as well.
- */
-
-#include <linux/kernel.h>
-#include <linux/module.h>
-#include <linux/usb/ch9.h>
-#include <linux/usb/otg.h>
-
-const char *usb_otg_state_string(enum usb_otg_state state)
-{
- static const char *const names[] = {
-  [OTG_STATE_A_IDLE] = "a_idle",
-  [OTG_STATE_A_WAIT_VRISE] = "a_wait_vrise",
-  [OTG_STATE_A_WAIT_BCON] = "a_wait_bcon",
-  [OTG_STATE_A_HOST] = "a_host",
-  [OTG_STATE_A_SUSPEND] = "a_suspend",
-  [OTG_STATE_A_PERIPHERAL] = "a_peripheral",
-  [OTG_STATE_A_WAIT_VFALL] = "a_wait_vfall",
-  [OTG_STATE_A_VBUS_ERR] = "a_vbus_err",
-  [OTG_STATE_B_IDLE] = "b_idle",
-  [OTG_STATE_B_SRP_INIT] = "b_srp_init",
-  [OTG_STATE_B_PERIPHERAL] = "b_peripheral",
-  [OTG_STATE_B_WAIT_ACON] = "b_wait_acon",
-  [OTG_STATE_B_HOST] = "b_host",
- };
-
- if (state < 0 || state >= ARRAY_SIZE(names))
-  return "UNDEFINED";
-
- return names[state];
-}
-EXPORT_SYMBOL_GPL(usb_otg_state_string);
-
-const char *usb_speed_string(enum usb_device_speed speed)
-{
- static const char *const names[] = {
-  [USB_SPEED_UNKNOWN] = "UNKNOWN",
-  [USB_SPEED_LOW] = "low-speed",
-  [USB_SPEED_FULL] = "full-speed",
-  [USB_SPEED_HIGH] = "high-speed",
-  [USB_SPEED_WIRELESS] = "wireless",
-  [USB_SPEED_SUPER] = "super-speed",
- };
-
- if (speed < 0 || speed >= ARRAY_SIZE(names))
-  speed = USB_SPEED_UNKNOWN;
- return names[speed];
-}
-EXPORT_SYMBOL_GPL(usb_speed_string);
-
-const char *usb_state_string(enum usb_device_state state)
-{
- static const char *const names[] = {
-  [USB_STATE_NOTATTACHED] = "not attached",
-  [USB_STATE_ATTACHED] = "attached",
-  [USB_STATE_POWERED] = "powered",
-  [USB_STATE_RECONNECTING] = "reconnecting",
-  [USB_STATE_UNAUTHENTICATED] = "unauthenticated",
-  [USB_STATE_DEFAULT] = "default",
-  [USB_STATE_ADDRESS] = "addresssed",
-  [USB_STATE_CONFIGURED] = "configured",
-  [USB_STATE_SUSPENDED] = "suspended",
- };
-
- if (state < 0 || state >= ARRAY_SIZE(names))
-  return "UNKNOWN";
-
- return names[state];
-}
-EXPORT_SYMBOL_GPL(usb_state_string);
-
-MODULE_LICENSE("GPL");
-- 
1.7.1