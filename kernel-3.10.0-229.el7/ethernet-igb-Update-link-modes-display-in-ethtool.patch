From d7b597f90da4423a3e3c84ff5d0ddeaa34055231 Mon Sep 17 00:00:00 2001
From: Stefan Assmann <sassmann@redhat.com>
Date: Tue, 26 Aug 2014 14:11:31 -0400
Subject: [ethernet] igb: Update link modes display in ethtool

Message-id: <1409062359-13063-14-git-send-email-sassmann@redhat.com>
Patchwork-id: 89136
O-Subject: [RHEL7.1 PATCH 13/81] igb: Update link modes display in ethtool
Bugzilla: 1091121
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Neil Horman <nhorman@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Carolyn Wyborny <carolyn.wyborny@intel.com>

This patch fixes multiple problems in the link modes display in ethtool.
Newer parts have more complicated methods to determine actual link
capabilities.  Older parts cannot communicate with their SFP modules.
Finally, all the available defines are not displayed by ethtool.  This
updates the link modes to be as accurate as possible depending on what data
is available to the driver at any given time.

Signed-off-by: Carolyn Wyborny <carolyn.wyborny@intel.com>
Tested-by: Jeff Pieper <jeffrey.e.pieper@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Stefan Assmann <sassmann@redhat.com>
(cherry picked from commit 0123713957a1977fcb5fc93173122d8af58e0c2c)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/igb/igb_ethtool.c b/drivers/net/ethernet/intel/igb/igb_ethtool.c
index b918ba3..b0f3666 100644
--- a/drivers/net/ethernet/intel/igb/igb_ethtool.c
+++ b/drivers/net/ethernet/intel/igb/igb_ethtool.c
@@ -146,6 +146,7 @@ static int igb_get_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)
  struct e1000_sfp_flags *eth_flags = &dev_spec->eth_flags;
  u32 status;
 
+ status = rd32(E1000_STATUS);
  if (hw->phy.media_type == e1000_media_type_copper) {
 
   ecmd->supported = (SUPPORTED_10baseT_Half |
@@ -169,13 +170,22 @@ static int igb_get_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)
   ecmd->transceiver = XCVR_INTERNAL;
  } else {
   ecmd->supported = (SUPPORTED_FIBRE |
+       SUPPORTED_1000baseKX_Full |
        SUPPORTED_Autoneg |
        SUPPORTED_Pause);
-  ecmd->advertising = ADVERTISED_FIBRE;
-
-  if ((eth_flags->e1000_base_lx) || (eth_flags->e1000_base_sx)) {
-   ecmd->supported |= SUPPORTED_1000baseT_Full;
-   ecmd->advertising |= ADVERTISED_1000baseT_Full;
+  ecmd->advertising = (ADVERTISED_FIBRE |
+         ADVERTISED_1000baseKX_Full);
+  if (hw->mac.type == e1000_i354) {
+   if ((hw->device_id ==
+        E1000_DEV_ID_I354_BACKPLANE_2_5GBPS) &&
+       !(status & E1000_STATUS_2P5_SKU_OVER)) {
+    ecmd->supported |= SUPPORTED_2500baseX_Full;
+    ecmd->supported &=
+     ~SUPPORTED_1000baseKX_Full;
+    ecmd->advertising |= ADVERTISED_2500baseX_Full;
+    ecmd->advertising &=
+     ~ADVERTISED_1000baseKX_Full;
+   }
   }
   if (eth_flags->e100_base_fx) {
    ecmd->supported |= SUPPORTED_100baseT_Full;
@@ -187,35 +197,29 @@ static int igb_get_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)
   ecmd->port = PORT_FIBRE;
   ecmd->transceiver = XCVR_EXTERNAL;
  }
-
  if (hw->mac.autoneg != 1)
   ecmd->advertising &= ~(ADVERTISED_Pause |
            ADVERTISED_Asym_Pause);
 
- if (hw->fc.requested_mode == e1000_fc_full)
+ switch (hw->fc.requested_mode) {
+ case e1000_fc_full:
   ecmd->advertising |= ADVERTISED_Pause;
- else if (hw->fc.requested_mode == e1000_fc_rx_pause)
+  break;
+ case e1000_fc_rx_pause:
   ecmd->advertising |= (ADVERTISED_Pause |
           ADVERTISED_Asym_Pause);
- else if (hw->fc.requested_mode == e1000_fc_tx_pause)
+  break;
+ case e1000_fc_tx_pause:
   ecmd->advertising |=  ADVERTISED_Asym_Pause;
- else
+  break;
+ default:
   ecmd->advertising &= ~(ADVERTISED_Pause |
            ADVERTISED_Asym_Pause);
-
- status = rd32(E1000_STATUS);
-
+ }
  if (status & E1000_STATUS_LU) {
-  if (hw->mac.type == e1000_i354) {
-   if ((status & E1000_STATUS_2P5_SKU) &&
-       !(status & E1000_STATUS_2P5_SKU_OVER)) {
-    ecmd->supported = SUPPORTED_2500baseX_Full;
-    ecmd->advertising = ADVERTISED_2500baseX_Full;
-    ecmd->speed = SPEED_2500;
-   } else {
-    ecmd->supported = SUPPORTED_1000baseT_Full;
-    ecmd->advertising = ADVERTISED_1000baseT_Full;
-   }
+  if ((status & E1000_STATUS_2P5_SKU) &&
+      !(status & E1000_STATUS_2P5_SKU_OVER)) {
+   ecmd->speed = SPEED_2500;
   } else if (status & E1000_STATUS_SPEED_1000) {
    ecmd->speed = SPEED_1000;
   } else if (status & E1000_STATUS_SPEED_100) {
@@ -232,7 +236,6 @@ static int igb_get_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)
   ecmd->speed = -1;
   ecmd->duplex = -1;
  }
-
  if ((hw->phy.media_type == e1000_media_type_fiber) ||
      hw->mac.autoneg)
   ecmd->autoneg = AUTONEG_ENABLE;
-- 
1.7.1