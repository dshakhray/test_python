From b8037d6ea14cfb6831c6a1003535cb93a68a6b1b Mon Sep 17 00:00:00 2001
From: Ewan Milne <emilne@redhat.com>
Date: Wed, 11 Jun 2014 19:11:37 -0400
Subject: [scsi] Add timeout to avoid infinite command retry

Message-id: <1402513897-28387-1-git-send-email-emilne@redhat.com>
Patchwork-id: 83677
O-Subject: [RHEL7.1 PATCH e-stor] [SCSI] Add timeout to avoid infinite command retry
Bugzilla: 1061871
RH-Acked-by: Bryn M. Reeves <bmr@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: David Milburn <dmilburn@redhat.com>

Tested: Hitachi claims this fixes the observed problem

Currently, scsi error handling in scsi_io_completion() tries to
unconditionally requeue scsi command when device keeps some error state.
For example, UNIT_ATTENTION causes infinite retry with
action == ACTION_RETRY.
This is because retryable errors are thought to be temporary and the scsi
device will soon recover from those errors. Normally, such retry policy is
appropriate because the device will soon recover from temporary error state.

But there is no guarantee that device is able to recover from error state
immediately. Some hardware error can prevent device from recovering.

This patch adds timeout in scsi_io_completion() to avoid infinite command
retry in scsi_io_completion(). Once scsi command retry time is longer than
this timeout, the command is treated as failure.

Signed-off-by: Eiichi Tsukata <eiichi.tsukata.xh@hitachi.com>
Signed-off-by: James Bottomley <JBottomley@Parallels.com>
(cherry picked from commit ee60b2c52ec8ecdcbcd2f85cc117b525f649441f)
Signed-off-by: Ewan D. Milne <emilne@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/scsi_lib.c b/drivers/scsi/scsi_lib.c
index 7fb2afe..ca5f750 100644
--- a/drivers/scsi/scsi_lib.c
+++ b/drivers/scsi/scsi_lib.c
@@ -822,6 +822,7 @@ void scsi_io_completion(struct scsi_cmnd *cmd, unsigned int good_bytes)
  enum {ACTION_FAIL, ACTION_REPREP, ACTION_RETRY,
        ACTION_DELAYED_RETRY} action;
  char *description = NULL;
+ unsigned long wait_for = (cmd->allowed + 1) * req->timeout;
 
  if (result) {
   sense_valid = scsi_command_normalize_sense(cmd, &sshdr);
@@ -1023,6 +1024,12 @@ void scsi_io_completion(struct scsi_cmnd *cmd, unsigned int good_bytes)
   action = ACTION_FAIL;
  }
 
+ if (action != ACTION_FAIL &&
+     time_before(cmd->jiffies_at_alloc + wait_for, jiffies)) {
+  action = ACTION_FAIL;
+  description = "Command timed out";
+ }
+
  switch (action) {
  case ACTION_FAIL:
   /* Give up and fail the remainder of the request */
-- 
1.7.1