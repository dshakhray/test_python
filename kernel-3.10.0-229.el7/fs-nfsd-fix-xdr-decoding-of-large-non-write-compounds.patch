From 4f453f59f6a82c64d6f21800fef1fa1ab11e766d Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Mon, 23 Jun 2014 21:49:03 -0400
Subject: [fs] nfsd: fix xdr decoding of large non-write compounds

Message-id: <1403560314-32525-2-git-send-email-bfields@redhat.com>
Patchwork-id: 84443
O-Subject: [Patch RHEL7 001/172] nfsd4: fix xdr decoding of large non-write compounds
Bugzilla: 1095061 1111719
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

This fixes a regression from 247500820ebd02ad87525db5d9b199e5b66f6636
"nfsd4: fix decoding of compounds across page boundaries".  The previous
code was correct: argp->pagelist is initialized in
nfs4svc_deocde_compoundargs to rqstp->rq_arg.pages, and is therefore a
pointer to the page *after* the page we are currently decoding.

The reason that patch nevertheless fixed a problem with decoding
compounds containing write was a bug in the write decoding introduced by
5a80a54d21c96590d013378d8c5f65f879451ab4 "nfsd4: reorganize write
decoding", after which write decoding no longer adhered to the rule that
argp->pagelist point to the next page.

RHEL7 note: 247500820ebd02ad87525db5d9b199e5b66f6636 was already applied
to RHEL7 as c4c87eb332298ff1f2f17173f77905fd2bbc7e62.

Cc: stable@vger.kernel.org
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream 365da4adebb1c012febf81019ad3dc5bb52e2a13
Bugzilla 1095061, 1111719
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4xdr.c b/fs/nfsd/nfs4xdr.c
index a1550ad..c6c727a 100644
--- a/fs/nfsd/nfs4xdr.c
+++ b/fs/nfsd/nfs4xdr.c
@@ -141,8 +141,8 @@ xdr_error:     \
 
 static void next_decode_page(struct nfsd4_compoundargs *argp)
 {
- argp->pagelist++;
  argp->p = page_address(argp->pagelist[0]);
+ argp->pagelist++;
  if (argp->pagelen < PAGE_SIZE) {
   argp->end = argp->p + (argp->pagelen>>2);
   argp->pagelen = 0;
@@ -1209,6 +1209,7 @@ nfsd4_decode_write(struct nfsd4_compoundargs *argp, struct nfsd4_write *write)
   len -= pages * PAGE_SIZE;
 
   argp->p = (__be32 *)page_address(argp->pagelist[0]);
+  argp->pagelist++;
   argp->end = argp->p + XDR_QUADLEN(PAGE_SIZE);
  }
  argp->p += XDR_QUADLEN(len);
-- 
1.7.1