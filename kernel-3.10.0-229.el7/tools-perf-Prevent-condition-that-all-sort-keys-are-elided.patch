From 7372759864a6095ba1faa99cc1bac41527c20614 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:27:36 -0400
Subject: [tools] perf: Prevent condition that all sort keys are elided

Message-id: <1408462094-14194-288-git-send-email-jolsa@redhat.com>
Patchwork-id: 88236
O-Subject: [PATCH RHEL7.1 BZ1131394 287/325] perf tools: Prevent condition that all sort keys are elided
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 7524f63b997cc02a80aa073558728ae3ee242cf8
Author: Namhyung Kim <namhyung.kim@lge.com>
Date: Fri Nov 8 17:53:42 2013 +0900

description
===========
If given sort keys are all elided there'll be no output except for the
overhead column - actually the TUI shows a noisy output.  In this case
it'd be better to show up the sort keys rather than elide.

Before:

  $ perf report -s comm -c perf
  (...)
  # Overhead
  # ........
  #
     100.00%

After:

  $ perf report -s comm -c perf
  (...)
  # Overhead  Command
  # ........  .......
  #
     100.00%     perf

[ Us curly braces around multi-line statements, as requested by Ingo Molnar ]
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/sort.c b/tools/perf/util/sort.c
index 3c1b75c..8b0bb1f 100644
--- a/tools/perf/util/sort.c
+++ b/tools/perf/util/sort.c
@@ -1137,6 +1137,8 @@ static void sort_entry__setup_elide(struct sort_entry *se,
 
 void sort__setup_elide(FILE *output)
 {
+ struct sort_entry *se;
+
  sort_entry__setup_elide(&sort_dso, symbol_conf.dso_list,
     "dso", output);
  sort_entry__setup_elide(&sort_comm, symbol_conf.comm_list,
@@ -1172,4 +1174,15 @@ void sort__setup_elide(FILE *output)
      "snoop", output);
  }
 
+ /*
+  * It makes no sense to elide all of sort entries.
+  * Just revert them to show up again.
+  */
+ list_for_each_entry(se, &hist_entry__sort_list, list) {
+  if (!se->elide)
+   return;
+ }
+
+ list_for_each_entry(se, &hist_entry__sort_list, list)
+  se->elide = false;
 }
-- 
1.7.1