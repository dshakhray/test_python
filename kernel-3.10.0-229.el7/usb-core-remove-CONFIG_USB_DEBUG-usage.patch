From a0d4a575a0aa2f5b74e654fbb2097a13d6a7248b Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:05:01 -0400
Subject: [usb] core: remove CONFIG_USB_DEBUG usage

Message-id: <1410887463-20674-230-git-send-email-dzickus@redhat.com>
Patchwork-id: 95243
O-Subject: [RHEL7 PATCH 229/591] USB: core: remove CONFIG_USB_DEBUG usage
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 3482528e9aced9234d4e2a4a9538c882a9aa5aa2
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Dec 19 15:42:20 2013 -0800

    USB: core: remove CONFIG_USB_DEBUG usage

    CONFIG_USB_DEBUG is going away, so remove the few places in the USB core
    that relied on them.

    This means that we always now do the "debug" checks for every urb
    submitted, which is a good idea, as who knows how many driver bugs we
    have been ignoring when people forget to enable this option.  Also, with
    the overall speed of USB, doing these extra checks should not cause any
    additional overhead.

    Also, no longer announce all devices being added to the system if
    CONFIG_USB_DEBUG is enabled, as it's not going to be around much longer.

    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/core/Makefile b/drivers/usb/core/Makefile
index 5e847ad..2f6f932 100644
--- a/drivers/usb/core/Makefile
+++ b/drivers/usb/core/Makefile
@@ -2,8 +2,6 @@
 # Makefile for USB Core files and filesystem
 #
 
-ccflags-$(CONFIG_USB_DEBUG) := -DDEBUG
-
 usbcore-y := usb.o hub.o hcd.o urb.o message.o driver.o
 usbcore-y += config.o file.o buffer.o sysfs.o endpoint.o
 usbcore-y += devio.o notify.o generic.o quirks.o devices.o
diff --git a/drivers/usb/core/hub.c b/drivers/usb/core/hub.c
index f309805..b9ee623 100644
--- a/drivers/usb/core/hub.c
+++ b/drivers/usb/core/hub.c
@@ -33,13 +33,6 @@
 
 #include "hub.h"
 
-/* if we are in debug mode, always announce new devices */
-#ifdef DEBUG
-#ifndef CONFIG_USB_ANNOUNCE_NEW_DEVICES
-#define CONFIG_USB_ANNOUNCE_NEW_DEVICES
-#endif
-#endif
-
 #define USB_VENDOR_GENESYS_LOGIC  0x05e3
 #define HUB_QUIRK_CHECK_PORT_AUTOSUSPEND 0x01
 
diff --git a/drivers/usb/core/urb.c b/drivers/usb/core/urb.c
index 07c58af..f4cb7fc 100644
--- a/drivers/usb/core/urb.c
+++ b/drivers/usb/core/urb.c
@@ -325,10 +325,14 @@ EXPORT_SYMBOL_GPL(usb_unanchor_urb);
  */
 int usb_submit_urb(struct urb *urb, gfp_t mem_flags)
 {
+ static int   pipetypes[4] = {
+  PIPE_CONTROL, PIPE_ISOCHRONOUS, PIPE_BULK, PIPE_INTERRUPT
+ };
  int    xfertype, max;
  struct usb_device  *dev;
  struct usb_host_endpoint *ep;
  int    is_out;
+ unsigned int   allowed;
 
  if (!urb || !urb->complete)
   return -EINVAL;
@@ -436,15 +440,10 @@ int usb_submit_urb(struct urb *urb, gfp_t mem_flags)
  if (urb->transfer_buffer_length > INT_MAX)
   return -EMSGSIZE;
 
-#ifdef DEBUG
- /* stuff that drivers shouldn't do, but which shouldn't
+ /*
+  * stuff that drivers shouldn't do, but which shouldn't
   * cause problems in HCDs if they get it wrong.
   */
- {
- unsigned int allowed;
- static int pipetypes[4] = {
-  PIPE_CONTROL, PIPE_ISOCHRONOUS, PIPE_BULK, PIPE_INTERRUPT
- };
 
  /* Check that the pipe's type matches the endpoint's type */
  if (usb_pipetype(urb->pipe) != pipetypes[xfertype])
@@ -476,8 +475,7 @@ int usb_submit_urb(struct urb *urb, gfp_t mem_flags)
  if (allowed != urb->transfer_flags)
   dev_WARN(&dev->dev, "BOGUS urb flags, %x --> %x\n",
    urb->transfer_flags, allowed);
- }
-#endif
+
  /*
   * Force periodic transfer intervals to be legal values that are
   * a power of two (so HCDs don't need to).
-- 
1.7.1