From d1cd474c20c4d5415bc30b7cae53ed2d10696568 Mon Sep 17 00:00:00 2001
From: Jeff Moyer <jmoyer@redhat.com>
Date: Thu, 28 Aug 2014 19:15:57 -0400
Subject: [virt] virtio_blk: virtqueue_kick() must be ordered with other virtqueue operations

Message-id: <1409253371-23161-8-git-send-email-jmoyer@redhat.com>
Patchwork-id: 89866
O-Subject: [RHEL7 PATCH 07/21] virtio-blk: virtqueue_kick() must be ordered with other virtqueue operations
Bugzilla: 1105698
RH-Acked-by: Fam Zheng <famz@redhat.com>

This is a backport of the following upstream commit.
Related to bug 1105698.

  commit f02b9ac35a47dff745c7637fbc095f01cc03646e
  Author: Shaohua Li <shli@fusionio.com>
  Date:   Tue Nov 19 18:57:24 2013 -0700

    virtio-blk: virtqueue_kick() must be ordered with other virtqueue operations

    It isn't safe to call it without holding the vblk->vq_lock.

    Reported-by: Dave Chinner <david@fromorbit.com>
    Signed-off-by: Shaohua Li <shli@fusionio.com>

    Fixed another condition of virtqueue_kick() not holding the lock.

    Signed-off-by: Jens Axboe <axboe@kernel.dk>

Signed-off-by: Jeff Moyer <jmoyer@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/block/virtio_blk.c b/drivers/block/virtio_blk.c
index 588479d..6a680d4 100644
--- a/drivers/block/virtio_blk.c
+++ b/drivers/block/virtio_blk.c
@@ -199,15 +199,16 @@ static int virtio_queue_rq(struct blk_mq_hw_ctx *hctx, struct request *req)
 
  spin_lock_irqsave(&vblk->vq_lock, flags);
  if (__virtblk_add_req(vblk->vq, vbr, vbr->sg, num) < 0) {
+  virtqueue_kick(vblk->vq);
   spin_unlock_irqrestore(&vblk->vq_lock, flags);
   blk_mq_stop_hw_queue(hctx);
-  virtqueue_kick(vblk->vq);
   return BLK_MQ_RQ_QUEUE_BUSY;
  }
- spin_unlock_irqrestore(&vblk->vq_lock, flags);
 
  if (last)
   virtqueue_kick(vblk->vq);
+
+ spin_unlock_irqrestore(&vblk->vq_lock, flags);
  return BLK_MQ_RQ_QUEUE_OK;
 }
 
-- 
1.7.1