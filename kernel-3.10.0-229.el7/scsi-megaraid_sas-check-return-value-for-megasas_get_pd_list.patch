From f944fa203ef01a76a2d2b3921911ddfcb6fc45b3 Mon Sep 17 00:00:00 2001
From: Tomas Henzl <thenzl@redhat.com>
Date: Thu, 18 Sep 2014 14:14:06 -0400
Subject: [scsi] megaraid_sas: check return value for megasas_get_pd_list()

Message-id: <1411049668-28841-7-git-send-email-thenzl@redhat.com>
Patchwork-id: 96149
O-Subject: [RHEL7.1 e-stor PATCH 06/28] megaraid_sas: check return value for megasas_get_pd_list()
Bugzilla: 1088523
RH-Acked-by: Ewan Milne <emilne@redhat.com>
RH-Acked-by: Rob Evers <revers@redhat.com>

When megasas_get_pd_list() fails we cannot detect any drives,
so we should be checking the return value accordingly.

[jejb: checkpatch fix]
Signed-off-by: Hannes Reinecke <hare@suse.de>
Acked-by: Kashyap Desai <kashyap.desai@lsi.com>
Signed-off-by: James Bottomley <JBottomley@Parallels.com>

(cherry picked from commit 58968fc8fbb3869d9ec84d32b88b58b0423d6793)
---
 drivers/scsi/megaraid/megaraid_sas_base.c | 38 +++++++++++++++++--------------
 1 file changed, 21 insertions(+), 17 deletions(-)

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/megaraid/megaraid_sas_base.c b/drivers/scsi/megaraid/megaraid_sas_base.c
index 030a844..ff5bc26 100644
--- a/drivers/scsi/megaraid/megaraid_sas_base.c
+++ b/drivers/scsi/megaraid/megaraid_sas_base.c
@@ -3780,7 +3780,10 @@ static int megasas_init_fw(struct megasas_instance *instance)
 
  memset(instance->pd_list, 0 ,
   (MEGASAS_MAX_PD * sizeof(struct megasas_pd_list)));
- megasas_get_pd_list(instance);
+ if (megasas_get_pd_list(instance) < 0) {
+  printk(KERN_ERR "megasas: failed to get PD list\n");
+  goto fail_init_adapter;
+ }
 
  memset(instance->ld_ids, 0xff, MEGASAS_MAX_LD_IDS);
  if (megasas_ld_list_query(instance,
@@ -5669,22 +5672,23 @@ megasas_aen_polling(struct work_struct *work)
 
  if (doscan) {
   printk(KERN_INFO "scanning ...\n");
-  megasas_get_pd_list(instance);
-  for (i = 0; i < MEGASAS_MAX_PD_CHANNELS; i++) {
-   for (j = 0; j < MEGASAS_MAX_DEV_PER_CHANNEL; j++) {
-    pd_index = i*MEGASAS_MAX_DEV_PER_CHANNEL + j;
-    sdev1 = scsi_device_lookup(host, i, j, 0);
-    if (instance->pd_list[pd_index].driveState ==
-       MR_PD_STATE_SYSTEM) {
-     if (!sdev1) {
-      scsi_add_device(host, i, j, 0);
-     }
-     if (sdev1)
-      scsi_device_put(sdev1);
-    } else {
-     if (sdev1) {
-      scsi_remove_device(sdev1);
-      scsi_device_put(sdev1);
+  if (megasas_get_pd_list(instance) == 0) {
+   for (i = 0; i < MEGASAS_MAX_PD_CHANNELS; i++) {
+    for (j = 0; j < MEGASAS_MAX_DEV_PER_CHANNEL; j++) {
+     pd_index = i*MEGASAS_MAX_DEV_PER_CHANNEL + j;
+     sdev1 = scsi_device_lookup(host, i, j, 0);
+     if (instance->pd_list[pd_index].driveState ==
+         MR_PD_STATE_SYSTEM) {
+      if (!sdev1) {
+       scsi_add_device(host, i, j, 0);
+      }
+      if (sdev1)
+       scsi_device_put(sdev1);
+     } else {
+      if (sdev1) {
+       scsi_remove_device(sdev1);
+       scsi_device_put(sdev1);
+      }
      }
     }
    }
-- 
1.7.1