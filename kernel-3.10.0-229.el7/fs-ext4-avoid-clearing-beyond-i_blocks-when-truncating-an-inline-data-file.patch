From 7314b594c662b68517ca5b8e2e4966bd9d927a78 Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 23 Oct 2014 09:54:12 -0400
Subject: [fs] ext4: avoid clearing beyond i_blocks when truncating an inline data file

Message-id: <1414058125-4183-99-git-send-email-lczerner@redhat.com>
Patchwork-id: 98187
O-Subject: [RHEL 7.1 PATCH v2 098/171] ext4: avoid clearing beyond i_blocks when truncating an inline data file
Bugzilla: 1150139
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Theodore Ts'o <tytso@mit.edu>

BZ 1150139
https://bugzilla.redhat.com/show_bug.cgi?id=1150139

BREW 8142710
https://brewweb.devel.redhat.com/taskinfo?taskID=8142710

Upstream commit 09c455aaa8f47a94d5bafaa23d58365768210507

 A missing cast means that when we are truncating a file which is less
 than 60 bytes, we don't clear the correct area of memory, and in fact
 we can end up truncating the next inode in the inode table, or worse
 yet, some other kernel data structure.

 Addresses-Coverity-Id: #751987

 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
 Cc: stable@vger.kernel.org
 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/inline.c b/fs/ext4/inline.c
index 8625d10..43648fe 100644
--- a/fs/ext4/inline.c
+++ b/fs/ext4/inline.c
@@ -1960,9 +1960,11 @@ void ext4_inline_data_truncate(struct inode *inode, int *has_inline)
   }
 
   /* Clear the content within i_blocks. */
-  if (i_size < EXT4_MIN_INLINE_DATA_SIZE)
-   memset(ext4_raw_inode(&is.iloc)->i_block + i_size, 0,
-     EXT4_MIN_INLINE_DATA_SIZE - i_size);
+  if (i_size < EXT4_MIN_INLINE_DATA_SIZE) {
+   void *p = (void *) ext4_raw_inode(&is.iloc)->i_block;
+   memset(p + i_size, 0,
+          EXT4_MIN_INLINE_DATA_SIZE - i_size);
+  }
 
   EXT4_I(inode)->i_inline_size = i_size <
      EXT4_MIN_INLINE_DATA_SIZE ?
-- 
1.7.1