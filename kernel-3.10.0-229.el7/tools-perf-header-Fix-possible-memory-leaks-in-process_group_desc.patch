From a0ce8702d3197b6c21ef09a0620e5ab71e560e41 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:28:11 -0400
Subject: [tools] perf/header: Fix possible memory leaks in process_group_desc()

Message-id: <1408462094-14194-323-git-send-email-jolsa@redhat.com>
Patchwork-id: 88263
O-Subject: [PATCH RHEL7.1 BZ1131394 322/325] perf header: Fix possible memory leaks in process_group_desc()
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 50a2740b839ece03b305facd3fc07cdc3b74247c
Author: Namhyung Kim <namhyung.kim@lge.com>
Date: Mon Nov 18 11:20:44 2013 +0900

description
===========
After processing all group descriptors or encountering an error, it
frees all descriptors.  However, current logic can leak memory since it
might not traverse all descriptors.

Note that the 'i' can have different value than nr_groups when an error
occurred and it's safe to call free(desc[i].name) for every desc since
we already make it NULL when it's reused for group names.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/header.c b/tools/perf/util/header.c
index 559c516..1cd0357 100644
--- a/tools/perf/util/header.c
+++ b/tools/perf/util/header.c
@@ -2107,7 +2107,7 @@ static int process_group_desc(struct perf_file_section *section __maybe_unused,
 
  ret = 0;
 out_free:
- while ((int) --i >= 0)
+ for (i = 0; i < nr_groups; i++)
   free(desc[i].name);
  free(desc);
 
-- 
1.7.1