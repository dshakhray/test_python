From 42775e088acc4180542b84313f644fff422e9fa0 Mon Sep 17 00:00:00 2001
From: Dave Young <dyoung@redhat.com>
Date: Thu, 22 May 2014 02:43:21 -0400
Subject: [x86] efi: Style neatening

Message-id: <1400726607-13717-30-git-send-email-dyoung@redhat.com>
Patchwork-id: 80130
O-Subject: [RHEL7.1 PATCH 29/35] x86/efi: Style neatening
Bugzilla: 1080109
RH-Acked-by: Chao WANG <chaowang@redhat.com>
RH-Acked-by: Vivek Goyal <vgoyal@redhat.com>

Resolves: bz1080109

Brew build:
https://brewweb.devel.redhat.com/taskinfo?taskID=7480539

Test: Tested kexec/kdump on HP workstation and qemu.

Upstream commit:
commit 9b7d204982cf6e4e5b9b0f8bff151e48250cce58
Author: Joe Perches <joe@perches.com>
Date:   Fri Jan 3 16:08:48 2014 -0800

    x86/efi: Style neatening

    Coalesce formats and remove spaces before tabs.
    Move __initdata after the variable declaration.

    Signed-off-by: Joe Perches <joe@perches.com>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/platform/efi/efi.c b/arch/x86/platform/efi/efi.c
index 7ed3ecf..44d2a0e 100644
--- a/arch/x86/platform/efi/efi.c
+++ b/arch/x86/platform/efi/efi.c
@@ -69,7 +69,7 @@ static efi_system_table_t efi_systab __initdata;
 
 unsigned long x86_efi_facility;
 
-static __initdata efi_config_table_type_t arch_tables[] = {
+static efi_config_table_type_t arch_tables[] __initdata = {
 #ifdef CONFIG_X86_UV
  {UV_SYSTEM_TABLE_GUID, "UVsystab", &efi.uv_systab},
 #endif
@@ -87,7 +87,7 @@ int efi_enabled(int facility)
 }
 EXPORT_SYMBOL(efi_enabled);
 
-static bool __initdata disable_runtime = false;
+static bool disable_runtime __initdata = false;
 static int __init setup_noefi(char *arg)
 {
  disable_runtime = true;
@@ -274,9 +274,9 @@ static efi_status_t __init phys_efi_get_time(efi_time_t *tm,
 int efi_set_rtc_mmss(const struct timespec *now)
 {
  unsigned long nowtime = now->tv_sec;
- efi_status_t  status;
- efi_time_t  eft;
- efi_time_cap_t  cap;
+ efi_status_t status;
+ efi_time_t eft;
+ efi_time_cap_t cap;
  struct rtc_time tm;
 
  status = efi.get_time(&eft, &cap);
@@ -294,9 +294,8 @@ int efi_set_rtc_mmss(const struct timespec *now)
   eft.second = tm.tm_sec;
   eft.nanosecond = 0;
  } else {
-  printk(KERN_ERR
-         "%s: Invalid EFI RTC value: write of %lx to EFI RTC failed\n",
-         __FUNCTION__, nowtime);
+  pr_err("%s: Invalid EFI RTC value: write of %lx to EFI RTC failed\n",
+         __func__, nowtime);
   return -1;
  }
 
@@ -412,8 +411,7 @@ static void __init print_efi_memmap(void)
       p < memmap.map_end;
       p += memmap.desc_size, i++) {
   md = p;
-  pr_info("mem%02u: type=%u, attr=0x%llx, "
-   "range=[0x%016llx-0x%016llx) (%lluMB)\n",
+  pr_info("mem%02u: type=%u, attr=0x%llx, range=[0x%016llx-0x%016llx) (%lluMB)\n",
    i, md->type, md->attribute, md->phys_addr,
    md->phys_addr + (md->num_pages << EFI_PAGE_SHIFT),
    (md->num_pages >> (20 - EFI_PAGE_SHIFT)));
@@ -445,9 +443,8 @@ void __init efi_reserve_boot_services(void)
    memblock_is_region_reserved(start, size)) {
    /* Could not reserve, skip it */
    md->num_pages = 0;
-   memblock_dbg("Could not reserve boot range "
-     "[0x%010llx-0x%010llx]\n",
-      start, start+size-1);
+   memblock_dbg("Could not reserve boot range [0x%010llx-0x%010llx]\n",
+         start, start+size-1);
   } else
    memblock_reserve(start, size);
  }
@@ -583,8 +580,7 @@ static int __init efi_systab_init(void *phys)
   return -EINVAL;
  }
  if ((efi.systab->hdr.revision >> 16) == 0)
-  pr_err("Warning: System table version "
-         "%d.%02d, expected 1.00 or greater!\n",
+  pr_err("Warning: System table version %d.%02d, expected 1.00 or greater!\n",
          efi.systab->hdr.revision >> 16,
          efi.systab->hdr.revision & 0xffff);
 
-- 
1.7.1