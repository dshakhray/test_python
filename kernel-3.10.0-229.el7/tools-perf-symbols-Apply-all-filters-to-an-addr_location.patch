From b946c71470d427c3b0ab7b01255a7e267c227f28 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:05:51 -0400
Subject: [tools] perf/symbols: Apply all filters to an addr_location

Message-id: <1410181752-25631-107-git-send-email-jolsa@redhat.com>
Patchwork-id: 91857
O-Subject: [PATCH RHEL7.1 BZ1134356 106/307] perf symbols: Apply all filters to an addr_location
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit 466fa7647413665dcba46c4f7f2b4a9808426989
Author: Namhyung Kim <namhyung@kernel.org>
Date: Mon Mar 17 17:12:27 2014 -0300

description
===========
Instead of bailing out as soon as we find a filter that applies, go on
checking all of them so that we can zoom in/out filters.

We also need to make sure we only update al->filtered after
thread__find_addr_map(), because there is where al->filtered gets
initialized to zero.

This will increase the cost of processing when all we don't need this
toggling, but will provide flexibility for the TUI and GTK+ interfaces,
that will incur in creating the hist_entries just once.

[ yanked this out of a previous patch ]
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/event.c b/tools/perf/util/event.c
index 0da09db..ebb48a6 100644
--- a/tools/perf/util/event.c
+++ b/tools/perf/util/event.c
@@ -793,11 +793,6 @@ int perf_event__preprocess_sample(const union perf_event *event,
  if (thread == NULL)
   return -1;
 
- if (thread__is_filtered(thread)) {
-  al->filtered |= (1 << HIST_FILTER__THREAD);
-  goto out_filtered;
- }
-
  dump_printf(" ... thread: %s:%d\n", thread__comm_str(thread), thread->tid);
  /*
   * Have we already created the kernel maps for this machine?
@@ -815,6 +810,10 @@ int perf_event__preprocess_sample(const union perf_event *event,
  dump_printf(" ...... dso: %s\n",
       al->map ? al->map->dso->long_name :
    al->level == 'H' ? "[hypervisor]" : "<not found>");
+
+ if (thread__is_filtered(thread))
+  al->filtered |= (1 << HIST_FILTER__THREAD);
+
  al->sym = NULL;
  al->cpu = sample->cpu;
 
@@ -828,7 +827,6 @@ int perf_event__preprocess_sample(const union perf_event *event,
     strlist__has_entry(symbol_conf.dso_list,
          dso->long_name))))) {
    al->filtered |= (1 << HIST_FILTER__DSO);
-   goto out_filtered;
   }
 
   al->sym = map__find_symbol(al->map, al->addr,
@@ -839,11 +837,7 @@ int perf_event__preprocess_sample(const union perf_event *event,
   (!al->sym || !strlist__has_entry(symbol_conf.sym_list,
       al->sym->name))) {
   al->filtered |= (1 << HIST_FILTER__SYMBOL);
-  goto out_filtered;
  }
 
  return 0;
-
-out_filtered:
- return 0;
 }
-- 
1.7.1