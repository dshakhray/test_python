From 17078eeb0cd89a2c7e61849c7b575184dee11eb2 Mon Sep 17 00:00:00 2001
From: Rik van Riel <riel@redhat.com>
Date: Fri, 5 Sep 2014 14:17:03 -0400
Subject: [kernel] sched: make lockless sys_times kABI-friendly

Message-id: <1409926623-25929-8-git-send-email-riel@redhat.com>
Patchwork-id: 91458
O-Subject: [RHEL7 PATCH 7/7] fix kABI breakage of previous patches
Bugzilla: 1120307
RH-Acked-by: Larry Woodman <lwoodman@redhat.com>
RH-Acked-by: Stanislaw Gruszka <sgruszka@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

From: Rik van Riel <riel@redhat.com>

Upstream status: RHEL only

Fixes bug 1120307

Move the stats_lock from the upstream location to one of the
rh_reserved fields, to avoid kABI breakage.

Signed-off-by: Rik van Riel <riel@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/linux/sched.h b/include/linux/sched.h
index cfe2011..869c96c 100644
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -567,7 +567,6 @@ struct signal_struct {
   * Live threads maintain their own counters and add to these
   * in __exit_signal, except for the group leader.
   */
- seqlock_t stats_lock;
  cputime_t utime, stime, cutime, cstime;
  cputime_t gtime;
  cputime_t cgtime;
@@ -633,7 +632,11 @@ struct signal_struct {
       * (notably. ptrace) */
 
  /* reserved for Red Hat */
+#ifdef __GENKSYMS__
  unsigned long rh_reserved1;
+#else
+ seqlock_t stats_lock;
+#endif
  unsigned long rh_reserved2;
  unsigned long rh_reserved3;
  unsigned long rh_reserved4;
-- 
1.7.1