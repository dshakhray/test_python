From 10bde58c0c563fd48a55f69b6d73a8c0e4ce0b26 Mon Sep 17 00:00:00 2001
From: David Howells <dhowells@redhat.com>
Date: Tue, 25 Nov 2014 16:34:08 -0500
Subject: [mm] shmem: support RENAME_NOREPLACE

Message-id: <20141125163408.18115.52159.stgit@warthog.procyon.org.uk>
Patchwork-id: 100917
O-Subject: [PATCH 17/47] shmem: support RENAME_NOREPLACE
Bugzilla: 985875
RH-Acked-by: Steve Best <sbest@redhat.com>

From: Miklos Szeredi <mszeredi@suse.cz>

Implement ->rename2 instead of ->rename.

Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
Acked-by: Hugh Dickins <hughd@google.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
Original-commit: 3b69ff51d087d265aa4af3a532fc4f20bf33e718
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/mm/shmem.c b/mm/shmem.c
index e0948cb..e49891c 100644
--- a/mm/shmem.c
+++ b/mm/shmem.c
@@ -2058,11 +2058,14 @@ static int shmem_rmdir(struct inode *dir, struct dentry *dentry)
  * it exists so that the VFS layer correctly free's it when it
  * gets overwritten.
  */
-static int shmem_rename(struct inode *old_dir, struct dentry *old_dentry, struct inode *new_dir, struct dentry *new_dentry)
+static int shmem_rename2(struct inode *old_dir, struct dentry *old_dentry, struct inode *new_dir, struct dentry *new_dentry, unsigned int flags)
 {
  struct inode *inode = old_dentry->d_inode;
  int they_are_dirs = S_ISDIR(inode->i_mode);
 
+ if (flags & ~(RENAME_NOREPLACE))
+  return -EINVAL;
+
  if (!simple_empty(new_dentry))
   return -ENOTEMPTY;
 
@@ -2742,7 +2745,7 @@ static const struct inode_operations shmem_dir_inode_operations = {
  .mkdir  = shmem_mkdir,
  .rmdir  = shmem_rmdir,
  .mknod  = shmem_mknod,
- .rename  = shmem_rename,
+ .rename2 = shmem_rename2,
 #endif
 #ifdef CONFIG_TMPFS_XATTR
  .setxattr = shmem_setxattr,
-- 
1.7.1