From 79c1a92694c995bca01ade96c97a409e019e4302 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:07:27 -0400
Subject: [usb] uas: fix GFP_NOIO under spinlock

Message-id: <1410887463-20674-376-git-send-email-dzickus@redhat.com>
Patchwork-id: 95433
O-Subject: [RHEL7 PATCH 375/591] uas: fix GFP_NOIO under spinlock
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit e7eda9329372f5e436e5a9291eb115eab0feae02
Author: Oliver Neukum <oneukum@suse.de>
Date:   Fri Mar 28 11:10:30 2014 +0100

    uas: fix GFP_NOIO under spinlock

    Quote Dan:

    The patch e36e64930cff: "uas: Use GFP_NOIO rather then GFP_ATOMIC
    where possible" from Nov 7, 2013, leads to the following static
    checker warning:

            drivers/usb/storage/uas.c:806 uas_eh_task_mgmt()
            error: scheduling with locks held: 'spin_lock:lock'

    Some other allocations under spinlock are not caught.
    The fix essentially reverts e36e64930cffd94e1c37fdb82f35989384aa946b

    Signed-off-by: Oliver Neukum <oliver@neukum.org>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/storage/uas.c b/drivers/usb/storage/uas.c
index a7ac97c..8f42226 100644
--- a/drivers/usb/storage/uas.c
+++ b/drivers/usb/storage/uas.c
@@ -137,7 +137,7 @@ static void uas_do_work(struct work_struct *work)
   if (!(cmdinfo->state & IS_IN_WORK_LIST))
    continue;
 
-  err = uas_submit_urbs(cmnd, cmnd->device->hostdata, GFP_NOIO);
+  err = uas_submit_urbs(cmnd, cmnd->device->hostdata, GFP_ATOMIC);
   if (!err)
    cmdinfo->state &= ~IS_IN_WORK_LIST;
   else
@@ -803,7 +803,7 @@ static int uas_eh_task_mgmt(struct scsi_cmnd *cmnd,
 
  devinfo->running_task = 1;
  memset(&devinfo->response, 0, sizeof(devinfo->response));
- sense_urb = uas_submit_sense_urb(cmnd, GFP_NOIO,
+ sense_urb = uas_submit_sense_urb(cmnd, GFP_ATOMIC,
       devinfo->use_streams ? tag : 0);
  if (!sense_urb) {
   shost_printk(KERN_INFO, shost,
@@ -813,7 +813,7 @@ static int uas_eh_task_mgmt(struct scsi_cmnd *cmnd,
   spin_unlock_irqrestore(&devinfo->lock, flags);
   return FAILED;
  }
- if (uas_submit_task_urb(cmnd, GFP_NOIO, function, tag)) {
+ if (uas_submit_task_urb(cmnd, GFP_ATOMIC, function, tag)) {
   shost_printk(KERN_INFO, shost,
         "%s: %s: submit task mgmt urb failed\n",
         __func__, fname);
-- 
1.7.1