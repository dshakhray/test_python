From d277dc538fed52455a577ca9711b63fbb1123735 Mon Sep 17 00:00:00 2001
From: Ivan Vecera <ivecera@redhat.com>
Date: Tue, 9 Sep 2014 16:43:58 -0400
Subject: [net] ethtool: Replace ethtool_ops::{get, set}_rxfh_indir() with {get, set}_rxfh()

Message-id: <1410281038-18639-1-git-send-email-ivecera@redhat.com>
Patchwork-id: 93461
O-Subject: [RHEL7.1 PATCH v3 09/10] ethtool: Replace ethtool_ops::{get, set}_rxfh_indir() with {get, set}_rxfh()
Bugzilla: 1138823
RH-Acked-by: Michal Schmidt <mschmidt@redhat.com>
RH-Acked-by: Jarod Wilson <jarod@redhat.com>
RH-Acked-by: Jiri Benc <jbenc@redhat.com>

BZ: #1138823

Upstream commit(s):
commit fe62d001372388abb15a324148c913f9b43722a8
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Thu May 15 01:25:27 2014 +0100

    ethtool: Replace ethtool_ops::{get,set}_rxfh_indir() with {get,set}_rxfh()

    ETHTOOL_{G,S}RXFHINDIR and ETHTOOL_{G,S}RSSH should work for drivers
    regardless of whether they expose the hash key, unless you try to
    set a hash key for a driver that doesn't expose it.

    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Acked-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>

Changes:
v2 - warning moved to register_netdevice()
v3 - v2 was formatted from bad branch

Signed-off-by: Ivan Vecera <ivecera@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/core/dev.c b/net/core/dev.c
index 32412b0..9a2a871 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -5449,6 +5449,15 @@ int register_netdevice(struct net_device *dev)
   */
  dev->mpls_features |= NETIF_F_SG;
 
+ /* Drivers implementing new {get,set}_rxfh() should not implement
+  * {get,set}_rxfh_indir()
+  */
+ WARN_ON(dev->ethtool_ops &&
+  ((dev->ethtool_ops->get_rxfh &&
+    dev->ethtool_ops->get_rxfh_indir) ||
+   (dev->ethtool_ops->set_rxfh &&
+    dev->ethtool_ops->set_rxfh_indir)));
+
  ret = call_netdevice_notifiers(NETDEV_POST_INIT, dev);
  ret = notifier_to_errno(ret);
  if (ret)
diff --git a/net/core/ethtool.c b/net/core/ethtool.c
index 33196f0..93aa993 100644
--- a/net/core/ethtool.c
+++ b/net/core/ethtool.c
@@ -571,7 +571,8 @@ static noinline_for_stack int ethtool_get_rxfh_indir(struct net_device *dev,
  int ret;
 
  if (!dev->ethtool_ops->get_rxfh_indir_size ||
-     !dev->ethtool_ops->get_rxfh_indir)
+     (!dev->ethtool_ops->get_rxfh_indir &&
+      !dev->ethtool_ops->get_rxfh))
   return -EOPNOTSUPP;
  dev_size = dev->ethtool_ops->get_rxfh_indir_size(dev);
  if (dev_size == 0)
@@ -597,7 +598,9 @@ static noinline_for_stack int ethtool_get_rxfh_indir(struct net_device *dev,
  if (!indir)
   return -ENOMEM;
 
- ret = dev->ethtool_ops->get_rxfh_indir(dev, indir);
+ ret = dev->ethtool_ops->get_rxfh ?
+  dev->ethtool_ops->get_rxfh(dev, indir, NULL) :
+  dev->ethtool_ops->get_rxfh_indir(dev, indir);
  if (ret)
   goto out;
 
@@ -621,8 +624,8 @@ static noinline_for_stack int ethtool_set_rxfh_indir(struct net_device *dev,
  int ret;
  u32 ringidx_offset = offsetof(struct ethtool_rxfh_indir, ring_index[0]);
 
- if (!ops->get_rxfh_indir_size || !ops->set_rxfh_indir ||
-     !ops->get_rxnfc)
+ if (!ops->get_rxfh_indir_size ||
+     (!ops->set_rxfh && !ops->set_rxfh_indir) || !ops->get_rxnfc)
   return -EOPNOTSUPP;
 
  dev_size = ops->get_rxfh_indir_size(dev);
@@ -658,7 +661,8 @@ static noinline_for_stack int ethtool_set_rxfh_indir(struct net_device *dev,
    goto out;
  }
 
- ret = ops->set_rxfh_indir(dev, indir);
+ ret = ops->set_rxfh ? ops->set_rxfh(dev, indir, NULL) :
+  ops->set_rxfh_indir(dev, indir);
 
 out:
  kfree(indir);
-- 
1.7.1