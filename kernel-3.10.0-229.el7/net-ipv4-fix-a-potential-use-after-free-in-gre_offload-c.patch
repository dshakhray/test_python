From 26f0680cb90e6746857a6d36d6f169f7549b78a0 Mon Sep 17 00:00:00 2001
From: Alexander Duyck <alexander.h.duyck@redhat.com>
Date: Fri, 31 Oct 2014 19:06:21 -0400
Subject: [net] ipv4: fix a potential use after free in gre_offload.c

Message-id: <20141031190621.8251.29542.stgit@ahduyck-vm-rhel7>
Patchwork-id: 98654
O-Subject: [RHEL7.1 net PATCH 2/7] ipv4: fix a potential use after free in gre_offload.c
Bugzilla: 1151886 1152368
RH-Acked-by: Florian Westphal <fwestpha@redhat.com>
RH-Acked-by: Hannes Frederic Sowa <hannes@redhat.com>
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>

Bugzilla: 1151886
Brew Build: 8179440

Backport of upstream commit: b4e3cef703fb21b26db053a770900f2bd910638b

 commit b4e3cef703fb21b26db053a770900f2bd910638b
 Author: Li RongQing <roy.qing.li@gmail.com>
 Date:   Sat Oct 18 17:26:04 2014 +0800

    ipv4: fix a potential use after free in gre_offload.c

    pskb_may_pull() may change skb->data and make greh pointer oboslete;
    so need to reassign greh;
    but since first calling pskb_may_pull already ensured that skb->data
    has enough space for greh, so move the reference of greh before second
    calling pskb_may_pull(), to avoid reassign greh.

    Fixes: 7a7ffbabf9("ipv4: fix tunneled VM traffic over hw VXLAN/GRE GSO NIC")
    Cc: Wei-Chun Chao <weichunc@plumgrid.com>
    Signed-off-by: Li RongQing <roy.qing.li@gmail.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Alexander Duyck <alexander.h.duyck@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ipv4/gre_offload.c b/net/ipv4/gre_offload.c
index fdaace3..1e35e35 100644
--- a/net/ipv4/gre_offload.c
+++ b/net/ipv4/gre_offload.c
@@ -59,13 +59,13 @@ static struct sk_buff *gre_gso_segment(struct sk_buff *skb,
  if (csum)
   skb->encap_hdr_csum = 1;
 
- if (unlikely(!pskb_may_pull(skb, ghl)))
-  goto out;
-
  /* setup inner skb. */
  skb->protocol = greh->protocol;
  skb->encapsulation = 0;
 
+ if (unlikely(!pskb_may_pull(skb, ghl)))
+  goto out;
+
  __skb_pull(skb, ghl);
  skb_reset_mac_header(skb);
  skb_set_network_header(skb, skb_inner_network_offset(skb));
-- 
1.7.1