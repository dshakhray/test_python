From c14a1ce5f5c4c67295bfef00561a9389f79296be Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:05:48 -0400
Subject: [usb] xhci: make warnings greppable

Message-id: <1410887463-20674-277-git-send-email-dzickus@redhat.com>
Patchwork-id: 95679
O-Subject: [RHEL7 PATCH 276/591] xhci: make warnings greppable
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit e587b8b270d3706147c806d42cc4ac78232caac7
Author: Oliver Neukum <oneukum@suse.de>
Date:   Wed Jan 8 17:13:11 2014 +0100

    xhci: make warnings greppable

    This changes debug messages and warnings in xhci-ring.c
    to be on a single line so grep can find them. grep must
    have precedence over the 80 column limit.

    [Sarah fixed two checkpatch.pl issues with split lines
    introduced by this commit.]

    Signed-off-by: Oliver Neukum <oneukum@suse.de>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/host/xhci-ring.c b/drivers/usb/host/xhci-ring.c
index afa28ce..37386e5 100644
--- a/drivers/usb/host/xhci-ring.c
+++ b/drivers/usb/host/xhci-ring.c
@@ -1081,8 +1081,7 @@ static void xhci_handle_cmd_set_deq(struct xhci_hcd *xhci, int slot_id,
 
  ep_ring = xhci_stream_id_to_ring(dev, ep_index, stream_id);
  if (!ep_ring) {
-  xhci_warn(xhci, "WARN Set TR deq ptr command for "
-    "freed stream ID %u\n",
+  xhci_warn(xhci, "WARN Set TR deq ptr command for freed stream ID %u\n",
     stream_id);
   /* XXX: Harmless??? */
   dev->eps[ep_index].ep_state &= ~SET_DEQ_PENDING;
@@ -1098,12 +1097,10 @@ static void xhci_handle_cmd_set_deq(struct xhci_hcd *xhci, int slot_id,
 
   switch (cmd_comp_code) {
   case COMP_TRB_ERR:
-   xhci_warn(xhci, "WARN Set TR Deq Ptr cmd invalid because "
-     "of stream ID configuration\n");
+   xhci_warn(xhci, "WARN Set TR Deq Ptr cmd invalid because of stream ID configuration\n");
    break;
   case COMP_CTX_STATE:
-   xhci_warn(xhci, "WARN Set TR Deq Ptr cmd failed due "
-     "to incorrect slot or ep state.\n");
+   xhci_warn(xhci, "WARN Set TR Deq Ptr cmd failed due to incorrect slot or ep state.\n");
    ep_state = le32_to_cpu(ep_ctx->ep_info);
    ep_state &= EP_STATE_MASK;
    slot_state = le32_to_cpu(slot_ctx->dev_state);
@@ -1113,13 +1110,12 @@ static void xhci_handle_cmd_set_deq(struct xhci_hcd *xhci, int slot_id,
      slot_state, ep_state);
    break;
   case COMP_EBADSLT:
-   xhci_warn(xhci, "WARN Set TR Deq Ptr cmd failed because "
-     "slot %u was not enabled.\n", slot_id);
+   xhci_warn(xhci, "WARN Set TR Deq Ptr cmd failed because slot %u was not enabled.\n",
+     slot_id);
    break;
   default:
-   xhci_warn(xhci, "WARN Set TR Deq Ptr cmd with unknown "
-     "completion code of %u.\n",
-      cmd_comp_code);
+   xhci_warn(xhci, "WARN Set TR Deq Ptr cmd with unknown completion code of %u.\n",
+     cmd_comp_code);
    break;
   }
   /* OK what do we do now?  The endpoint state is hosed, and we
@@ -1141,8 +1137,7 @@ static void xhci_handle_cmd_set_deq(struct xhci_hcd *xhci, int slot_id,
    update_ring_for_set_deq_completion(xhci, dev,
     ep_ring, ep_index);
   } else {
-   xhci_warn(xhci, "Mismatch between completed Set TR Deq "
-     "Ptr command & xHCI internal state.\n");
+   xhci_warn(xhci, "Mismatch between completed Set TR Deq Ptr command & xHCI internal state.\n");
    xhci_warn(xhci, "ep deq seg = %p, deq ptr = %p\n",
      dev->eps[ep_index].queued_deq_seg,
      dev->eps[ep_index].queued_deq_ptr);
-- 
1.7.1