From 42eb31785b5b6b24da44ea9590d19536fdddca68 Mon Sep 17 00:00:00 2001
From: Dave Airlie <airlied@redhat.com>
Date: Fri, 12 Sep 2014 01:56:48 -0400
Subject: [drm] i915: split some conversion functions out into separate functions

Message-id: <1410487019-24661-11-git-send-email-airlied@redhat.com>
Patchwork-id: 93930
O-Subject: [RHEL7.1 BZ1140440 PATCH 10/21] drm/i915: split some conversion functions out into separate functions.
Bugzilla: 1140440
RH-Acked-by: Jerome Glisse <jglisse@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Rob Clark <rclark@redhat.com>

bugzilla: 1140440
upstream: d05410f9a450df8848196ce87f1c9ef14ff89cb5\

for MST I need to reuse these, so split them out early.

Signed-off-by: Dave Airlie <airlied@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/gpu/drm/i915/intel_ddi.c b/drivers/gpu/drm/i915/intel_ddi.c
index 7a9186f..b791379 100644
--- a/drivers/gpu/drm/i915/intel_ddi.c
+++ b/drivers/gpu/drm/i915/intel_ddi.c
@@ -751,6 +751,20 @@ intel_ddi_calculate_wrpll(int clock /* in Hz */,
  *r2_out = best.r2;
 }
 
+static int link_bw_to_pll_sel(int link_bw)
+{
+ switch (link_bw) {
+ case DP_LINK_BW_1_62:
+  return PORT_CLK_SEL_LCPLL_810;
+ case DP_LINK_BW_2_7:
+  return PORT_CLK_SEL_LCPLL_1350;
+ case DP_LINK_BW_5_4:
+  return PORT_CLK_SEL_LCPLL_2700;
+ default:
+  return -1;
+ }
+}
+
 /*
  * Tries to find a PLL for the CRTC. If it finds, it increases the refcount and
  * stores it in intel_crtc->ddi_pll_sel, so other mode sets won't be able to
@@ -773,17 +787,8 @@ bool intel_ddi_pll_select(struct intel_crtc *intel_crtc)
  if (type == INTEL_OUTPUT_DISPLAYPORT || type == INTEL_OUTPUT_EDP) {
   struct intel_dp *intel_dp = enc_to_intel_dp(encoder);
 
-  switch (intel_dp->link_bw) {
-  case DP_LINK_BW_1_62:
-   intel_crtc->ddi_pll_sel = PORT_CLK_SEL_LCPLL_810;
-   break;
-  case DP_LINK_BW_2_7:
-   intel_crtc->ddi_pll_sel = PORT_CLK_SEL_LCPLL_1350;
-   break;
-  case DP_LINK_BW_5_4:
-   intel_crtc->ddi_pll_sel = PORT_CLK_SEL_LCPLL_2700;
-   break;
-  default:
+  intel_crtc->ddi_pll_sel = link_bw_to_pll_sel(intel_dp->link_bw);
+  if (intel_crtc->ddi_pll_sel == -1) {
    DRM_ERROR("Link bandwidth %d unsupported\n",
       intel_dp->link_bw);
    return false;
-- 
1.7.1