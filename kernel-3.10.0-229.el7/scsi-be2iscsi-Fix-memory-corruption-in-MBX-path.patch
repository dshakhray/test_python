From 128a7f06f498f5cab564dc0ba4e4d1dc45cc97f5 Mon Sep 17 00:00:00 2001
From: Rob Evers <revers@redhat.com>
Date: Wed, 25 Jun 2014 14:11:39 -0400
Subject: [scsi] be2iscsi: Fix memory corruption in MBX path

Message-id: <1403705504-27660-6-git-send-email-revers@redhat.com>
Patchwork-id: 84803
O-Subject: [RHEL7.1 e-stor PATCH 05/10] scsi: be2iscsi: Fix memory corruption in MBX path
Bugzilla: 1088576
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Tomas Henzl <thenzl@redhat.com>
RH-Acked-by: Maurizio Lombardi <mlombard@redhat.com>

From: John Soni Jose <sony.john-n@emulex.com>

http://www.spinics.net/lists/linux-scsi/msg74146.html

 From: Dan Carpenter [mailto:dan.carpenter@oracle.com]
 Sent: Friday, March 28, 2014 1:42 AM
 Subject: re: [SCSI] be2iscsi: Fix handling timed out MBX completion from FW

 Hello Jayamohan Kallickal,

 The patch 1957aa7f6246: "[SCSI] be2iscsi: Fix handling timed out MBX completion from FW" from Jan 29, 2014, leads to the following static checker warning:

 drivers/scsi/be2iscsi/be_main.c:5581 beiscsi_dev_probe()
 error: memset() '&phba->ctrl.ptag_state[i]->tag_mem_state' too small (24 vs 32)

 drivers/scsi/be2iscsi/be_main.c
 5576          for (i = 0; i < MAX_MCC_CMD; i++) {
 5577                  init_waitqueue_head(&phba->ctrl.mcc_wait[i + 1]);
 5578                  phba->ctrl.mcc_tag[i] = i + 1;
 5579                  phba->ctrl.mcc_numtag[i + 1] = 0;
 5580                  phba->ctrl.mcc_tag_available++;
 5581                  memset(&phba->ctrl.ptag_state[i].tag_mem_state, 0,
 5582                         sizeof(struct beiscsi_mcc_tag_state));
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 Probably this this be change to sizeof(struct be_dma_mem struct)?  It looks like we are corrupting memory a bit here.

 5583          }

 regards,
 dan carpenter

Signed-off-by: John Soni Jose <sony.john-n@emulex.com>
Signed-off-by: Jayamohan Kallickal <jayamohan.kallickal@emulex.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/be2iscsi/be_main.c b/drivers/scsi/be2iscsi/be_main.c
index d988d18..eac7b43 100644
--- a/drivers/scsi/be2iscsi/be_main.c
+++ b/drivers/scsi/be2iscsi/be_main.c
@@ -5690,7 +5690,7 @@ static int beiscsi_dev_probe(struct pci_dev *pcidev,
   phba->ctrl.mcc_numtag[i + 1] = 0;
   phba->ctrl.mcc_tag_available++;
   memset(&phba->ctrl.ptag_state[i].tag_mem_state, 0,
-         sizeof(struct beiscsi_mcc_tag_state));
+         sizeof(struct be_dma_mem));
  }
 
  phba->ctrl.mcc_alloc_index = phba->ctrl.mcc_free_index = 0;
-- 
1.7.1