From 98647d617e0660b2bd88079e7deeaeaf18b79495 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Wed, 6 Aug 2014 03:48:23 -0400
Subject: [ata] ahci: Use pci_enable_msi_range() instead of pci_enable_msi_block()

Message-id: <20140806034823.1438.88562.stgit@gir.stowe>
Patchwork-id: 87449
O-Subject: [RHEL7.1 PATCH 40/69] ahci: Use pci_enable_msi_range() instead of pci_enable_msi_block()
Bugzilla: 1110896
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110896
Upstream Status: fc061d969f9a44bcf200c557a77fe5e5af8ab363

commit fc061d969f9a44bcf200c557a77fe5e5af8ab363
Author: Alexander Gordeev <agordeev@redhat.com>
Date:   Wed Jan 29 14:19:43 2014 -0700

    ahci: Use pci_enable_msi_range() instead of pci_enable_msi_block()

    pci_enable_msi_block() has been deprecated; use pci_enable_msi_range()
    instead.

    [bhelgaas: changelog]
    Signed-off-by: Alexander Gordeev <agordeev@redhat.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Tejun Heo <tj@kernel.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/ata/ahci.c b/drivers/ata/ahci.c
index e84ac4d..92101d5 100644
--- a/drivers/ata/ahci.c
+++ b/drivers/ata/ahci.c
@@ -1100,13 +1100,13 @@ static inline void ahci_gtf_filter_workaround(struct ata_host *host)
 static int ahci_init_interrupts(struct pci_dev *pdev, unsigned int n_ports,
     struct ahci_host_priv *hpriv)
 {
- int rc, nvec;
+ int nvec;
 
  if (hpriv->flags & AHCI_HFLAG_NO_MSI)
   goto intx;
 
- rc = pci_msi_vec_count(pdev);
- if (rc < 0)
+ nvec = pci_msi_vec_count(pdev);
+ if (nvec < 0)
   goto intx;
 
  /*
@@ -1114,21 +1114,19 @@ static int ahci_init_interrupts(struct pci_dev *pdev, unsigned int n_ports,
   * Message mode could be enforced. In this case assume that advantage
   * of multipe MSIs is negated and use single MSI mode instead.
   */
- if (rc < n_ports)
+ if (nvec < n_ports)
   goto single_msi;
 
- nvec = rc;
- rc = pci_enable_msi_block(pdev, nvec);
- if (rc < 0)
-  goto intx;
- else if (rc > 0)
+ nvec = pci_enable_msi_range(pdev, nvec, nvec);
+ if (nvec == -ENOSPC)
   goto single_msi;
+ else if (nvec < 0)
+  goto intx;
 
  return nvec;
 
 single_msi:
- rc = pci_enable_msi(pdev);
- if (rc)
+ if (pci_enable_msi(pdev))
   goto intx;
  return 1;
 
-- 
1.7.1