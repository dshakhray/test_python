From af5c41dcb125d6713fdcbf64b447009477ae98db Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:11:32 -0400
Subject: [powerpc] mm: Fix tlbie to add AVAL fields for 64K pages

Message-id: <1410545655-205645-464-git-send-email-dzickus@redhat.com>
Patchwork-id: 94406
O-Subject: [RHEL7 PATCH 463/626] powerpc/mm: Fix tlbie to add AVAL fields for 64K pages
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 29ef7a3e26283606f181000b11e5fd37d73ab98f
Author: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
Date:   Mon Apr 21 10:37:36 2014 +0530

    powerpc/mm: Fix tlbie to add AVAL fields for 64K pages

    The if condition check was based on a draft ISA doc. Remove the same.

    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/mm/hash_native_64.c b/arch/powerpc/mm/hash_native_64.c
index 3ea26c2..cf1d325 100644
--- a/arch/powerpc/mm/hash_native_64.c
+++ b/arch/powerpc/mm/hash_native_64.c
@@ -82,17 +82,14 @@ static inline void __tlbie(unsigned long vpn, int psize, int apsize, int ssize)
   va &= ~((1ul << mmu_psize_defs[apsize].shift) - 1);
   va |= penc << 12;
   va |= ssize << 8;
-  /* Add AVAL part */
-  if (psize != apsize) {
-   /*
-    * MPSS, 64K base page size and 16MB parge page size
-    * We don't need all the bits, but rest of the bits
-    * must be ignored by the processor.
-    * vpn cover upto 65 bits of va. (0...65) and we need
-    * 58..64 bits of va.
-    */
-   va |= (vpn & 0xfe);
-  }
+  /*
+   * AVAL bits:
+   * We don't need all the bits, but rest of the bits
+   * must be ignored by the processor.
+   * vpn cover upto 65 bits of va. (0...65) and we need
+   * 58..64 bits of va.
+   */
+  va |= (vpn & 0xfe); /* AVAL */
   va |= 1; /* L */
   asm volatile(ASM_FTR_IFCLR("tlbie %0,1", PPC_TLBIE(%1,%0), %2)
         : : "r" (va), "r"(0), "i" (CPU_FTR_ARCH_206)
@@ -133,17 +130,14 @@ static inline void __tlbiel(unsigned long vpn, int psize, int apsize, int ssize)
   va &= ~((1ul << mmu_psize_defs[apsize].shift) - 1);
   va |= penc << 12;
   va |= ssize << 8;
-  /* Add AVAL part */
-  if (psize != apsize) {
-   /*
-    * MPSS, 64K base page size and 16MB parge page size
-    * We don't need all the bits, but rest of the bits
-    * must be ignored by the processor.
-    * vpn cover upto 65 bits of va. (0...65) and we need
-    * 58..64 bits of va.
-    */
-   va |= (vpn & 0xfe);
-  }
+  /*
+   * AVAL bits:
+   * We don't need all the bits, but rest of the bits
+   * must be ignored by the processor.
+   * vpn cover upto 65 bits of va. (0...65) and we need
+   * 58..64 bits of va.
+   */
+  va |= (vpn & 0xfe);
   va |= 1; /* L */
   asm volatile(".long 0x7c000224 | (%0 << 11) | (1 << 21)"
         : : "r"(va) : "memory");
-- 
1.7.1