From ff8a6e92b3dde5da6704b9ae49e2292b058ab568 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 10 Jul 2014 01:00:08 -0400
Subject: [acpi] dock: Do not leak memory on falilures to add a dock station

Message-id: <20140710010008.22146.70690.stgit@gir.stowe>
Patchwork-id: 85557
O-Subject: [RHEL7.1 PATCH 018/105] ACPI / dock: Do not leak memory on falilures to add a dock station
Bugzilla: 1114228
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1114228
Upstream Status: a30c4c5ee85680bb66ed8a6c0b0bf4921125c378

commit a30c4c5ee85680bb66ed8a6c0b0bf4921125c378
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Sun Jun 30 23:50:24 2013 +0200

    ACPI / dock: Do not leak memory on falilures to add a dock station

    The function creating and registering dock station objects,
    dock_add(), leaks memory if there's an error after it's walked
    the ACPI namespace calling find_dock_devices(), because it doesn't
    free the list of dependent devices it's just created in those cases.

    Fix that issue by adding the missing code to free the list of
    dependent devices on errors.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/acpi/dock.c b/drivers/acpi/dock.c
index a326c79..3e20b13 100644
--- a/drivers/acpi/dock.c
+++ b/drivers/acpi/dock.c
@@ -115,6 +115,16 @@ add_dock_dependent_device(struct dock_station *ds, acpi_handle handle)
  return 0;
 }
 
+static void remove_dock_dependent_devices(struct dock_station *ds)
+{
+ struct dock_dependent_device *dd, *aux;
+
+ list_for_each_entry_safe(dd, aux, &ds->dependent_devices, list) {
+  list_del(&dd->list);
+  kfree(dd);
+ }
+}
+
 /**
  * dock_init_hotplug - Initialize a hotplug device on a docking station.
  * @dd: Dock-dependent device.
@@ -895,6 +905,7 @@ static int __init dock_add(acpi_handle handle)
  return 0;
 
 err_rmgroup:
+ remove_dock_dependent_devices(dock_station);
  sysfs_remove_group(&dd->dev.kobj, &dock_attribute_group);
 err_unregister:
  platform_device_unregister(dd);
-- 
1.7.1