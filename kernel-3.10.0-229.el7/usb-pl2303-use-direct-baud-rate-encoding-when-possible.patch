From 81c565c20b6a3c2d33b2bf1c566d5ac0d876e8e4 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:10:56 -0400
Subject: [usb] pl2303: use direct baud-rate encoding when possible

Message-id: <1410887463-20674-585-git-send-email-dzickus@redhat.com>
Patchwork-id: 95646
O-Subject: [RHEL7 PATCH 584/591] USB: pl2303: use direct baud-rate encoding when possible
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 5d85045f4b082800beb384094fc67fa0d2096563
Author: Johan Hovold <jhovold@gmail.com>
Date:   Sun Dec 29 19:23:15 2013 +0100

    USB: pl2303: use direct baud-rate encoding when possible

    Use direct baud-rate encoding rather than divisors for supported baud
    rates.

    This restores the way baud rates were set prior to commit 8d48fdf689fe
    ("USB: PL2303: correctly handle baudrates above 115200") which added
    divisor encoding, but also switched to the new encoding method for all
    baudrates above 115200.

    As noted by Frank Schafer <fschaefer.oss@googlemail.com>, baud rate 500k
    was later errounously added to the supported baud-rate table although
    it can only be set using divisors.

    Note that the current implementation could easily be extended to support
    arbitrary non-standard baud rates using divisors (e.g. by falling back
    to divisors when the table lookup fails).

    Cc: Frank Schafer <fschaefer.oss@googlemail.com>
    Signed-off-by: Johan Hovold <jhovold@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/serial/pl2303.c b/drivers/usb/serial/pl2303.c
index 48e63fd..8707d0d 100644
--- a/drivers/usb/serial/pl2303.c
+++ b/drivers/usb/serial/pl2303.c
@@ -314,14 +314,15 @@ static int pl2303_set_control_lines(struct usb_serial_port *port, u8 value)
 }
 
 /*
- * Returns the nearest supported baud rate.
+ * Returns the nearest supported baud rate that can be set directly without
+ * using divisors.
  */
 static speed_t pl2303_get_supported_baud_rate(speed_t baud)
 {
  static const speed_t baud_sup[] = {
   75, 150, 300, 600, 1200, 1800, 2400, 3600, 4800, 7200, 9600,
   14400, 19200, 28800, 38400, 57600, 115200, 230400, 460800,
-  500000, 614400, 921600, 1228800, 2457600, 3000000, 6000000
+  614400, 921600, 1228800, 2457600, 3000000, 6000000
  };
 
  unsigned i;
@@ -381,6 +382,7 @@ static void pl2303_encode_baud_rate(struct tty_struct *tty,
 {
  struct usb_serial *serial = port->serial;
  struct pl2303_serial_private *spriv = usb_get_serial_data(serial);
+ speed_t baud_sup;
  speed_t baud;
 
  baud = tty_get_baud_rate(tty);
@@ -390,14 +392,17 @@ static void pl2303_encode_baud_rate(struct tty_struct *tty,
 
  if (spriv->type->max_baud_rate)
   baud = min_t(speed_t, baud, spriv->type->max_baud_rate);
+ /*
+  * Set baud rate to nearest supported value.
+  *
+  * NOTE: Baud rate 500k can only be set using divisors.
+  */
+ baud_sup = pl2303_get_supported_baud_rate(baud);
 
- /* Set baud rate to nearest supported value. */
- baud = pl2303_get_supported_baud_rate(baud);
-
- if (baud <= 115200)
-  baud = pl2303_encode_baud_rate_direct(buf, baud);
- else
+ if (baud == 500000)
   baud = pl2303_encode_baud_rate_divisor(buf, baud);
+ else
+  baud = pl2303_encode_baud_rate_direct(buf, baud_sup);
 
  /* Save resulting baud rate */
  tty_encode_baud_rate(tty, baud, baud);
-- 
1.7.1