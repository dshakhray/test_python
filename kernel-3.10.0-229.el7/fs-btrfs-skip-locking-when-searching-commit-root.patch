From 5b771f38ad72f97b5c378383077c7f9f31fca1da Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:01:38 -0400
Subject: [fs] btrfs: skip locking when searching commit root

Message-id: <1407179109-13714-212-git-send-email-sandeen@redhat.com>
Patchwork-id: 87206
O-Subject: [RHEL7.1 PATCH 211/422] Btrfs: skip locking when searching commit root
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Wang Shilong <wangsl.fnst@cn.fujitsu.com>

commit e84752d434b5cca0869e906e7b94d0531b25c6d3
Author: Wang Shilong <wangsl.fnst@cn.fujitsu.com>
Date:   Thu Feb 13 11:19:47 2014 +0800

    Btrfs: skip locking when searching commit root

    We won't change commit root, skip locking dance with commit root
    when walking backrefs, this can speed up btrfs send operations.

    Signed-off-by: Wang Shilong <wangsl.fnst@cn.fujitsu.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/backref.c b/fs/btrfs/backref.c
index a88da72..860f4f2 100644
--- a/fs/btrfs/backref.c
+++ b/fs/btrfs/backref.c
@@ -873,8 +873,10 @@ static int find_parent_nodes(struct btrfs_trans_handle *trans,
  path = btrfs_alloc_path();
  if (!path)
   return -ENOMEM;
- if (!trans)
+ if (!trans) {
   path->search_commit_root = 1;
+  path->skip_locking = 1;
+ }
 
  /*
   * grab both a lock on the path and a lock on the delayed ref head.
-- 
1.7.1