From f44aa29195ae79dc008c6874129c3f3aded82c68 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:23:18 -0400
Subject: [tools] perf: Fix sorting for 64bit entries

Message-id: <1408462094-14194-30-git-send-email-jolsa@redhat.com>
Patchwork-id: 88012
O-Subject: [PATCH RHEL7.1 BZ1131394 029/325] tools/perf: Fix sorting for 64bit entries
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 354cc40e3b0981c38ba2ce2964954480e6c03c37
Author: Andi Kleen <ak@linux.intel.com>
Date: Tue Oct 1 07:22:15 2013 -0700

description
===========
Some of the node comparisons in hist.c dropped the upper
32bit by using an int variable to store the compare
result. This broke various 64bit fields, causing
incorrect collapsing (found for the TSX transaction field)

Just use int64_t always.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/hist.c b/tools/perf/util/hist.c
index 9ff6cf3..97dc280 100644
--- a/tools/perf/util/hist.c
+++ b/tools/perf/util/hist.c
@@ -346,7 +346,7 @@ static struct hist_entry *add_hist_entry(struct hists *hists,
  struct rb_node **p;
  struct rb_node *parent = NULL;
  struct hist_entry *he;
- int cmp;
+ int64_t cmp;
 
  p = &hists->entries_in->rb_node;
 
@@ -884,7 +884,7 @@ static struct hist_entry *hists__add_dummy_entry(struct hists *hists,
  struct rb_node **p;
  struct rb_node *parent = NULL;
  struct hist_entry *he;
- int cmp;
+ int64_t cmp;
 
  if (sort__need_collapse)
   root = &hists->entries_collapsed;
-- 
1.7.1