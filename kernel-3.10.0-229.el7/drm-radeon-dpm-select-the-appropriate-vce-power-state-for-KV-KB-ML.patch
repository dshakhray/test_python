From 174edc4efeaab121fc64622bb5e1083609cd011b Mon Sep 17 00:00:00 2001
From: Rob Clark <rclark@redhat.com>
Date: Wed, 17 Dec 2014 21:38:46 -0500
Subject: [drm] radeon/dpm: select the appropriate vce power state for KV/KB/ML

Message-id: <1418852380-13061-36-git-send-email-rclark@redhat.com>
Patchwork-id: 102167
O-Subject: [RHEL7 drm 35/89] drm/radeon/dpm: select the appropriate vce power state for KV/KB/ML
Bugzilla: 1173317
RH-Acked-by: Jerome Glisse <jglisse@redhat.com>
RH-Acked-by: Dave Airlie <airlied@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1173317
Upstream: since v3.16.4

commit 64e33caeb3d86d79c379cc33925b3ea415a7c989

Author:     Alex Deucher <alexander.deucher@amd.com>
AuthorDate: Thu Aug 14 01:22:31 2014 -0400
Commit:     Rob Clark <rclark@redhat.com>
CommitDate: Wed Dec 10 17:19:44 2014 -0500

    drm/radeon/dpm: select the appropriate vce power state for KV/KB/ML

    commit c83dec3bb6c38629398b65c231c80978b3e00e14 upstream.

    Compare the clock in the limits table to the requested evclk rather
    than just taking the first value.  Improves vce performance in certain
    cases.

    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Signed-off-by: Rob Clark <rclark@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/gpu/drm/radeon/kv_dpm.c b/drivers/gpu/drm/radeon/kv_dpm.c
index 9ef8c38..9803055 100644
--- a/drivers/gpu/drm/radeon/kv_dpm.c
+++ b/drivers/gpu/drm/radeon/kv_dpm.c
@@ -1438,14 +1438,14 @@ static int kv_update_uvd_dpm(struct radeon_device *rdev, bool gate)
  return kv_enable_uvd_dpm(rdev, !gate);
 }
 
-static u8 kv_get_vce_boot_level(struct radeon_device *rdev)
+static u8 kv_get_vce_boot_level(struct radeon_device *rdev, u32 evclk)
 {
  u8 i;
  struct radeon_vce_clock_voltage_dependency_table *table =
   &rdev->pm.dpm.dyn_state.vce_clock_voltage_dependency_table;
 
  for (i = 0; i < table->count; i++) {
-  if (table->entries[i].evclk >= 0) /* XXX */
+  if (table->entries[i].evclk >= evclk)
    break;
  }
 
@@ -1468,7 +1468,7 @@ static int kv_update_vce_dpm(struct radeon_device *rdev,
   if (pi->caps_stable_p_state)
    pi->vce_boot_level = table->count - 1;
   else
-   pi->vce_boot_level = kv_get_vce_boot_level(rdev);
+   pi->vce_boot_level = kv_get_vce_boot_level(rdev, radeon_new_state->evclk);
 
   ret = kv_copy_bytes_to_smc(rdev,
         pi->dpm_table_start +
-- 
1.7.1