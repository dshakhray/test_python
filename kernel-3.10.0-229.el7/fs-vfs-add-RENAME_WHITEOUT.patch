From 7cad654dc5deb96ed86de1675f4d06159bb13773 Mon Sep 17 00:00:00 2001
From: David Howells <dhowells@redhat.com>
Date: Tue, 25 Nov 2014 16:34:58 -0500
Subject: [fs] vfs: add RENAME_WHITEOUT

Message-id: <20141125163458.18115.77899.stgit@warthog.procyon.org.uk>
Patchwork-id: 100928
O-Subject: [PATCH 28/47] vfs: add RENAME_WHITEOUT
Bugzilla: 985875
RH-Acked-by: Steve Best <sbest@redhat.com>

From: Miklos Szeredi <mszeredi@suse.cz>

This adds a new RENAME_WHITEOUT flag.  This flag makes rename() create a
whiteout of source.  The whiteout creation is atomic relative to the
rename.

Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
Original-commit: 0d7a855526dd672e114aff2ac22b60fc6f155b08
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/namei.c b/fs/namei.c
index e478fee..d88666d 100644
--- a/fs/namei.c
+++ b/fs/namei.c
@@ -4128,12 +4128,16 @@ SYSCALL_DEFINE5(renameat2, int, olddfd, const char __user *, oldname,
  bool should_retry = false;
  int error;
 
- if (flags & ~(RENAME_NOREPLACE | RENAME_EXCHANGE))
+ if (flags & ~(RENAME_NOREPLACE | RENAME_EXCHANGE | RENAME_WHITEOUT))
   return -EINVAL;
 
- if ((flags & RENAME_NOREPLACE) && (flags & RENAME_EXCHANGE))
+ if ((flags & (RENAME_NOREPLACE | RENAME_WHITEOUT)) &&
+     (flags & RENAME_EXCHANGE))
   return -EINVAL;
 
+ if ((flags & RENAME_WHITEOUT) && !capable(CAP_MKNOD))
+  return -EPERM;
+
 retry:
  from = user_path_parent(olddfd, oldname, &oldnd, lookup_flags);
  if (IS_ERR(from)) {
diff --git a/include/uapi/linux/fs.h b/include/uapi/linux/fs.h
index b981b32..83d19df 100644
--- a/include/uapi/linux/fs.h
+++ b/include/uapi/linux/fs.h
@@ -37,6 +37,7 @@
 
 #define RENAME_NOREPLACE (1 << 0) /* Don't overwrite target */
 #define RENAME_EXCHANGE  (1 << 1) /* Exchange source and dest */
+#define RENAME_WHITEOUT  (1 << 2) /* Whiteout source */
 
 struct fstrim_range {
  __u64 start;
-- 
1.7.1