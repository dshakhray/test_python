From 11eec128845c99e7fa9a31a61911c39220d393e5 Mon Sep 17 00:00:00 2001
From: Sai Vemuri <svemuri@redhat.com>
Date: Thu, 11 Sep 2014 22:42:52 -0400
Subject: [infiniband] cxgb4: Fix possible memory leak in RX_PKT processing

Message-id: <1410475447-94392-34-git-send-email-svemuri@redhat.com>
Patchwork-id: 93877
O-Subject: [RHEL7.1 PATCH BZ 1124947 033/108] RDMA/cxgb4: Fix possible memory leak in RX_PKT processing
Bugzilla: 1124947
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

If cxgb4_ofld_send() returns < 0, then send_fw_pass_open_req() must
free the request skb and the saved skb with the tcp header.

Signed-off-by: Steve Wise <swise@opengridcomputing.com>
Signed-off-by: Roland Dreier <roland@purestorage.com>
(cherry picked from commit 1ce1d471acb7ad8e8b8e3a2972de9fbb5f2be79a)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/infiniband/hw/cxgb4/cm.c b/drivers/infiniband/hw/cxgb4/cm.c
index 52fe177..db8dfdf 100644
--- a/drivers/infiniband/hw/cxgb4/cm.c
+++ b/drivers/infiniband/hw/cxgb4/cm.c
@@ -3204,6 +3204,7 @@ static void send_fw_pass_open_req(struct c4iw_dev *dev, struct sk_buff *skb,
  struct sk_buff *req_skb;
  struct fw_ofld_connection_wr *req;
  struct cpl_pass_accept_req *cpl = cplhdr(skb);
+ int ret;
 
  req_skb = alloc_skb(sizeof(struct fw_ofld_connection_wr), GFP_KERNEL);
  req = (struct fw_ofld_connection_wr *)__skb_put(req_skb, sizeof(*req));
@@ -3240,7 +3241,13 @@ static void send_fw_pass_open_req(struct c4iw_dev *dev, struct sk_buff *skb,
  req->cookie = (unsigned long)skb;
 
  set_wr_txq(req_skb, CPL_PRIORITY_CONTROL, port_id);
- cxgb4_ofld_send(dev->rdev.lldi.ports[0], req_skb);
+ ret = cxgb4_ofld_send(dev->rdev.lldi.ports[0], req_skb);
+ if (ret < 0) {
+  pr_err("%s - cxgb4_ofld_send error %d - dropping\n", __func__,
+         ret);
+  kfree_skb(skb);
+  kfree_skb(req_skb);
+ }
 }
 
 /*
-- 
1.7.1