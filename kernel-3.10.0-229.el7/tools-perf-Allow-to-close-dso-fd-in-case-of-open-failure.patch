From 17fde2e4ea3fdbb6915b35d33df7b0218ae69a08 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:09:05 -0400
Subject: [tools] perf: Allow to close dso fd in case of open failure

Message-id: <1410181752-25631-301-git-send-email-jolsa@redhat.com>
Patchwork-id: 91893
O-Subject: [PATCH RHEL7.1 BZ1134356 300/307] perf tools: Allow to close dso fd in case of open failure
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit a08cae03f430b971afa508a32662dc476d42d8cb
Author: Jiri Olsa <jolsa@kernel.org>
Date: Wed May 7 21:35:02 2014 +0200

description
===========
Adding do_open function that tries to close opened
dso objects in case we fail to open the dso due to
to crossing the allowed RLIMIT_NOFILE limit.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/dso.c b/tools/perf/util/dso.c
index db63438..c30752c 100644
--- a/tools/perf/util/dso.c
+++ b/tools/perf/util/dso.c
@@ -159,6 +159,27 @@ static void dso__list_del(struct dso *dso)
  dso__data_open_cnt--;
 }
 
+static void close_first_dso(void);
+
+static int do_open(char *name)
+{
+ int fd;
+
+ do {
+  fd = open(name, O_RDONLY);
+  if (fd >= 0)
+   return fd;
+
+  pr_debug("dso open failed, mmap: %s\n", strerror(errno));
+  if (!dso__data_open_cnt || errno != EMFILE)
+   break;
+
+  close_first_dso();
+ } while (1);
+
+ return -1;
+}
+
 static int __open_dso(struct dso *dso, struct machine *machine)
 {
  int fd;
@@ -177,7 +198,7 @@ static int __open_dso(struct dso *dso, struct machine *machine)
   return -EINVAL;
  }
 
- fd = open(name, O_RDONLY);
+ fd = do_open(name);
  free(name);
  return fd;
 }
-- 
1.7.1