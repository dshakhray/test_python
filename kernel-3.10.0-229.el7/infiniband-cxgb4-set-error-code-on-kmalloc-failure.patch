From 723bdec76d84a4b2e1c2cff7ccb279be4461eac7 Mon Sep 17 00:00:00 2001
From: Sai Vemuri <svemuri@redhat.com>
Date: Thu, 11 Sep 2014 22:42:59 -0400
Subject: [infiniband] cxgb4: set error code on kmalloc() failure

Message-id: <1410475447-94392-41-git-send-email-svemuri@redhat.com>
Patchwork-id: 93845
O-Subject: [RHEL7.1 PATCH BZ 1124947 040/108] RDMA/cxgb4: set error code on kmalloc() failure
Bugzilla: 1124947
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

If kmalloc() fails in c4iw_alloc_ucontext(), the function
leaves but does not set an error code in ret variable:
it will return 0 to the caller.

This patch set ret to -ENOMEM in such case.

Cc: Steve Wise <swise@opengridcomputing.com>
Cc: Steve Wise <swise@chelsio.com>
Signed-off-by: Yann Droneaud <ydroneaud@opteya.com>
Acked-by: Steve Wise <swise@opengridcomputing.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit bfd2793c9559ae73ae021797f1d4b097c27f24be)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/infiniband/hw/cxgb4/provider.c b/drivers/infiniband/hw/cxgb4/provider.c
index e36d2a2..7942925 100644
--- a/drivers/infiniband/hw/cxgb4/provider.c
+++ b/drivers/infiniband/hw/cxgb4/provider.c
@@ -128,8 +128,10 @@ static struct ib_ucontext *c4iw_alloc_ucontext(struct ib_device *ibdev,
   rhp->rdev.flags |= T4_STATUS_PAGE_DISABLED;
  } else {
   mm = kmalloc(sizeof(*mm), GFP_KERNEL);
-  if (!mm)
+  if (!mm) {
+   ret = -ENOMEM;
    goto err_free;
+  }
 
   uresp.status_page_size = PAGE_SIZE;
 
-- 
1.7.1