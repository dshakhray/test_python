From 93b6f8df793eb9e34aea1c8080d609391bbac55d Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 23 Oct 2014 09:53:50 -0400
Subject: [fs] ext4: remove unreachable code in ext4_can_extents_be_merged()

Message-id: <1414058125-4183-77-git-send-email-lczerner@redhat.com>
Patchwork-id: 98182
O-Subject: [RHEL 7.1 PATCH v2 076/171] ext4: remove unreachable code in ext4_can_extents_be_merged()
Bugzilla: 1150139
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Eric Sandeen <sandeen@redhat.com>

BZ 1150139
https://bugzilla.redhat.com/show_bug.cgi?id=1150139

BREW 8142710
https://brewweb.devel.redhat.com/taskinfo?taskID=8142710

Upstream commit da0169b3b9a460ecbb571dad6123fe3735b148d1

 Commit ec22ba8e ("ext4: disable merging of uninitialized extents")
 ensured that if either extent under consideration is uninit, we
 decline to merge, and immediately return.

 But right after that test, we test again for an uninit
 extent; we can never hit this.  So just remove the impossible
 test and associated variable.

 Signed-off-by: Eric Sandeen <sandeen@redhat.com>
 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
 Reviewed-by: Zheng Liu <wenqing.lz@taobao.com>
 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/extents.c b/fs/ext4/extents.c
index 74e6897..da1690e 100644
--- a/fs/ext4/extents.c
+++ b/fs/ext4/extents.c
@@ -1666,7 +1666,7 @@ int
 ext4_can_extents_be_merged(struct inode *inode, struct ext4_extent *ex1,
     struct ext4_extent *ex2)
 {
- unsigned short ext1_ee_len, ext2_ee_len, max_len;
+ unsigned short ext1_ee_len, ext2_ee_len;
 
  /*
   * Make sure that both extents are initialized. We don't merge
@@ -1677,11 +1677,6 @@ ext4_can_extents_be_merged(struct inode *inode, struct ext4_extent *ex1,
  if (ext4_ext_is_uninitialized(ex1) || ext4_ext_is_uninitialized(ex2))
   return 0;
 
- if (ext4_ext_is_uninitialized(ex1))
-  max_len = EXT_UNINIT_MAX_LEN;
- else
-  max_len = EXT_INIT_MAX_LEN;
-
  ext1_ee_len = ext4_ext_get_actual_len(ex1);
  ext2_ee_len = ext4_ext_get_actual_len(ex2);
 
@@ -1694,7 +1689,7 @@ ext4_can_extents_be_merged(struct inode *inode, struct ext4_extent *ex1,
   * as an RO_COMPAT feature, refuse to merge to extents if
   * this can result in the top bit of ee_len being set.
   */
- if (ext1_ee_len + ext2_ee_len > max_len)
+ if (ext1_ee_len + ext2_ee_len > EXT_INIT_MAX_LEN)
   return 0;
 #ifdef AGGRESSIVE_TEST
  if (ext1_ee_len >= 4)
-- 
1.7.1