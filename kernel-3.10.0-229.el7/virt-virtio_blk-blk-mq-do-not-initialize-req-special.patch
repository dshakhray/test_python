From 15e7ce756104a7e487feac6308ef8b25fc2ffd57 Mon Sep 17 00:00:00 2001
From: Jeff Moyer <jmoyer@redhat.com>
Date: Thu, 28 Aug 2014 19:16:02 -0400
Subject: [virt] virtio_blk, blk-mq: do not initialize req->special

Message-id: <1409253371-23161-13-git-send-email-jmoyer@redhat.com>
Patchwork-id: 89858
O-Subject: [RHEL7 PATCH 12/21] virtio-blk, blk-mq: do not initialize req->special
Bugzilla: 1105698
RH-Acked-by: Fam Zheng <famz@redhat.com>

This is a backport of the virtio-blk portion of the following commit.
This is related to bug 1105698.

  commit 9d74e25737d73e93ccddeb5a61bcd56b7b8eb57b
  Author: Christoph Hellwig <hch@lst.de>
  Date:   Mon Apr 14 10:30:07 2014 +0200

    blk-mq: do not initialize req->special

    Drivers can reach their private data easily using the blk_mq_rq_to_pdu
    helper and don't need req->special.  By not initializing it code can
    be simplified nicely, and we also shave off a few more instructions from
    the I/O path.

    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@fb.com>

Signed-off-by: Jeff Moyer <jmoyer@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/block/virtio_blk.c b/drivers/block/virtio_blk.c
index 6d8a87f..c7d02bc 100644
--- a/drivers/block/virtio_blk.c
+++ b/drivers/block/virtio_blk.c
@@ -112,7 +112,7 @@ static int __virtblk_add_req(struct virtqueue *vq,
 
 static inline void virtblk_request_done(struct request *req)
 {
- struct virtblk_req *vbr = req->special;
+ struct virtblk_req *vbr = blk_mq_rq_to_pdu(req);
  int error = virtblk_result(vbr);
 
  if (req->cmd_type == REQ_TYPE_BLOCK_PC) {
@@ -154,7 +154,7 @@ static void virtblk_done(struct virtqueue *vq)
 static int virtio_queue_rq(struct blk_mq_hw_ctx *hctx, struct request *req)
 {
  struct virtio_blk *vblk = hctx->queue->queuedata;
- struct virtblk_req *vbr = req->special;
+ struct virtblk_req *vbr = blk_mq_rq_to_pdu(req);
  unsigned long flags;
  unsigned int num;
  const bool last = (req->cmd_flags & REQ_END) != 0;
@@ -501,7 +501,7 @@ static int virtblk_init_vbr(void *data, struct blk_mq_hw_ctx *hctx,
         struct request *rq, unsigned int nr)
 {
  struct virtio_blk *vblk = data;
- struct virtblk_req *vbr = rq->special;
+ struct virtblk_req *vbr = blk_mq_rq_to_pdu(rq);
 
  sg_init_table(vbr->sg, vblk->sg_elems);
  return 0;
-- 
1.7.1