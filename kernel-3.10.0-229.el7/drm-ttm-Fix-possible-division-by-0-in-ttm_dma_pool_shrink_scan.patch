From e5502bfa7999f3f1c21b3fa0eb53060366772172 Mon Sep 17 00:00:00 2001
From: Rob Clark <rclark@redhat.com>
Date: Wed, 17 Dec 2014 21:38:18 -0500
Subject: [drm] ttm: Fix possible division by 0 in ttm_dma_pool_shrink_scan()

Message-id: <1418852380-13061-8-git-send-email-rclark@redhat.com>
Patchwork-id: 102150
O-Subject: [RHEL7 drm 07/89] drm/ttm: Fix possible division by 0 in ttm_dma_pool_shrink_scan().
Bugzilla: 1173317
RH-Acked-by: Jerome Glisse <jglisse@redhat.com>
RH-Acked-by: Dave Airlie <airlied@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1173317
Upstream: since v3.16.4

commit 283cac7ef32a12bc393f6f0f18f06d9965b810a4

Author:     Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
AuthorDate: Sun Aug 3 19:59:35 2014 +0900
Commit:     Rob Clark <rclark@redhat.com>
CommitDate: Wed Dec 10 17:06:27 2014 -0500

    drm/ttm: Fix possible division by 0 in ttm_dma_pool_shrink_scan().

    commit 11e504cc705e8ccb06ac93a276e11b5e8fee4d40 upstream.

    list_empty(&_manager->pools) being false before taking _manager->lock
    does not guarantee that _manager->npools != 0 after taking _manager->lock
    because _manager->npools is updated under _manager->lock.

    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Signed-off-by: Rob Clark <rclark@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/gpu/drm/ttm/ttm_page_alloc_dma.c b/drivers/gpu/drm/ttm/ttm_page_alloc_dma.c
index b8b3943..e9f65ad 100644
--- a/drivers/gpu/drm/ttm/ttm_page_alloc_dma.c
+++ b/drivers/gpu/drm/ttm/ttm_page_alloc_dma.c
@@ -1016,6 +1016,8 @@ static int ttm_dma_pool_mm_shrink(struct shrinker *shrink,
   return 0;
 
  mutex_lock(&_manager->lock);
+ if (!_manager->npools)
+  goto out;
  pool_offset = pool_offset % _manager->npools;
  list_for_each_entry(p, &_manager->pools, pools) {
   unsigned nr_free;
@@ -1033,6 +1035,7 @@ static int ttm_dma_pool_mm_shrink(struct shrinker *shrink,
     p->pool->dev_name, p->pool->name, current->pid,
     nr_free, shrink_pages);
  }
+out:
  mutex_unlock(&_manager->lock);
  /* return estimated number of unused pages in pool */
  return ttm_dma_pool_get_num_unused_pages();
-- 
1.7.1