From 9c64485ce9fbf2fba1789c7dd2530caafb846cfe Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:22:04 -0400
Subject: [cpufreq] governor: Fix typos in comments

Message-id: <1409235879-1283-31-git-send-email-prarit@redhat.com>
Patchwork-id: 89475
O-Subject: [RHEL7.1 PATCH BZ 1134639 030/185] cpufreq: governor: Fix typos in comments
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit c4afc410942f9f0675a5431adbdb03cf5908d1df
Author: Stratos Karafotis <stratosk@semaphore.gr>
Date:   Mon Aug 26 21:42:21 2013 +0300

    cpufreq: governor: Fix typos in comments

     - 'Governer' should be 'Governor'.
     - 'S' is used for Siemens (electrical conductance) in SI units,
       so use small 's' for seconds.

    Signed-off-by: Stratos Karafotis <stratosk@semaphore.gr>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/cpufreq_governor.c b/drivers/cpufreq/cpufreq_governor.c
index bce2cd2..0e5929b 100644
--- a/drivers/cpufreq/cpufreq_governor.c
+++ b/drivers/cpufreq/cpufreq_governor.c
@@ -233,7 +233,7 @@ int cpufreq_governor_dbs(struct cpufreq_policy *policy,
 
   policy->governor_data = dbs_data;
 
-  /* policy latency is in nS. Convert it to uS first */
+  /* policy latency is in ns. Convert it to us first */
   latency = policy->cpuinfo.transition_latency / 1000;
   if (latency == 0)
    latency = 1;
diff --git a/drivers/cpufreq/cpufreq_governor.h b/drivers/cpufreq/cpufreq_governor.h
index a02d78b..88cd39f 100644
--- a/drivers/cpufreq/cpufreq_governor.h
+++ b/drivers/cpufreq/cpufreq_governor.h
@@ -25,11 +25,11 @@
 /*
  * The polling frequency depends on the capability of the processor. Default
  * polling frequency is 1000 times the transition latency of the processor. The
- * governor will work on any processor with transition latency <= 10mS, using
+ * governor will work on any processor with transition latency <= 10ms, using
  * appropriate sampling rate.
  *
- * For CPUs with transition latency > 10mS (mostly drivers with CPUFREQ_ETERNAL)
- * this governor will not work. All times here are in uS.
+ * For CPUs with transition latency > 10ms (mostly drivers with CPUFREQ_ETERNAL)
+ * this governor will not work. All times here are in us (micro seconds).
  */
 #define MIN_SAMPLING_RATE_RATIO   (2)
 #define LATENCY_MULTIPLIER   (1000)
@@ -162,7 +162,7 @@ struct cs_cpu_dbs_info_s {
  unsigned int enable:1;
 };
 
-/* Per policy Governers sysfs tunables */
+/* Per policy Governors sysfs tunables */
 struct od_dbs_tuners {
  unsigned int ignore_nice_load;
  unsigned int sampling_rate;
@@ -181,7 +181,7 @@ struct cs_dbs_tuners {
  unsigned int freq_step;
 };
 
-/* Common Governer data across policies */
+/* Common Governor data across policies */
 struct dbs_data;
 struct common_dbs_data {
  /* Common across governors */
@@ -205,7 +205,7 @@ struct common_dbs_data {
  void *gov_ops;
 };
 
-/* Governer Per policy data */
+/* Governor Per policy data */
 struct dbs_data {
  struct common_dbs_data *cdata;
  unsigned int min_sampling_rate;
-- 
1.7.1