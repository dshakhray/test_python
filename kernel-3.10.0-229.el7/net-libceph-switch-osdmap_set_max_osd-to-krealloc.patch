From 1b64615b9d0b16fa81bf31916ffe940a3e3c7566 Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:25:13 -0400
Subject: [net] libceph: switch osdmap_set_max_osd() to krealloc()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-207-git-send-email-sweil@redhat.com>
Patchwork-id: 89841
O-Subject: [PATCH 206/303] libceph: switch osdmap_set_max_osd() to krealloc()
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Ilya Dryomov <ilya.dryomov@inktank.com>

Use krealloc() instead of rolling our own.  (krealloc() with a NULL
first argument acts as a kmalloc()).  Properly initalize the new array
elements.  This is needed to make future additions to osdmap easier.

Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>
Reviewed-by: Alex Elder <elder@linaro.org>
(cherry picked from commit 4d60351f9089ef0f39d73c0b6a103e61fc0ed187)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ceph/osdmap.c b/net/ceph/osdmap.c
index 0ba3062..a350286 100644
--- a/net/ceph/osdmap.c
+++ b/net/ceph/osdmap.c
@@ -646,38 +646,40 @@ void ceph_osdmap_destroy(struct ceph_osdmap *map)
 }
 
 /*
- * adjust max osd value.  reallocate arrays.
+ * Adjust max_osd value, (re)allocate arrays.
+ *
+ * The new elements are properly initialized.
  */
 static int osdmap_set_max_osd(struct ceph_osdmap *map, int max)
 {
  u8 *state;
- struct ceph_entity_addr *addr;
  u32 *weight;
+ struct ceph_entity_addr *addr;
+ int i;
 
- state = kcalloc(max, sizeof(*state), GFP_NOFS);
- addr = kcalloc(max, sizeof(*addr), GFP_NOFS);
- weight = kcalloc(max, sizeof(*weight), GFP_NOFS);
- if (state == NULL || addr == NULL || weight == NULL) {
+ state = krealloc(map->osd_state, max*sizeof(*state), GFP_NOFS);
+ weight = krealloc(map->osd_weight, max*sizeof(*weight), GFP_NOFS);
+ addr = krealloc(map->osd_addr, max*sizeof(*addr), GFP_NOFS);
+ if (!state || !weight || !addr) {
   kfree(state);
-  kfree(addr);
   kfree(weight);
+  kfree(addr);
+
   return -ENOMEM;
  }
 
- /* copy old? */
- if (map->osd_state) {
-  memcpy(state, map->osd_state, map->max_osd*sizeof(*state));
-  memcpy(addr, map->osd_addr, map->max_osd*sizeof(*addr));
-  memcpy(weight, map->osd_weight, map->max_osd*sizeof(*weight));
-  kfree(map->osd_state);
-  kfree(map->osd_addr);
-  kfree(map->osd_weight);
+ for (i = map->max_osd; i < max; i++) {
+  state[i] = 0;
+  weight[i] = CEPH_OSD_OUT;
+  memset(addr + i, 0, sizeof(*addr));
  }
 
  map->osd_state = state;
  map->osd_weight = weight;
  map->osd_addr = addr;
+
  map->max_osd = max;
+
  return 0;
 }
 
-- 
1.7.1