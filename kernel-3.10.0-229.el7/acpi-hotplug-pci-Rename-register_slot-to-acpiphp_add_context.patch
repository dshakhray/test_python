From 53ad3b01ddff1b46ffda6ba78d156d65efe7af40 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Fri, 19 Sep 2014 12:29:19 -0400
Subject: [acpi] hotplug/pci: Rename register_slot() to acpiphp_add_context()

Message-id: <1411129776-21656-45-git-send-email-prarit@redhat.com>
Patchwork-id: 96397
O-Subject: [RHEL7.1 PATCH BZ 1141846 44/61] ACPI / hotplug / PCI: Rename register_slot() to acpiphp_add_context()
Bugzilla: 1141846
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Myron Stowe <mstowe@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1141846

commit 3799c5a032aefb258e2a19dfdb1e3780b78ee3ad
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Sun Feb 16 00:12:00 2014 +0100

    ACPI / hotplug / PCI: Rename register_slot() to acpiphp_add_context()

    The name of register_slot() doesn't really reflect what the function
    is does, so rename it to acpiphp_add_context() and add a proper
    kerneldoc comment to it.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Myron Stowe <mstowe@redhat.com>
Cc: Andy Gospodarek <agospoda@redhat.com>
Cc: Tony Camuso <tcamuso@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/hotplug/acpiphp_glue.c b/drivers/pci/hotplug/acpiphp_glue.c
index a64ebf9..4bfb155 100644
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@ -255,9 +255,15 @@ static void acpiphp_dock_release(void *data)
  put_bridge(context->func.parent);
 }
 
-/* callback routine to register each ACPI PCI slot object */
-static acpi_status register_slot(acpi_handle handle, u32 lvl, void *data,
-     void **rv)
+/**
+ * acpiphp_add_context - Add ACPIPHP context to an ACPI device object.
+ * @handle: ACPI handle of the object to add a context to.
+ * @lvl: Not used.
+ * @data: The object's parent ACPIPHP bridge.
+ * @rv: Not used.
+ */
+static acpi_status acpiphp_add_context(acpi_handle handle, u32 lvl, void *data,
+           void **rv)
 {
  struct acpiphp_bridge *bridge = data;
  struct acpiphp_context *context;
@@ -930,14 +936,14 @@ void acpiphp_enumerate_slots(struct pci_bus *bus)
   acpi_unlock_hp_context();
  }
 
- /* must be added to the list prior to calling register_slot */
+ /* Must be added to the list prior to calling acpiphp_add_context(). */
  mutex_lock(&bridge_mutex);
  list_add(&bridge->list, &bridge_list);
  mutex_unlock(&bridge_mutex);
 
  /* register all slot objects under this bridge */
  status = acpi_walk_namespace(ACPI_TYPE_DEVICE, handle, 1,
-         register_slot, NULL, bridge, NULL);
+         acpiphp_add_context, NULL, bridge, NULL);
  if (ACPI_FAILURE(status)) {
   acpi_handle_err(handle, "failed to register slots\n");
   cleanup_bridge(bridge);
-- 
1.7.1