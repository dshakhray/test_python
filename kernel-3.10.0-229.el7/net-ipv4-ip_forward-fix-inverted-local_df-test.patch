From 53f917747b950c479cb046629c877e84e61bb622 Mon Sep 17 00:00:00 2001
From: Florian Westphal <fwestpha@redhat.com>
Date: Sat, 14 Jun 2014 22:58:18 -0400
Subject: [net] ipv4: ip_forward: fix inverted local_df test

Message-id: <1402786701-27071-4-git-send-email-fwestpha@redhat.com>
Patchwork-id: 83972
O-Subject: [PATCH 3/6] [RHEL7.1 net] net: ipv4: ip_forward: fix inverted local_df test
Bugzilla: 1109214
RH-Acked-by: Vlad Yasevich <vyasevic@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>

BZ: 1109214

commit ca6c5d4ad216d5942ae544bbf02503041bd802aa
Author: Florian Westphal <fw@strlen.de>
Date:   Sun May 4 23:24:31 2014 +0200

    net: ipv4: ip_forward: fix inverted local_df test

    local_df means 'ignore DF bit if set', so if its set we're
    allowed to perform ip fragmentation.

    This wasn't noticed earlier because the output path also drops such skbs
    (and emits needed icmp error) and because netfilter ip defrag did not
    set local_df until couple of days ago.

    Only difference is that DF-packets-larger-than MTU now discarded
    earlier (f.e. we avoid pointless netfilter postrouting trip).

    While at it, drop the repeated test ip_exceeds_mtu, checking it once
    is enough...

    Fixes: fe6cc55f3a9 ("net: ip, ipv6: handle gso skbs in forwarding path")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Florian Westphal <fwestpha@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ipv4/ip_forward.c b/net/ipv4/ip_forward.c
index 98d7e53..bd1c5ba 100644
--- a/net/ipv4/ip_forward.c
+++ b/net/ipv4/ip_forward.c
@@ -42,12 +42,12 @@
 static bool ip_may_fragment(const struct sk_buff *skb)
 {
  return unlikely((ip_hdr(skb)->frag_off & htons(IP_DF)) == 0) ||
-        !skb->local_df;
+  skb->local_df;
 }
 
 static bool ip_exceeds_mtu(const struct sk_buff *skb, unsigned int mtu)
 {
- if (skb->len <= mtu || skb->local_df)
+ if (skb->len <= mtu)
   return false;
 
  if (skb_is_gso(skb) && skb_gso_network_seglen(skb) <= mtu)
-- 
1.7.1