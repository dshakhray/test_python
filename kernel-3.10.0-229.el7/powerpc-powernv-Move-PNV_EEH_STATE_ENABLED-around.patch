From 6c1bc0bdf8a4cb3c2d998ce4087afc698e695133 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:11:46 -0400
Subject: [powerpc] powernv: Move PNV_EEH_STATE_ENABLED around

Message-id: <1410545655-205645-478-git-send-email-dzickus@redhat.com>
Patchwork-id: 94595
O-Subject: [RHEL7 PATCH 477/626] powerpc/powernv: Move PNV_EEH_STATE_ENABLED around
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit f5bc6b70d2f1e4d7c6d2956e9e66a6a55821460d
Author: Gavin Shan <gwshan@linux.vnet.ibm.com>
Date:   Thu Apr 24 18:00:09 2014 +1000

    powerpc/powernv: Move PNV_EEH_STATE_ENABLED around

    The flag PNV_EEH_STATE_ENABLED is put into pnv_phb::eeh_state,
    which is protected by CONFIG_EEH. We needn't that. Instead, we
    can have pnv_phb::flags and maintain all flags there, which is
    the purpose of the patch. The patch also renames PNV_EEH_STATE_ENABLED
    to PNV_PHB_FLAG_EEH.

    Signed-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/platforms/powernv/eeh-ioda.c b/arch/powerpc/platforms/powernv/eeh-ioda.c
index 91da57d..c50ba8c 100644
--- a/arch/powerpc/platforms/powernv/eeh-ioda.c
+++ b/arch/powerpc/platforms/powernv/eeh-ioda.c
@@ -154,7 +154,7 @@ static int ioda_eeh_post_init(struct pci_controller *hose)
  }
 #endif
 
- phb->eeh_state |= PNV_EEH_STATE_ENABLED;
+ phb->flags |= PNV_PHB_FLAG_EEH;
 
  return 0;
 }
diff --git a/arch/powerpc/platforms/powernv/pci.c b/arch/powerpc/platforms/powernv/pci.c
index 99195ce..2e2c2c3 100644
--- a/arch/powerpc/platforms/powernv/pci.c
+++ b/arch/powerpc/platforms/powernv/pci.c
@@ -426,7 +426,7 @@ int pnv_pci_cfg_read(struct device_node *dn,
  if (phb_pe && (phb_pe->state & EEH_PE_ISOLATED))
   return PCIBIOS_SUCCESSFUL;
 
- if (phb->eeh_state & PNV_EEH_STATE_ENABLED) {
+ if (phb->flags & PNV_PHB_FLAG_EEH) {
   if (*val == EEH_IO_ERROR_VALUE(size) &&
       eeh_dev_check_failure(of_node_to_eeh_dev(dn)))
    return PCIBIOS_DEVICE_NOT_FOUND;
@@ -464,12 +464,8 @@ int pnv_pci_cfg_write(struct device_node *dn,
  }
 
  /* Check if the PHB got frozen due to an error (no response) */
-#ifdef CONFIG_EEH
- if (!(phb->eeh_state & PNV_EEH_STATE_ENABLED))
+ if (!(phb->flags & PNV_PHB_FLAG_EEH))
   pnv_pci_config_check_eeh(phb, dn);
-#else
- pnv_pci_config_check_eeh(phb, dn);
-#endif
 
  return PCIBIOS_SUCCESSFUL;
 }
diff --git a/arch/powerpc/platforms/powernv/pci.h b/arch/powerpc/platforms/powernv/pci.h
index 35148f6..cb4ca70 100644
--- a/arch/powerpc/platforms/powernv/pci.h
+++ b/arch/powerpc/platforms/powernv/pci.h
@@ -80,24 +80,23 @@ struct pnv_eeh_ops {
  int (*configure_bridge)(struct eeh_pe *pe);
  int (*next_error)(struct eeh_pe **pe);
 };
-
-#define PNV_EEH_STATE_ENABLED (1 << 0) /* EEH enabled */
-
 #endif /* CONFIG_EEH */
 
+#define PNV_PHB_FLAG_EEH (1 << 0)
+
 struct pnv_phb {
  struct pci_controller *hose;
  enum pnv_phb_type type;
  enum pnv_phb_model model;
  u64   hub_id;
  u64   opal_id;
+ int   flags;
  void __iomem  *regs;
  int   initialized;
  spinlock_t  lock;
 
 #ifdef CONFIG_EEH
  struct pnv_eeh_ops *eeh_ops;
- int   eeh_state;
 #endif
 
 #ifdef CONFIG_DEBUG_FS
-- 
1.7.1