From 23ee54a33df18729bfd97e14fd2e206b984b159d Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Tue, 16 Sep 2014 20:18:18 -0400
Subject: [fs] nfsd: make NFSv2 null terminate symlink data

Message-id: <1410898849-22126-15-git-send-email-bfields@redhat.com>
Patchwork-id: 95699
O-Subject: [Patch RHEL7 014/165] nfsd: make NFSv2 null terminate symlink data
Bugzilla: 1044798 1123721 1141932
RH-Acked-by: Benjamin Coddington <bcodding@redhat.com>
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

It's simple enough for NFSv2 to null-terminate the symlink data.

A bit weird (it depends on knowing that we've already read the following
byte, which is either padding or part of the mode), but no worse than
the conditional kstrdup it otherwise relies on in nfsd_symlink().

Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: 0aeae33f5d5fbd4af775e7c84795db9254d4a165
Bugzilla: 1044798
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfsproc.c b/fs/nfsd/nfsproc.c
index 54c6b3d..aebe23c 100644
--- a/fs/nfsd/nfsproc.c
+++ b/fs/nfsd/nfsproc.c
@@ -403,8 +403,11 @@ nfsd_proc_symlink(struct svc_rqst *rqstp, struct nfsd_symlinkargs *argp,
 
  fh_init(&newfh, NFS_FHSIZE);
  /*
-  * Create the link, look up new file and set attrs.
+  * Crazy hack: the request fits in a page, and already-decoded
+  * attributes follow argp->tname, so it's safe to just write a
+  * null to ensure it's null-terminated:
   */
+ argp->tname[argp->tlen] = '\0';
  nfserr = nfsd_symlink(rqstp, &argp->ffh, argp->fname, argp->flen,
        argp->tname, argp->tlen,
         &newfh, &argp->attrs);
-- 
1.7.1