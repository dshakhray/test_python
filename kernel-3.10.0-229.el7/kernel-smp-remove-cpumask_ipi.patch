From a8b6876607b6dd3d24708413208d1e163bdbbe2f Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Wed, 11 Jun 2014 11:53:07 -0400
Subject: [kernel] smp: remove cpumask_ipi

Message-id: <1402487594-26332-8-git-send-email-prarit@redhat.com>
Patchwork-id: 83635
O-Subject: [RHEL7.1 PATCH BZ 1105192 07/14] kernel/smp.c: remove cpumask_ipi
Bugzilla: 1105192
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Neil Horman <nhorman@redhat.com>

commit 73f945505b9bf798d8c3ee830cb330dd6d7fb4c7
Author: Roman Gushchin <klamm@yandex-team.ru>
Date:   Thu Jan 30 15:45:48 2014 -0800

    kernel/smp.c: remove cpumask_ipi

    After commit 9a46ad6d6df3 ("smp: make smp_call_function_many() use logic
    similar to smp_call_function_single()"), cfd->cpumask is accessed only
    in smp_call_function_many().  So there is no more need to copy it into
    cfd->cpumask_ipi before putting csd into the list.  The cpumask_ipi
    field is obsolete and can be removed.

    Signed-off-by: Roman Gushchin <klamm@yandex-team.ru>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Wang YanQing <udknight@gmail.com>
    Cc: Xie XiuQi <xiexiuqi@huawei.com>
    Cc: Shaohua Li <shli@fusionio.com>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/kernel/smp.c b/kernel/smp.c
index 4ea615b..fde9307 100644
--- a/kernel/smp.c
+++ b/kernel/smp.c
@@ -24,7 +24,6 @@ enum {
 struct call_function_data {
  struct call_single_data __percpu *csd;
  cpumask_var_t  cpumask;
- cpumask_var_t  cpumask_ipi;
 };
 
 static DEFINE_PER_CPU_SHARED_ALIGNED(struct call_function_data, cfd_data);
@@ -43,14 +42,8 @@ hotplug_cfd(struct notifier_block *nfb, unsigned long action, void *hcpu)
   if (!zalloc_cpumask_var_node(&cfd->cpumask, GFP_KERNEL,
     cpu_to_node(cpu)))
    return notifier_from_errno(-ENOMEM);
-  if (!zalloc_cpumask_var_node(&cfd->cpumask_ipi, GFP_KERNEL,
-    cpu_to_node(cpu))) {
-   free_cpumask_var(cfd->cpumask);
-   return notifier_from_errno(-ENOMEM);
-  }
   cfd->csd = alloc_percpu(struct call_single_data);
   if (!cfd->csd) {
-   free_cpumask_var(cfd->cpumask_ipi);
    free_cpumask_var(cfd->cpumask);
    return notifier_from_errno(-ENOMEM);
   }
@@ -63,7 +56,6 @@ hotplug_cfd(struct notifier_block *nfb, unsigned long action, void *hcpu)
  case CPU_DEAD:
  case CPU_DEAD_FROZEN:
   free_cpumask_var(cfd->cpumask);
-  free_cpumask_var(cfd->cpumask_ipi);
   free_percpu(cfd->csd);
   break;
 #endif
@@ -384,13 +376,6 @@ void smp_call_function_many(const struct cpumask *mask,
  if (unlikely(!cpumask_weight(cfd->cpumask)))
   return;
 
- /*
-  * After we put an entry into the list, cfd->cpumask may be cleared
-  * again when another CPU sends another IPI for a SMP function call, so
-  * cfd->cpumask will be zero.
-  */
- cpumask_copy(cfd->cpumask_ipi, cfd->cpumask);
-
  for_each_cpu(cpu, cfd->cpumask) {
   struct call_single_data *csd = per_cpu_ptr(cfd->csd, cpu);
 
@@ -401,7 +386,7 @@ void smp_call_function_many(const struct cpumask *mask,
  }
 
  /* Send a message to all CPUs in the map */
- arch_send_call_function_ipi_mask(cfd->cpumask_ipi);
+ arch_send_call_function_ipi_mask(cfd->cpumask);
 
  if (wait) {
   for_each_cpu(cpu, cfd->cpumask) {
-- 
1.7.1