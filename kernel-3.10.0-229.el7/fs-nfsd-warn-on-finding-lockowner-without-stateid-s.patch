From 50e22d869761b5e850823bb02449e58d55c89025 Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Mon, 23 Jun 2014 21:50:29 -0400
Subject: [fs] nfsd: warn on finding lockowner without stateid's

Message-id: <1403560314-32525-88-git-send-email-bfields@redhat.com>
Patchwork-id: 84575
O-Subject: [Patch RHEL7 087/172] nfsd4: warn on finding lockowner without stateid's
Bugzilla: 1111719
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

The current code assumes a one-to-one lockowner<->lock stateid
correspondance.

Cc: stable@vger.kernel.org
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: 27b11428b7de097c42f205beabb1764f4365443b
Bugzilla: 1111719
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4state.c b/fs/nfsd/nfs4state.c
index 6615114..c46d1bc 100644
--- a/fs/nfsd/nfs4state.c
+++ b/fs/nfsd/nfs4state.c
@@ -4173,6 +4173,10 @@ static bool same_lockowner_ino(struct nfs4_lockowner *lo, struct inode *inode, c
 
  if (!same_owner_str(&lo->lo_owner, owner, clid))
   return false;
+ if (list_empty(&lo->lo_owner.so_stateids)) {
+  WARN_ON_ONCE(1);
+  return false;
+ }
  lst = list_first_entry(&lo->lo_owner.so_stateids,
           struct nfs4_ol_stateid, st_perstateowner);
  return lst->st_file->fi_inode == inode;
-- 
1.7.1