From 69f5bee0d2bb01271ea01c1cc1c810be8276b7af Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:49:50 -0400
Subject: [tools] lib/traceevent: Update kvm plugin with is_writable_pte helper

Message-id: <1408953210-26343-103-git-send-email-jolsa@redhat.com>
Patchwork-id: 88830
O-Subject: [PATCH RHEL7.1 BZ1133083 102/322] tools lib traceevent: Update kvm plugin with is_writable_pte helper
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 6d65894bc028d0342829ea1e64c9e9efad571124
Author: Jiri Olsa <jolsa@redhat.com>
Date: Tue Dec 3 14:09:41 2013 +0100

description
===========
Adding is_writable_pte print helper function, so the
kvmmmu:fast_page_fault print format gets resolved properly.

The diff of 'perf script' output generated by old and new code:
(data was generated by 'perf record -e 'kvm:*,kvmmmu:*' -a')

  --- script.kvm.old
  +++ script.kvm.new
  - qemu-system-x86  3290 [002] 10708.755312: kvmmmu:fast_page_fault: [FAILED TO PARSE] vcpu_id=0 gva=4094486080 error_code=3 sptep=0xffff88019f1e3670 old_spte=336391285 new_spte=336391287 retry=1
  + qemu-system-x86  3290 [002] 10708.755312: kvmmmu:fast_page_fault: vcpu 0 gva f40ce640 error_code P|W sptep 0xffff88019f1e3670 old 0x140cec75 new 140cec77 spurious 0 fixed 1
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/lib/traceevent/plugin_kvm.c b/tools/lib/traceevent/plugin_kvm.c
index be9d9c6..a0e282c 100644
--- a/tools/lib/traceevent/plugin_kvm.c
+++ b/tools/lib/traceevent/plugin_kvm.c
@@ -389,6 +389,16 @@ static int kvm_mmu_get_page_handler(struct trace_seq *s,
  return kvm_mmu_print_role(s, record, event, context);
 }
 
+#define PT_WRITABLE_SHIFT 1
+#define PT_WRITABLE_MASK (1ULL << PT_WRITABLE_SHIFT)
+
+static unsigned long long
+process_is_writable_pte(struct trace_seq *s, unsigned long long *args)
+{
+ unsigned long pte = args[0];
+ return pte & PT_WRITABLE_MASK;
+}
+
 int PEVENT_PLUGIN_LOADER(struct pevent *pevent)
 {
  init_disassembler();
@@ -415,5 +425,12 @@ int PEVENT_PLUGIN_LOADER(struct pevent *pevent)
  pevent_register_event_handler(pevent, -1, "kvmmmu",
    "kvm_mmu_prepare_zap_page", kvm_mmu_print_role,
    NULL);
+
+ pevent_register_print_function(pevent,
+           process_is_writable_pte,
+           PEVENT_FUNC_ARG_INT,
+           "is_writable_pte",
+           PEVENT_FUNC_ARG_LONG,
+           PEVENT_FUNC_ARG_VOID);
  return 0;
 }
-- 
1.7.1