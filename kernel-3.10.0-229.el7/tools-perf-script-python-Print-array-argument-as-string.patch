From ecf534d29f590333d0023f6d5671680e3ba07955 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:08:44 -0400
Subject: [tools] perf/script/python: Print array argument as string

Message-id: <1410181752-25631-280-git-send-email-jolsa@redhat.com>
Patchwork-id: 91916
O-Subject: [PATCH RHEL7.1 BZ1134356 279/307] perf script/python: Print array argument as string
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit e646fe730a324098a718f1c9b2f349efb99d5457
Author: Namhyung Kim <namhyung@kernel.org>
Date: Thu May 29 13:44:55 2014 +0900

description
===========
With the Sebastian's change of handling num array argument (of raw
syscall enter), the script still failed to work like this:

  $ perf record -e raw_syscalls:* sleep 1
  $ perf script -g python
  $ perf script -s perf-script.py
  ...
  Traceback (most recent call last):
    File "perf-script.py", line 42, in raw_syscalls__sys_enter
      (id, args),
  TypeError: %u format: a number is required, not list
  Fatal Python error: problem in Python trace event handler
  Aborted (core dumped)

This is because the generated script tries to print the array arg as
unsigned integer (%u).  Since the python seems to convert arguments to
strings by default, just using %s solved the problem for me.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/scripting-engines/trace-event-python.c b/tools/perf/util/scripting-engines/trace-event-python.c
index c3de097..1c41932 100644
--- a/tools/perf/util/scripting-engines/trace-event-python.c
+++ b/tools/perf/util/scripting-engines/trace-event-python.c
@@ -623,6 +623,7 @@ static int python_generate_script(struct pevent *pevent, const char *outfile)
    fprintf(ofp, "%s=", f->name);
    if (f->flags & FIELD_IS_STRING ||
        f->flags & FIELD_IS_FLAG ||
+       f->flags & FIELD_IS_ARRAY ||
        f->flags & FIELD_IS_SYMBOLIC)
     fprintf(ofp, "%%s");
    else if (f->flags & FIELD_IS_SIGNED)
-- 
1.7.1