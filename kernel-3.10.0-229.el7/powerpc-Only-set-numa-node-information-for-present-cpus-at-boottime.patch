From f991f38e69a2471ec962f2f36073eff7b0f0d2de Mon Sep 17 00:00:00 2001
From: Gustavo Duarte <gduarte@redhat.com>
Date: Tue, 4 Nov 2014 22:07:12 -0500
Subject: [powerpc] Only set numa node information for present cpus at boottime

Message-id: <1415138837-28185-4-git-send-email-gduarte@redhat.com>
Patchwork-id: 99390
O-Subject: [RHEL7.1 PATCH BZ 1150097 3/8] powerpc: Only set numa node information for present cpus at boottime
Bugzilla: 1150097
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

BZ 1150097
Upstream Status: bc3c4327c92b9ceb9a6356ec64d1b2ab2dc851f9

commit bc3c4327c92b9ceb9a6356ec64d1b2ab2dc851f9
Author: Li Zhong <zhong@linux.vnet.ibm.com>
Date:   Wed Aug 27 17:34:00 2014 +0800

    powerpc: Only set numa node information for present cpus at boottime

    As Nish suggested, it makes more sense to init the numa node informatiion
    for present cpus at boottime, which could also avoid WARN_ON(1) in
    numa_setup_cpu().

    With this change, we also need to change the smp_prepare_cpus() to set up
    numa information only on present cpus.

    For those possible, but not present cpus, their numa information
    will be set up after they are started, as the original code did before commit
    2fabf084b6ad.

    Cc: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>
    Cc: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Li Zhong <zhong@linux.vnet.ibm.com>
    Acked-by: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>
    Tested-by: Cyril Bur <cyril.bur@au1.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kernel/smp.c b/arch/powerpc/kernel/smp.c
index 5a4499c..9ec229c 100644
--- a/arch/powerpc/kernel/smp.c
+++ b/arch/powerpc/kernel/smp.c
@@ -379,8 +379,11 @@ void __init smp_prepare_cpus(unsigned int max_cpus)
   /*
    * numa_node_id() works after this.
    */
-  set_cpu_numa_node(cpu, numa_cpu_lookup_table[cpu]);
-  set_cpu_numa_mem(cpu, local_memory_node(numa_cpu_lookup_table[cpu]));
+  if (cpu_present(cpu)) {
+   set_cpu_numa_node(cpu, numa_cpu_lookup_table[cpu]);
+   set_cpu_numa_mem(cpu,
+    local_memory_node(numa_cpu_lookup_table[cpu]));
+  }
  }
 
  cpumask_set_cpu(boot_cpuid, cpu_sibling_mask(boot_cpuid));
@@ -728,6 +731,9 @@ void start_secondary(void *unused)
  }
  traverse_core_siblings(cpu, true);
 
+ set_numa_node(numa_cpu_lookup_table[cpu]);
+ set_numa_mem(local_memory_node(numa_cpu_lookup_table[cpu]));
+
  smp_wmb();
  notify_cpu_starting(cpu);
  set_cpu_online(cpu, true);
diff --git a/arch/powerpc/mm/numa.c b/arch/powerpc/mm/numa.c
index 853bc48..efc8d58 100644
--- a/arch/powerpc/mm/numa.c
+++ b/arch/powerpc/mm/numa.c
@@ -1128,7 +1128,7 @@ void __init do_init_bootmem(void)
   * even before we online them, so that we can use cpu_to_{node,mem}
   * early in boot, cf. smp_prepare_cpus().
   */
- for_each_possible_cpu(cpu) {
+ for_each_present_cpu(cpu) {
   numa_setup_cpu((unsigned long)cpu);
  }
 }
-- 
1.7.1