From 2eb272e07fe220b1b92c90b2781e2ae3d7685dec Mon Sep 17 00:00:00 2001
From: Jes Sorensen <Jes.Sorensen@redhat.com>
Date: Mon, 1 Sep 2014 09:26:01 -0400
Subject: [md] avoid possible spinning md thread at shutdown

Message-id: <1409563584-9000-60-git-send-email-Jes.Sorensen@redhat.com>
Patchwork-id: 89986
O-Subject: [RHEL7.1 PATCH 59/82] md: avoid possible spinning md thread at shutdown.
Bugzilla: 1085530
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

From: NeilBrown <neilb@suse.de>

If an md array with externally managed metadata (e.g. DDF or IMSM)
is in use, then we should not set safemode==2 at shutdown because:

1/ this is ineffective: user-space need to be involved in any 'safemode' handling,
2/ The safemode management code doesn't cope with safemode==2 on external metadata
   and md_check_recover enters an infinite loop.

Even at shutdown, an infinite-looping process can be problematic, so this
could cause shutdown to hang.

Cc: stable@vger.kernel.org (any kernel)
Signed-off-by: NeilBrown <neilb@suse.de>
(cherry picked from commit 0f62fb220aa4ebabe8547d3a9ce4a16d3c045f21)
Signed-off-by: Jes Sorensen <Jes.Sorensen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/md.c b/drivers/md/md.c
index f91c232..760a144 100644
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@ -8516,7 +8516,8 @@ static int md_notify_reboot(struct notifier_block *this,
   if (mddev_trylock(mddev)) {
    if (mddev->pers)
     __md_stop_writes(mddev);
-   mddev->safemode = 2;
+   if (mddev->persistent)
+    mddev->safemode = 2;
    mddev_unlock(mddev);
   }
   need_delay = 1;
-- 
1.7.1