From 9a500072a74127394df83d4584543b60f6bd7ad7 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:22:58 -0400
Subject: [tools] perf: Enforce 1 as lower limit for perf_event_max_sample_rate

Message-id: <1408462094-14194-10-git-send-email-jolsa@redhat.com>
Patchwork-id: 88001
O-Subject: [PATCH RHEL7.1 BZ1131394 009/325] perf: Enforce 1 as lower limit for perf_event_max_sample_rate
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 723478c8a471403c53cf144999701f6e0c4bbd11
Author: Knut Petersen <Knut_Petersen@t-online.de>
Date: Wed Sep 25 14:29:37 2013 +0200

description
===========
/proc/sys/kernel/perf_event_max_sample_rate will accept
negative values as well as 0.

Negative values are unreasonable, and 0 causes a
divide by zero exception in perf_proc_update_handler.

This patch enforces a lower limit of 1.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/kernel/events/core.c b/kernel/events/core.c
index 6f5184b..c849f32 100644
--- a/kernel/events/core.c
+++ b/kernel/events/core.c
@@ -193,7 +193,7 @@ int perf_proc_update_handler(struct ctl_table *table, int write,
   void __user *buffer, size_t *lenp,
   loff_t *ppos)
 {
- int ret = proc_dointvec(table, write, buffer, lenp, ppos);
+ int ret = proc_dointvec_minmax(table, write, buffer, lenp, ppos);
 
  if (ret || !write)
   return ret;
diff --git a/kernel/sysctl.c b/kernel/sysctl.c
index da8c61b..db9ef8f 100644
--- a/kernel/sysctl.c
+++ b/kernel/sysctl.c
@@ -1050,6 +1050,7 @@ static struct ctl_table kern_table[] = {
   .maxlen  = sizeof(sysctl_perf_event_sample_rate),
   .mode  = 0644,
   .proc_handler = perf_proc_update_handler,
+  .extra1  = &one,
  },
  {
   .procname = "perf_cpu_time_max_percent",
-- 
1.7.1