From 819915686b79aa80b992e89c45acab4c88b746ff Mon Sep 17 00:00:00 2001
From: Alexander Duyck <alexander.h.duyck@redhat.com>
Date: Tue, 23 Dec 2014 16:56:57 -0500
Subject: [net] gre: fix the inner mac header in nbma tunnel xmit path

Message-id: <20141223165657.2863.85042.stgit@ahduyck-vm-rhel7>
Patchwork-id: 102387
O-Subject: [RHEL7.1 net PATCH] gre: fix the inner mac header in nbma tunnel xmit path
Bugzilla: 1168608
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Flavio Leitner <fbl@redhat.com>
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: Hannes Frederic Sowa <hannes@redhat.com>

Bugzilla: 1168608
Brew Build: 8433842

Backport of upstream commit: 8a0033a947

 commit 8a0033a947403569caeca45fa5e6f7ba60d51974
 Author: Timo Teras <timo.teras@iki.fi>
 Date:   Mon Dec 15 09:24:13 2014 +0200

    gre: fix the inner mac header in nbma tunnel xmit path

    The NBMA GRE tunnels temporarily push GRE header that contain the
    per-packet NBMA destination on the skb via header ops early in xmit
    path. It is the later pulled before the real GRE header is constructed.

    The inner mac was thus set differently in nbma case: the GRE header
    has been pushed by neighbor layer, and mac header points to beginning
    of the temporary gre header (set by dev_queue_xmit).

    Now that the offloads expect mac header to point to the gre payload,
    fix the xmit patch to:
     - pull first the temporary gre header away
     - and reset mac header to point to gre payload

    This fixes tso to work again with nbma tunnels.

    Fixes: 14051f0452a2 ("gre: Use inner mac length when computing tunnel length")
    Signed-off-by: Timo Teras <timo.teras@iki.fi>
    Cc: Tom Herbert <therbert@google.com>
    Cc: Alexander Duyck <alexander.h.duyck@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Alexander Duyck <alexander.h.duyck@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ipv4/ip_gre.c b/net/ipv4/ip_gre.c
index 8cdcc75..78d6fec 100644
--- a/net/ipv4/ip_gre.c
+++ b/net/ipv4/ip_gre.c
@@ -249,10 +249,6 @@ static netdev_tx_t ipgre_xmit(struct sk_buff *skb,
  struct ip_tunnel *tunnel = netdev_priv(dev);
  const struct iphdr *tnl_params;
 
- skb = gre_handle_offloads(skb, !!(tunnel->parms.o_flags&TUNNEL_CSUM));
- if (IS_ERR(skb))
-  goto out;
-
  if (dev->header_ops) {
   /* Need space for new headers */
   if (skb_cow_head(skb, dev->needed_headroom -
@@ -265,6 +261,7 @@ static netdev_tx_t ipgre_xmit(struct sk_buff *skb,
    * to gre header.
    */
   skb_pull(skb, tunnel->hlen + sizeof(struct iphdr));
+  skb_reset_mac_header(skb);
  } else {
   if (skb_cow_head(skb, dev->needed_headroom))
    goto free_skb;
@@ -272,6 +269,10 @@ static netdev_tx_t ipgre_xmit(struct sk_buff *skb,
   tnl_params = &tunnel->parms.iph;
  }
 
+ skb = gre_handle_offloads(skb, !!(tunnel->parms.o_flags&TUNNEL_CSUM));
+ if (IS_ERR(skb))
+  goto out;
+
  __gre_xmit(skb, dev, tnl_params, skb->protocol);
 
  return NETDEV_TX_OK;
-- 
1.7.1