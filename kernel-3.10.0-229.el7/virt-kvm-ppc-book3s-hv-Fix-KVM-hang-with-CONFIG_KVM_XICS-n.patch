From 3dd5a6f53ed61bfebdb88929c549dc8afdbf9e86 Mon Sep 17 00:00:00 2001
From: David Gibson <dgibson@redhat.com>
Date: Mon, 15 Sep 2014 07:12:45 -0400
Subject: [virt] kvm/ppc: book3s/hv - Fix KVM hang with CONFIG_KVM_XICS=n

Message-id: <1410765214-16377-30-git-send-email-dgibson@redhat.com>
Patchwork-id: 94734
O-Subject: [PATCH 29/78] KVM: PPC: Book3S HV: Fix KVM hang with CONFIG_KVM_XICS=n
Bugzilla: 1123145 1123133 1123367
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1123145

Signed-off-by: David Gibson <dgibson@redhat.com>

commit 7505258c5fcb0a1cc3c76a47b4cf9506d21d10e6
Author: Anton Blanchard <anton@samba.org>
Date:   Tue Mar 25 10:47:01 2014 +1100

    KVM: PPC: Book3S HV: Fix KVM hang with CONFIG_KVM_XICS=n

    I noticed KVM is broken when KVM in-kernel XICS emulation
    (CONFIG_KVM_XICS) is disabled.

    The problem was introduced in 48eaef05 (KVM: PPC: Book3S HV: use
    xics_wake_cpu only when defined). It used CONFIG_KVM_XICS to wrap
    xics_wake_cpu, where CONFIG_PPC_ICP_NATIVE should have been
    used.

    Signed-off-by: Anton Blanchard <anton@samba.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paul Mackerras <paulus@samba.org>
    Acked-by: Scott Wood <scottwood@freescale.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kvm/book3s_hv.c b/arch/powerpc/kvm/book3s_hv.c
index 204e3a3..e620660 100644
--- a/arch/powerpc/kvm/book3s_hv.c
+++ b/arch/powerpc/kvm/book3s_hv.c
@@ -88,7 +88,7 @@ static void kvmppc_fast_vcpu_kick_hv(struct kvm_vcpu *vcpu)
 
  /* CPU points to the first thread of the core */
  if (cpu != me && cpu >= 0 && cpu < nr_cpu_ids) {
-#ifdef CONFIG_KVM_XICS
+#ifdef CONFIG_PPC_ICP_NATIVE
   int real_cpu = cpu + vcpu->arch.ptid;
   if (paca[real_cpu].kvm_hstate.xics_phys)
    xics_wake_cpu(real_cpu);
@@ -1552,9 +1552,7 @@ static void kvmppc_start_thread(struct kvm_vcpu *vcpu)
  smp_wmb();
 #if defined(CONFIG_PPC_ICP_NATIVE) && defined(CONFIG_SMP)
  if (cpu != smp_processor_id()) {
-#ifdef CONFIG_KVM_XICS
   xics_wake_cpu(cpu);
-#endif
   if (vcpu->arch.ptid)
    ++vc->n_woken;
  }
-- 
1.7.1