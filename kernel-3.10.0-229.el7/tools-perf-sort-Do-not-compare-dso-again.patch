From 947b4c4fa1153952356f3d3ed13916ba76123bab Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:50:57 -0400
Subject: [tools] perf/sort: Do not compare dso again

Message-id: <1408953210-26343-170-git-send-email-jolsa@redhat.com>
Patchwork-id: 88918
O-Subject: [PATCH RHEL7.1 BZ1133083 169/322] perf sort: Do not compare dso again
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 68f6d0224b2a19a4da4a12a5081f01776e5150df
Author: Namhyung Kim <namhyung.kim@lge.com>
Date: Wed Dec 18 14:21:10 2013 +0900

description
===========
The commit 09600e0f9ebb ("perf tools: Compare dso's also when comparing
symbols") added a comparison of dso when comparing symbol.

But if the sort key already has dso, it doesn't need to do it again
since entries have a different dso already filtered out.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/sort.c b/tools/perf/util/sort.c
index 68a4fd2..635cd8f 100644
--- a/tools/perf/util/sort.c
+++ b/tools/perf/util/sort.c
@@ -13,6 +13,7 @@ int  have_ignore_callees = 0;
 int  sort__need_collapse = 0;
 int  sort__has_parent = 0;
 int  sort__has_sym = 0;
+int  sort__has_dso = 0;
 enum sort_mode sort__mode = SORT_MODE__NORMAL;
 
 enum sort_type sort__first_dimension;
@@ -194,9 +195,11 @@ sort__sym_cmp(struct hist_entry *left, struct hist_entry *right)
   * comparing symbol address alone is not enough since it's a
   * relative address within a dso.
   */
- ret = sort__dso_cmp(left, right);
- if (ret != 0)
-  return ret;
+ if (!sort__has_dso) {
+  ret = sort__dso_cmp(left, right);
+  if (ret != 0)
+   return ret;
+ }
 
  return _sort__sym_cmp(left->ms.sym, right->ms.sym);
 }
@@ -1061,6 +1064,8 @@ int sort_dimension__add(const char *tok)
    sort__has_parent = 1;
   } else if (sd->entry == &sort_sym) {
    sort__has_sym = 1;
+  } else if (sd->entry == &sort_dso) {
+   sort__has_dso = 1;
   }
 
   __sort_dimension__add(sd, i);
-- 
1.7.1