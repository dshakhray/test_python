From 0bad1dcaa7b63f5815f7042aa236a543d9101da4 Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Wed, 29 Oct 2014 16:33:59 -0400
Subject: [fs] ext4: do not destroy ext4_groupinfo_caches if ext4_mb_init() fails

Message-id: <1414600485-1929-10-git-send-email-lczerner@redhat.com>
Patchwork-id: 98529
O-Subject: [RHEL 7.1 PATCH v2 09/55] ext4: do not destroy ext4_groupinfo_caches if ext4_mb_init() fails
Bugzilla: 1156096
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Andrey Tsyvarev <tsyvarev@ispras.ru>

BZ 1156096
https://bugzilla.redhat.com/show_bug.cgi?id=1156096

BREW 8169722
https://brewweb.devel.redhat.com/taskinfo?taskID=8169722

Upstream commit 029b10c5a8d9e9db528eea66f5728ccca56c2f27

 Caches from 'ext4_groupinfo_caches' may be in use by other mounts,
 which have already existed.  So, it is incorrect to destroy them when
 newly requested mount fails.

 Found by Linux File System Verification project (linuxtesting.org).

 Signed-off-by: Andrey Tsyvarev <tsyvarev@ispras.ru>
 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
 Reviewed-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/mballoc.c b/fs/ext4/mballoc.c
index cb60458..869e5bb 100644
--- a/fs/ext4/mballoc.c
+++ b/fs/ext4/mballoc.c
@@ -2619,7 +2619,7 @@ int ext4_mb_init(struct super_block *sb)
  sbi->s_locality_groups = alloc_percpu(struct ext4_locality_group);
  if (sbi->s_locality_groups == NULL) {
   ret = -ENOMEM;
-  goto out_free_groupinfo_slab;
+  goto out;
  }
  for_each_possible_cpu(i) {
   struct ext4_locality_group *lg;
@@ -2644,8 +2644,6 @@ int ext4_mb_init(struct super_block *sb)
 out_free_locality_groups:
  free_percpu(sbi->s_locality_groups);
  sbi->s_locality_groups = NULL;
-out_free_groupinfo_slab:
- ext4_groupinfo_destroy_slabs();
 out:
  kfree(sbi->s_mb_offsets);
  sbi->s_mb_offsets = NULL;
-- 
1.7.1