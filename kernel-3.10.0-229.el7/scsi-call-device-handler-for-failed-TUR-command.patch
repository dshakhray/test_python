From cd72a3f921031a23644d284672687aaeb155fe70 Mon Sep 17 00:00:00 2001
From: Ewan Milne <emilne@redhat.com>
Date: Tue, 18 Nov 2014 20:25:14 -0500
Subject: [scsi] call device handler for failed TUR command

Message-id: <1416342315-19881-2-git-send-email-emilne@redhat.com>
Patchwork-id: 100257
O-Subject: [RHEL7.1 PATCH e-stor 1/2] scsi: call device handler for failed TUR command
Bugzilla: 1153738
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Rob Evers <revers@redhat.com>

Tested: Tested by IBM and found to resolve regression from RHEL6

upstream commit e925cc431ac8285ad6e8b3fe09f6e3d8b3c30d56
Author: Christoph Hellwig <hch@infradead.org>
Date:   Thu Nov 6 15:11:22 2014 -0600

    scsi: call device handler for failed TUR command

    Multipath devices using the TUR path checker need to see the sense
    code for a failed TUR command in their device handler.  Since commit
    14216561e164671ce147458653b1fea06a we always return success for mid
    layer issued TUR commands before calling the device handler, which
    stopped the TUR path checker from working.

    Move the call to the device handler check sense method before the early
    return for TUR commands to give the device handler a chance to intercept
    them.

    Signed-off-by: Christoph Hellwig <hch@infradead.org>
    Tested-by: Wen Xiong <wenxiong@linux.vnet.ibm.com>
    Reviewed-by: Hannes Reinecke <hare@suse.de>

(Modified for RHEL7 -- code motion due to commit bc61f58e8a208c422ea7ee4ba9f35af1bfb27002,
 although upstream did not take that change, with this new commit the code will now match.)

Signed-off-by: Ewan D. Milne <emilne@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/scsi_error.c b/drivers/scsi/scsi_error.c
index 61434a8..4ad9c19 100644
--- a/drivers/scsi/scsi_error.c
+++ b/drivers/scsi/scsi_error.c
@@ -461,14 +461,6 @@ static int scsi_check_sense(struct scsi_cmnd *scmd)
 
  scsi_report_sense(sdev, &sshdr);
 
- if (scmd->cmnd[0] == TEST_UNIT_READY && scmd->scsi_done != scsi_eh_done)
-  /*
-   * nasty: for mid-layer issued TURs, we need to return the
-   * actual sense data without any recovery attempt.  For eh
-   * issued ones, we need to try to recover and interpret
-   */
-  return SUCCESS;
-
  if (scsi_sense_is_deferred(&sshdr))
   return NEEDS_RETRY;
 
@@ -482,6 +474,14 @@ static int scsi_check_sense(struct scsi_cmnd *scmd)
   /* handler does not care. Drop down to default handling */
  }
 
+ if (scmd->cmnd[0] == TEST_UNIT_READY && scmd->scsi_done != scsi_eh_done)
+  /*
+   * nasty: for mid-layer issued TURs, we need to return the
+   * actual sense data without any recovery attempt.  For eh
+   * issued ones, we need to try to recover and interpret
+   */
+  return SUCCESS;
+
  /*
   * Previous logic looked for FILEMARK, EOM or ILI which are
   * mainly associated with tapes and returned SUCCESS.
-- 
1.7.1