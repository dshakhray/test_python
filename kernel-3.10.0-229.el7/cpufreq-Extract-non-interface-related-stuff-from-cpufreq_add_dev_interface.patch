From 954a576300a22e4af8183b3e468ace1d766f485c Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:21:39 -0400
Subject: [cpufreq] Extract non-interface related stuff from cpufreq_add_dev_interface

Message-id: <1409235879-1283-6-git-send-email-prarit@redhat.com>
Patchwork-id: 89351
O-Subject: [RHEL7.1 PATCH BZ 1134639 005/185] cpufreq: Extract non-interface related stuff from cpufreq_add_dev_interface
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit e18f1682bce701ddcf88ba3651e07c7ee9b3ed60
Author: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
Date:   Tue Jul 30 04:24:23 2013 +0530

    cpufreq: Extract non-interface related stuff from cpufreq_add_dev_interface

    cpufreq_add_dev_interface() includes the work of exposing the interface
    to the device, as well as a lot of unrelated stuff. Move the latter to
    cpufreq_add_dev(), where it is more appropriate.

    Signed-off-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/cpufreq.c b/drivers/cpufreq/cpufreq.c
index d82d3db..949c027 100644
--- a/drivers/cpufreq/cpufreq.c
+++ b/drivers/cpufreq/cpufreq.c
@@ -807,11 +807,8 @@ static int cpufreq_add_dev_interface(unsigned int cpu,
          struct cpufreq_policy *policy,
          struct device *dev)
 {
- struct cpufreq_policy new_policy;
  struct freq_attr **drv_attr;
- unsigned long flags;
  int ret = 0;
- unsigned int j;
 
  /* prepare interface data */
  ret = kobject_init_and_add(&policy->kobj, &ktype_cpufreq,
@@ -843,17 +840,23 @@ static int cpufreq_add_dev_interface(unsigned int cpu,
    goto err_out_kobj_put;
  }
 
- write_lock_irqsave(&cpufreq_driver_lock, flags);
- for_each_cpu(j, policy->cpus) {
-  per_cpu(cpufreq_cpu_data, j) = policy;
-  per_cpu(cpufreq_policy_cpu, j) = policy->cpu;
- }
- write_unlock_irqrestore(&cpufreq_driver_lock, flags);
-
  ret = cpufreq_add_dev_symlink(cpu, policy);
  if (ret)
   goto err_out_kobj_put;
 
+ return ret;
+
+err_out_kobj_put:
+ kobject_put(&policy->kobj);
+ wait_for_completion(&policy->kobj_unregister);
+ return ret;
+}
+
+static void cpufreq_init_policy(struct cpufreq_policy *policy)
+{
+ struct cpufreq_policy new_policy;
+ int ret = 0;
+
  memcpy(&new_policy, policy, sizeof(struct cpufreq_policy));
  /* assure that the starting sequence is run in __cpufreq_set_policy */
  policy->governor = NULL;
@@ -868,12 +871,6 @@ static int cpufreq_add_dev_interface(unsigned int cpu,
   if (cpufreq_driver->exit)
    cpufreq_driver->exit(policy);
  }
- return ret;
-
-err_out_kobj_put:
- kobject_put(&policy->kobj);
- wait_for_completion(&policy->kobj_unregister);
- return ret;
 }
 
 #ifdef CONFIG_HOTPLUG_CPU
@@ -1020,10 +1017,19 @@ static int cpufreq_add_dev(struct device *dev, struct subsys_interface *sif)
  }
 #endif
 
+ write_lock_irqsave(&cpufreq_driver_lock, flags);
+ for_each_cpu(j, policy->cpus) {
+  per_cpu(cpufreq_cpu_data, j) = policy;
+  per_cpu(cpufreq_policy_cpu, j) = policy->cpu;
+ }
+ write_unlock_irqrestore(&cpufreq_driver_lock, flags);
+
  ret = cpufreq_add_dev_interface(cpu, policy, dev);
  if (ret)
   goto err_out_unregister;
 
+ cpufreq_init_policy(policy);
+
  kobject_uevent(&policy->kobj, KOBJ_ADD);
  up_read(&cpufreq_rwsem);
  pr_debug("initialization complete\n");
@@ -1032,8 +1038,11 @@ static int cpufreq_add_dev(struct device *dev, struct subsys_interface *sif)
 
 err_out_unregister:
  write_lock_irqsave(&cpufreq_driver_lock, flags);
- for_each_cpu(j, policy->cpus)
+ for_each_cpu(j, policy->cpus) {
   per_cpu(cpufreq_cpu_data, j) = NULL;
+  if (j != cpu)
+   per_cpu(cpufreq_policy_cpu, j) = -1;
+ }
  write_unlock_irqrestore(&cpufreq_driver_lock, flags);
 
  kobject_put(&policy->kobj);
-- 
1.7.1