From 726f87275a024b8113188786e4c9ab7c5f215116 Mon Sep 17 00:00:00 2001
From: Nikolay Aleksandrov <nikolay@redhat.com>
Date: Mon, 1 Sep 2014 13:33:04 -0400
Subject: [crypto] qat: Fix random config build warnings

Message-id: <1409578401-26943-13-git-send-email-nikolay@redhat.com>
Patchwork-id: 90089
O-Subject: [RHEL7.1 PATCH BZ 1091130 12/29] crypto: qat - Fix random config build warnings
Bugzilla: 1091130
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Herbert Xu <herbert.xu@redhat.com>

From: Tadeusz Struk <tadeusz.struk@intel.com>

Fix random config build warnings:

Implicit-function-declaration '__raw_writel'
Cast to pointer from integer of different size [-Wint-to-pointer-cast]

Reviewed-by: Bruce Allan <bruce.w.allan@intel.com>
Signed-off-by: Tadeusz Struk <tadeusz.struk@intel.com>
Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit bce3cc61d3d3e31cb7cd054bb35a3bdd0ec36c71)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/crypto/qat/qat_common/adf_accel_devices.h b/drivers/crypto/qat/qat_common/adf_accel_devices.h
index f3206d9..9282381 100644
--- a/drivers/crypto/qat/qat_common/adf_accel_devices.h
+++ b/drivers/crypto/qat/qat_common/adf_accel_devices.h
@@ -50,6 +50,7 @@
 #include <linux/atomic.h>
 #include <linux/list.h>
 #include <linux/proc_fs.h>
+#include <linux/io.h>
 #include "adf_cfg_common.h"
 
 #define PCI_VENDOR_ID_INTEL 0x8086
diff --git a/drivers/crypto/qat/qat_common/qat_algs.c b/drivers/crypto/qat/qat_common/qat_algs.c
index 193b753..c4e8010 100644
--- a/drivers/crypto/qat/qat_common/qat_algs.c
+++ b/drivers/crypto/qat/qat_common/qat_algs.c
@@ -745,7 +745,7 @@ void qat_alg_callback(void *resp)
 {
  struct icp_qat_fw_la_resp *qat_resp = resp;
  struct qat_crypto_request *qat_req =
-   (void *)(dma_addr_t)qat_resp->opaque_data;
+    (void *)(__force long)qat_resp->opaque_data;
  struct qat_alg_session_ctx *ctx = qat_req->ctx;
  struct qat_crypto_instance *inst = ctx->inst;
  struct aead_request *areq = qat_req->areq;
@@ -779,7 +779,7 @@ static int qat_alg_dec(struct aead_request *areq)
  *msg = ctx->dec_fw_req_tmpl;
  qat_req->ctx = ctx;
  qat_req->areq = areq;
- qat_req->req.comn_mid.opaque_data = (uint64_t)(dma_addr_t)qat_req;
+ qat_req->req.comn_mid.opaque_data = (uint64_t)(__force long)qat_req;
  qat_req->req.comn_mid.src_data_addr = qat_req->buf.blp;
  qat_req->req.comn_mid.dest_data_addr = qat_req->buf.bloutp;
  cipher_param = (void *)&qat_req->req.serv_specif_rqpars;
@@ -822,7 +822,7 @@ static int qat_alg_enc_internal(struct aead_request *areq, uint8_t *iv,
  *msg = ctx->enc_fw_req_tmpl;
  qat_req->ctx = ctx;
  qat_req->areq = areq;
- qat_req->req.comn_mid.opaque_data = (uint64_t)(dma_addr_t)qat_req;
+ qat_req->req.comn_mid.opaque_data = (uint64_t)(__force long)qat_req;
  qat_req->req.comn_mid.src_data_addr = qat_req->buf.blp;
  qat_req->req.comn_mid.dest_data_addr = qat_req->buf.bloutp;
  cipher_param = (void *)&qat_req->req.serv_specif_rqpars;
-- 
1.7.1