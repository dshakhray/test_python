From ffe837ce32cedfbf21cde2ea32913a8d6814f6fb Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 2 Dec 2014 21:03:27 -0500
Subject: [powerpc] Use new KABI macros

Message-id: <1417554215-238434-3-git-send-email-dzickus@redhat.com>
Patchwork-id: 101089
O-Subject: [RHEL7 PATCH 02/10] kabi, powerpc: Use new KABI macros
Bugzilla: 1164383
RH-Acked-by: Jiri Benc <jbenc@redhat.com>
RH-Acked-by: Jarod Wilson <jarod@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1164383
Upstream: RHEL only

Convert some of the powerpc GENKSYMS usage to use the new kabi macros.

Reviewed-by: Jeff Moyer <jmoyer@redhat.com>
Signed-off-by: Don Zickus <dzickus@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/eeh.h b/arch/powerpc/include/asm/eeh.h
index 5b54768..320051f 100644
--- a/arch/powerpc/include/asm/eeh.h
+++ b/arch/powerpc/include/asm/eeh.h
@@ -26,6 +26,8 @@
 #include <linux/string.h>
 #include <linux/time.h>
 
+#include <linux/rh_kabi.h>
+
 struct pci_dev;
 struct pci_bus;
 struct device_node;
@@ -116,22 +118,22 @@ struct eeh_dev {
  int config_addr;  /* Config address  */
  int pe_config_addr;  /* PE config address  */
  u32 config_space[16];  /* Saved PCI config space */
-#ifdef __GENKSYMS__
- u8 pcie_cap;   /* Saved PCIe capability        */
-#else
- u8 kabi_reserved;  /* Preserve alignment for kabi  */
-#endif
+ /*
+  * This changes pcie_cap from a u8 to an int.  However, there is no
+  * space for the extra 8 bits.  Instead, reserve the current space
+  * and extend the struct at the end.
+  */
+ RH_KABI_CHANGE_TYPE(u8 pcie_cap, /* Saved PCIe capability        */
+       u8 kabi_reserved)   /* Preserve alignment for kabi  */
  struct eeh_pe *pe;  /* Associated PE  */
  struct list_head list;  /* Form link list in the PE */
  struct pci_controller *phb; /* Associated PHB  */
  struct device_node *dn;  /* Associated device node */
  struct pci_dev *pdev;  /* Associated PCI device */
  struct pci_bus *bus;  /* PCI bus for partial hotplug */
-#ifndef __GENKSYMS__
- int pcix_cap;   /* Saved PCIx capability */
- int pcie_cap;   /* Saved PCIe capability */
- int aer_cap;   /* Saved AER capability  */
-#endif
+ RH_KABI_EXTEND(int pcix_cap) /* Saved PCIx capability */
+ RH_KABI_EXTEND(int pcie_cap) /* Saved PCIe capability */
+ RH_KABI_EXTEND(int aer_cap) /* Saved AER capability  */
 };
 
 static inline struct device_node *eeh_dev_to_of_node(struct eeh_dev *edev)
diff --git a/arch/powerpc/include/asm/hardirq.h b/arch/powerpc/include/asm/hardirq.h
index ac491ac..d5821b7 100644
--- a/arch/powerpc/include/asm/hardirq.h
+++ b/arch/powerpc/include/asm/hardirq.h
@@ -4,6 +4,8 @@
 #include <linux/threads.h>
 #include <linux/irq.h>
 
+#include <linux/rh_kabi.h>
+
 typedef struct {
  unsigned int __softirq_pending;
  unsigned int timer_irqs;
@@ -13,10 +15,8 @@ typedef struct {
 #ifdef CONFIG_PPC_DOORBELL
  unsigned int doorbell_irqs;
 #endif
-#ifndef __GENKSYMS__
- unsigned int timer_irqs_event;
- unsigned int timer_irqs_others;
-#endif
+ RH_KABI_EXTEND(unsigned int timer_irqs_event)
+ RH_KABI_EXTEND(unsigned int timer_irqs_others)
 } ____cacheline_aligned irq_cpustat_t;
 
 DECLARE_PER_CPU_SHARED_ALIGNED(irq_cpustat_t, irq_stat);
diff --git a/arch/powerpc/include/asm/mmu-hash64.h b/arch/powerpc/include/asm/mmu-hash64.h
index 31411e6..302e82d 100644
--- a/arch/powerpc/include/asm/mmu-hash64.h
+++ b/arch/powerpc/include/asm/mmu-hash64.h
@@ -24,6 +24,8 @@
 #include <asm/bug.h>
 #include <asm/processor.h>
 
+#include <linux/rh_kabi.h>
+
 /*
  * Segment table
  */
@@ -509,12 +511,7 @@ struct protptrs_kabi {
  */
 struct subpage_prot_table {
  unsigned long maxaddr; /* only addresses < this are protected */
-#ifdef __GENKSYMS__
- unsigned int **protptrs[2];
-#else
- struct protptrs_kabi *rh_kabi;
- void *unused;
-#endif
+ RH_KABI_REPLACE(unsigned int **protptrs[2], struct protptrs_kabi *rh_kabi)
  unsigned int *low_prot[4];
 };
 
diff --git a/arch/powerpc/include/asm/module.h b/arch/powerpc/include/asm/module.h
index 4d32033..fdd5df2 100644
--- a/arch/powerpc/include/asm/module.h
+++ b/arch/powerpc/include/asm/module.h
@@ -13,6 +13,7 @@
 #include <asm/bug.h>
 #include <asm-generic/module.h>
 
+#include <linux/rh_kabi.h>
 
 #ifndef __powerpc64__
 /*
@@ -53,10 +54,8 @@ struct mod_arch_specific {
  struct list_head bug_list;
  struct bug_entry *bug_table;
  unsigned int num_bugs;
-#ifndef __GENKSYMS__
 #ifdef __powerpc64__
- bool toc_fixed;   /* Have we fixed up .TOC.? */
-#endif
+ RH_KABI_EXTEND(bool toc_fixed)   /* Have we fixed up .TOC.? */
 #endif
 };
 
-- 
1.7.1