From 078cb00ed90888373983b905a08b3047c2d751fb Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 7 Aug 2014 18:24:19 -0400
Subject: [kernel] time/alarmtimer: Fix bug where relative alarm timers were treated as absolute

Message-id: <1407435859-26616-1-git-send-email-prarit@redhat.com>
Patchwork-id: 87537
O-Subject: [RHEL7.1 PATCH BZ 1124941] alarmtimer: Fix bug where relative alarm timers were treated as absolute
Bugzilla: 1124941
RH-Acked-by: Rik van Riel <riel@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1124941
Build info:
Date: Thu Aug  7 14:20:48 EDT 2014
Build OS: Red Hat Enterprise Linux Server release 7.0 (Maipo)
System name: intel-canoepass-05.lab.bos.redhat.com with -j24
Built on: kernel-3.10.0-142.el7
Arch built: ppc64 s390x x86_64

commit 16927776ae757d0d132bdbfabbfe2c498342bd59
Author: John Stultz <john.stultz@linaro.org>
Date:   Mon Jul 7 14:06:11 2014 -0700

    alarmtimer: Fix bug where relative alarm timers were treated as absolute

    Sharvil noticed with the posix timer_settime interface, using the
    CLOCK_REALTIME_ALARM or CLOCK_BOOTTIME_ALARM clockid, if the users
    tried to specify a relative time timer, it would incorrectly be
    treated as absolute regardless of the state of the flags argument.

    This patch corrects this, properly checking the absolute/relative flag,
    as well as adds further error checking that no invalid flag bits are set.

    Reported-by: Sharvil Nanavati <sharvil@google.com>
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Prarit Bhargava <prarit@redhat.com>
    Cc: Sharvil Nanavati <sharvil@google.com>
    Cc: stable <stable@vger.kernel.org> #3.0+
    Link: http://lkml.kernel.org/r/1404767171-6902-1-git-send-email-john.stultz@linaro.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

I put a little test program together and ran it: if the timer is always
RELATIVE, then the timer should always expire in 5 seconds.  O/w the timer
should never expire because the time will be a large value.

On the current RHEL7 kernel, the timer always expires regardless of the
flag value.  On the patched kernel, the RELATIVE timer expires in 5
seconds, and the ABSOLUTE timer does not expire at all.

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/kernel/time/alarmtimer.c b/kernel/time/alarmtimer.c
index a8f5084..294bf4e 100644
--- a/kernel/time/alarmtimer.c
+++ b/kernel/time/alarmtimer.c
@@ -540,9 +540,14 @@ static int alarm_timer_set(struct k_itimer *timr, int flags,
     struct itimerspec *new_setting,
     struct itimerspec *old_setting)
 {
+ ktime_t exp;
+
  if (!rtcdev)
   return -ENOTSUPP;
 
+ if (flags & ~TIMER_ABSTIME)
+  return -EINVAL;
+
  if (old_setting)
   alarm_timer_get(timr, old_setting);
 
@@ -552,8 +557,16 @@ static int alarm_timer_set(struct k_itimer *timr, int flags,
 
  /* start the timer */
  timr->it.alarm.interval = timespec_to_ktime(new_setting->it_interval);
- alarm_start(&timr->it.alarm.alarmtimer,
-   timespec_to_ktime(new_setting->it_value));
+ exp = timespec_to_ktime(new_setting->it_value);
+ /* Convert (if necessary) to absolute time */
+ if (flags != TIMER_ABSTIME) {
+  ktime_t now;
+
+  now = alarm_bases[timr->it.alarm.alarmtimer.type].gettime();
+  exp = ktime_add(now, exp);
+ }
+
+ alarm_start(&timr->it.alarm.alarmtimer, exp);
  return 0;
 }
 
@@ -685,6 +698,9 @@ static int alarm_timer_nsleep(const clockid_t which_clock, int flags,
  if (!alarmtimer_get_rtcdev())
   return -ENOTSUPP;
 
+ if (flags & ~TIMER_ABSTIME)
+  return -EINVAL;
+
  if (!capable(CAP_WAKE_ALARM))
   return -EPERM;
 
-- 
1.7.1