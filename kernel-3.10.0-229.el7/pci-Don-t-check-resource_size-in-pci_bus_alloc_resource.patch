From 3f8ff5cc6be6beeb6c2f3a59c63d7f8bf3b8f17b Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Sat, 19 Jul 2014 04:31:07 -0400
Subject: [pci] Don't check resource_size() in pci_bus_alloc_resource()

Message-id: <20140719043107.19438.56584.stgit@gir.stowe>
Patchwork-id: 86042
O-Subject: [RHEL7.1 PATCH 80/81] PCI: Don't check resource_size() in pci_bus_alloc_resource()
Bugzilla: 1110895
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110895
Upstream Status: ac93ac7403493f8707b7734de9f40d5cb5db9045

commit ac93ac7403493f8707b7734de9f40d5cb5db9045
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Tue Mar 11 14:23:12 2014 -0600

    PCI: Don't check resource_size() in pci_bus_alloc_resource()

    Paul reported that after f75b99d5a77d ("PCI: Enforce bus address limits in
    resource allocation") on a 32-bit kernel (CONFIG_PHYS_ADDR_T_64BIT not
    set), intel-gtt complained "can't ioremap flush page - no chipset
    flushing".  In addition, other PCI resource allocations, e.g., for bridge
    windows, failed.

    This happens because we incorrectly skip bus resources of
    [mem 0x00000000-0xffffffff] because we think they are of size zero.
    When resource_size_t is 32 bits wide, resource_size() on
    [mem 0x00000000-0xffffffff] returns 0 because (r->end - r->start + 1)
    overflows.

    Therefore, we can't use "resource_size() == 0" to decide that allocation
    from this resource will fail.  allocate_resource() should fail anyway if it
    can't satisfy the address constraints, so we should just depend on that.

    A [mem 0x00000000-0xffffffff] bus resource is obviously not really valid,
    but we do fall back to it as a default when we don't have information about
    host bridge apertures.

    Link: https://bugzilla.kernel.org/show_bug.cgi?id=71611
    Fixes: f75b99d5a77d PCI: Enforce bus address limits in resource allocation
    Reported-and-tested-by: Paul Bolle <pebolle@tiscali.nl>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/bus.c b/drivers/pci/bus.c
index 00660cc..3890166 100644
--- a/drivers/pci/bus.c
+++ b/drivers/pci/bus.c
@@ -162,8 +162,6 @@ static int pci_bus_alloc_from_region(struct pci_bus *bus, struct resource *res,
 
   avail = *r;
   pci_clip_resource_to_region(bus, &avail, region);
-  if (!resource_size(&avail))
-   continue;
 
   /*
    * "min" is typically PCIBIOS_MIN_IO or PCIBIOS_MIN_MEM to
-- 
1.7.1