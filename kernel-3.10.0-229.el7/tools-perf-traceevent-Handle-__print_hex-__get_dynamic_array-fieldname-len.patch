From 0647c8fd31fe5db4b08013d46d6beea306881b94 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:27:08 -0400
Subject: [tools] perf/traceevent: Handle __print_hex(__get_dynamic_array(fieldname), len)

Message-id: <1408462094-14194-260-git-send-email-jolsa@redhat.com>
Patchwork-id: 88246
O-Subject: [PATCH RHEL7.1 BZ1131394 259/325] tools lib traceevent: Handle __print_hex(__get_dynamic_array(fieldname), len)
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit b30f75eba27a9ab0704cbc501e9be3b025ce56fe
Author: Howard Cochran <hcochran@lexmark.com>
Date: Fri Nov 1 17:53:56 2013 -0400

description
===========
The kernel has a few events with a format similar to this excerpt:
        field:unsigned int len;     offset:12;      size:4; signed:0;
        field:__data_loc unsigned char[] data_array;  offset:16;      size:4; signed:0;
print fmt: "%s", __print_hex(__get_dynamic_array(data_array), REC->len)

trace-cmd could already parse that arg correctly, but print_str_arg()
was unable to handle the first parameter being a dynamic array. (It
just printed a "field not found" warning).

Teach print_str_arg's PRINT_HEX case to handle the nested
PRINT_DYNAMIC_ARRAY correctly. The output now matches the kernel's own
formatting for this case.

[ Removed "polish compare", we don't do that here ]
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/lib/traceevent/event-parse.c b/tools/lib/traceevent/event-parse.c
index 013c8d3..0a1ffe0 100644
--- a/tools/lib/traceevent/event-parse.c
+++ b/tools/lib/traceevent/event-parse.c
@@ -3588,15 +3588,23 @@ static void print_str_arg(struct trace_seq *s, void *data, int size,
   }
   break;
  case PRINT_HEX:
-  field = arg->hex.field->field.field;
-  if (!field) {
-   str = arg->hex.field->field.name;
-   field = pevent_find_any_field(event, str);
-   if (!field)
-    goto out_warning_field;
-   arg->hex.field->field.field = field;
+  if (arg->hex.field->type == PRINT_DYNAMIC_ARRAY) {
+   unsigned long offset;
+   offset = pevent_read_number(pevent,
+    data + arg->hex.field->dynarray.field->offset,
+    arg->hex.field->dynarray.field->size);
+   hex = data + (offset & 0xffff);
+  } else {
+   field = arg->hex.field->field.field;
+   if (!field) {
+    str = arg->hex.field->field.name;
+    field = pevent_find_any_field(event, str);
+    if (!field)
+     goto out_warning_field;
+    arg->hex.field->field.field = field;
+   }
+   hex = data + field->offset;
   }
-  hex = data + field->offset;
   len = eval_num_arg(data, size, event, arg->hex.size);
   for (i = 0; i < len; i++) {
    if (i)
-- 
1.7.1