From 45fa70485911bbbf11a1839ffe474d950ffacd01 Mon Sep 17 00:00:00 2001
From: Tomas Henzl <thenzl@redhat.com>
Date: Thu, 27 Nov 2014 16:33:36 -0500
Subject: [scsi] megaraid_sas: make HBA operational after LD_MAP_SYNC DCMD in OCR path

Message-id: <1417106019-4286-5-git-send-email-thenzl@redhat.com>
Patchwork-id: 100997
O-Subject: [PATCH 4/7] megaraid_sas: make HBA operational after LD_MAP_SYNC DCMD in OCR path
Bugzilla: 1162645
RH-Acked-by: Maurizio Lombardi <mlombard@redhat.com>
RH-Acked-by: Rob Evers <revers@redhat.com>

In OCR(Online Controller Reset) path, driver sets adapter state to
MEGASAS_HBA_OPERATIONAL before getting new RAID map.  There will be a small
window where IO will come from OS with old RAID map. This patch will update
adapter state to MEGASAS_HBA_OPERATIONAL, only after driver has new RAID
map to avoid any IOs getting build using old RAID map.

Signed-off-by: Sumit Saxena <sumit.saxena@avagotech.com>
Signed-off-by: Kashyap Desai <kashyap.desai@avagotech.com>
Reviewed-by: Tomas Henzl <thenzl@redhat.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit ac340c5f2e033f001a081817019d6f3835bf6267)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/megaraid/megaraid_sas_fusion.c b/drivers/scsi/megaraid/megaraid_sas_fusion.c
index 3ca8008..0c2df10 100644
--- a/drivers/scsi/megaraid/megaraid_sas_fusion.c
+++ b/drivers/scsi/megaraid/megaraid_sas_fusion.c
@@ -2802,11 +2802,6 @@ int megasas_reset_fusion(struct Scsi_Host *shost, int iotimeout)
     }
    }
 
-   clear_bit(MEGASAS_FUSION_IN_RESET,
-      &instance->reset_flags);
-   instance->instancet->enable_intr(instance);
-   instance->adprecovery = MEGASAS_HBA_OPERATIONAL;
-
    if (megasas_get_ctrl_info(instance)) {
     dev_info(&instance->pdev->dev,
      "Failed from %s %d\n",
@@ -2824,6 +2819,11 @@ int megasas_reset_fusion(struct Scsi_Host *shost, int iotimeout)
    if (!megasas_get_map_info(instance))
     megasas_sync_map_info(instance);
 
+   clear_bit(MEGASAS_FUSION_IN_RESET,
+      &instance->reset_flags);
+   instance->instancet->enable_intr(instance);
+   instance->adprecovery = MEGASAS_HBA_OPERATIONAL;
+
    /* Restart SR-IOV heartbeat */
    if (instance->requestorId) {
     if (!megasas_sriov_start_heartbeat(instance, 0))
@@ -2840,14 +2840,14 @@ int megasas_reset_fusion(struct Scsi_Host *shost, int iotimeout)
           "successful for scsi%d.\n",
     instance->host->host_no);
 
-   if (instance->crash_dump_drv_support) {
-    if (instance->crash_dump_app_support)
-     megasas_set_crash_dump_params(instance,
-      MR_CRASH_BUF_TURN_ON);
-    else
-     megasas_set_crash_dump_params(instance,
-      MR_CRASH_BUF_TURN_OFF);
-   }
+   if (instance->crash_dump_drv_support &&
+    instance->crash_dump_app_support)
+    megasas_set_crash_dump_params(instance,
+     MR_CRASH_BUF_TURN_ON);
+   else
+    megasas_set_crash_dump_params(instance,
+     MR_CRASH_BUF_TURN_OFF);
+
    retval = SUCCESS;
    goto out;
   }
-- 
1.7.1