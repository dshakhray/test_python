From b64d5223622c6c50117ec1e484fbbbab898f8e8f Mon Sep 17 00:00:00 2001
From: Motohiro Kosaki <mkosaki@redhat.com>
Date: Wed, 10 Sep 2014 16:16:08 -0400
Subject: [mm] memblock: make memblock_set_node() support different memblock_type

Message-id: <1410365775-5132-14-git-send-email-mkosaki@redhat.com>
Patchwork-id: 93496
O-Subject: [RHEL7 PATCH 13/20] memblock: make memblock_set_node() support different memblock_type
Bugzilla: 810042
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Larry Woodman <lwoodman@redhat.com>
RH-Acked-by: Rik van Riel <riel@redhat.com>

From: KOSAKI Motohiro <mkosaki@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=810042
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7914549
target RHEL version: 7.1
upstream status: merged
changes from upstream: none

commit e7e8de5918dd6a07cbddae559600d7765ad6a56e
Author: Tang Chen <tangchen@cn.fujitsu.com>
Date:   Tue Jan 21 15:49:26 2014 -0800

    memblock: make memblock_set_node() support different memblock_type

    [sfr@canb.auug.org.au: fix powerpc build]
    Signed-off-by: Tang Chen <tangchen@cn.fujitsu.com>
    Reviewed-by: Zhang Yanfei <zhangyanfei@cn.fujitsu.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: "Rafael J . Wysocki" <rjw@sisk.pl>
    Cc: Chen Tang <imtangchen@gmail.com>
    Cc: Gong Chen <gong.chen@linux.intel.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Jiang Liu <jiang.liu@huawei.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Lai Jiangshan <laijs@cn.fujitsu.com>
    Cc: Larry Woodman <lwoodman@redhat.com>
    Cc: Len Brown <lenb@kernel.org>
    Cc: Liu Jiang <jiang.liu@huawei.com>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Michal Nazarewicz <mina86@mina86.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Prarit Bhargava <prarit@redhat.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Taku Izumi <izumi.taku@jp.fujitsu.com>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Thomas Renninger <trenn@suse.de>
    Cc: Toshi Kani <toshi.kani@hp.com>
    Cc: Vasilis Liaskovitis <vasilis.liaskovitis@profitbricks.com>
    Cc: Wanpeng Li <liwanp@linux.vnet.ibm.com>
    Cc: Wen Congyang <wency@cn.fujitsu.com>
    Cc: Yasuaki Ishimatsu <isimatu.yasuaki@jp.fujitsu.com>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Signed-off-by: KOSAKI Motohiro <mkosaki@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/metag/mm/init.c b/arch/metag/mm/init.c
index d05b845..438f81b 100644
--- a/arch/metag/mm/init.c
+++ b/arch/metag/mm/init.c
@@ -205,7 +205,8 @@ static void __init do_init_bootmem(void)
   start_pfn = memblock_region_memory_base_pfn(reg);
   end_pfn = memblock_region_memory_end_pfn(reg);
   memblock_set_node(PFN_PHYS(start_pfn),
-      PFN_PHYS(end_pfn - start_pfn), 0);
+      PFN_PHYS(end_pfn - start_pfn),
+      &memblock.memory, 0);
  }
 
  /* All of system RAM sits in node 0 for the non-NUMA case */
diff --git a/arch/metag/mm/numa.c b/arch/metag/mm/numa.c
index 9ae578c..229407f 100644
--- a/arch/metag/mm/numa.c
+++ b/arch/metag/mm/numa.c
@@ -42,7 +42,8 @@ void __init setup_bootmem_node(int nid, unsigned long start, unsigned long end)
  memblock_add(start, end - start);
 
  memblock_set_node(PFN_PHYS(start_pfn),
-     PFN_PHYS(end_pfn - start_pfn), nid);
+     PFN_PHYS(end_pfn - start_pfn),
+     &memblock.memory, nid);
 
  /* Node-local pgdat */
  pgdat_paddr = memblock_alloc_base(sizeof(struct pglist_data),
diff --git a/arch/microblaze/mm/init.c b/arch/microblaze/mm/init.c
index b38ae3a..a302d8a 100644
--- a/arch/microblaze/mm/init.c
+++ b/arch/microblaze/mm/init.c
@@ -200,7 +200,8 @@ void __init setup_memory(void)
   start_pfn = memblock_region_memory_base_pfn(reg);
   end_pfn = memblock_region_memory_end_pfn(reg);
   memblock_set_node(start_pfn << PAGE_SHIFT,
-     (end_pfn - start_pfn) << PAGE_SHIFT, 0);
+      (end_pfn - start_pfn) << PAGE_SHIFT,
+      &memblock.memory, 0);
  }
 
  /* free bootmem is whole main memory */
diff --git a/arch/powerpc/mm/mem.c b/arch/powerpc/mm/mem.c
index 363269f..5c476b2 100644
--- a/arch/powerpc/mm/mem.c
+++ b/arch/powerpc/mm/mem.c
@@ -214,7 +214,7 @@ void __init do_init_bootmem(void)
  /* Place all memblock_regions in the same node and merge contiguous
   * memblock_regions
   */
- memblock_set_node(0, (phys_addr_t)ULLONG_MAX, 0);
+ memblock_set_node(0, (phys_addr_t)ULLONG_MAX, &memblock.memory, 0);
 
  /* Add all physical memory to the bootmem map, mark each area
   * present.
diff --git a/arch/powerpc/mm/numa.c b/arch/powerpc/mm/numa.c
index 3771c2a..a418524 100644
--- a/arch/powerpc/mm/numa.c
+++ b/arch/powerpc/mm/numa.c
@@ -721,7 +721,8 @@ static void __init parse_drconf_memory(struct device_node *memory)
    node_set_online(nid);
    sz = numa_enforce_memory_limit(base, size);
    if (sz)
-    memblock_set_node(base, sz, nid);
+    memblock_set_node(base, sz,
+        &memblock.memory, nid);
   } while (--ranges);
  }
 }
@@ -811,7 +812,7 @@ new_range:
     continue;
   }
 
-  memblock_set_node(start, size, nid);
+  memblock_set_node(start, size, &memblock.memory, nid);
 
   if (--ranges)
    goto new_range;
@@ -848,7 +849,8 @@ static void __init setup_nonnuma(void)
 
   fake_numa_create_new_node(end_pfn, &nid);
   memblock_set_node(PFN_PHYS(start_pfn),
-      PFN_PHYS(end_pfn - start_pfn), nid);
+      PFN_PHYS(end_pfn - start_pfn),
+      &memblock.memory, nid);
   node_set_online(nid);
  }
 }
diff --git a/arch/sh/kernel/setup.c b/arch/sh/kernel/setup.c
index ebe7a7d..eb31811 100644
--- a/arch/sh/kernel/setup.c
+++ b/arch/sh/kernel/setup.c
@@ -230,8 +230,8 @@ void __init __add_active_range(unsigned int nid, unsigned long start_pfn,
  pmb_bolt_mapping((unsigned long)__va(start), start, end - start,
     PAGE_KERNEL);
 
- memblock_set_node(PFN_PHYS(start_pfn),
-     PFN_PHYS(end_pfn - start_pfn), nid);
+ memblock_set_node(PFN_PHYS(start_pfn), PFN_PHYS(end_pfn - start_pfn),
+     &memblock.memory, nid);
 }
 
 void __init __weak plat_early_device_setup(void)
diff --git a/arch/sparc/mm/init_64.c b/arch/sparc/mm/init_64.c
index 04fd55a..634044d 100644
--- a/arch/sparc/mm/init_64.c
+++ b/arch/sparc/mm/init_64.c
@@ -1021,7 +1021,8 @@ static void __init add_node_ranges(void)
     "start[%lx] end[%lx]\n",
     nid, start, this_end);
 
-   memblock_set_node(start, this_end - start, nid);
+   memblock_set_node(start, this_end - start,
+       &memblock.memory, nid);
    start = this_end;
   }
  }
@@ -1325,7 +1326,7 @@ static void __init bootmem_init_nonnuma(void)
         (top_of_ram - total_ram) >> 20);
 
  init_node_masks_nonnuma();
- memblock_set_node(0, (phys_addr_t)ULLONG_MAX, 0);
+ memblock_set_node(0, (phys_addr_t)ULLONG_MAX, &memblock.memory, 0);
  allocate_node_data(0);
  node_set_online(0);
 }
diff --git a/arch/x86/mm/init_32.c b/arch/x86/mm/init_32.c
index 3ac7e31..152d0c7 100644
--- a/arch/x86/mm/init_32.c
+++ b/arch/x86/mm/init_32.c
@@ -667,7 +667,7 @@ void __init initmem_init(void)
  high_memory = (void *) __va(max_low_pfn * PAGE_SIZE - 1) + 1;
 #endif
 
- memblock_set_node(0, (phys_addr_t)ULLONG_MAX, 0);
+ memblock_set_node(0, (phys_addr_t)ULLONG_MAX, &memblock.memory, 0);
  sparse_memory_present_with_active_regions(0);
 
 #ifdef CONFIG_FLATMEM
diff --git a/arch/x86/mm/init_64.c b/arch/x86/mm/init_64.c
index 327efbc..47c5c34 100644
--- a/arch/x86/mm/init_64.c
+++ b/arch/x86/mm/init_64.c
@@ -654,7 +654,7 @@ kernel_physical_mapping_init(unsigned long start,
 #ifndef CONFIG_NUMA
 void __init initmem_init(void)
 {
- memblock_set_node(0, (phys_addr_t)ULLONG_MAX, 0);
+ memblock_set_node(0, (phys_addr_t)ULLONG_MAX, &memblock.memory, 0);
 }
 #endif
 
diff --git a/arch/x86/mm/numa.c b/arch/x86/mm/numa.c
index d1ef544..49e0214 100644
--- a/arch/x86/mm/numa.c
+++ b/arch/x86/mm/numa.c
@@ -486,7 +486,8 @@ static int __init numa_register_memblks(struct numa_meminfo *mi)
 
  for (i = 0; i < mi->nr_blks; i++) {
   struct numa_memblk *mb = &mi->blk[i];
-  memblock_set_node(mb->start, mb->end - mb->start, mb->nid);
+  memblock_set_node(mb->start, mb->end - mb->start,
+      &memblock.memory, mb->nid);
  }
 
  /*
@@ -560,7 +561,8 @@ static int __init numa_init(int (*init_func)(void))
  nodes_clear(node_possible_map);
  nodes_clear(node_online_map);
  memset(&numa_meminfo, 0, sizeof(numa_meminfo));
- WARN_ON(memblock_set_node(0, ULLONG_MAX, MAX_NUMNODES));
+ WARN_ON(memblock_set_node(0, ULLONG_MAX, &memblock.memory,
+      MAX_NUMNODES));
  numa_reset_distance();
 
  ret = init_func();
diff --git a/include/linux/memblock.h b/include/linux/memblock.h
index 45f3b6d..c565b46 100644
--- a/include/linux/memblock.h
+++ b/include/linux/memblock.h
@@ -138,7 +138,8 @@ static inline void memblock_clear_region_flags(struct memblock_region *r,
 }
 
 #ifdef CONFIG_HAVE_MEMBLOCK_NODE_MAP
-int memblock_set_node(phys_addr_t base, phys_addr_t size, int nid);
+int memblock_set_node(phys_addr_t base, phys_addr_t size,
+        struct memblock_type *type, int nid);
 
 static inline void memblock_set_region_node(struct memblock_region *r, int nid)
 {
diff --git a/mm/memblock.c b/mm/memblock.c
index 6c14c99..216e77a 100644
--- a/mm/memblock.c
+++ b/mm/memblock.c
@@ -911,18 +911,18 @@ void __init_memblock __next_mem_pfn_range(int *idx, int nid,
  * memblock_set_node - set node ID on memblock regions
  * @base: base of area to set node ID for
  * @size: size of area to set node ID for
+ * @type: memblock type to set node ID for
  * @nid: node ID to set
  *
- * Set the nid of memblock memory regions in [@base,@base+@size) to @nid.
+ * Set the nid of memblock @type regions in [@base,@base+@size) to @nid.
  * Regions which cross the area boundaries are split as necessary.
  *
  * RETURNS:
  * 0 on success, -errno on failure.
  */
 int __init_memblock memblock_set_node(phys_addr_t base, phys_addr_t size,
-          int nid)
+          struct memblock_type *type, int nid)
 {
- struct memblock_type *type = &memblock.memory;
  int start_rgn, end_rgn;
  int i, ret;
 
-- 
1.7.1