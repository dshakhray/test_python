From 53ad1498da1a3d319ef3ad95146aaca47c10aff3 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Mon, 14 Jul 2014 18:58:32 -0400
Subject: [idle] intel_idle: remove superfluous dev->state_count initialization

Message-id: <1405364315-27440-5-git-send-email-prarit@redhat.com>
Patchwork-id: 85797
O-Subject: [RHEL7.1 PATCH BZ 1119374 4/7] intel_idle: remove superfluous dev->state_count initialization
Bugzilla: 1119374
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Rik van Riel <riel@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1119374

commit 4955a5412cad83da6e994d939bdb4f7887e4585e
Author: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
Date:   Fri Dec 20 19:47:29 2013 +0100

    intel_idle: remove superfluous dev->state_count initialization

    intel_idle driver sets dev->state_count to drv->state_count so
    the default dev->state_count initialization in cpuidle_enable_device()
    (called from cpuidle_register_device()) can be used instead.

    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Kyungmin Park <kyungmin.park@samsung.com>
    Cc: Len Brown <lenb@kernel.org>
    Reviewed-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/idle/intel_idle.c b/drivers/idle/intel_idle.c
index 58a3381..9901a62 100644
--- a/drivers/idle/intel_idle.c
+++ b/drivers/idle/intel_idle.c
@@ -611,39 +611,10 @@ static int intel_idle_cpuidle_driver_init(void)
  */
 static int intel_idle_cpu_init(int cpu)
 {
- int cstate;
  struct cpuidle_device *dev;
 
  dev = per_cpu_ptr(intel_idle_cpuidle_devices, cpu);
 
- dev->state_count = 1;
-
- for (cstate = 0; cstate < CPUIDLE_STATE_MAX; ++cstate) {
-  int num_substates, mwait_hint, mwait_cstate, mwait_substate;
-
-  if (cpuidle_state_table[cstate].enter == NULL)
-   break;
-
-  if (cstate + 1 > max_cstate) {
-   printk(PREFIX "max_cstate %d reached\n", max_cstate);
-   break;
-  }
-
-  mwait_hint = flg2MWAIT(cpuidle_state_table[cstate].flags);
-  mwait_cstate = MWAIT_HINT2CSTATE(mwait_hint);
-  mwait_substate = MWAIT_HINT2SUBSTATE(mwait_hint);
-
-  /* does the state exist in CPUID.MWAIT? */
-  num_substates = (mwait_substates >> ((mwait_cstate + 1) * 4))
-     & MWAIT_SUBSTATE_MASK;
-
-  /* if sub-state in table is not enumerated by CPUID */
-  if ((mwait_substate + 1) > num_substates)
-   continue;
-
-  dev->state_count += 1;
- }
-
  dev->cpu = cpu;
 
  if (cpuidle_register_device(dev)) {
-- 
1.7.1