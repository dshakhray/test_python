From 6fcab310fb3f592830728934662cb1b99dae5f4e Mon Sep 17 00:00:00 2001
From: Larry Woodman <lwoodman@redhat.com>
Date: Fri, 30 May 2014 11:22:31 -0400
Subject: [kernel] locking/mutex: Fix debug_mutexes

Message-id: <1401448958-5278-4-git-send-email-lwoodman@redhat.com>
Patchwork-id: 81231
O-Subject: [RHEL7.1 PATCH 03/10] locking/mutex: Fix debug_mutexes
Bugzilla: 1087655 1087919 1087922
RH-Acked-by: Rafael Aquini <aquini@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

commit a227960fe0cafcc229a8d6bb8b454a3a0b33719d
 Author: Peter Zijlstra <peterz@infradead.org>
 Date:   Thu Apr 10 16:15:59 2014 +0200

    locking/mutex: Fix debug_mutexes

    debug_mutex_unlock() would bail when !debug_locks and forgets to
    actually unlock.

    Reported-by: "Michael L. Semon" <mlsemon35@gmail.com>
    Reported-by: "Kirill A. Shutemov" <kirill@shutemov.name>
    Reported-by: Valdis Kletnieks <Valdis.Kletnieks@vt.edu>
    Fixes: 6f008e72cd11 ("locking/mutex: Fix debug checks")
    Tested-by: Dave Jones <davej@redhat.com>
    Cc: Jason Low <jason.low2@hp.com>
    Signed-off-by: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20140410141559.GE13658@twins.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/kernel/mutex-debug.c b/kernel/mutex-debug.c
index 43ef6b7..974e28a 100644
--- a/kernel/mutex-debug.c
+++ b/kernel/mutex-debug.c
@@ -71,13 +71,13 @@ void mutex_remove_waiter(struct mutex *lock, struct mutex_waiter *waiter,
 
 void debug_mutex_unlock(struct mutex *lock)
 {
- if (unlikely(!debug_locks))
-  return;
-
- DEBUG_LOCKS_WARN_ON(lock->magic != lock);
- DEBUG_LOCKS_WARN_ON(lock->owner != current);
- DEBUG_LOCKS_WARN_ON(!lock->wait_list.prev && !lock->wait_list.next);
- mutex_clear_owner(lock);
+ if (likely(debug_locks)) {
+  DEBUG_LOCKS_WARN_ON(lock->magic != lock);
+  DEBUG_LOCKS_WARN_ON(lock->owner != current);
+  DEBUG_LOCKS_WARN_ON(!lock->wait_list.prev &&
+        !lock->wait_list.next);
+  mutex_clear_owner(lock);
+ }
 
  /*
   * __mutex_slowpath_needs_to_unlock() is explicitly 0 for debug
-- 
1.7.1