From b464a03ad2baaa3e2c8fa4eb8d8f5b09e9d3fae6 Mon Sep 17 00:00:00 2001
From: Ivan Vecera <ivecera@redhat.com>
Date: Mon, 8 Sep 2014 16:13:38 -0400
Subject: [ethernet] be2net: Create multiple TXQs on RSS capable multi-channel BE3-R interfaces

Message-id: <1410192881-30702-16-git-send-email-ivecera@redhat.com>
Patchwork-id: 92416
O-Subject: [RHEL7.1 PATCH 15/78] be2net: Create multiple TXQs on RSS capable multi-channel BE3-R interfaces
Bugzilla: 1088575
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>

BZ: #1088575

Upstream commit(s):
commit a5243dabb95c51a4b2dce3f7e4f3ced57d2c5742
Author: Vasundhara Volam <vasundhara.volam@emulex.com>
Date:   Tue Mar 11 18:53:07 2014 +0530

    be2net: Create multiple TXQs on RSS capable multi-channel BE3-R interfaces

    Currently the driver creates only a single TXQ on any BE3-R multi-channel
    interface.
    This patch changes this and creates multiple TXQs on RSS-capable multi-channel
    BE3-R interfaces. This change helps improve the TX pps performance on the
    affected interface.

    Signed-off-by: Vasundhara Volam <vasundhara.volam@emulex.com>
    Signed-off-by: Sathya Perla <sathya.perla@emulex.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Ivan Vecera <ivecera@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/emulex/benet/be_main.c b/drivers/net/ethernet/emulex/benet/be_main.c
index 258475f..1b4dee4 100644
--- a/drivers/net/ethernet/emulex/benet/be_main.c
+++ b/drivers/net/ethernet/emulex/benet/be_main.c
@@ -3216,9 +3216,13 @@ static void BEx_get_resources(struct be_adapter *adapter,
 
  res->max_mcast_mac = BE_MAX_MC;
 
- /* For BE3 1Gb ports, F/W does not properly support multiple TXQs */
- if (BE2_chip(adapter) || use_sriov || be_is_mc(adapter) ||
-     !be_physfn(adapter) || (adapter->port_num > 1))
+ /* 1) For BE3 1Gb ports, FW does not support multiple TXQs
+  * 2) Create multiple TX rings on a BE3-R multi-channel interface
+  *    *only* if it is RSS-capable.
+  */
+ if (BE2_chip(adapter) || use_sriov ||  (adapter->port_num > 1) ||
+     !be_physfn(adapter) || (be_is_mc(adapter) &&
+     !(adapter->function_caps & BE_FUNCTION_CAPS_RSS)))
   res->max_tx_qs = 1;
  else
   res->max_tx_qs = BE3_MAX_TX_QS;
-- 
1.7.1