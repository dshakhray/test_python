From 869e2616751b7d95877e78ce03ae298ee8cc8046 Mon Sep 17 00:00:00 2001
From: Gustavo Duarte <gduarte@redhat.com>
Date: Tue, 4 Nov 2014 22:07:13 -0500
Subject: [powerpc] some changes in numa_setup_cpu()

Message-id: <1415138837-28185-5-git-send-email-gduarte@redhat.com>
Patchwork-id: 99396
O-Subject: [RHEL7.1 PATCH BZ 1150097 4/8] powerpc: some changes in numa_setup_cpu()
Bugzilla: 1150097
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

BZ 1150097
Upstream Status: 297cf5025b3bda59e15d6ba1f84022ebd409925b

commit 297cf5025b3bda59e15d6ba1f84022ebd409925b
Author: Li Zhong <zhong@linux.vnet.ibm.com>
Date:   Wed Aug 27 17:34:01 2014 +0800

    powerpc: some changes in numa_setup_cpu()

    this patches changes some error handling logics in numa_setup_cpu(),
    when cpu node is not found, so:

    if the cpu is possible, but not present, -1 is kept in numa_cpu_lookup_table,
    so later, if the cpu is added, we could set correct numa information for it.

    if the cpu is present, then we set the first online node to
    numa_cpu_lookup_table instead of 0 ( in case 0 might not be an online node? )

    Cc: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>
    Cc: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Li Zhong <zhong@linux.vnet.ibm.com>
    Acked-by: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/mm/numa.c b/arch/powerpc/mm/numa.c
index efc8d58..1487514 100644
--- a/arch/powerpc/mm/numa.c
+++ b/arch/powerpc/mm/numa.c
@@ -538,7 +538,7 @@ static int of_drconf_to_nid_single(struct of_drconf_cell *drmem,
  */
 static int numa_setup_cpu(unsigned long lcpu)
 {
- int nid;
+ int nid = -1;
  struct device_node *cpu;
 
  /*
@@ -555,19 +555,21 @@ static int numa_setup_cpu(unsigned long lcpu)
 
  if (!cpu) {
   WARN_ON(1);
-  nid = 0;
-  goto out;
+  if (cpu_present(lcpu))
+   goto out_present;
+  else
+   goto out;
  }
 
  nid = of_node_to_nid_single(cpu);
 
+out_present:
  if (nid < 0 || !node_online(nid))
   nid = first_online_node;
-out:
- map_cpu_to_node(lcpu, nid);
 
+ map_cpu_to_node(lcpu, nid);
  of_node_put(cpu);
-
+out:
  return nid;
 }
 
-- 
1.7.1