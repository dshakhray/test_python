From 28c3eb69be9266d3a29a5a27618d2ba64f8f4b5d Mon Sep 17 00:00:00 2001
From: Vlad Yasevich <vyasevic@redhat.com>
Date: Wed, 10 Sep 2014 15:16:14 -0400
Subject: [net] bridge: Remove unnecessary vlan_put_tag in br_handle_vlan

Message-id: <1410362181-9327-2-git-send-email-vyasevic@redhat.com>
Patchwork-id: 93477
O-Subject: [RHEL7 PATCH 1/8] bridge: Remove unnecessary vlan_put_tag in br_handle_vlan
Bugzilla: 1139809
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: Jiri Benc <jbenc@redhat.com>
RH-Acked-by: Flavio Leitner <fbl@redhat.com>

Bugzilla: 1139809
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7936510

commit bdf4351bbc62f3b24151cf19ca6e531b68d8c340
From: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
Date: Wed, 22 Jan 2014 09:29:37 +0900

    bridge: Remove unnecessary vlan_put_tag in br_handle_vlan

    br_handle_vlan() pushes HW accelerated vlan tag into skbuff when outgoing
    port is the bridge device.
    This is unnecessary because __netif_receive_skb_core() can handle skbs
    with HW accelerated vlan tag. In current implementation,
    __netif_receive_skb_core() needs to extract the vlan tag embedded in skb
    data. This could cause low network performance especially when receiving
    frames at a high frame rate on the bridge device.

    Signed-off-by: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
    Acked-by: Vlad Yasevich <vyasevic@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Vladislav Yasevich <vyasevic@redhat.com>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/bridge/br_vlan.c b/net/bridge/br_vlan.c
index a3e3257..210b348 100644
--- a/net/bridge/br_vlan.c
+++ b/net/bridge/br_vlan.c
@@ -151,27 +151,6 @@ struct sk_buff *br_handle_vlan(struct net_bridge *br,
  br_vlan_get_tag(skb, &vid);
  if (test_bit(vid, pv->untagged_bitmap))
   skb = br_vlan_untag(skb);
- else {
-  /* Egress policy says "send tagged".  If output device
-   * is the  bridge, we need to add the VLAN header
-   * ourselves since we'll be going through the RX path.
-   * Sending to ports puts the frame on the TX path and
-   * we let dev_hard_start_xmit() add the header.
-   */
-  if (skb->protocol != htons(ETH_P_8021Q) &&
-      pv->port_idx == 0) {
-   /* vlan_put_tag expects skb->data to point to
-    * mac header.
-    */
-   skb_push(skb, ETH_HLEN);
-   skb = __vlan_put_tag(skb, skb->vlan_proto, skb->vlan_tci);
-   if (!skb)
-    goto out;
-   /* put skb->data back to where it was */
-   skb_pull(skb, ETH_HLEN);
-   skb->vlan_tci = 0;
-  }
- }
 
 out:
  return skb;
-- 
1.7.1