From 66b01213eff45d38007b20b172848d1f32d06eeb Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Wed, 6 Aug 2014 03:46:01 -0400
Subject: [pci] Remove unnecessary list_empty(&pci_pme_list) check

Message-id: <20140806034601.1438.7851.stgit@gir.stowe>
Patchwork-id: 87427
O-Subject: [RHEL7.1 PATCH 18/69] PCI: Remove unnecessary list_empty(&pci_pme_list) check
Bugzilla: 1110896
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110896
Upstream Status: ce300008023fc4ddb561c48bf7e157c8e6279f46

commit ce300008023fc4ddb561c48bf7e157c8e6279f46
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Fri Jan 24 09:51:06 2014 -0700

    PCI: Remove unnecessary list_empty(&pci_pme_list) check

    list_for_each_entry() handles empty lists just fine, so there's no need to
    check whether the list is empty first.

    No functional change.

    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Rafael J. Wysocki <rjw@rjwysocki.net>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/pci.c b/drivers/pci/pci.c
index 1327825..abb8213 100644
--- a/drivers/pci/pci.c
+++ b/drivers/pci/pci.c
@@ -1630,29 +1630,27 @@ static void pci_pme_list_scan(struct work_struct *work)
  struct pci_pme_device *pme_dev, *n;
 
  mutex_lock(&pci_pme_list_mutex);
- if (!list_empty(&pci_pme_list)) {
-  list_for_each_entry_safe(pme_dev, n, &pci_pme_list, list) {
-   if (pme_dev->dev->pme_poll) {
-    struct pci_dev *bridge;
-
-    bridge = pme_dev->dev->bus->self;
-    /*
-     * If bridge is in low power state, the
-     * configuration space of subordinate devices
-     * may be not accessible
-     */
-    if (bridge && bridge->current_state != PCI_D0)
-     continue;
-    pci_pme_wakeup(pme_dev->dev, NULL);
-   } else {
-    list_del(&pme_dev->list);
-    kfree(pme_dev);
-   }
+ list_for_each_entry_safe(pme_dev, n, &pci_pme_list, list) {
+  if (pme_dev->dev->pme_poll) {
+   struct pci_dev *bridge;
+
+   bridge = pme_dev->dev->bus->self;
+   /*
+    * If bridge is in low power state, the
+    * configuration space of subordinate devices
+    * may be not accessible
+    */
+   if (bridge && bridge->current_state != PCI_D0)
+    continue;
+   pci_pme_wakeup(pme_dev->dev, NULL);
+  } else {
+   list_del(&pme_dev->list);
+   kfree(pme_dev);
   }
-  if (!list_empty(&pci_pme_list))
-   schedule_delayed_work(&pci_pme_work,
-           msecs_to_jiffies(PME_TIMEOUT));
  }
+ if (!list_empty(&pci_pme_list))
+  schedule_delayed_work(&pci_pme_work,
+          msecs_to_jiffies(PME_TIMEOUT));
  mutex_unlock(&pci_pme_list_mutex);
 }
 
-- 
1.7.1