From 356e378d3994d0f7036a7ea44de9dd639c84d32c Mon Sep 17 00:00:00 2001
From: Hendrik Brueckner <brueckner@redhat.com>
Date: Mon, 16 Jun 2014 12:59:54 -0400
Subject: [s390] af_iucv: recvmsg problem for SOCK_STREAM sockets

Message-id: <1402923594-3246-2-git-send-email-brueckner@redhat.com>
Patchwork-id: 84041
O-Subject: [RHEL7.1 PATCH] [s390] af_iucv: recvmsg problem for SOCK_STREAM sockets
Bugzilla: 1109703
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Description
-----------
commit 2f139a5d8225666faee9f1d3c5629c4e5ff947aa
Author: Ursula Braun <ursula.braun@de.ibm.com>
Date:   Wed Mar 19 07:57:59 2014 +0100

    af_iucv: recvmsg problem for SOCK_STREAM sockets

    Commit f9c41a62bba3f3f7ef3541b2a025e3371bcbba97 introduced
    a problem for SOCK_STREAM sockets, when only part of the
    incoming iucv message is received by user space. In this
    case the remaining data of the iucv message is lost.
    This patch makes sure an incompletely received iucv message
    is queued back to the receive queue.

    Signed-off-by: Ursula Braun <ursula.braun@de.ibm.com>
    Signed-off-by: Frank Blaschka <frank.blaschka@de.ibm.com>
    Reported-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Bugzilla
--------
BZ 1109703
https://bugzilla.redhat.com/show_bug.cgi?id=1109703

Upstream status of the patch
----------------------------
The patch is upstream as of kernel version
http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=2f139a5d8225666faee9f1d3c5629c4e5ff947aa

Brew
----
https://brewweb.devel.redhat.com/taskinfo?taskID=7582716

Test status
-----------
The patch has been tested and fixes the problem.
The fix has been verified by the IBM test department.

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/iucv/af_iucv.c b/net/iucv/af_iucv.c
index bf6408d..ab8507f 100644
--- a/net/iucv/af_iucv.c
+++ b/net/iucv/af_iucv.c
@@ -1382,6 +1382,7 @@ static int iucv_sock_recvmsg(struct kiocb *iocb, struct socket *sock,
   if (sk->sk_type == SOCK_STREAM) {
    if (copied < rlen) {
     IUCV_SKB_CB(skb)->offset = offset + copied;
+    skb_queue_head(&sk->sk_receive_queue, skb);
     goto done;
    }
   }
-- 
1.7.1