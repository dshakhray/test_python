From 3df20938333f02b16cfd1eab85544a1dbf21a8de Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <jkysela@redhat.com>
Date: Wed, 3 Sep 2014 07:30:07 -0400
Subject: [alsa] hda: Make full_reset boolean

Message-id: <140972823573-264-patchset-jkysela@redhat.com>
Patchwork-id: 90963
O-Subject: [RHEL 7.1 PATCH 263/442] ALSA: hda - Make full_reset boolean
Bugzilla: 1112200
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>

The full_reset argument to azx_init_chip() carries boolean rather than
numerical information, so update the type to reflect that.

Signed-off-by: Thierry Reding <treding@nvidia.com>
Signed-off-by: Takashi Iwai <tiwai@suse.de>

(picked from kernel: 17c3ad030213da23158082ea90ebbe2a3940a2d2)
rhbz#1112200
Signed-off-by: Jaroslav Kysela <jkysela@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/sound/pci/hda/hda_controller.c b/sound/pci/hda/hda_controller.c
index 8197afc..248b90a 100644
--- a/sound/pci/hda/hda_controller.c
+++ b/sound/pci/hda/hda_controller.c
@@ -1605,7 +1605,7 @@ static void azx_exit_link_reset(struct azx *chip)
 }
 
 /* reset codec link */
-static int azx_reset(struct azx *chip, int full_reset)
+static int azx_reset(struct azx *chip, bool full_reset)
 {
  if (!full_reset)
   goto __skip;
@@ -1702,7 +1702,7 @@ static void azx_int_clear(struct azx *chip)
 /*
  * reset and start the controller registers
  */
-void azx_init_chip(struct azx *chip, int full_reset)
+void azx_init_chip(struct azx *chip, bool full_reset)
 {
  if (chip->initialized)
   return;
@@ -1842,7 +1842,7 @@ static void azx_bus_reset(struct hda_bus *bus)
 
  bus->in_reset = 1;
  azx_stop_chip(chip);
- azx_init_chip(chip, 1);
+ azx_init_chip(chip, true);
 #ifdef CONFIG_PM
  if (chip->initialized) {
   struct azx_pcm *p;
@@ -1949,7 +1949,7 @@ int azx_codec_create(struct azx *chip, const char *model,
      * get back to the sanity state.
      */
     azx_stop_chip(chip);
-    azx_init_chip(chip, 1);
+    azx_init_chip(chip, true);
    }
   }
  }
diff --git a/sound/pci/hda/hda_controller.h b/sound/pci/hda/hda_controller.h
index 1d2e3be..baf0e77 100644
--- a/sound/pci/hda/hda_controller.h
+++ b/sound/pci/hda/hda_controller.h
@@ -37,7 +37,7 @@ int azx_alloc_stream_pages(struct azx *chip);
 void azx_free_stream_pages(struct azx *chip);
 
 /* Low level azx interface */
-void azx_init_chip(struct azx *chip, int full_reset);
+void azx_init_chip(struct azx *chip, bool full_reset);
 void azx_stop_chip(struct azx *chip);
 void azx_enter_link_reset(struct azx *chip);
 irqreturn_t azx_interrupt(int irq, void *dev_id);
diff --git a/sound/pci/hda/hda_intel.c b/sound/pci/hda/hda_intel.c
index 5984b27..c18f818 100644
--- a/sound/pci/hda/hda_intel.c
+++ b/sound/pci/hda/hda_intel.c
@@ -636,7 +636,7 @@ static int azx_resume(struct device *dev)
   return -EIO;
  azx_init_pci(chip);
 
- azx_init_chip(chip, 1);
+ azx_init_chip(chip, true);
 
  snd_hda_resume(chip->bus);
  snd_power_change_state(card, SNDRV_CTL_POWER_D0);
@@ -689,7 +689,7 @@ static int azx_runtime_resume(struct device *dev)
  status = azx_readw(chip, STATESTS);
 
  azx_init_pci(chip);
- azx_init_chip(chip, 1);
+ azx_init_chip(chip, true);
 
  bus = chip->bus;
  if (status && bus) {
-- 
1.7.1