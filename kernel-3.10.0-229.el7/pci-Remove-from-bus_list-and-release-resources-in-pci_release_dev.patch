From c6a393f3528cab557bb35be62bd000ccda88f8da Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Sat, 19 Jul 2014 04:24:24 -0400
Subject: [pci] Remove from bus_list and release resources in pci_release_dev()

Message-id: <20140719042424.19438.33416.stgit@gir.stowe>
Patchwork-id: 85978
O-Subject: [RHEL7.1 PATCH 16/81] PCI: Remove from bus_list and release resources in pci_release_dev()
Bugzilla: 1110895
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110895
Upstream Status: ef83b0781a73f9efcb1228256bfdfb97fc9533a8

commit ef83b0781a73f9efcb1228256bfdfb97fc9533a8
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Sat Nov 30 14:40:29 2013 -0800

    PCI: Remove from bus_list and release resources in pci_release_dev()

    Previously we removed the pci_dev from the bus_list and released its
    resources in pci_destroy_dev().  But that's too early: it's possible to
    call pci_destroy_dev() twice for the same device (e.g., via sysfs), and
    that will cause an oops when we try to remove it from bus_list the second
    time.

    We should remove it from the bus_list only when the last reference to the
    pci_dev has been released, i.e., in pci_release_dev().

    [bhelgaas: changelog]
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/probe.c b/drivers/pci/probe.c
index 7bcc76d..1e4f7b4 100644
--- a/drivers/pci/probe.c
+++ b/drivers/pci/probe.c
@@ -1197,6 +1197,18 @@ static void pci_release_capabilities(struct pci_dev *dev)
  pci_free_cap_save_buffers(dev);
 }
 
+static void pci_free_resources(struct pci_dev *dev)
+{
+ int i;
+
+ pci_cleanup_rom(dev);
+ for (i = 0; i < PCI_NUM_RESOURCES; i++) {
+  struct resource *res = dev->resource + i;
+  if (res->parent)
+   release_resource(res);
+ }
+}
+
 /**
  * pci_release_dev - free a pci device structure when all users of it are finished.
  * @dev: device that's been disconnected
@@ -1206,9 +1218,14 @@ static void pci_release_capabilities(struct pci_dev *dev)
  */
 static void pci_release_dev(struct device *dev)
 {
- struct pci_dev *pci_dev;
+ struct pci_dev *pci_dev = to_pci_dev(dev);
+
+ down_write(&pci_bus_sem);
+ list_del(&pci_dev->bus_list);
+ up_write(&pci_bus_sem);
+
+ pci_free_resources(pci_dev);
 
- pci_dev = to_pci_dev(dev);
  pci_release_capabilities(pci_dev);
  pci_release_of_node(pci_dev);
  pcibios_release_device(pci_dev);
diff --git a/drivers/pci/remove.c b/drivers/pci/remove.c
index 692f4c3..f452148 100644
--- a/drivers/pci/remove.c
+++ b/drivers/pci/remove.c
@@ -3,20 +3,6 @@
 #include <linux/pci-aspm.h>
 #include "pci.h"
 
-static void pci_free_resources(struct pci_dev *dev)
-{
- int i;
-
- msi_remove_pci_irq_vectors(dev);
-
- pci_cleanup_rom(dev);
- for (i = 0; i < PCI_NUM_RESOURCES; i++) {
-  struct resource *res = dev->resource + i;
-  if (res->parent)
-   release_resource(res);
- }
-}
-
 static void pci_stop_dev(struct pci_dev *dev)
 {
  pci_pme_active(dev, false);
@@ -36,11 +22,6 @@ static void pci_destroy_dev(struct pci_dev *dev)
 {
  device_del(&dev->dev);
 
- down_write(&pci_bus_sem);
- list_del(&dev->bus_list);
- up_write(&pci_bus_sem);
-
- pci_free_resources(dev);
  put_device(&dev->dev);
 }
 
-- 
1.7.1