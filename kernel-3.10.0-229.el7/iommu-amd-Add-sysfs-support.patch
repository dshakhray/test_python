From 887be69891bb2aaf6c673328499c614b465768c2 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 02:33:07 -0400
Subject: [iommu] amd: Add sysfs support

Message-id: <20140905023307.497.83531.stgit@gir.stowe>
Patchwork-id: 91380
O-Subject: [RHEL7.1 PATCH 3/7] iommu/amd: Add sysfs support
Bugzilla: 1136539
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Don Dutile <ddutile@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1136539
Upstream Status: 066f2e98d8c7f043747fb08ebaa66bad723b1121

Signed-off-by: Jarod Wilson <jarod@redhat.com>

Conflicts:
  ./drivers/iommu/amd_iommu_init.c
    Hunk #1 - Due to RHEL7 not having commit 8b48463 "ACPI: Clean up
      inclusions of ACPI header files"
      I attempted to back-port commit 8b48463 as it looked like a good
      change to have but I ran into too many issues with
      drivers/acpi/acpi_ipmi.c

    Hunk #2 prefix context - Due to RHEL7 not having commit 30861dd
      "perf/x86/amd: Add IOMMU Performance Counter resource management"

commit 066f2e98d8c7f043747fb08ebaa66bad723b1121
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Thu Jun 12 16:12:37 2014 -0600

    iommu/amd: Add sysfs support

    AMD-Vi support for IOMMU sysfs.  This allows us to associate devices
    with a specific IOMMU device and examine the capabilities and features
    of that IOMMU.  The AMD IOMMU is hosted on and actual PCI device, so
    we make that device the parent for the IOMMU class device.  This
    initial implementaiton exposes only the capability header and extended
    features register for the IOMMU.

    # find /sys | grep ivhd
    /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0
    /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0/devices
    /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0/devices/0000:00:00.0
    /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0/devices/0000:00:02.0
    /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0/devices/0000:00:04.0
    /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0/devices/0000:00:09.0
    /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0/devices/0000:00:11.0
    /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0/devices/0000:00:12.0
    /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0/devices/0000:00:12.2
    /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0/devices/0000:00:13.0
    ...
    /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0/power
    /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0/power/control
    ...
    /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0/device
    /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0/subsystem
    /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0/amd-iommu
    /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0/amd-iommu/cap
    /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0/amd-iommu/features
    /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0/uevent
    /sys/class/iommu/ivhd0

    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
---
 create mode 100644 Documentation/ABI/testing/sysfs-class-iommu-amd-iommu

diff --git a/Documentation/ABI/testing/sysfs-class-iommu-amd-iommu b/Documentation/ABI/testing/sysfs-class-iommu-amd-iommu
new file mode 100644
index 0000000..d6ba8e8
--- /dev/null
+++ b/Documentation/ABI/testing/sysfs-class-iommu-amd-iommu
@@ -0,0 +1,14 @@
+What:  /sys/class/iommu/<iommu>/amd-iommu/cap
+Date:  June 2014
+KernelVersion: 3.17
+Contact: Alex Williamson <alex.williamson@redhat.com>
+Description:
+  IOMMU capability header as documented in the AMD IOMMU
+  specification.  Format: %x
+
+What:  /sys/class/iommu/<iommu>/amd-iommu/features
+Date:  June 2014
+KernelVersion: 3.17
+Contact: Alex Williamson <alex.williamson@redhat.com>
+Description:
+  Extended features of the IOMMU.  Format: %llx
diff --git a/drivers/iommu/amd_iommu.c b/drivers/iommu/amd_iommu.c
index 7cd3da2..fd15561 100644
--- a/drivers/iommu/amd_iommu.c
+++ b/drivers/iommu/amd_iommu.c
@@ -379,6 +379,9 @@ static int iommu_init_device(struct device *dev)
 
  dev->archdata.iommu = dev_data;
 
+ iommu_device_link(amd_iommu_rlookup_table[dev_data->devid]->iommu_dev,
+     dev);
+
  return 0;
 }
 
@@ -403,6 +406,9 @@ static void iommu_uninit_device(struct device *dev)
  if (!dev_data)
   return;
 
+ iommu_device_unlink(amd_iommu_rlookup_table[dev_data->devid]->iommu_dev,
+       dev);
+
  iommu_group_remove_device(dev);
 
  /* Unlink from alias, it may change if another device is re-plugged */
diff --git a/drivers/iommu/amd_iommu_init.c b/drivers/iommu/amd_iommu_init.c
index 62b2333..8725eca 100644
--- a/drivers/iommu/amd_iommu_init.c
+++ b/drivers/iommu/amd_iommu_init.c
@@ -26,7 +26,7 @@
 #include <linux/msi.h>
 #include <linux/amd-iommu.h>
 #include <linux/export.h>
-#include <acpi/acpi.h>
+#include <linux/iommu.h>
 #include <asm/pci-direct.h>
 #include <asm/iommu.h>
 #include <asm/gart.h>
@@ -1160,6 +1160,40 @@ static int __init init_iommu_all(struct acpi_table_header *table)
  return 0;
 }
 
+static ssize_t amd_iommu_show_cap(struct device *dev,
+      struct device_attribute *attr,
+      char *buf)
+{
+ struct amd_iommu *iommu = dev_get_drvdata(dev);
+ return sprintf(buf, "%x\n", iommu->cap);
+}
+static DEVICE_ATTR(cap, S_IRUGO, amd_iommu_show_cap, NULL);
+
+static ssize_t amd_iommu_show_features(struct device *dev,
+           struct device_attribute *attr,
+           char *buf)
+{
+ struct amd_iommu *iommu = dev_get_drvdata(dev);
+ return sprintf(buf, "%llx\n", iommu->features);
+}
+static DEVICE_ATTR(features, S_IRUGO, amd_iommu_show_features, NULL);
+
+static struct attribute *amd_iommu_attrs[] = {
+ &dev_attr_cap.attr,
+ &dev_attr_features.attr,
+ NULL,
+};
+
+static struct attribute_group amd_iommu_group = {
+ .name = "amd-iommu",
+ .attrs = amd_iommu_attrs,
+};
+
+static const struct attribute_group *amd_iommu_groups[] = {
+ &amd_iommu_group,
+ NULL,
+};
+
 static int iommu_init_pci(struct amd_iommu *iommu)
 {
  int cap_ptr = iommu->cap_ptr;
@@ -1257,6 +1291,10 @@ static int iommu_init_pci(struct amd_iommu *iommu)
 
  amd_iommu_erratum_746_workaround(iommu);
 
+ iommu->iommu_dev = iommu_device_create(&iommu->dev->dev, iommu,
+            amd_iommu_groups, "ivhd%d",
+            iommu->index);
+
  return pci_enable_device(iommu->dev);
 }
 
diff --git a/drivers/iommu/amd_iommu_types.h b/drivers/iommu/amd_iommu_types.h
index 64cd460..ee25ae5 100644
--- a/drivers/iommu/amd_iommu_types.h
+++ b/drivers/iommu/amd_iommu_types.h
@@ -572,6 +572,9 @@ struct amd_iommu {
  /* default dma_ops domain for that IOMMU */
  struct dma_ops_domain *default_dom;
 
+ /* IOMMU sysfs device */
+ struct device *iommu_dev;
+
  /*
   * We can't rely on the BIOS to restore all values on reinit, so we
   * need to stash them
-- 
1.7.1