From b1691bb410a6b9b54dd4e7869bec32418f09221d Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:07:01 -0400
Subject: [usb] xhci: Prevent runtime pm from autosuspending during initialization

Message-id: <1410887463-20674-350-git-send-email-dzickus@redhat.com>
Patchwork-id: 95279
O-Subject: [RHEL7 PATCH 349/591] xhci: Prevent runtime pm from autosuspending during initialization
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit bcffae7708eb8352f44dc510b326541fe43a02a4
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Mon Mar 3 19:30:17 2014 +0200

    xhci: Prevent runtime pm from autosuspending during initialization

    xHCI driver has its own pci probe function that will call usb_hcd_pci_probe
    to register its usb-2 bus, and then continue to manually register the
    usb-3 bus. usb_hcd_pci_probe does a pm_runtime_put_noidle at the end and
    might thus trigger a runtime suspend before the usb-3 bus is ready.

    Prevent the runtime suspend by increasing the usage count in the
    beginning of xhci_pci_probe, and decrease it once the usb-3 bus is
    ready.

    xhci-platform driver is not using usb_hcd_pci_probe to set up
    busses and should not need to have it's usage count increased during probe.

    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Acked-by: Dan Williams <dan.j.williams@intel.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
    Cc: stable@vger.kernel.org

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/host/xhci-pci.c b/drivers/usb/host/xhci-pci.c
index 9eb990e..5eb367c 100644
--- a/drivers/usb/host/xhci-pci.c
+++ b/drivers/usb/host/xhci-pci.c
@@ -185,6 +185,10 @@ static int xhci_pci_probe(struct pci_dev *dev, const struct pci_device_id *id)
  struct usb_hcd *hcd;
 
  driver = (struct hc_driver *)id->driver_data;
+
+ /* Prevent runtime suspending between USB-2 and USB-3 initialization */
+ pm_runtime_get_noresume(&dev->dev);
+
  /* Register the USB 2.0 roothub.
   * FIXME: USB core must know to register the USB 2.0 roothub first.
   * This is sort of silly, because we could just set the HCD driver flags
@@ -194,7 +198,7 @@ static int xhci_pci_probe(struct pci_dev *dev, const struct pci_device_id *id)
  retval = usb_hcd_pci_probe(dev, id);
 
  if (retval)
-  return retval;
+  goto put_runtime_pm;
 
  /* USB 2.0 roothub is stored in the PCI device now. */
  hcd = dev_get_drvdata(&dev->dev);
@@ -220,12 +224,17 @@ static int xhci_pci_probe(struct pci_dev *dev, const struct pci_device_id *id)
  if (HCC_MAX_PSA(xhci->hcc_params) >= 4)
   xhci->shared_hcd->can_do_streams = 1;
 
+ /* USB-2 and USB-3 roothubs initialized, allow runtime pm suspend */
+ pm_runtime_put_noidle(&dev->dev);
+
  return 0;
 
 put_usb3_hcd:
  usb_put_hcd(xhci->shared_hcd);
 dealloc_usb2_hcd:
  usb_hcd_pci_remove(dev);
+put_runtime_pm:
+ pm_runtime_put_noidle(&dev->dev);
  return retval;
 }
 
-- 
1.7.1