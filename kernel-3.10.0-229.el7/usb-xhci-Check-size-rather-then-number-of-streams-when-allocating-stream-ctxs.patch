From f21bb19944418e4eceb54055adc0ec42d5da87d1 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:05:51 -0400
Subject: [usb] xhci: Check size rather then number of streams when allocating stream ctxs

Message-id: <1410887463-20674-280-git-send-email-dzickus@redhat.com>
Patchwork-id: 95195
O-Subject: [RHEL7 PATCH 279/591] xhci: Check size rather then number of streams when allocating stream ctxs
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit ee4aa54bce2ae27c36998da3d32d9f55cb48ca21
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Oct 4 00:29:46 2013 +0200

    xhci: Check size rather then number of streams when allocating stream ctxs

    Before this a device needing ie 32 stream ctxs would end up with an entry from
    the small_streams_pool which has 256 bytes entries, where as 32 stream ctxs
    need 512 bytes. Things actually keep running for a surprisingly long time
    before crashing because of this.

    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/host/xhci-mem.c b/drivers/usb/host/xhci-mem.c
index 2d8d33c..f61d8a8 100644
--- a/drivers/usb/host/xhci-mem.c
+++ b/drivers/usb/host/xhci-mem.c
@@ -520,12 +520,12 @@ static void xhci_free_stream_ctx(struct xhci_hcd *xhci,
   struct xhci_stream_ctx *stream_ctx, dma_addr_t dma)
 {
  struct device *dev = xhci_to_hcd(xhci)->self.controller;
+ size_t size = sizeof(struct xhci_stream_ctx) * num_stream_ctxs;
 
- if (num_stream_ctxs > MEDIUM_STREAM_ARRAY_SIZE)
-  dma_free_coherent(dev,
-    sizeof(struct xhci_stream_ctx)*num_stream_ctxs,
+ if (size > MEDIUM_STREAM_ARRAY_SIZE)
+  dma_free_coherent(dev, size,
     stream_ctx, dma);
- else if (num_stream_ctxs <= SMALL_STREAM_ARRAY_SIZE)
+ else if (size <= SMALL_STREAM_ARRAY_SIZE)
   return dma_pool_free(xhci->small_streams_pool,
     stream_ctx, dma);
  else
@@ -548,12 +548,12 @@ static struct xhci_stream_ctx *xhci_alloc_stream_ctx(struct xhci_hcd *xhci,
   gfp_t mem_flags)
 {
  struct device *dev = xhci_to_hcd(xhci)->self.controller;
+ size_t size = sizeof(struct xhci_stream_ctx) * num_stream_ctxs;
 
- if (num_stream_ctxs > MEDIUM_STREAM_ARRAY_SIZE)
-  return dma_alloc_coherent(dev,
-    sizeof(struct xhci_stream_ctx)*num_stream_ctxs,
+ if (size > MEDIUM_STREAM_ARRAY_SIZE)
+  return dma_alloc_coherent(dev, size,
     dma, mem_flags);
- else if (num_stream_ctxs <= SMALL_STREAM_ARRAY_SIZE)
+ else if (size <= SMALL_STREAM_ARRAY_SIZE)
   return dma_pool_alloc(xhci->small_streams_pool,
     mem_flags, dma);
  else
-- 
1.7.1