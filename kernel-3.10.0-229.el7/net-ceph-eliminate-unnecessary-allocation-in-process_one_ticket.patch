From 8455d24e26662db18abc5e92673663c4023cdb42 Mon Sep 17 00:00:00 2001
From: Ilya Dryomov <ilya.dryomov@inktank.com>
Date: Tue, 18 Nov 2014 15:49:59 -0500
Subject: [net] ceph: eliminate unnecessary allocation in process_one_ticket()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1416325805-26490-45-git-send-email-idryomov@redhat.com>
Patchwork-id: 100236
O-Subject: [RHEL7.1 PATCH 44/50] libceph: eliminate unnecessary allocation in process_one_ticket()
Bugzilla: 1165232
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Sage Weil <sweil@redhat.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>

Commit c27a3e4d667f ("libceph: do not hard code max auth ticket len")
while fixing a buffer overlow tried to keep the same as much of the
surrounding code as possible and introduced an unnecessary kmalloc() in
the unencrypted ticket path.  It is likely to fail on huge tickets, so
get rid of it.

Signed-off-by: Ilya Dryomov <idryomov@redhat.com>
Reviewed-by: Sage Weil <sage@redhat.com>
(cherry picked from commit e9226d7c9f1d83278d78675d51acc07e1a78cb27)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ceph/auth_x.c b/net/ceph/auth_x.c
index de6662b..7e38b72 100644
--- a/net/ceph/auth_x.c
+++ b/net/ceph/auth_x.c
@@ -149,6 +149,7 @@ static int process_one_ticket(struct ceph_auth_client *ac,
  struct ceph_crypto_key old_key;
  void *ticket_buf = NULL;
  void *tp, *tpend;
+ void **ptp;
  struct ceph_timespec new_validity;
  struct ceph_crypto_key new_session_key;
  struct ceph_buffer *new_ticket_blob;
@@ -208,25 +209,19 @@ static int process_one_ticket(struct ceph_auth_client *ac,
    goto out;
   }
   tp = ticket_buf;
-  dlen = ceph_decode_32(&tp);
+  ptp = &tp;
+  tpend = *ptp + dlen;
  } else {
   /* unencrypted */
-  ceph_decode_32_safe(p, end, dlen, bad);
-  ticket_buf = kmalloc(dlen, GFP_NOFS);
-  if (!ticket_buf) {
-   ret = -ENOMEM;
-   goto out;
-  }
-  tp = ticket_buf;
-  ceph_decode_need(p, end, dlen, bad);
-  ceph_decode_copy(p, ticket_buf, dlen);
+  ptp = p;
+  tpend = end;
  }
- tpend = tp + dlen;
+ ceph_decode_32_safe(ptp, tpend, dlen, bad);
  dout(" ticket blob is %d bytes\n", dlen);
- ceph_decode_need(&tp, tpend, 1 + sizeof(u64), bad);
- blob_struct_v = ceph_decode_8(&tp);
- new_secret_id = ceph_decode_64(&tp);
- ret = ceph_decode_buffer(&new_ticket_blob, &tp, tpend);
+ ceph_decode_need(ptp, tpend, 1 + sizeof(u64), bad);
+ blob_struct_v = ceph_decode_8(ptp);
+ new_secret_id = ceph_decode_64(ptp);
+ ret = ceph_decode_buffer(&new_ticket_blob, ptp, tpend);
  if (ret)
   goto out;
 
-- 
1.7.1