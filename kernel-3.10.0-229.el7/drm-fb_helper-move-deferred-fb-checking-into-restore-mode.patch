From 887f30f12cd6f11002eb80968050eff685b7b7bd Mon Sep 17 00:00:00 2001
From: Rob Clark <rclark@redhat.com>
Date: Wed, 17 Dec 2014 21:39:31 -0500
Subject: [drm] fb_helper: move deferred fb checking into restore mode

Message-id: <1418852380-13061-81-git-send-email-rclark@redhat.com>
Patchwork-id: 102199
O-Subject: [RHEL7 drm 80/89] drm/fb_helper: move deferred fb checking into restore mode (v2)
Bugzilla: 1173317
RH-Acked-by: Jerome Glisse <jglisse@redhat.com>
RH-Acked-by: Dave Airlie <airlied@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1173317
Upstream: drm-next

commit e2809c7db818df6bbd0edf843e1beb2fbc9d8541

Author:     Dave Airlie <airlied@redhat.com>
AuthorDate: Wed Nov 26 13:15:24 2014 +1000
Commit:     Rob Clark <rclark@redhat.com>
CommitDate: Mon Dec 15 14:44:48 2014 -0500

    drm/fb_helper: move deferred fb checking into restore mode (v2)

    On MST systems the monitors don't appear when we set the fb up,
    but plymouth opens the drm device and holds it open while they
    come up, when plymouth finishes and lastclose gets called we
    don't do the delayed fb probe, so the monitor never appears on the
    console.

    Fix this by moving the delayed checking into the mode restore.

    v2: Daniel suggested that ->delayed_hotplug is set under
    the mode_config mutex, so we should check it under that as
    well, while we are in the area.

    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dave Airlie <airlied@redhat.com>

Signed-off-by: Rob Clark <rclark@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/gpu/drm/drm_fb_helper.c b/drivers/gpu/drm/drm_fb_helper.c
index 1ee5348..41a266c 100644
--- a/drivers/gpu/drm/drm_fb_helper.c
+++ b/drivers/gpu/drm/drm_fb_helper.c
@@ -383,9 +383,18 @@ bool drm_fb_helper_restore_fbdev_mode_unlocked(struct drm_fb_helper *fb_helper)
 {
  struct drm_device *dev = fb_helper->dev;
  bool ret;
+ bool do_delayed = false;
+
  drm_modeset_lock_all(dev);
  ret = restore_fbdev_mode(fb_helper);
+
+ do_delayed = fb_helper->delayed_hotplug;
+ if (do_delayed)
+  fb_helper->delayed_hotplug = false;
  drm_modeset_unlock_all(dev);
+
+ if (do_delayed)
+  drm_fb_helper_hotplug_event(fb_helper);
  return ret;
 }
 EXPORT_SYMBOL(drm_fb_helper_restore_fbdev_mode_unlocked);
@@ -911,10 +920,6 @@ int drm_fb_helper_set_par(struct fb_info *info)
 
  drm_fb_helper_restore_fbdev_mode_unlocked(fb_helper);
 
- if (fb_helper->delayed_hotplug) {
-  fb_helper->delayed_hotplug = false;
-  drm_fb_helper_hotplug_event(fb_helper);
- }
  return 0;
 }
 EXPORT_SYMBOL(drm_fb_helper_set_par);
-- 
1.7.1