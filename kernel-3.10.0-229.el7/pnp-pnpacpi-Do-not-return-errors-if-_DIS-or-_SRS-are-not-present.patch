From 338c5638b491878408b4ffc0b74c2f1cf96d2447 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 28 Aug 2014 03:06:32 -0400
Subject: [pnp] pnpacpi: Do not return errors if _DIS or _SRS are not present

Message-id: <20140828030632.2117.58987.stgit@gir.stowe>
Patchwork-id: 89317
O-Subject: [RHEL7.1 PATCH 29/30] PNP / ACPI: Do not return errors if _DIS or _SRS are not present
Bugzilla: 1128632
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1128632
Upstream Status: a8d22396302b7e4e5f0a594c1c1594388c29edaf

commit a8d22396302b7e4e5f0a594c1c1594388c29edaf
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Wed Apr 30 22:36:33 2014 +0200

    PNP / ACPI: Do not return errors if _DIS or _SRS are not present

    The ACPI PNP subsystem returns errors from pnpacpi_set_resources()
    and pnpacpi_disable_resources() if the _SRS or _DIS methods are not
    present, respectively, but it should not do that, because those
    methods are optional.  For this reason, modify pnpacpi_set_resources()
    and pnpacpi_disable_resources(), respectively, to ignore missing _SRS
    or _DIS.

    This problem has been uncovered by commit 202317a573b2 (ACPI / scan:
    Add acpi_device objects for all device nodes in the namespace) and
    manifested itself by causing serial port suspend to fail on some
    systems.

    Fixes: 202317a573b2 (ACPI / scan: Add acpi_device objects for all device nodes in the namespace)
    References: https://bugzilla.kernel.org/show_bug.cgi?id=74371
    Reported-by: wxg4net <wxg4net@gmail.com>
    Reported-and-tested-by: <nonproffessional@gmail.com>
    Cc: 3.14+ <stable@vger.kernel.org> # 3.14+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pnp/pnpacpi/core.c b/drivers/pnp/pnpacpi/core.c
index 34049b0..eb415b2 100644
--- a/drivers/pnp/pnpacpi/core.c
+++ b/drivers/pnp/pnpacpi/core.c
@@ -84,8 +84,7 @@ static int pnpacpi_set_resources(struct pnp_dev *dev)
 {
  struct acpi_device *acpi_dev;
  acpi_handle handle;
- struct acpi_buffer buffer;
- int ret;
+ int ret = 0;
 
  pnp_dbg(&dev->dev, "set resources\n");
 
@@ -98,19 +97,26 @@ static int pnpacpi_set_resources(struct pnp_dev *dev)
  if (WARN_ON_ONCE(acpi_dev != dev->data))
   dev->data = acpi_dev;
 
- ret = pnpacpi_build_resource_template(dev, &buffer);
- if (ret)
-  return ret;
- ret = pnpacpi_encode_resources(dev, &buffer);
- if (ret) {
+ if (acpi_has_method(handle, METHOD_NAME__SRS)) {
+  struct acpi_buffer buffer;
+
+  ret = pnpacpi_build_resource_template(dev, &buffer);
+  if (ret)
+   return ret;
+
+  ret = pnpacpi_encode_resources(dev, &buffer);
+  if (!ret) {
+   acpi_status status;
+
+   status = acpi_set_current_resources(handle, &buffer);
+   if (ACPI_FAILURE(status))
+    ret = -EIO;
+  }
   kfree(buffer.pointer);
-  return ret;
  }
- if (ACPI_FAILURE(acpi_set_current_resources(handle, &buffer)))
-  ret = -EINVAL;
- else if (acpi_bus_power_manageable(handle))
+ if (!ret && acpi_bus_power_manageable(handle))
   ret = acpi_bus_set_power(handle, ACPI_STATE_D0);
- kfree(buffer.pointer);
+
  return ret;
 }
 
@@ -118,7 +124,7 @@ static int pnpacpi_disable_resources(struct pnp_dev *dev)
 {
  struct acpi_device *acpi_dev;
  acpi_handle handle;
- int ret;
+ acpi_status status;
 
  dev_dbg(&dev->dev, "disable resources\n");
 
@@ -129,13 +135,15 @@ static int pnpacpi_disable_resources(struct pnp_dev *dev)
  }
 
  /* acpi_unregister_gsi(pnp_irq(dev, 0)); */
- ret = 0;
  if (acpi_bus_power_manageable(handle))
   acpi_bus_set_power(handle, ACPI_STATE_D3_COLD);
-  /* continue even if acpi_bus_set_power() fails */
- if (ACPI_FAILURE(acpi_evaluate_object(handle, "_DIS", NULL, NULL)))
-  ret = -ENODEV;
- return ret;
+
+ /* continue even if acpi_bus_set_power() fails */
+ status = acpi_evaluate_object(handle, "_DIS", NULL, NULL);
+ if (ACPI_FAILURE(status) && status != AE_NOT_FOUND)
+  return -ENODEV;
+
+ return 0;
 }
 
 #ifdef CONFIG_ACPI_SLEEP
-- 
1.7.1