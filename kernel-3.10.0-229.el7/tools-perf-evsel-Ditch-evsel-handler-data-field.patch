From f679dda8f64e1030656cd494ac35068add35770d Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:27:24 -0400
Subject: [tools] perf/evsel: Ditch evsel->handler.data field

Message-id: <1408462094-14194-276-git-send-email-jolsa@redhat.com>
Patchwork-id: 88276
O-Subject: [PATCH RHEL7.1 BZ1131394 275/325] perf evsel: Ditch evsel->handler.data field
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 744a971940520cf0818e1fe882b64892c528e6de
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date: Wed Nov 6 10:17:38 2013 -0300

description
===========
Not needed since this cset:

  fcf65bf149af: perf evsel: Cache associated event_format

So lets trim this struct a bit.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-inject.c b/tools/perf/builtin-inject.c
index 409ceaf..6a25085 100644
--- a/tools/perf/builtin-inject.c
+++ b/tools/perf/builtin-inject.c
@@ -106,8 +106,8 @@ static int perf_event__repipe_sample(struct perf_tool *tool,
          struct perf_evsel *evsel,
          struct machine *machine)
 {
- if (evsel->handler.func) {
-  inject_handler f = evsel->handler.func;
+ if (evsel->handler) {
+  inject_handler f = evsel->handler;
   return f(tool, event, sample, evsel, machine);
  }
 
@@ -383,11 +383,11 @@ static int __cmd_inject(struct perf_inject *inject)
     if (perf_evsel__check_stype(evsel, PERF_SAMPLE_TID, "TID"))
      return -EINVAL;
 
-    evsel->handler.func = perf_inject__sched_switch;
+    evsel->handler = perf_inject__sched_switch;
    } else if (!strcmp(name, "sched:sched_process_exit"))
-    evsel->handler.func = perf_inject__sched_process_exit;
+    evsel->handler = perf_inject__sched_process_exit;
    else if (!strncmp(name, "sched:sched_stat_", 17))
-    evsel->handler.func = perf_inject__sched_stat;
+    evsel->handler = perf_inject__sched_stat;
   }
  }
 
diff --git a/tools/perf/builtin-kmem.c b/tools/perf/builtin-kmem.c
index a28970f..929462a 100644
--- a/tools/perf/builtin-kmem.c
+++ b/tools/perf/builtin-kmem.c
@@ -317,8 +317,8 @@ static int process_sample_event(struct perf_tool *tool __maybe_unused,
 
  dump_printf(" ... thread: %s:%d\n", thread__comm_str(thread), thread->tid);
 
- if (evsel->handler.func != NULL) {
-  tracepoint_handler f = evsel->handler.func;
+ if (evsel->handler != NULL) {
+  tracepoint_handler f = evsel->handler;
   return f(evsel, sample);
  }
 
diff --git a/tools/perf/builtin-lock.c b/tools/perf/builtin-lock.c
index 35f9aaa..c852c7a 100644
--- a/tools/perf/builtin-lock.c
+++ b/tools/perf/builtin-lock.c
@@ -819,8 +819,8 @@ static int process_sample_event(struct perf_tool *tool __maybe_unused,
   return -1;
  }
 
- if (evsel->handler.func != NULL) {
-  tracepoint_handler f = evsel->handler.func;
+ if (evsel->handler != NULL) {
+  tracepoint_handler f = evsel->handler;
   return f(evsel, sample);
  }
 
diff --git a/tools/perf/builtin-sched.c b/tools/perf/builtin-sched.c
index a81ab18..0f3c655 100644
--- a/tools/perf/builtin-sched.c
+++ b/tools/perf/builtin-sched.c
@@ -1427,8 +1427,8 @@ static int perf_sched__process_tracepoint_sample(struct perf_tool *tool __maybe_
  evsel->hists.stats.total_period += sample->period;
  hists__inc_nr_events(&evsel->hists, PERF_RECORD_SAMPLE);
 
- if (evsel->handler.func != NULL) {
-  tracepoint_handler f = evsel->handler.func;
+ if (evsel->handler != NULL) {
+  tracepoint_handler f = evsel->handler;
   err = f(tool, evsel, sample, machine);
  }
 
diff --git a/tools/perf/builtin-timechart.c b/tools/perf/builtin-timechart.c
index e11c61d..41c9bde 100644
--- a/tools/perf/builtin-timechart.c
+++ b/tools/perf/builtin-timechart.c
@@ -483,8 +483,8 @@ static int process_sample_event(struct perf_tool *tool __maybe_unused,
  if (sample->cpu > numcpus)
   numcpus = sample->cpu;
 
- if (evsel->handler.func != NULL) {
-  tracepoint_handler f = evsel->handler.func;
+ if (evsel->handler != NULL) {
+  tracepoint_handler f = evsel->handler;
   return f(evsel, sample);
  }
 
diff --git a/tools/perf/builtin-trace.c b/tools/perf/builtin-trace.c
index b3e57dc..ee59df3 100644
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@ -1570,7 +1570,7 @@ static int trace__process_sample(struct perf_tool *tool,
  struct trace *trace = container_of(tool, struct trace, tool);
  int err = 0;
 
- tracepoint_handler handler = evsel->handler.func;
+ tracepoint_handler handler = evsel->handler;
 
  if (skip_sample(trace, sample))
   return 0;
@@ -1656,7 +1656,7 @@ static void perf_evlist__add_vfs_getname(struct perf_evlist *evlist)
   return;
  }
 
- evsel->handler.func = trace__vfs_getname;
+ evsel->handler = trace__vfs_getname;
  perf_evlist__add(evlist, evsel);
 }
 
@@ -1768,7 +1768,7 @@ again:
     goto next_event;
    }
 
-   handler = evsel->handler.func;
+   handler = evsel->handler;
    handler(trace, evsel, &sample);
 next_event:
    perf_evlist__mmap_consume(evlist, i);
diff --git a/tools/perf/util/evlist.c b/tools/perf/util/evlist.c
index 1c173cc..b939221 100644
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@ -255,7 +255,7 @@ int perf_evlist__add_newtp(struct perf_evlist *evlist,
  if (evsel == NULL)
   return -1;
 
- evsel->handler.func = handler;
+ evsel->handler = handler;
  perf_evlist__add(evlist, evsel);
  return 0;
 }
diff --git a/tools/perf/util/evsel.h b/tools/perf/util/evsel.h
index 5aa68cd..64ec8e1 100644
--- a/tools/perf/util/evsel.h
+++ b/tools/perf/util/evsel.h
@@ -74,10 +74,7 @@ struct perf_evsel {
   off_t  id_offset;
  };
  struct cgroup_sel *cgrp;
- struct {
-  void  *func;
-  void  *data;
- } handler;
+ void   *handler;
  struct cpu_map  *cpus;
  unsigned int  sample_size;
  int   id_pos;
diff --git a/tools/perf/util/session.c b/tools/perf/util/session.c
index 02bedf1..6bee5f6 100644
--- a/tools/perf/util/session.c
+++ b/tools/perf/util/session.c
@@ -1655,9 +1655,9 @@ int __perf_session__set_tracepoints_handlers(struct perf_session *session,
    continue;
 
   err = -EEXIST;
-  if (evsel->handler.func != NULL)
+  if (evsel->handler != NULL)
    goto out;
-  evsel->handler.func = assocs[i].handler;
+  evsel->handler = assocs[i].handler;
  }
 
  err = 0;
-- 
1.7.1