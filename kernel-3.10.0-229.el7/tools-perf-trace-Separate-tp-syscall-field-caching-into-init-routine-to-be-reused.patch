From 662c84483f0364b2eef2b4ee5a5306e613687a3e Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:27:42 -0400
Subject: [tools] perf/trace: Separate tp syscall field caching into init routine to be reused

Message-id: <1408462094-14194-294-git-send-email-jolsa@redhat.com>
Patchwork-id: 88301
O-Subject: [PATCH RHEL7.1 BZ1131394 293/325] perf trace: Separate tp syscall field caching into init routine to be reused
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 96695d440242aca871ef8d797bd98d9cbd7ad8a0
Author: Namhyung Kim <namhyung@kernel.org>
Date: Tue Nov 12 08:51:45 2013 -0300

description
===========
We need to set this in evsels coming out of a perf.data file header, not
just for new ones created for live sessions.

So separate the code that caches the syscall entry/exit tracepoint
format fields into a new function that will be used in the next
changeset.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-trace.c b/tools/perf/builtin-trace.c
index aeb6296..3fa1dce 100644
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@ -149,20 +149,32 @@ static void perf_evsel__delete_priv(struct perf_evsel *evsel)
  perf_evsel__delete(evsel);
 }
 
+static int perf_evsel__init_syscall_tp(struct perf_evsel *evsel, void *handler)
+{
+ evsel->priv = malloc(sizeof(struct syscall_tp));
+ if (evsel->priv != NULL) {
+  if (perf_evsel__init_sc_tp_uint_field(evsel, id))
+   goto out_delete;
+
+  evsel->handler = handler;
+  return 0;
+ }
+
+ return -ENOMEM;
+
+out_delete:
+ free(evsel->priv);
+ evsel->priv = NULL;
+ return -ENOENT;
+}
+
 static struct perf_evsel *perf_evsel__syscall_newtp(const char *direction, void *handler)
 {
  struct perf_evsel *evsel = perf_evsel__newtp("raw_syscalls", direction);
 
  if (evsel) {
-  evsel->priv = malloc(sizeof(struct syscall_tp));
-
-  if (evsel->priv == NULL)
+  if (perf_evsel__init_syscall_tp(evsel, handler))
    goto out_delete;
-
-  if (perf_evsel__init_sc_tp_uint_field(evsel, id))
-   goto out_delete;
-
-  evsel->handler = handler;
  }
 
  return evsel;
-- 
1.7.1