From 6e98cc1ceed143c0deaa78e01bdf56c32dfa478e Mon Sep 17 00:00:00 2001
From: Amir Vadai <avadai@redhat.com>
Date: Thu, 11 Sep 2014 12:02:13 -0400
Subject: [infiniband] mlx4: Fix wrong endianess access with QP context flags

Message-id: <b285593c9a8b13d2221b46cd728ca296f30e9a17.1410425016.git.avadai@redhat.com>
Patchwork-id: 93693
O-Subject: [Patch RHEL7.1 V1 197/197] mlx4: Fix wrong endianess access with QP context flags
Bugzilla: 1107617 1107618 1107619 1107620
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

From: Or Gerlitz <ogerlitz@mellanox.com>

We wrongly tested QP context bits without BE conversion
as was spotted by sparse...

drivers/infiniband/hw/mlx4/qp.c:1685:38: sparse: restricted __be32 degrades to integer

Fix that!

Fixes: d2fce8a ('mlx4: Set user-space raw Ethernet QPs to properly handle VXLAN traffic')
Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8e1a03b63c62bfa622c3989f8aead17ea845db7d)
Signed-off-by: Amir Vadai <avadai@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/infiniband/hw/mlx4/qp.c b/drivers/infiniband/hw/mlx4/qp.c
index efb9eff..8365039 100644
--- a/drivers/infiniband/hw/mlx4/qp.c
+++ b/drivers/infiniband/hw/mlx4/qp.c
@@ -1682,7 +1682,7 @@ static int __mlx4_ib_modify_qp(struct ib_qp *ibqp,
      MLX4_IB_LINK_TYPE_ETH;
   if (dev->dev->caps.tunnel_offload_mode ==  MLX4_TUNNEL_OFFLOAD_MODE_VXLAN) {
    /* set QP to receive both tunneled & non-tunneled packets */
-   if (!(context->flags & (1 << MLX4_RSS_QPC_FLAG_OFFSET)))
+   if (!(context->flags & cpu_to_be32(1 << MLX4_RSS_QPC_FLAG_OFFSET)))
     context->srqn = cpu_to_be32(7 << 28);
   }
  }
-- 
1.7.1