From ecb10da8c8daecb2976323e32de39b3e3ca57191 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:27:48 -0400
Subject: [tools] perf/record: Fix segfault with --no-mmap-pages

Message-id: <1408462094-14194-300-git-send-email-jolsa@redhat.com>
Patchwork-id: 88313
O-Subject: [PATCH RHEL7.1 BZ1131394 299/325] perf record: Fix segfault with --no-mmap-pages
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 8973504be70b2986a2081eeff7d9a4210dec295d
Author: David Ahern <dsahern@gmail.com>
Date: Tue Nov 12 07:46:53 2013 -0700

description
===========
Adrian reported a segfault when using --no-out-pages:

$ tools/perf/perf record -vv --no-out-pages uname
Segmentation fault (core dumped)

The same occurs with --no-mmap-pages. Fix by checking that str is
non-NULL before parsing it.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/evlist.c b/tools/perf/util/evlist.c
index 99dc58e..3960560 100644
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@ -719,6 +719,9 @@ int perf_evlist__parse_mmap_pages(const struct option *opt, const char *str,
   { .tag  = 0 },
  };
 
+ if (str == NULL)
+  return -1;
+
  val = parse_tag_value(str, tags);
  if (val != (unsigned long) -1) {
   /* we got file size value */
-- 
1.7.1