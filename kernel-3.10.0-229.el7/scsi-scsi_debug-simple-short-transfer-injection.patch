From 9c40c9fb688e966aaeaf30779d74272f531d77a6 Mon Sep 17 00:00:00 2001
From: Ewan Milne <emilne@redhat.com>
Date: Wed, 20 Aug 2014 18:59:36 -0400
Subject: [scsi] scsi_debug: simple short transfer injection

Message-id: <1408561176-18133-58-git-send-email-emilne@redhat.com>
Patchwork-id: 88475
O-Subject: [RHEL7.1 PATCH e-stor 57/57] scsi_debug: simple short transfer injection
Bugzilla: 1132100
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: "Ewan D. Milne" <emilne@redhat.com>

upstream commit b57d7c015dd0a77589030e18fca887b624ae9013

Tested by Ewan D. Milne and Barry Donahue with a combination
of manual and automated testing.  No issues seen.

upstream commit b57d7c015dd0a77589030e18fca887b624ae9013
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu May 1 16:51:51 2014 +0200

    scsi_debug: simple short transfer injection

    Add an option to only transfer half the data for every n-th command.

    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Reviewed-by: Nicholas Bellinger <nab@linux-iscsi.org>

Signed-off-by: Ewan D. Milne <emilne@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/scsi_debug.c b/drivers/scsi/scsi_debug.c
index f3e9cc0..1328a26 100644
--- a/drivers/scsi/scsi_debug.c
+++ b/drivers/scsi/scsi_debug.c
@@ -130,6 +130,7 @@ static const char * scsi_debug_version_date = "20100324";
 #define SCSI_DEBUG_OPT_DIF_ERR   32
 #define SCSI_DEBUG_OPT_DIX_ERR   64
 #define SCSI_DEBUG_OPT_MAC_TIMEOUT  128
+#define SCSI_DEBUG_OPT_SHORT_TRANSFER 256
 /* When "every_nth" > 0 then modulo "every_nth" commands:
  *   - a no response is simulated if SCSI_DEBUG_OPT_TIMEOUT is set
  *   - a RECOVERED_ERROR is simulated on successful read and write
@@ -3583,6 +3584,7 @@ int scsi_debug_queuecommand_lck(struct scsi_cmnd *SCpnt, done_funct_t done)
  int inj_transport = 0;
  int inj_dif = 0;
  int inj_dix = 0;
+ int inj_short = 0;
  int delay_override = 0;
  int unmap = 0;
 
@@ -3628,6 +3630,8 @@ int scsi_debug_queuecommand_lck(struct scsi_cmnd *SCpnt, done_funct_t done)
    inj_dif = 1; /* to reads and writes below */
   else if (SCSI_DEBUG_OPT_DIX_ERR & scsi_debug_opts)
    inj_dix = 1; /* to reads and writes below */
+  else if (SCSI_DEBUG_OPT_SHORT_TRANSFER & scsi_debug_opts)
+   inj_short = 1;
  }
 
  if (devip->wlun) {
@@ -3744,6 +3748,10 @@ read:
   if (scsi_debug_fake_rw)
    break;
   get_data_transfer_info(cmd, &lba, &num, &ei_lba);
+
+  if (inj_short)
+   num /= 2;
+
   errsts = resp_read(SCpnt, lba, num, devip, ei_lba);
   if (inj_recovered && (0 == errsts)) {
    mk_sense_buffer(devip, RECOVERED_ERROR,
-- 
1.7.1