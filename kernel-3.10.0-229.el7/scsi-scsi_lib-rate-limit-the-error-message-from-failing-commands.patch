From d302e0fe54eef91e1dc33932f9f22c082ef90583 Mon Sep 17 00:00:00 2001
From: Tomas Henzl <thenzl@redhat.com>
Date: Mon, 22 Dec 2014 13:49:36 -0500
Subject: [scsi] scsi_lib: rate-limit the error message from failing commands

Message-id: <1419256176-603-1-git-send-email-thenzl@redhat.com>
Patchwork-id: 102377
O-Subject: [RHEL7.1 e-stor PATCH] scsi_lib: rate-limit the error message from failing commands
Bugzilla: 1175785
RH-Acked-by: Rob Evers <revers@redhat.com>
RH-Acked-by: Ewan Milne <emilne@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

An equivalent fix for this issue has been added to RHEL6 :
commit ee49bd136af1671dbebcaf6dc01ae86e4cb4bf31
Author: Neil Horman <nhorman@redhat.com>

For some reason the linux-scsi posted patch never made it to upstream
and probably never will, it's functionality has been replaced by
commit f1569ff1d5ae0ca8598956be632947a88f540e2a scsi: ratelimit I/O error messages
That commit is a part of a large series which I don't want add to RHEL7
so late, that is why I'm limiting it only to a pure ratelimit.
Likely we will replace this patch in 7.2 with that series.

http://marc.info/?l=linux-scsi&m=133798159912764
(The blk-core part from this patch already is in RHEL7)

When performing a cable pull test w/ active stress I/O using fio over
a dual port Intel 82599 FCoE CNA, w/ 256LUNs on one port and about 32LUNs
on the other, it is observed that the system becomes not usable due to
scsi-ml being busy printing the error messages for all the failing commands.
I don't believe this problem is specific to FCoE and these commands are
anyway failing due to link being down (DID_NO_CONNECT), just rate-limit
the messages here to solve this issue.

v2->v1: use __ratelimit() as Tomas Henzl mentioned as the proper way for
rate-limit per function. However, in this case, the failed i/o gets to
blk_end_request_err() and then blk_update_request(), which also has to
be rate-limited, as added in the v2 of this patch.

Signed-off-by: Yi Zou <yi.zou@intel.com>
Acked-by: Tomas Henzl <thenzl@redhat.com>
Signed-off-by: Robert Love <robert.w.love@intel.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/scsi_lib.c b/drivers/scsi/scsi_lib.c
index 2ebc819..ca09bb9 100644
--- a/drivers/scsi/scsi_lib.c
+++ b/drivers/scsi/scsi_lib.c
@@ -20,6 +20,7 @@
 #include <linux/delay.h>
 #include <linux/hardirq.h>
 #include <linux/scatterlist.h>
+#include <linux/ratelimit.h>
 
 #include <scsi/scsi.h>
 #include <scsi/scsi_cmnd.h>
@@ -686,6 +687,8 @@ void scsi_io_completion(struct scsi_cmnd *cmd, unsigned int good_bytes)
  int sense_deferred = 0;
  enum {ACTION_FAIL, ACTION_REPREP, ACTION_RETRY,
        ACTION_DELAYED_RETRY} action;
+ static DEFINE_RATELIMIT_STATE(rs,  DEFAULT_RATELIMIT_INTERVAL,
+     DEFAULT_RATELIMIT_BURST);
  unsigned long wait_for = (cmd->allowed + 1) * req->timeout;
 
  if (result) {
@@ -884,7 +887,7 @@ void scsi_io_completion(struct scsi_cmnd *cmd, unsigned int good_bytes)
  switch (action) {
  case ACTION_FAIL:
   /* Give up and fail the remainder of the request */
-  if (!(req->cmd_flags & REQ_QUIET)) {
+  if (!(req->cmd_flags & REQ_QUIET) && __ratelimit(&rs)) {
    scsi_print_result(cmd);
    if (driver_byte(result) & DRIVER_SENSE)
     scsi_print_sense("", cmd);
-- 
1.7.1