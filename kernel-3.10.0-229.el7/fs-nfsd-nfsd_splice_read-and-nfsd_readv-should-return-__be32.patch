From 5b670b94123b78855d1f42183c0710e9aa49ec35 Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Tue, 16 Sep 2014 20:18:11 -0400
Subject: [fs] nfsd: nfsd_splice_read and nfsd_readv should return __be32

Message-id: <1410898849-22126-8-git-send-email-bfields@redhat.com>
Patchwork-id: 95706
O-Subject: [Patch RHEL7 007/165] nfsd: nfsd_splice_read and nfsd_readv should return __be32
Bugzilla: 1044798 1123721 1141932
RH-Acked-by: Benjamin Coddington <bcodding@redhat.com>
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Jeff Layton <jlayton@primarydata.com>

The callers expect a __be32 return and the functions they call return
__be32, so having these return int is just wrong. Also, nfsd_finish_read
can be made static.

Signed-off-by: Jeff Layton <jlayton@primarydata.com>
Reviewed-by: Christoph Hellwig <hch@lst.de>
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: e2afc81919400505481a985fb389475707195c3c
Bugzilla: 1044798
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/vfs.c b/fs/nfsd/vfs.c
index 4c21643..ea50e91 100644
--- a/fs/nfsd/vfs.c
+++ b/fs/nfsd/vfs.c
@@ -970,7 +970,8 @@ static int nfsd_direct_splice_actor(struct pipe_inode_info *pipe,
  return __splice_from_pipe(pipe, sd, nfsd_splice_actor);
 }
 
-__be32 nfsd_finish_read(struct file *file, unsigned long *count, int host_err)
+static __be32
+nfsd_finish_read(struct file *file, unsigned long *count, int host_err)
 {
  if (host_err >= 0) {
   nfsdstats.io_read += host_err;
@@ -981,7 +982,7 @@ __be32 nfsd_finish_read(struct file *file, unsigned long *count, int host_err)
   return nfserrno(host_err);
 }
 
-int nfsd_splice_read(struct svc_rqst *rqstp,
+__be32 nfsd_splice_read(struct svc_rqst *rqstp,
        struct file *file, loff_t offset, unsigned long *count)
 {
  struct splice_desc sd = {
@@ -997,7 +998,7 @@ int nfsd_splice_read(struct svc_rqst *rqstp,
  return nfsd_finish_read(file, count, host_err);
 }
 
-int nfsd_readv(struct file *file, loff_t offset, struct kvec *vec, int vlen,
+__be32 nfsd_readv(struct file *file, loff_t offset, struct kvec *vec, int vlen,
   unsigned long *count)
 {
  mm_segment_t oldfs;
diff --git a/fs/nfsd/vfs.h b/fs/nfsd/vfs.h
index e5b35e5..0162c60 100644
--- a/fs/nfsd/vfs.h
+++ b/fs/nfsd/vfs.h
@@ -77,9 +77,9 @@ struct raparms;
 __be32  nfsd_get_tmp_read_open(struct svc_rqst *, struct svc_fh *,
     struct file **, struct raparms **);
 void  nfsd_put_tmp_read_open(struct file *, struct raparms *);
-int  nfsd_splice_read(struct svc_rqst *,
+__be32  nfsd_splice_read(struct svc_rqst *,
     struct file *, loff_t, unsigned long *);
-int  nfsd_readv(struct file *, loff_t, struct kvec *, int,
+__be32  nfsd_readv(struct file *, loff_t, struct kvec *, int,
     unsigned long *);
 __be32   nfsd_read(struct svc_rqst *, struct svc_fh *,
     loff_t, struct kvec *, int, unsigned long *);
-- 
1.7.1