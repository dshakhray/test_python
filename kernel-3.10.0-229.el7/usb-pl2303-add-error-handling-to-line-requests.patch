From 70eb8a599e5a5d764abe4596458b5d665864b929 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:10:44 -0400
Subject: [usb] pl2303: add error handling to line requests

Message-id: <1410887463-20674-573-git-send-email-dzickus@redhat.com>
Patchwork-id: 95534
O-Subject: [RHEL7 PATCH 572/591] USB: pl2303: add error handling to line requests
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 383d19c58729e34b3b94e47da20aa7fe4970a577
Author: Johan Hovold <jhovold@gmail.com>
Date:   Sun Dec 29 19:23:03 2013 +0100

    USB: pl2303: add error handling to line requests

    Refactor and add error handling to line requests.

    Signed-off-by: Johan Hovold <jhovold@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/serial/pl2303.c b/drivers/usb/serial/pl2303.c
index 1ad2a24..80a9ab1 100644
--- a/drivers/usb/serial/pl2303.c
+++ b/drivers/usb/serial/pl2303.c
@@ -346,6 +346,52 @@ static void pl2303_encode_baudrate(struct tty_struct *tty,
  dev_dbg(&port->dev, "baud set = %d\n", baud);
 }
 
+static int pl2303_get_line_request(struct usb_serial_port *port,
+       unsigned char buf[7])
+{
+ struct usb_device *udev = port->serial->dev;
+ int ret;
+
+ ret = usb_control_msg(udev, usb_rcvctrlpipe(udev, 0),
+    GET_LINE_REQUEST, GET_LINE_REQUEST_TYPE,
+    0, 0, buf, 7, 100);
+ if (ret != 7) {
+  dev_err(&port->dev, "%s - failed: %d\n", __func__, ret);
+
+  if (ret > 0)
+   ret = -EIO;
+
+  return ret;
+ }
+
+ dev_dbg(&port->dev, "%s - %7ph\n", __func__, buf);
+
+ return 0;
+}
+
+static int pl2303_set_line_request(struct usb_serial_port *port,
+       unsigned char buf[7])
+{
+ struct usb_device *udev = port->serial->dev;
+ int ret;
+
+ ret = usb_control_msg(udev, usb_sndctrlpipe(udev, 0),
+    SET_LINE_REQUEST, SET_LINE_REQUEST_TYPE,
+    0, 0, buf, 7, 100);
+ if (ret != 7) {
+  dev_err(&port->dev, "%s - failed: %d\n", __func__, ret);
+
+  if (ret > 0)
+   ret = -EIO;
+
+  return ret;
+ }
+
+ dev_dbg(&port->dev, "%s - %7ph\n", __func__, buf);
+
+ return 0;
+}
+
 static void pl2303_set_termios(struct tty_struct *tty,
   struct usb_serial_port *port, struct ktermios *old_termios)
 {
@@ -354,7 +400,7 @@ static void pl2303_set_termios(struct tty_struct *tty,
  struct pl2303_private *priv = usb_get_serial_port_data(port);
  unsigned long flags;
  unsigned char *buf;
- int i;
+ int ret;
  u8 control;
 
  if (old_termios && !tty_termios_hw_change(&tty->termios, old_termios))
@@ -368,10 +414,7 @@ static void pl2303_set_termios(struct tty_struct *tty,
   return;
  }
 
- i = usb_control_msg(serial->dev, usb_rcvctrlpipe(serial->dev, 0),
-       GET_LINE_REQUEST, GET_LINE_REQUEST_TYPE,
-       0, 0, buf, 7, 100);
- dev_dbg(&port->dev, "0xa1:0x21:0:0  %d - %7ph\n", i, buf);
+ pl2303_get_line_request(port, buf);
 
  if (C_CSIZE(tty)) {
   switch (C_CSIZE(tty)) {
@@ -455,14 +498,8 @@ static void pl2303_set_termios(struct tty_struct *tty,
   *       only used in set_termios, which is serialised against itself.
   */
  if (!old_termios || memcmp(buf, priv->line_settings, 7)) {
-  i = usb_control_msg(serial->dev,
-        usb_sndctrlpipe(serial->dev, 0),
-        SET_LINE_REQUEST, SET_LINE_REQUEST_TYPE,
-        0, 0, buf, 7, 100);
-
-  dev_dbg(&port->dev, "0x21:0x20:0:0  %d\n", i);
-
-  if (i == 7)
+  ret = pl2303_set_line_request(port, buf);
+  if (!ret)
    memcpy(priv->line_settings, buf, 7);
  }
 
@@ -482,10 +519,7 @@ static void pl2303_set_termios(struct tty_struct *tty,
  }
 
  memset(buf, 0, 7);
- i = usb_control_msg(serial->dev, usb_rcvctrlpipe(serial->dev, 0),
-       GET_LINE_REQUEST, GET_LINE_REQUEST_TYPE,
-       0, 0, buf, 7, 100);
- dev_dbg(&port->dev, "0xa1:0x21:0:0  %d - %7ph\n", i, buf);
+ pl2303_get_line_request(port, buf);
 
  if (C_CRTSCTS(tty)) {
   if (spriv->type == HX)
-- 
1.7.1