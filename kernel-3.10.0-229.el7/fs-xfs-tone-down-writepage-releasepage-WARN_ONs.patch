From 005d0271dd849b39e4c6e24102985788eab023e9 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Thu, 9 Oct 2014 21:00:16 -0400
Subject: [fs] xfs: tone down writepage/releasepage WARN_ONs

Message-id: <1412888441-4181-23-git-send-email-sandeen@redhat.com>
Patchwork-id: 97312
O-Subject: [RHEL7.1 PATCH 22/47] [fs] xfs: tone down writepage/releasepage WARN_ONs
Bugzilla: 1145837
RH-Acked-by: Brian Foster <bfoster@redhat.com>
RH-Acked-by: Dave Chinner <dchinner@redhat.com>

Bugzilla: 1145837
Upstream Status: Committed upstream
Build Info: https://brewweb.devel.redhat.com/taskinfo?taskID=8082426
Tested: locally using xfstests

Thanks,
-Eric

    commit 448011e2ab1c44f7990a62649580bde0da5242b5
    Author: Christoph Hellwig <hch@infradead.org>
    Date:   Fri Jun 6 16:05:15 2014 +1000

    xfs: tone down writepage/releasepage WARN_ONs

    I recently ran into the issue fixed by

      "xfs: kill buffers over failed write ranges properly"

    which spams the log with lots of backtraces.  Make debugging any
    issues like that easier by using WARN_ON_ONCE in the writeback code.

    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Dave Chinner <dchinner@redhat.com>
    Signed-off-by: Dave Chinner <david@fromorbit.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/xfs/xfs_aops.c b/fs/xfs/xfs_aops.c
index c6a1ad9..f5be309 100644
--- a/fs/xfs/xfs_aops.c
+++ b/fs/xfs/xfs_aops.c
@@ -984,7 +984,7 @@ xfs_vm_writepage(
   * Given that we do not allow direct reclaim to call us, we should
   * never be called while in a filesystem transaction.
   */
- if (WARN_ON(current->flags & PF_FSTRANS))
+ if (WARN_ON_ONCE(current->flags & PF_FSTRANS))
   goto redirty;
 
  /* Is this page beyond the end of the file? */
@@ -1197,9 +1197,9 @@ xfs_vm_releasepage(
 
  xfs_count_page_state(page, &delalloc, &unwritten);
 
- if (WARN_ON(delalloc))
+ if (WARN_ON_ONCE(delalloc))
   return 0;
- if (WARN_ON(unwritten))
+ if (WARN_ON_ONCE(unwritten))
   return 0;
 
  return try_to_free_buffers(page);
-- 
1.7.1