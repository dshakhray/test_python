From b0b9cda5654c512dc2249a41a6f7a424da98a48e Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Mon, 14 Jul 2014 13:41:38 -0400
Subject: [x86] acpi, apei, ghes: Do not report only correctable errors with SCI

Message-id: <1405345303-24468-9-git-send-email-prarit@redhat.com>
Patchwork-id: 85784
O-Subject: [RHEL7.1 PATCH BZ 1119306 08/13] ACPI, APEI, GHES: Do not report only correctable errors with SCI
Bugzilla: 1119306
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1119306

commit addccbb264e5e0e5762f4893f6df24afad327c8c
Author: Chen, Gong <gong.chen@linux.intel.com>
Date:   Mon Nov 25 02:15:00 2013 -0500

    ACPI, APEI, GHES: Do not report only correctable errors with SCI

    Currently SCI is employed to handle corrected errors - memory corrected
    errors, more specifically but in fact SCI still can be used to handle
    any errors, e.g. uncorrected or even fatal ones if enabled by the BIOS.
    Enable logging for those kinds of errors too.

    Signed-off-by: Chen, Gong <gong.chen@linux.intel.com>
    Acked-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Link: http://lkml.kernel.org/r/1385363701-12387-1-git-send-email-gong.chen@linux.intel.com
    [ Boris: massage commit message, rename function arg. ]
    Signed-off-by: Borislav Petkov <bp@suse.de>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
Cc: Stefan Assmann <sassmann@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kernel/cpu/mcheck/mce-apei.c b/arch/x86/kernel/cpu/mcheck/mce-apei.c
index de8b60a..a1aef95 100644
--- a/arch/x86/kernel/cpu/mcheck/mce-apei.c
+++ b/arch/x86/kernel/cpu/mcheck/mce-apei.c
@@ -33,22 +33,28 @@
 #include <linux/acpi.h>
 #include <linux/cper.h>
 #include <acpi/apei.h>
+#include <acpi/ghes.h>
 #include <asm/mce.h>
 
 #include "mce-internal.h"
 
-void apei_mce_report_mem_error(int corrected, struct cper_sec_mem_err *mem_err)
+void apei_mce_report_mem_error(int severity, struct cper_sec_mem_err *mem_err)
 {
  struct mce m;
 
- /* Only corrected MC is reported */
- if (!corrected || !(mem_err->validation_bits & CPER_MEM_VALID_PA))
+ if (!(mem_err->validation_bits & CPER_MEM_VALID_PA))
   return;
 
  mce_setup(&m);
  m.bank = 1;
- /* Fake a memory read corrected error with unknown channel */
+ /* Fake a memory read error with unknown channel */
  m.status = MCI_STATUS_VAL | MCI_STATUS_EN | MCI_STATUS_ADDRV | 0x9f;
+
+ if (severity >= GHES_SEV_RECOVERABLE)
+  m.status |= MCI_STATUS_UC;
+ if (severity >= GHES_SEV_PANIC)
+  m.status |= MCI_STATUS_PCC;
+
  m.addr = mem_err->physical_addr;
  mce_log(&m);
  mce_notify_irq();
diff --git a/drivers/acpi/apei/ghes.c b/drivers/acpi/apei/ghes.c
index 817fdc2..5cebdd2 100644
--- a/drivers/acpi/apei/ghes.c
+++ b/drivers/acpi/apei/ghes.c
@@ -453,8 +453,7 @@ static void ghes_do_proc(struct ghes *ghes,
    ghes_edac_report_mem_error(ghes, sev, mem_err);
 
 #ifdef CONFIG_X86_MCE
-   apei_mce_report_mem_error(sev == GHES_SEV_CORRECTED,
-        mem_err);
+   apei_mce_report_mem_error(sev, mem_err);
 #endif
    ghes_handle_memory_failure(gdata, sev);
   }
-- 
1.7.1