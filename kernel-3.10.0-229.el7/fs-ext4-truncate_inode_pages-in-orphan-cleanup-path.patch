From c8fa51782a350e67964cabd53781c4b6baafec9e Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Tue, 21 Oct 2014 13:26:40 -0400
Subject: [fs] ext4: truncate_inode_pages() in orphan cleanup path

Message-id: <1413898007-15450-9-git-send-email-lczerner@redhat.com>
Patchwork-id: 97887
O-Subject: [RHEL 7.1 PATCH v2 08/15] ext4: truncate_inode_pages() in orphan cleanup path
Bugzilla: 1144326
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

BZ 1144326
https://bugzilla.redhat.com/show_bug.cgi?id=1144326

BREW 8095073
https://brewweb.devel.redhat.com/taskinfo?taskID=8095073

Upstream commit 55f252c9f50e998f6bc3aadc7806f049f7443d21

 Currently we do not tell mm to zero out tail of the page before truncate
 in orphan_cleanup(). This is ok, because the page should not be
 uptodate, however this may eventually change and I might cause problems.

 Call truncate_inode_pages() as precautionary measure. Thanks Jan Kara
 for pointing this out.

 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
 Signed-off-by: Theodore Ts'o <tytso@mit.edu>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/super.c b/fs/ext4/super.c
index 8c60344..fa23f0e 100644
--- a/fs/ext4/super.c
+++ b/fs/ext4/super.c
@@ -2193,6 +2193,7 @@ static void ext4_orphan_cleanup(struct super_block *sb,
    jbd_debug(2, "truncating inode %lu to %lld bytes\n",
       inode->i_ino, inode->i_size);
    mutex_lock(&inode->i_mutex);
+   truncate_inode_pages(inode->i_mapping, inode->i_size);
    ext4_truncate(inode);
    mutex_unlock(&inode->i_mutex);
    nr_truncates++;
-- 
1.7.1