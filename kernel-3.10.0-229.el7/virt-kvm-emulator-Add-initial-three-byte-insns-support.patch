From 171c7756222270c65753dca6d03753256733d684 Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:38:18 -0400
Subject: [virt] kvm/emulator: Add initial three-byte insns support

Message-id: <1406040016-3289-104-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86182
O-Subject: [RHEL7 PATCH v2 103/221] kvm, emulator: Add initial three-byte insns support
Bugzilla: 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Borislav Petkov <bp@suse.de>

Add initial support for handling three-byte instructions in the
emulator.

Signed-off-by: Borislav Petkov <bp@suse.de>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 0bc5eedb82a54ccd9cbf79825226dd068427a94a)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kvm/emulate.c b/arch/x86/kvm/emulate.c
index 3a23546..9242851 100644
--- a/arch/x86/kvm/emulate.c
+++ b/arch/x86/kvm/emulate.c
@@ -3911,6 +3911,25 @@ static const struct opcode twobyte_table[256] = {
  N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N
 };
 
+static const struct gprefix three_byte_0f_38_f0 = {
+ N, N, N, N
+};
+
+static const struct gprefix three_byte_0f_38_f1 = {
+ N, N, N, N
+};
+
+/*
+ * Insns below are selected by the prefix which indexed by the third opcode
+ * byte.
+ */
+static const struct opcode opcode_map_0f_38[256] = {
+ /* 0x00 - 0x7f */
+ X16(N), X16(N), X16(N), X16(N), X16(N), X16(N), X16(N), X16(N),
+ /* 0x80 - 0xff */
+ X16(N), X16(N), X16(N), X16(N), X16(N), X16(N), X16(N), X16(N)
+};
+
 #undef D
 #undef N
 #undef G
@@ -4234,6 +4253,13 @@ done_prefixes:
   ctxt->opcode_len = 2;
   ctxt->b = insn_fetch(u8, ctxt);
   opcode = twobyte_table[ctxt->b];
+
+  /* 0F_38 opcode map */
+  if (ctxt->b == 0x38) {
+   ctxt->opcode_len = 3;
+   ctxt->b = insn_fetch(u8, ctxt);
+   opcode = opcode_map_0f_38[ctxt->b];
+  }
  }
  ctxt->d = opcode.flags;
 
@@ -4565,6 +4591,8 @@ special_insn:
 
  if (ctxt->opcode_len == 2)
   goto twobyte_insn;
+ else if (ctxt->opcode_len == 3)
+  goto threebyte_insn;
 
  switch (ctxt->b) {
  case 0x63:  /* movsxd */
@@ -4749,6 +4777,8 @@ twobyte_insn:
   goto cannot_emulate;
  }
 
+threebyte_insn:
+
  if (rc != X86EMUL_CONTINUE)
   goto done;
 
-- 
1.7.1