From b9f784c4604de0b6670e70de37cec9bb433d2b30 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:10:00 -0400
Subject: [usb] fix ->update_hub_device() vs hdev->maxchild

Message-id: <1410887463-20674-529-git-send-email-dzickus@redhat.com>
Patchwork-id: 95623
O-Subject: [RHEL7 PATCH 528/591] usb: fix ->update_hub_device() vs hdev->maxchild
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit e3d9558082061481af96b588583e0cf220c2943c
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Jun 5 14:23:04 2014 -0700

    usb: fix ->update_hub_device() vs hdev->maxchild

    Commit d8521afe3586 "usb: assign default peer ports for root hubs"
    delayed marking a hub valid (set hdev->maxchild) until it had been fully
    configured and to enable the publishing of valid hubs to be serialized
    by usb_port_peer_mutex.

    However, xhci_update_hub_device() in some cases depends on
    hdev->maxchild already being set.  Do the minimal fix and move it after
    the setting of hdev->maxchild.

    Cc: Mathias Nyman <mathias.nyman@linux.intel.com>
    Reported-by: Valdis Kletnieks <Valdis.Kletnieks@vt.edu>
    Tested-by: Valdis Kletnieks <Valdis.Kletnieks@vt.edu>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/core/hub.c b/drivers/usb/core/hub.c
index 7fbdb17..8c5393d 100644
--- a/drivers/usb/core/hub.c
+++ b/drivers/usb/core/hub.c
@@ -1522,18 +1522,6 @@ static int hub_configure(struct usb_hub *hub,
   dev_dbg(hub_dev, "%umA bus power budget for each child\n",
     hub->mA_per_port);
 
- /* Update the HCD's internal representation of this hub before khubd
-  * starts getting port status changes for devices under the hub.
-  */
- if (hcd->driver->update_hub_device) {
-  ret = hcd->driver->update_hub_device(hcd, hdev,
-    &hub->tt, GFP_KERNEL);
-  if (ret < 0) {
-   message = "can't update HCD hub info";
-   goto fail;
-  }
- }
-
  ret = hub_hub_status(hub, &hubstatus, &hubchange);
  if (ret < 0) {
   message = "can't get hub status";
@@ -1589,6 +1577,18 @@ static int hub_configure(struct usb_hub *hub,
  if (ret < 0)
   goto fail;
 
+ /* Update the HCD's internal representation of this hub before khubd
+  * starts getting port status changes for devices under the hub.
+  */
+ if (hcd->driver->update_hub_device) {
+  ret = hcd->driver->update_hub_device(hcd, hdev,
+    &hub->tt, GFP_KERNEL);
+  if (ret < 0) {
+   message = "can't update HCD hub info";
+   goto fail;
+  }
+ }
+
  usb_hub_adjust_deviceremovable(hdev, hub->descriptor);
 
  hub_activate(hub, HUB_INIT);
-- 
1.7.1