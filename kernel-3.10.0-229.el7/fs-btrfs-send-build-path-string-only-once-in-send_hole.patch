From 4aef90317732cfe3fe61850a964e3614265ee5f1 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:02:47 -0400
Subject: [fs] btrfs: send, build path string only once in send_hole

Message-id: <1407179109-13714-281-git-send-email-sandeen@redhat.com>
Patchwork-id: 87245
O-Subject: [RHEL7.1 PATCH 280/422] Btrfs: send, build path string only once in send_hole
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Filipe Manana <fdmanana@gmail.com>

commit c715e155c94ba0b3657820d676ec3c7213a5ce81
Author: Filipe Manana <fdmanana@gmail.com>
Date:   Mon Mar 31 14:52:14 2014 +0100

    Btrfs: send, build path string only once in send_hole

    There's no point building the path string in each iteration of the
    send_hole loop, as it produces always the same string.

    Signed-off-by: Filipe David Borba Manana <fdmanana@gmail.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/send.c b/fs/btrfs/send.c
index e8e9f35..1ac3ca9 100644
--- a/fs/btrfs/send.c
+++ b/fs/btrfs/send.c
@@ -4436,6 +4436,9 @@ static int send_hole(struct send_ctx *sctx, u64 end)
  p = fs_path_alloc();
  if (!p)
   return -ENOMEM;
+ ret = get_cur_path(sctx, sctx->cur_ino, sctx->cur_inode_gen, p);
+ if (ret < 0)
+  goto tlv_put_failure;
  memset(sctx->read_buf, 0, BTRFS_SEND_READ_SIZE);
  while (offset < end) {
   len = min_t(u64, end - offset, BTRFS_SEND_READ_SIZE);
@@ -4443,9 +4446,6 @@ static int send_hole(struct send_ctx *sctx, u64 end)
   ret = begin_cmd(sctx, BTRFS_SEND_C_WRITE);
   if (ret < 0)
    break;
-  ret = get_cur_path(sctx, sctx->cur_ino, sctx->cur_inode_gen, p);
-  if (ret < 0)
-   break;
   TLV_PUT_PATH(sctx, BTRFS_SEND_A_PATH, p);
   TLV_PUT_U64(sctx, BTRFS_SEND_A_FILE_OFFSET, offset);
   TLV_PUT(sctx, BTRFS_SEND_A_DATA, sctx->read_buf, len);
-- 
1.7.1