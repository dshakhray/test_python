From 0c3df3ae3a00422fdf3065e8d59fe5b7dca53529 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:10:06 -0400
Subject: [usb] usbtest: add a timeout for scatter-gather tests

Message-id: <1410887463-20674-535-git-send-email-dzickus@redhat.com>
Patchwork-id: 95477
O-Subject: [RHEL7 PATCH 534/591] USB: usbtest: add a timeout for scatter-gather tests
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 32b36eeae6a859670d2939a7d6136cb5e9ed64f8
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Tue Jun 3 11:11:34 2014 -0400

    USB: usbtest: add a timeout for scatter-gather tests

    In usbtest, tests 5 - 8 use the scatter-gather library in usbcore
    without any sort of timeout.  If there's a problem in the gadget or
    host controller being tested, the test can hang.

    This patch adds a 10-second timeout to the tests, so that they will
    fail gracefully with an ETIMEDOUT error instead of hanging.

    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-by: Huang Rui <ray.huang@amd.com>
    Tested-by: Huang Rui <ray.huang@amd.com>
    CC: <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/misc/usbtest.c b/drivers/usb/misc/usbtest.c
index 51a6da2..829f446 100644
--- a/drivers/usb/misc/usbtest.c
+++ b/drivers/usb/misc/usbtest.c
@@ -7,7 +7,7 @@
 #include <linux/moduleparam.h>
 #include <linux/scatterlist.h>
 #include <linux/mutex.h>
-
+#include <linux/timer.h>
 #include <linux/usb.h>
 
 #define SIMPLE_IO_TIMEOUT 10000 /* in milliseconds */
@@ -484,6 +484,14 @@ alloc_sglist(int nents, int max, int vary)
  return sg;
 }
 
+static void sg_timeout(unsigned long _req)
+{
+ struct usb_sg_request *req = (struct usb_sg_request *) _req;
+
+ req->status = -ETIMEDOUT;
+ usb_sg_cancel(req);
+}
+
 static int perform_sglist(
  struct usbtest_dev *tdev,
  unsigned  iterations,
@@ -495,6 +503,9 @@ static int perform_sglist(
 {
  struct usb_device *udev = testdev_to_usbdev(tdev);
  int   retval = 0;
+ struct timer_list sg_timer;
+
+ setup_timer_on_stack(&sg_timer, sg_timeout, (unsigned long) req);
 
  while (retval == 0 && iterations-- > 0) {
   retval = usb_sg_init(req, udev, pipe,
@@ -505,7 +516,10 @@ static int perform_sglist(
 
   if (retval)
    break;
+  mod_timer(&sg_timer, jiffies +
+    msecs_to_jiffies(SIMPLE_IO_TIMEOUT));
   usb_sg_wait(req);
+  del_timer_sync(&sg_timer);
   retval = req->status;
 
   /* FIXME check resulting data pattern */
-- 
1.7.1