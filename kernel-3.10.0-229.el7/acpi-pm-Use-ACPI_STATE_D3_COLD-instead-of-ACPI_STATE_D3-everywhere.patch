From 913b12aee2df6a6e413104c2b62927192405baa7 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 28 Aug 2014 03:03:41 -0400
Subject: [acpi] pm: Use ACPI_STATE_D3_COLD instead of ACPI_STATE_D3 everywhere

Message-id: <20140828030341.2117.24072.stgit@gir.stowe>
Patchwork-id: 89289
O-Subject: [RHEL7.1 PATCH 01/30] ACPI / PM: Use ACPI_STATE_D3_COLD instead of ACPI_STATE_D3 everywhere
Bugzilla: 1128632
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1128632
Upstream Status: 8ad928d52e63a9b7d69f0873d7318c4561e2f8cd

commit 8ad928d52e63a9b7d69f0873d7318c4561e2f8cd
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Jul 30 14:36:20 2013 +0200

    ACPI / PM: Use ACPI_STATE_D3_COLD instead of ACPI_STATE_D3 everywhere

    There are several places in the tree where ACPI_STATE_D3 is used
    instead of ACPI_STATE_D3_COLD which should be used instead for
    clarity.  Modify them all to use ACPI_STATE_D3_COLD as appropriate.

    [The definition of ACPI_STATE_D3 itself cannot go away at this point
     as it is part of ACPICA.]

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Aaron Lu <aaron.lu@intel.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/acpi/fan.c b/drivers/acpi/fan.c
index 5b02a0a..41ade65 100644
--- a/drivers/acpi/fan.c
+++ b/drivers/acpi/fan.c
@@ -93,7 +93,7 @@ static int fan_get_cur_state(struct thermal_cooling_device *cdev, unsigned long
  if (result)
   return result;
 
- *state = (acpi_state == ACPI_STATE_D3 ? 0 :
+ *state = (acpi_state == ACPI_STATE_D3_COLD ? 0 :
    (acpi_state == ACPI_STATE_D0 ? 1 : -1));
  return 0;
 }
@@ -108,7 +108,7 @@ fan_set_cur_state(struct thermal_cooling_device *cdev, unsigned long state)
   return -EINVAL;
 
  result = acpi_bus_set_power(device->handle,
-    state ? ACPI_STATE_D0 : ACPI_STATE_D3);
+    state ? ACPI_STATE_D0 : ACPI_STATE_D3_COLD);
 
  return result;
 }
diff --git a/drivers/acpi/power.c b/drivers/acpi/power.c
index 1460c88..0dbe5cd 100644
--- a/drivers/acpi/power.c
+++ b/drivers/acpi/power.c
@@ -784,7 +784,7 @@ int acpi_power_get_inferred_state(struct acpi_device *device, int *state)
   }
  }
 
- *state = ACPI_STATE_D3;
+ *state = ACPI_STATE_D3_COLD;
  return 0;
 }
 
diff --git a/drivers/acpi/scan.c b/drivers/acpi/scan.c
index 52180c8..7ab2380 100644
--- a/drivers/acpi/scan.c
+++ b/drivers/acpi/scan.c
@@ -1346,8 +1346,8 @@ static void acpi_bus_get_power_flags(struct acpi_device *device)
  /* Set defaults for D0 and D3 states (always valid) */
  device->power.states[ACPI_STATE_D0].flags.valid = 1;
  device->power.states[ACPI_STATE_D0].power = 100;
- device->power.states[ACPI_STATE_D3].flags.valid = 1;
- device->power.states[ACPI_STATE_D3].power = 0;
+ device->power.states[ACPI_STATE_D3_COLD].flags.valid = 1;
+ device->power.states[ACPI_STATE_D3_COLD].power = 0;
 
  /* Set D3cold's explicit_set flag if _PS3 exists. */
  if (device->power.states[ACPI_STATE_D3_HOT].flags.explicit_set)
diff --git a/drivers/ata/libata-acpi.c b/drivers/ata/libata-acpi.c
index cf4e702..da8170d 100644
--- a/drivers/ata/libata-acpi.c
+++ b/drivers/ata/libata-acpi.c
@@ -947,11 +947,11 @@ static void pata_acpi_set_state(struct ata_port *ap, pm_message_t state)
    continue;
 
   acpi_bus_set_power(dev_handle, state.event & PM_EVENT_RESUME ?
-      ACPI_STATE_D0 : ACPI_STATE_D3);
+     ACPI_STATE_D0 : ACPI_STATE_D3_COLD);
  }
 
  if (!(state.event & PM_EVENT_RESUME))
-  acpi_bus_set_power(port_handle, ACPI_STATE_D3);
+  acpi_bus_set_power(port_handle, ACPI_STATE_D3_COLD);
 }
 
 /**
diff --git a/drivers/ide/ide-acpi.c b/drivers/ide/ide-acpi.c
index f1a6796..140c8ef 100644
--- a/drivers/ide/ide-acpi.c
+++ b/drivers/ide/ide-acpi.c
@@ -520,11 +520,12 @@ void ide_acpi_set_state(ide_hwif_t *hwif, int on)
  ide_port_for_each_present_dev(i, drive, hwif) {
   if (drive->acpidata->obj_handle)
    acpi_bus_set_power(drive->acpidata->obj_handle,
-        on ? ACPI_STATE_D0 : ACPI_STATE_D3);
+    on ? ACPI_STATE_D0 : ACPI_STATE_D3_COLD);
  }
 
  if (!on)
-  acpi_bus_set_power(hwif->acpidata->obj_handle, ACPI_STATE_D3);
+  acpi_bus_set_power(hwif->acpidata->obj_handle,
+       ACPI_STATE_D3_COLD);
 }
 
 /**
diff --git a/drivers/pnp/pnpacpi/core.c b/drivers/pnp/pnpacpi/core.c
index 55cd459..34049b0 100644
--- a/drivers/pnp/pnpacpi/core.c
+++ b/drivers/pnp/pnpacpi/core.c
@@ -131,7 +131,7 @@ static int pnpacpi_disable_resources(struct pnp_dev *dev)
  /* acpi_unregister_gsi(pnp_irq(dev, 0)); */
  ret = 0;
  if (acpi_bus_power_manageable(handle))
-  acpi_bus_set_power(handle, ACPI_STATE_D3);
+  acpi_bus_set_power(handle, ACPI_STATE_D3_COLD);
   /* continue even if acpi_bus_set_power() fails */
  if (ACPI_FAILURE(acpi_evaluate_object(handle, "_DIS", NULL, NULL)))
   ret = -ENODEV;
@@ -174,10 +174,10 @@ static int pnpacpi_suspend(struct pnp_dev *dev, pm_message_t state)
 
  if (acpi_bus_power_manageable(handle)) {
   int power_state = acpi_pm_device_sleep_state(&dev->dev, NULL,
-            ACPI_STATE_D3);
+       ACPI_STATE_D3_COLD);
   if (power_state < 0)
    power_state = (state.event == PM_EVENT_ON) ?
-     ACPI_STATE_D0 : ACPI_STATE_D3;
+     ACPI_STATE_D0 : ACPI_STATE_D3_COLD;
 
   /*
    * acpi_bus_set_power() often fails (keyboard port can't be
diff --git a/include/acpi/acpi_bus.h b/include/acpi/acpi_bus.h
index dd7a40c..57042d3 100644
--- a/include/acpi/acpi_bus.h
+++ b/include/acpi/acpi_bus.h
@@ -474,7 +474,8 @@ static inline int acpi_pm_device_sleep_state(struct device *d, int *p, int m)
  if (p)
   *p = ACPI_STATE_D0;
 
- return (m >= ACPI_STATE_D0 && m <= ACPI_STATE_D3) ? m : ACPI_STATE_D0;
+ return (m >= ACPI_STATE_D0 && m <= ACPI_STATE_D3_COLD) ?
+  m : ACPI_STATE_D0;
 }
 static inline void acpi_dev_pm_add_dependent(acpi_handle handle,
           struct device *depdev) {}
-- 
1.7.1