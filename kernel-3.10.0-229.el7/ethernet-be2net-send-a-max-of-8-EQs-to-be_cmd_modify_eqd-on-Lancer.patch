From 4ac7f717566d2f1ba3551bb2faa1d20e465a2516 Mon Sep 17 00:00:00 2001
From: Ivan Vecera <ivecera@redhat.com>
Date: Wed, 19 Nov 2014 16:12:54 -0500
Subject: [ethernet] be2net: send a max of 8 EQs to be_cmd_modify_eqd() on Lancer

Message-id: <1416413587-12091-7-git-send-email-ivecera@redhat.com>
Patchwork-id: 100335
O-Subject: [RHEL7.1 PATCH 06/19] be2net: send a max of 8 EQs to be_cmd_modify_eqd() on Lancer
Bugzilla: 1165755
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

BZ: #1165755

Upstream commit(s):
commit 936767039cdf9409153fbaafa3127b0c85101097
Author: Kalesh AP <kalesh.purayil@emulex.com>
Date:   Fri Sep 12 17:39:20 2014 +0530

    be2net: send a max of 8 EQs to be_cmd_modify_eqd() on Lancer

    The MODIFY_EQ_DELAY FW cmd on Lancer is supported for a max of 8 EQs per cmd.

    Signed-off-by: Kalesh AP <kalesh.purayil@emulex.com>
    Signed-off-by: Sathya Perla <sathya.perla@emulex.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Ivan Vecera <ivecera@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/emulex/benet/be_cmds.c b/drivers/net/ethernet/emulex/benet/be_cmds.c
index 85edde6..cd213d9 100644
--- a/drivers/net/ethernet/emulex/benet/be_cmds.c
+++ b/drivers/net/ethernet/emulex/benet/be_cmds.c
@@ -1783,8 +1783,8 @@ err:
 /* set the EQ delay interval of an EQ to specified value
  * Uses async mcc
  */
-int be_cmd_modify_eqd(struct be_adapter *adapter, struct be_set_eqd *set_eqd,
-        int num)
+int __be_cmd_modify_eqd(struct be_adapter *adapter, struct be_set_eqd *set_eqd,
+   int num)
 {
  struct be_mcc_wrb *wrb;
  struct be_cmd_req_modify_eq_delay *req;
@@ -1817,6 +1817,25 @@ err:
  return status;
 }
 
+int be_cmd_modify_eqd(struct be_adapter *adapter, struct be_set_eqd *set_eqd,
+        int num)
+{
+ int num_eqs, i = 0;
+
+ if (lancer_chip(adapter) && num > 8) {
+  while (num) {
+   num_eqs = min(num, 8);
+   __be_cmd_modify_eqd(adapter, &set_eqd[i], num_eqs);
+   i += num_eqs;
+   num -= num_eqs;
+  }
+ } else {
+  __be_cmd_modify_eqd(adapter, set_eqd, num);
+ }
+
+ return 0;
+}
+
 /* Uses sycnhronous mcc */
 int be_cmd_vlan_config(struct be_adapter *adapter, u32 if_id, u16 *vtag_array,
          u32 num)
-- 
1.7.1