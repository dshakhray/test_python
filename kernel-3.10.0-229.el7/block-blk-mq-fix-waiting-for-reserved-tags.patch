From 80ed3e4861c3369d54a80575d15f81abb5bd0fad Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Fri, 13 Jun 2014 14:35:40 -0400
Subject: [block] blk-mq: fix waiting for reserved tags

Message-id: <1402670238-13916-53-git-send-email-snitzer@redhat.com>
Patchwork-id: 83791
O-Subject: [RHEL7.1 PATCH 052/150] blk-mq: fix waiting for reserved tags
Bugzilla: 1105204
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Jeff Moyer <jmoyer@redhat.com>

BZ: 1105204

Upstream commit 5810d903fa3459e703ce82a1d45136813c6afad8
Author: Jens Axboe <axboe@fb.com>
Date:   Tue Apr 29 20:49:48 2014 -0600

    blk-mq: fix waiting for reserved tags

    blk_mq_wait_for_tags() is only able to wait for "normal" tags,
    not reserved tags. Pass in which one we should attempt to get
    a tag for, so that waiting for reserved tags will work.

    Reserved tags are used for internal commands, which are usually
    serialized. Hence no waiting generally takes place, but we should
    ensure that it actually works if users need that functionality.

    Signed-off-by: Jens Axboe <axboe@fb.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/block/blk-mq-tag.c b/block/blk-mq-tag.c
index 7a799c4..1f43d6e 100644
--- a/block/blk-mq-tag.c
+++ b/block/blk-mq-tag.c
@@ -6,9 +6,9 @@
 #include "blk-mq.h"
 #include "blk-mq-tag.h"
 
-void blk_mq_wait_for_tags(struct blk_mq_tags *tags)
+void blk_mq_wait_for_tags(struct blk_mq_tags *tags, bool reserved)
 {
- int tag = blk_mq_get_tag(tags, __GFP_WAIT, false);
+ int tag = blk_mq_get_tag(tags, __GFP_WAIT, reserved);
  blk_mq_put_tag(tags, tag);
 }
 
diff --git a/block/blk-mq-tag.h b/block/blk-mq-tag.h
index b602e3f..c8e0645 100644
--- a/block/blk-mq-tag.h
+++ b/block/blk-mq-tag.h
@@ -24,7 +24,7 @@ extern struct blk_mq_tags *blk_mq_init_tags(unsigned int nr_tags, unsigned int r
 extern void blk_mq_free_tags(struct blk_mq_tags *tags);
 
 extern unsigned int blk_mq_get_tag(struct blk_mq_tags *tags, gfp_t gfp, bool reserved);
-extern void blk_mq_wait_for_tags(struct blk_mq_tags *tags);
+extern void blk_mq_wait_for_tags(struct blk_mq_tags *tags, bool reserved);
 extern void blk_mq_put_tag(struct blk_mq_tags *tags, unsigned int tag);
 extern void blk_mq_tag_busy_iter(struct blk_mq_tags *tags, void (*fn)(void *data, unsigned long *), void *data);
 extern bool blk_mq_has_free_tags(struct blk_mq_tags *tags);
diff --git a/block/blk-mq.c b/block/blk-mq.c
index f2e92eb..0aee325 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -218,7 +218,7 @@ static struct request *blk_mq_alloc_request_pinned(struct request_queue *q,
    break;
   }
 
-  blk_mq_wait_for_tags(hctx->tags);
+  blk_mq_wait_for_tags(hctx->tags, reserved);
  } while (1);
 
  return rq;
-- 
1.7.1