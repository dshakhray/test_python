From 5af1606cadad55033ebdb13d0e6c9ef99f5333db Mon Sep 17 00:00:00 2001
From: John Greene <jogreene@redhat.com>
Date: Thu, 14 Aug 2014 14:42:24 -0400
Subject: [ethernet] e1000e: Fix CRC errors with jumbo traffic

Message-id: <1408027348-9610-31-git-send-email-jogreene@redhat.com>
Patchwork-id: 87723
O-Subject: [RHEL7.1 PATCH 30/34] e1000e: Fix CRC errors with jumbo traffic
Bugzilla: 1091119
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

BZ: 1091119
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7834849
Tested: By me. Acceptable. See BZ for details

Modifying the jumbo frame workaround for 82579, i217 and i218 client parts
to increase the gap between the read and write pointers in the Tx FIFO.

Signed-off-by: Dave Ertman <david.m.ertman@intel.com>
Tested-by: Aaron Brown <aaron.f.brown@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 493004d04f56fd7d642bdbb2938e17e5f7d622d1)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/e1000e/defines.h b/drivers/net/ethernet/intel/e1000e/defines.h
index d18e892..bb7ab3c 100644
--- a/drivers/net/ethernet/intel/e1000e/defines.h
+++ b/drivers/net/ethernet/intel/e1000e/defines.h
@@ -342,6 +342,7 @@
 #define E1000_TIPG_IPGR2_SHIFT  20
 
 #define MAX_JUMBO_FRAME_SIZE    0x3F00
+#define E1000_TX_PTR_GAP  0x1F
 
 /* Extended Configuration Control and Size */
 #define E1000_EXTCNF_CTRL_MDIO_SW_OWNERSHIP      0x00000020
diff --git a/drivers/net/ethernet/intel/e1000e/ich8lan.c b/drivers/net/ethernet/intel/e1000e/ich8lan.c
index da8f7bf..56d074d 100644
--- a/drivers/net/ethernet/intel/e1000e/ich8lan.c
+++ b/drivers/net/ethernet/intel/e1000e/ich8lan.c
@@ -2413,7 +2413,7 @@ s32 e1000_lv_jumbo_workaround_ich8lan(struct e1000_hw *hw, bool enable)
    return ret_val;
   e1e_rphy(hw, PHY_REG(776, 20), &data);
   data &= ~(0x3FF << 2);
-  data |= (0x1A << 2);
+  data |= (E1000_TX_PTR_GAP << 2);
   ret_val = e1e_wphy(hw, PHY_REG(776, 20), data);
   if (ret_val)
    return ret_val;
-- 
1.7.1