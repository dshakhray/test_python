From 4da355a807379c2b881b75bc688f43ee21e848be Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Mon, 23 Jun 2014 21:50:59 -0400
Subject: [fs] nfsd: nfsd4_check_resp_size needn't recalculate length

Message-id: <1403560314-32525-118-git-send-email-bfields@redhat.com>
Patchwork-id: 84565
O-Subject: [Patch RHEL7 117/172] nfsd4: nfsd4_check_resp_size needn't recalculate length
Bugzilla: 1111719
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

We're keeping the length updated as we go now, so there's no need for
the extra calculation here.

Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: 67492c990300912c717bc95e9f705feb63de2df9
Bugzilla: 1111719
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4xdr.c b/fs/nfsd/nfs4xdr.c
index 8728715..89c65a3 100644
--- a/fs/nfsd/nfs4xdr.c
+++ b/fs/nfsd/nfs4xdr.c
@@ -3752,32 +3752,20 @@ static nfsd4_enc nfsd4_enc_ops[] = {
  */
 __be32 nfsd4_check_resp_size(struct nfsd4_compoundres *resp, u32 pad)
 {
- struct xdr_buf *xb = &resp->rqstp->rq_res;
+ struct xdr_buf *buf = &resp->rqstp->rq_res;
  struct nfsd4_session *session = NULL;
  struct nfsd4_slot *slot = resp->cstate.slot;
- u32 length, tlen = 0;
 
  if (!nfsd4_has_session(&resp->cstate))
   return 0;
 
  session = resp->cstate.session;
 
- if (xb->page_len == 0) {
-  length = (char *)resp->xdr.p - (char *)xb->head[0].iov_base + pad;
- } else {
-  if (xb->tail[0].iov_base && xb->tail[0].iov_len > 0)
-   tlen = (char *)resp->xdr.p - (char *)xb->tail[0].iov_base;
-
-  length = xb->head[0].iov_len + xb->page_len + tlen + pad;
- }
- dprintk("%s length %u, xb->page_len %u tlen %u pad %u\n", __func__,
-  length, xb->page_len, tlen, pad);
-
- if (length > session->se_fchannel.maxresp_sz)
+ if (buf->len + pad > session->se_fchannel.maxresp_sz)
   return nfserr_rep_too_big;
 
  if ((slot->sl_flags & NFSD4_SLOT_CACHETHIS) &&
-     length > session->se_fchannel.maxresp_cached)
+     buf->len + pad > session->se_fchannel.maxresp_cached)
   return nfserr_rep_too_big_to_cache;
 
  return 0;
-- 
1.7.1