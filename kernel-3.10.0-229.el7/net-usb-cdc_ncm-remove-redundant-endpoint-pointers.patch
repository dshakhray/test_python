From 72b0b40ddf8d12b01c15739dfbf096d191b3e979 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:03:54 -0400
Subject: [net] usb/cdc_ncm: remove redundant endpoint pointers

Message-id: <1410887463-20674-163-git-send-email-dzickus@redhat.com>
Patchwork-id: 95500
O-Subject: [RHEL7 PATCH 162/591] net: cdc_ncm: remove redundant endpoint pointers
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit ff1632aa8581b7103ac2af1ea3cb4a415eb9d6ad
Author: Bjorn Mork <bjorn@mork.no>
Date:   Fri Nov 1 11:16:41 2013 +0100

    net: cdc_ncm: remove redundant endpoint pointers

    No need to duplicate stuff already in the common usbnet
    struct.  We still need to keep our special find_endpoints
    function because we need explicit control over the selected
    altsetting.

    Cc: Alexey Orishko <alexey.orishko@gmail.com>
    Signed-off-by: Bjorn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/usb/cdc_ncm.c b/drivers/net/usb/cdc_ncm.c
index 7c5c762..cd79ce5 100644
--- a/drivers/net/usb/cdc_ncm.c
+++ b/drivers/net/usb/cdc_ncm.c
@@ -292,9 +292,9 @@ max_dgram_err:
 }
 
 static void
-cdc_ncm_find_endpoints(struct cdc_ncm_ctx *ctx, struct usb_interface *intf)
+cdc_ncm_find_endpoints(struct usbnet *dev, struct usb_interface *intf)
 {
- struct usb_host_endpoint *e;
+ struct usb_host_endpoint *e, *in = NULL, *out = NULL;
  u8 ep;
 
  for (ep = 0; ep < intf->cur_altsetting->desc.bNumEndpoints; ep++) {
@@ -303,18 +303,18 @@ cdc_ncm_find_endpoints(struct cdc_ncm_ctx *ctx, struct usb_interface *intf)
   switch (e->desc.bmAttributes & USB_ENDPOINT_XFERTYPE_MASK) {
   case USB_ENDPOINT_XFER_INT:
    if (usb_endpoint_dir_in(&e->desc)) {
-    if (ctx->status_ep == NULL)
-     ctx->status_ep = e;
+    if (!dev->status)
+     dev->status = e;
    }
    break;
 
   case USB_ENDPOINT_XFER_BULK:
    if (usb_endpoint_dir_in(&e->desc)) {
-    if (ctx->in_ep == NULL)
-     ctx->in_ep = e;
+    if (!in)
+     in = e;
    } else {
-    if (ctx->out_ep == NULL)
-     ctx->out_ep = e;
+    if (!out)
+     out = e;
    }
    break;
 
@@ -322,6 +322,14 @@ cdc_ncm_find_endpoints(struct cdc_ncm_ctx *ctx, struct usb_interface *intf)
    break;
   }
  }
+ if (in && !dev->in)
+  dev->in = usb_rcvbulkpipe(dev->udev,
+       in->desc.bEndpointAddress &
+       USB_ENDPOINT_NUMBER_MASK);
+ if (out && !dev->out)
+  dev->out = usb_sndbulkpipe(dev->udev,
+        out->desc.bEndpointAddress &
+        USB_ENDPOINT_NUMBER_MASK);
 }
 
 static void cdc_ncm_free(struct cdc_ncm_ctx *ctx)
@@ -477,11 +485,9 @@ advance:
  if (temp)
   goto error2;
 
- cdc_ncm_find_endpoints(ctx, ctx->data);
- cdc_ncm_find_endpoints(ctx, ctx->control);
-
- if ((ctx->in_ep == NULL) || (ctx->out_ep == NULL) ||
-     (ctx->status_ep == NULL))
+ cdc_ncm_find_endpoints(dev, ctx->data);
+ cdc_ncm_find_endpoints(dev, ctx->control);
+ if (!dev->in || !dev->out || !dev->status)
   goto error2;
 
  dev->net->ethtool_ops = &cdc_ncm_ethtool_ops;
@@ -496,12 +502,6 @@ advance:
   dev_info(&dev->udev->dev, "MAC-Address: %pM\n", dev->net->dev_addr);
  }
 
-
- dev->in = usb_rcvbulkpipe(dev->udev,
-  ctx->in_ep->desc.bEndpointAddress & USB_ENDPOINT_NUMBER_MASK);
- dev->out = usb_sndbulkpipe(dev->udev,
-  ctx->out_ep->desc.bEndpointAddress & USB_ENDPOINT_NUMBER_MASK);
- dev->status = ctx->status_ep;
  dev->rx_urb_size = ctx->rx_max;
 
  ctx->tx_speed = ctx->rx_speed = 0;
diff --git a/include/linux/usb/cdc_ncm.h b/include/linux/usb/cdc_ncm.h
index c14e00f..36e1e15 100644
--- a/include/linux/usb/cdc_ncm.h
+++ b/include/linux/usb/cdc_ncm.h
@@ -100,9 +100,6 @@ struct cdc_ncm_ctx {
 
  struct net_device *netdev;
  struct usb_device *udev;
- struct usb_host_endpoint *in_ep;
- struct usb_host_endpoint *out_ep;
- struct usb_host_endpoint *status_ep;
  struct usb_interface *control;
  struct usb_interface *data;
 
-- 
1.7.1