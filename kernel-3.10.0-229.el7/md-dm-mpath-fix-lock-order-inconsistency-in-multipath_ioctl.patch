From 37491dac4aa04e4c850f0f1c32c92358d8387d9b Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Wed, 16 Jul 2014 20:42:34 -0400
Subject: [md] dm-mpath: fix lock order inconsistency in multipath_ioctl

Message-id: <1405543364-20901-31-git-send-email-snitzer@redhat.com>
Patchwork-id: 85912
O-Subject: [RHEL7.1 PATCH 30/40] dm mpath: fix lock order inconsistency in multipath_ioctl
Bugzilla: 1117872
RH-Acked-by: Mikulas Patocka <mpatocka@redhat.com>
RH-Acked-by: Heinz Mauelshagen <heinzm@redhat.com>

BZ: 1117872

Upstream commit 4cdd2ad78098244c1bc9ec4374ea1c225fd1cd6f
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Tue May 13 13:49:39 2014 -0400

    dm mpath: fix lock order inconsistency in multipath_ioctl

    Commit 3e9f1be1b40 ("dm mpath: remove process_queued_ios()") did not
    consistently take the multipath device's spinlock (m->lock) before
    calling dm_table_run_md_queue_async() -- which takes the q->queue_lock.

    Found with code inspection using hint from reported lockdep warning.

    Reported-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/dm-mpath.c b/drivers/md/dm-mpath.c
index 393bab2..e019581 100644
--- a/drivers/md/dm-mpath.c
+++ b/drivers/md/dm-mpath.c
@@ -1564,8 +1564,8 @@ static int multipath_ioctl(struct dm_target *ti, unsigned int cmd,
   }
   if (m->pg_init_required)
    __pg_init_all_paths(m);
-  spin_unlock_irqrestore(&m->lock, flags);
   dm_table_run_md_queue_async(m->ti->table);
+  spin_unlock_irqrestore(&m->lock, flags);
  }
 
  return r ? : __blkdev_driver_ioctl(bdev, mode, cmd, arg);
-- 
1.7.1