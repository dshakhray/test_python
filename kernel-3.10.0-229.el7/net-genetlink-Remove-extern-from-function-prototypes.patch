From 34a3802f963c8296e90d07193ff2040f19faa30d Mon Sep 17 00:00:00 2001
From: Jiri Benc <jbenc@redhat.com>
Date: Fri, 12 Sep 2014 14:26:44 -0400
Subject: [net] genetlink: Remove extern from function prototypes

Message-id: <cb6c5a071a3a1add77a8de62e5d082ade14704c4.1410528958.git.jbenc@redhat.com>
Patchwork-id: 93951
O-Subject: [RHEL7.1 net PATCH 02/23] genetlink: Remove extern from function prototypes
Bugzilla: 1140656
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: Florian Westphal <fwestpha@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1140656
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7948291

RHEL backport: Minor conflict due to out of order patches applied.

commit ff2b94d2c3d075d0f2fde330e3b5a73053c426c7
Author: Joe Perches <joe@perches.com>
Date:   Fri Sep 20 11:23:27 2013 -0700

    genetlink.h: Remove extern from function prototypes

    There are a mix of function prototypes with and without extern
    in the kernel sources.  Standardize on not using extern for
    function prototypes.

    Function prototypes don't need to be written with extern.
    extern is assumed by the compiler.  Its use is as unnecessary as
    using auto to declare automatic/local variables in a block.

    Signed-off-by: Joe Perches <joe@perches.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/net/genetlink.h b/include/net/genetlink.h
index 0dc296b..8d4310a 100644
--- a/include/net/genetlink.h
+++ b/include/net/genetlink.h
@@ -131,7 +131,7 @@ struct genl_ops {
  struct list_head ops_list;
 };
 
-extern int __genl_register_family(struct genl_family *family);
+int __genl_register_family(struct genl_family *family);
 
 static inline int genl_register_family(struct genl_family *family)
 {
@@ -139,8 +139,8 @@ static inline int genl_register_family(struct genl_family *family)
  return __genl_register_family(family);
 }
 
-extern int __genl_register_family_with_ops(struct genl_family *family,
- struct genl_ops *ops, size_t n_ops);
+int __genl_register_family_with_ops(struct genl_family *family,
+        struct genl_ops *ops, size_t n_ops);
 
 static inline int genl_register_family_with_ops(struct genl_family *family,
  struct genl_ops *ops, size_t n_ops)
@@ -149,20 +149,20 @@ static inline int genl_register_family_with_ops(struct genl_family *family,
  return __genl_register_family_with_ops(family, ops, n_ops);
 }
 
-extern int genl_unregister_family(struct genl_family *family);
-extern int genl_register_ops(struct genl_family *, struct genl_ops *ops);
-extern int genl_unregister_ops(struct genl_family *, struct genl_ops *ops);
-extern int genl_register_mc_group(struct genl_family *family,
-      struct genl_multicast_group *grp);
-extern void genl_unregister_mc_group(struct genl_family *family,
-         struct genl_multicast_group *grp);
-extern void genl_notify(struct sk_buff *skb, struct net *net, u32 portid,
-   u32 group, struct nlmsghdr *nlh, gfp_t flags);
+int genl_unregister_family(struct genl_family *family);
+int genl_register_ops(struct genl_family *, struct genl_ops *ops);
+int genl_unregister_ops(struct genl_family *, struct genl_ops *ops);
+int genl_register_mc_group(struct genl_family *family,
+      struct genl_multicast_group *grp);
+void genl_unregister_mc_group(struct genl_family *family,
+         struct genl_multicast_group *grp);
+void genl_notify(struct sk_buff *skb, struct net *net, u32 portid,
+   u32 group, struct nlmsghdr *nlh, gfp_t flags);
 
 struct sk_buff *genlmsg_new_unicast(size_t payload, struct genl_info *info,
         gfp_t flags);
 void *genlmsg_put(struct sk_buff *skb, u32 portid, u32 seq,
-    struct genl_family *family, int flags, u8 cmd);
+    struct genl_family *family, int flags, u8 cmd);
 
 /**
  * genlmsg_nlhdr - Obtain netlink header from user specified header
-- 
1.7.1