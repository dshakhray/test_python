From 102be47265a77fea90a77ddb8cb3e31887ac824b Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:05:28 -0400
Subject: [usb] hub set hub->change_bits when over-current happens

Message-id: <1410887463-20674-257-git-send-email-dzickus@redhat.com>
Patchwork-id: 95191
O-Subject: [RHEL7 PATCH 256/591] usb:hub set hub->change_bits when over-current happens
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 08d1dec6f4054e3613f32051d9b149d4203ce0d2
Author: Shen Guang <shenguang10@gmail.com>
Date:   Wed Jan 8 14:45:42 2014 +0800

    usb:hub set hub->change_bits when over-current happens

    When we are doing compliance test with xHCI, we found that if we
    enable CONFIG_USB_SUSPEND and plug in a bad device which causes
    over-current condition to the root port, software will not be noticed.
    The reason is that current code don't set hub->change_bits in
    hub_activate() when over-current happens, and then hub_events() will
    not check the port status because it thinks nothing changed.
    If CONFIG_USB_SUSPEND is disabled, the interrupt pipe of the hub will
    report the change and set hub->event_bits, and then hub_events() will
    check what events happened.In this case over-current can be detected.

    Signed-off-by: Shen Guang <shenguang10@gmail.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Acked-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/core/hub.c b/drivers/usb/core/hub.c
index a7bad41..60e7c98 100644
--- a/drivers/usb/core/hub.c
+++ b/drivers/usb/core/hub.c
@@ -1147,7 +1147,8 @@ static void hub_activate(struct usb_hub *hub, enum hub_activation_type type)
    /* Tell khubd to disconnect the device or
     * check for a new connection
     */
-   if (udev || (portstatus & USB_PORT_STAT_CONNECTION))
+   if (udev || (portstatus & USB_PORT_STAT_CONNECTION) ||
+       (portstatus & USB_PORT_STAT_OVERCURRENT))
     set_bit(port1, hub->change_bits);
 
   } else if (portstatus & USB_PORT_STAT_ENABLE) {
-- 
1.7.1