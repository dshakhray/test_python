From 9a3e19c1e7cabe60ece7862cf2554f69a1de3aba Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:25:25 -0400
Subject: [net] libceph: introduce apply_temps() helper
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-219-git-send-email-sweil@redhat.com>
Patchwork-id: 89646
O-Subject: [PATCH 218/303] libceph: introduce apply_temps() helper
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Ilya Dryomov <ilya.dryomov@inktank.com>

apply_temp() helper for applying various temporary mappings (at this
point only pg_temp mappings) to the up set, therefore transforming it
into an acting set.

Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>
Reviewed-by: Alex Elder <elder@linaro.org>
(cherry picked from commit 45966c3467e8291382a8970adbd78403a7818d45)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ceph/osdmap.c b/net/ceph/osdmap.c
index b8bbef0..bd40f56 100644
--- a/net/ceph/osdmap.c
+++ b/net/ceph/osdmap.c
@@ -1597,6 +1597,58 @@ static int raw_to_up_osds(struct ceph_osdmap *osdmap,
 }
 
 /*
+ * Given up set, apply pg_temp mapping.
+ *
+ * Return acting set length.  *primary is set to acting primary osd id,
+ * or -1 if acting set is empty.
+ */
+static int apply_temps(struct ceph_osdmap *osdmap,
+         struct ceph_pg_pool_info *pool, struct ceph_pg pgid,
+         int *osds, int len, int *primary)
+{
+ struct ceph_pg_mapping *pg;
+ int temp_len;
+ int temp_primary;
+ int i;
+
+ /* raw_pg -> pg */
+ pgid.seed = ceph_stable_mod(pgid.seed, pool->pg_num,
+        pool->pg_num_mask);
+
+ /* pg_temp? */
+ pg = __lookup_pg_mapping(&osdmap->pg_temp, pgid);
+ if (pg) {
+  temp_len = 0;
+  temp_primary = -1;
+
+  for (i = 0; i < pg->pg_temp.len; i++) {
+   if (ceph_osd_is_down(osdmap, pg->pg_temp.osds[i])) {
+    if (ceph_can_shift_osds(pool))
+     continue;
+    else
+     osds[temp_len++] = CRUSH_ITEM_NONE;
+   } else {
+    osds[temp_len++] = pg->pg_temp.osds[i];
+   }
+  }
+
+  /* apply pg_temp's primary */
+  for (i = 0; i < temp_len; i++) {
+   if (osds[i] != CRUSH_ITEM_NONE) {
+    temp_primary = osds[i];
+    break;
+   }
+  }
+ } else {
+  temp_len = len;
+  temp_primary = *primary;
+ }
+
+ *primary = temp_primary;
+ return temp_len;
+}
+
+/*
  * Return acting set for given pgid.
  */
 int ceph_calc_pg_acting(struct ceph_osdmap *osdmap, struct ceph_pg pgid,
-- 
1.7.1