From b25bfae62961d7075fa24a4cb16ef56043b4d97d Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:03:08 -0400
Subject: [fs] btrfs: fix EIO on reading file after ioctl clone works on it

Message-id: <1407179109-13714-302-git-send-email-sandeen@redhat.com>
Patchwork-id: 87266
O-Subject: [RHEL7.1 PATCH 301/422] Btrfs: fix EIO on reading file after ioctl clone works on it
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Liu Bo <bo.li.liu@oracle.com>

commit d3ecfcdf9108c833e4e501bfa02ecf673a0ace59
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Fri May 9 10:01:02 2014 +0800

    Btrfs: fix EIO on reading file after ioctl clone works on it

    For inline data extent, we need to make its length aligned, otherwise,
    we can get a phantom extent map which confuses readpages() to return -EIO.

    This can be detected by xfstests/btrfs/035.

    Reported-by: David Disseldorp <ddiss@suse.de>
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/ioctl.c b/fs/btrfs/ioctl.c
index 2ad7de9..2f6d7b1 100644
--- a/fs/btrfs/ioctl.c
+++ b/fs/btrfs/ioctl.c
@@ -3120,6 +3120,8 @@ process_slot:
    } else if (type == BTRFS_FILE_EXTENT_INLINE) {
     u64 skip = 0;
     u64 trim = 0;
+    u64 aligned_end = 0;
+
     if (off > key.offset) {
      skip = off - key.offset;
      new_key.offset += skip;
@@ -3136,9 +3138,11 @@ process_slot:
     size -= skip + trim;
     datal -= skip + trim;
 
+    aligned_end = ALIGN(new_key.offset + datal,
+          root->sectorsize);
     ret = btrfs_drop_extents(trans, root, inode,
         new_key.offset,
-        new_key.offset + datal,
+        aligned_end,
         1);
     if (ret) {
      if (ret != -EOPNOTSUPP)
-- 
1.7.1