From a0b90fcf17766fabf29f6901a6bac5eaa348f048 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:48:19 -0400
Subject: [x86] perf: Add userspace RDPMC quirk for PPro

Message-id: <1408953210-26343-12-git-send-email-jolsa@redhat.com>
Patchwork-id: 88750
O-Subject: [PATCH RHEL7.1 BZ1133083 011/322] perf/x86/intel/p6: Add userspace RDPMC quirk for PPro
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit e97df76377b8b3b1f7dfd5d6f8a1d5a31438b140
Author: Peter Zijlstra <peterz@infradead.org>
Date: Wed Feb 5 20:48:51 2014 +0100

description
===========
PPro machines can die hard when PCE gets enabled due to a CPU erratum.
The safe way it so disable it by default and keep it disabled.

See erratum 26 in:

  http://download.intel.com/design/archives/processors/pro/docs/24268935.pdf
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kernel/cpu/perf_event.c b/arch/x86/kernel/cpu/perf_event.c
index 0985a34..5bfc466 100644
--- a/arch/x86/kernel/cpu/perf_event.c
+++ b/arch/x86/kernel/cpu/perf_event.c
@@ -1519,6 +1519,8 @@ static int __init init_hw_perf_events(void)
 
  pr_cont("%s PMU driver.\n", x86_pmu.name);
 
+ x86_pmu.attr_rdpmc = 1; /* enable userspace RDPMC usage by default */
+
  for (quirk = x86_pmu.quirks; quirk; quirk = quirk->next)
   quirk->func();
 
@@ -1532,7 +1534,6 @@ static int __init init_hw_perf_events(void)
   __EVENT_CONSTRAINT(0, (1ULL << x86_pmu.num_counters) - 1,
        0, x86_pmu.num_counters, 0, 0);
 
- x86_pmu.attr_rdpmc = 1; /* enable userspace RDPMC usage by default */
  x86_pmu_format_group.attrs = x86_pmu.format_attrs;
 
  if (x86_pmu.event_attrs)
@@ -1818,6 +1819,9 @@ static ssize_t set_attr_rdpmc(struct device *cdev,
  if (ret)
   return ret;
 
+ if (x86_pmu.attr_rdpmc_broken)
+  return -ENOTSUPP;
+
  if (!!val != !!x86_pmu.attr_rdpmc) {
   x86_pmu.attr_rdpmc = !!val;
   smp_call_function(change_rdpmc, (void *)val, 1);
diff --git a/arch/x86/kernel/cpu/perf_event.h b/arch/x86/kernel/cpu/perf_event.h
index 38d91e8..64ad201 100644
--- a/arch/x86/kernel/cpu/perf_event.h
+++ b/arch/x86/kernel/cpu/perf_event.h
@@ -409,6 +409,7 @@ struct x86_pmu {
  /*
   * sysfs attrs
   */
+ int  attr_rdpmc_broken;
  int  attr_rdpmc;
  struct attribute **format_attrs;
  struct attribute **event_attrs;
diff --git a/arch/x86/kernel/cpu/perf_event_p6.c b/arch/x86/kernel/cpu/perf_event_p6.c
index b1e2fe1..7c1a0c0 100644
--- a/arch/x86/kernel/cpu/perf_event_p6.c
+++ b/arch/x86/kernel/cpu/perf_event_p6.c
@@ -231,31 +231,49 @@ static __initconst const struct x86_pmu p6_pmu = {
 
 };
 
+static __init void p6_pmu_rdpmc_quirk(void)
+{
+ if (boot_cpu_data.x86_mask < 9) {
+  /*
+   * PPro erratum 26; fixed in stepping 9 and above.
+   */
+  pr_warn("Userspace RDPMC support disabled due to a CPU erratum\n");
+  x86_pmu.attr_rdpmc_broken = 1;
+  x86_pmu.attr_rdpmc = 0;
+ }
+}
+
 __init int p6_pmu_init(void)
 {
+ x86_pmu = p6_pmu;
+
  switch (boot_cpu_data.x86_model) {
- case 1:
- case 3:  /* Pentium Pro */
- case 5:
- case 6:  /* Pentium II */
- case 7:
- case 8:
- case 11: /* Pentium III */
- case 9:
- case 13:
-  /* Pentium M */
+ case  1: /* Pentium Pro */
+  x86_add_quirk(p6_pmu_rdpmc_quirk);
+  break;
+
+ case  3: /* Pentium II - Klamath */
+ case  5: /* Pentium II - Deschutes */
+ case  6: /* Pentium II - Mendocino */
   break;
+
+ case  7: /* Pentium III - Katmai */
+ case  8: /* Pentium III - Coppermine */
+ case 10: /* Pentium III Xeon */
+ case 11: /* Pentium III - Tualatin */
+  break;
+
+ case  9: /* Pentium M - Banias */
+ case 13: /* Pentium M - Dothan */
+  break;
+
  default:
-  pr_cont("unsupported p6 CPU model %d ",
-   boot_cpu_data.x86_model);
+  pr_cont("unsupported p6 CPU model %d ", boot_cpu_data.x86_model);
   return -ENODEV;
  }
 
- x86_pmu = p6_pmu;
-
  memcpy(hw_cache_event_ids, p6_hw_cache_event_ids,
   sizeof(hw_cache_event_ids));
 
-
  return 0;
 }
-- 
1.7.1