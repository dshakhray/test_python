From 20330ea2550df3224bbf946f599bc11ae20bcfcf Mon Sep 17 00:00:00 2001
From: Jes Sorensen <Jes.Sorensen@redhat.com>
Date: Mon, 1 Sep 2014 09:26:16 -0400
Subject: [md] Recovery speed is wrong

Message-id: <1409563584-9000-75-git-send-email-Jes.Sorensen@redhat.com>
Patchwork-id: 89995
O-Subject: [RHEL7.1 PATCH 74/82] md: Recovery speed is wrong
Bugzilla: 1085530 1128517
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

From: Xiao Ni <xni@redhat.com>

When we calculate the speed of recovery, the numerator that contains
the recovery done sectors.  It's need to subtract the sectors which
don't finish recovery.

Signed-off-by: Xiao Ni <xni@redhat.com>
Signed-off-by: NeilBrown <neilb@suse.de>
(cherry picked from commit ac7e50a3835de2321bcc511e4b6fe736c73c830f)
Signed-off-by: Jes Sorensen <Jes.Sorensen@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/md.c b/drivers/md/md.c
index cfa68fe..4749c8a 100644
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@ -7376,7 +7376,7 @@ void md_do_sync(struct md_thread *thread)
  struct mddev *mddev2;
  unsigned int currspeed = 0,
    window;
- sector_t max_sectors,j, io_sectors;
+ sector_t max_sectors,j, io_sectors, recovery_done;
  unsigned long mark[SYNC_MARKS];
  unsigned long update_time;
  sector_t mark_cnt[SYNC_MARKS];
@@ -7652,7 +7652,8 @@ void md_do_sync(struct md_thread *thread)
    */
   cond_resched();
 
-  currspeed = ((unsigned long)(io_sectors-mddev->resync_mark_cnt))/2
+  recovery_done = io_sectors - atomic_read(&mddev->recovery_active);
+  currspeed = ((unsigned long)(recovery_done - mddev->resync_mark_cnt))/2
    /((jiffies-mddev->resync_mark)/HZ +1) +1;
 
   if (currspeed > speed_min(mddev)) {
-- 
1.7.1