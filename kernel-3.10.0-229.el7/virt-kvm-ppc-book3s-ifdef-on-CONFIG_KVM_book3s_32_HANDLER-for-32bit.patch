From 0722a894464254675c9e9338f6cf06acd86dda2d Mon Sep 17 00:00:00 2001
From: David Gibson <dgibson@redhat.com>
Date: Mon, 15 Sep 2014 07:13:23 -0400
Subject: [virt] kvm/ppc: book3s - ifdef on CONFIG_KVM_book3s_32_HANDLER for 32bit

Message-id: <1410765214-16377-68-git-send-email-dgibson@redhat.com>
Patchwork-id: 94738
O-Subject: [PATCH 67/78] KVM: PPC: Book3S: ifdef on CONFIG_KVM_BOOK3S_32_HANDLER for 32bit
Bugzilla: 1123145 1123133 1123367
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Signed-off-by: David Gibson <dgibson@redhat.com>

commit ab78475c76bd8c54375d8a778200c59314973d30
Author: Alexander Graf <agraf@suse.de>
Date:   Sun Apr 6 23:31:48 2014 +0200

    KVM: PPC: Book3S: ifdef on CONFIG_KVM_BOOK3S_32_HANDLER for 32bit

    The book3s_32 target can get built as module which means we don't see the
    config define for it in code. Instead, check on the bool define
    CONFIG_KVM_BOOK3S_32_HANDLER whenever we want to know whether we're building
    for a book3s_32 host.

    This fixes running book3s_32 kvm as a module for me.

    Signed-off-by: Alexander Graf <agraf@suse.de>
    Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kvm/book3s.c b/arch/powerpc/kvm/book3s.c
index 1e810f4..c14aa96 100644
--- a/arch/powerpc/kvm/book3s.c
+++ b/arch/powerpc/kvm/book3s.c
@@ -925,7 +925,7 @@ static int kvmppc_book3s_init(void)
  r = kvm_init(NULL, sizeof(struct kvm_vcpu), 0, THIS_MODULE);
  if (r)
   return r;
-#ifdef CONFIG_KVM_BOOK3S_32
+#ifdef CONFIG_KVM_BOOK3S_32_HANDLER
  r = kvmppc_book3s_init_pr();
 #endif
  return r;
@@ -934,7 +934,7 @@ static int kvmppc_book3s_init(void)
 
 static void kvmppc_book3s_exit(void)
 {
-#ifdef CONFIG_KVM_BOOK3S_32
+#ifdef CONFIG_KVM_BOOK3S_32_HANDLER
  kvmppc_book3s_exit_pr();
 #endif
  kvm_exit();
@@ -944,7 +944,7 @@ module_init(kvmppc_book3s_init);
 module_exit(kvmppc_book3s_exit);
 
 /* On 32bit this is our one and only kernel module */
-#ifdef CONFIG_KVM_BOOK3S_32
+#ifdef CONFIG_KVM_BOOK3S_32_HANDLER
 MODULE_ALIAS_MISCDEV(KVM_MINOR);
 MODULE_ALIAS("devname:kvm");
 #endif
diff --git a/arch/powerpc/kvm/book3s_pr.c b/arch/powerpc/kvm/book3s_pr.c
index dc66e6d..67fa6ba 100644
--- a/arch/powerpc/kvm/book3s_pr.c
+++ b/arch/powerpc/kvm/book3s_pr.c
@@ -1307,7 +1307,7 @@ static struct kvm_vcpu *kvmppc_core_vcpu_create_pr(struct kvm *kvm,
   goto free_vcpu;
  vcpu->arch.book3s = vcpu_book3s;
 
-#ifdef CONFIG_KVM_BOOK3S_32
+#ifdef CONFIG_KVM_BOOK3S_32_HANDLER
  vcpu->arch.shadow_vcpu =
   kzalloc(sizeof(*vcpu->arch.shadow_vcpu), GFP_KERNEL);
  if (!vcpu->arch.shadow_vcpu)
@@ -1359,7 +1359,7 @@ static struct kvm_vcpu *kvmppc_core_vcpu_create_pr(struct kvm *kvm,
 uninit_vcpu:
  kvm_vcpu_uninit(vcpu);
 free_shadow_vcpu:
-#ifdef CONFIG_KVM_BOOK3S_32
+#ifdef CONFIG_KVM_BOOK3S_32_HANDLER
  kfree(vcpu->arch.shadow_vcpu);
 free_vcpu3s:
 #endif
@@ -1376,7 +1376,7 @@ static void kvmppc_core_vcpu_free_pr(struct kvm_vcpu *vcpu)
 
  free_page((unsigned long)vcpu->arch.shared & PAGE_MASK);
  kvm_vcpu_uninit(vcpu);
-#ifdef CONFIG_KVM_BOOK3S_32
+#ifdef CONFIG_KVM_BOOK3S_32_HANDLER
  kfree(vcpu->arch.shadow_vcpu);
 #endif
  vfree(vcpu_book3s);
-- 
1.7.1