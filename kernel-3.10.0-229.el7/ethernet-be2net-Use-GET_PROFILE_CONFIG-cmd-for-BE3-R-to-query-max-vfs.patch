From 8b5e66ff5d7c9a672fd5d48a19d2c83e1e0ebf81 Mon Sep 17 00:00:00 2001
From: Ivan Vecera <ivecera@redhat.com>
Date: Mon, 8 Sep 2014 16:13:34 -0400
Subject: [ethernet] be2net: Use GET_PROFILE_CONFIG cmd for BE3-R to query max-vfs

Message-id: <1410192881-30702-12-git-send-email-ivecera@redhat.com>
Patchwork-id: 92406
O-Subject: [RHEL7.1 PATCH 11/78] be2net: Use GET_PROFILE_CONFIG cmd for BE3-R to query max-vfs
Bugzilla: 1088575
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>

BZ: #1088575

Upstream commit(s):
commit ecf1f6e1df385d17b9cdebd06edf4d1f00d217a7
Author: Suresh Reddy <suresh.reddy@emulex.com>
Date:   Tue Mar 11 18:53:03 2014 +0530

    be2net: Use GET_PROFILE_CONFIG cmd for BE3-R to query max-vfs

    Use GET_PROFILE_CONFIG_V1 cmd even for BE3-R (it's already used for
    Lancer-R and Skyhawk-R), to query max-vfs value supported by the FW.
    This is needed as on some configs, the value exported in the PCI-config
    space is not accurate.

    Signed-off-by: Suresh Reddy <suresh.reddy@emulex.com>
    Signed-off-by: Sathya Perla <sathya.perla@emulex.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Ivan Vecera <ivecera@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/emulex/benet/be_main.c b/drivers/net/ethernet/emulex/benet/be_main.c
index 5f6b1c6..72c72f2 100644
--- a/drivers/net/ethernet/emulex/benet/be_main.c
+++ b/drivers/net/ethernet/emulex/benet/be_main.c
@@ -3157,13 +3157,16 @@ static void BEx_get_resources(struct be_adapter *adapter,
 {
  struct pci_dev *pdev = adapter->pdev;
  bool use_sriov = false;
- int max_vfs;
-
- max_vfs = pci_sriov_get_totalvfs(pdev);
-
- if (BE3_chip(adapter) && sriov_want(adapter)) {
-  res->max_vfs = max_vfs > 0 ? min(MAX_VFS, max_vfs) : 0;
-  use_sriov = res->max_vfs;
+ int max_vfs = 0;
+
+ if (be_physfn(adapter) && BE3_chip(adapter)) {
+  be_cmd_get_profile_config(adapter, res, 0);
+  /* Some old versions of BE3 FW don't report max_vfs value */
+  if (res->max_vfs == 0) {
+   max_vfs = pci_sriov_get_totalvfs(pdev);
+   res->max_vfs = max_vfs > 0 ? min(MAX_VFS, max_vfs) : 0;
+  }
+  use_sriov = res->max_vfs && sriov_want(adapter);
  }
 
  if (be_physfn(adapter))
@@ -3204,7 +3207,7 @@ static void BEx_get_resources(struct be_adapter *adapter,
  res->max_rx_qs = res->max_rss_qs + 1;
 
  if (be_physfn(adapter))
-  res->max_evt_qs = (max_vfs > 0) ?
+  res->max_evt_qs = (res->max_vfs > 0) ?
      BE3_SRIOV_MAX_EVT_QS : BE3_MAX_EVT_QS;
  else
   res->max_evt_qs = 1;
-- 
1.7.1