From 7f50ab23770c91506f90abde521118f787934ac4 Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:39:19 -0400
Subject: [virt] kvm/svm: set/clear all DR intercepts in one swoop

Message-id: <1406040016-3289-165-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86243
O-Subject: [RHEL7 PATCH v2 164/221] KVM: svm: set/clear all DR intercepts in one swoop
Bugzilla: 1068627 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Unlike other intercepts, debug register intercepts will be modified
in hot paths if the guest OS is bad or otherwise gets tricked into
doing so.

Avoid calling recalc_intercepts 16 times for debug registers.

Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 5315c716b69f47e1751d09e16c7bd5b559419531)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kvm/svm.c b/arch/x86/kvm/svm.c
index 5f37b7f..75eacbb 100644
--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@ -303,20 +303,35 @@ static inline bool is_cr_intercept(struct vcpu_svm *svm, int bit)
  return vmcb->control.intercept_cr & (1U << bit);
 }
 
-static inline void set_dr_intercept(struct vcpu_svm *svm, int bit)
+static inline void set_dr_intercepts(struct vcpu_svm *svm)
 {
  struct vmcb *vmcb = get_host_vmcb(svm);
 
- vmcb->control.intercept_dr |= (1U << bit);
+ vmcb->control.intercept_dr = (1 << INTERCEPT_DR0_READ)
+  | (1 << INTERCEPT_DR1_READ)
+  | (1 << INTERCEPT_DR2_READ)
+  | (1 << INTERCEPT_DR3_READ)
+  | (1 << INTERCEPT_DR4_READ)
+  | (1 << INTERCEPT_DR5_READ)
+  | (1 << INTERCEPT_DR6_READ)
+  | (1 << INTERCEPT_DR7_READ)
+  | (1 << INTERCEPT_DR0_WRITE)
+  | (1 << INTERCEPT_DR1_WRITE)
+  | (1 << INTERCEPT_DR2_WRITE)
+  | (1 << INTERCEPT_DR3_WRITE)
+  | (1 << INTERCEPT_DR4_WRITE)
+  | (1 << INTERCEPT_DR5_WRITE)
+  | (1 << INTERCEPT_DR6_WRITE)
+  | (1 << INTERCEPT_DR7_WRITE);
 
  recalc_intercepts(svm);
 }
 
-static inline void clr_dr_intercept(struct vcpu_svm *svm, int bit)
+static inline void clr_dr_intercepts(struct vcpu_svm *svm)
 {
  struct vmcb *vmcb = get_host_vmcb(svm);
 
- vmcb->control.intercept_dr &= ~(1U << bit);
+ vmcb->control.intercept_dr = 0;
 
  recalc_intercepts(svm);
 }
@@ -1080,23 +1095,7 @@ static void init_vmcb(struct vcpu_svm *svm)
  set_cr_intercept(svm, INTERCEPT_CR4_WRITE);
  set_cr_intercept(svm, INTERCEPT_CR8_WRITE);
 
- set_dr_intercept(svm, INTERCEPT_DR0_READ);
- set_dr_intercept(svm, INTERCEPT_DR1_READ);
- set_dr_intercept(svm, INTERCEPT_DR2_READ);
- set_dr_intercept(svm, INTERCEPT_DR3_READ);
- set_dr_intercept(svm, INTERCEPT_DR4_READ);
- set_dr_intercept(svm, INTERCEPT_DR5_READ);
- set_dr_intercept(svm, INTERCEPT_DR6_READ);
- set_dr_intercept(svm, INTERCEPT_DR7_READ);
-
- set_dr_intercept(svm, INTERCEPT_DR0_WRITE);
- set_dr_intercept(svm, INTERCEPT_DR1_WRITE);
- set_dr_intercept(svm, INTERCEPT_DR2_WRITE);
- set_dr_intercept(svm, INTERCEPT_DR3_WRITE);
- set_dr_intercept(svm, INTERCEPT_DR4_WRITE);
- set_dr_intercept(svm, INTERCEPT_DR5_WRITE);
- set_dr_intercept(svm, INTERCEPT_DR6_WRITE);
- set_dr_intercept(svm, INTERCEPT_DR7_WRITE);
+ set_dr_intercepts(svm);
 
  set_exception_intercept(svm, PF_VECTOR);
  set_exception_intercept(svm, UD_VECTOR);
-- 
1.7.1