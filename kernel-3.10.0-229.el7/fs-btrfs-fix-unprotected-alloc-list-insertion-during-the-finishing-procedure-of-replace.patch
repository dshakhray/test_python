From f6b8e12f6681c65e71a62f55a15bba16d8c081d4 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:00:50 -0400
Subject: [fs] btrfs: fix unprotected alloc list insertion during the finishing procedure of replace

Message-id: <1407179109-13714-164-git-send-email-sandeen@redhat.com>
Patchwork-id: 87107
O-Subject: [RHEL7.1 PATCH 163/422] Btrfs: fix unprotected alloc list insertion during the finishing procedure of replace
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Miao Xie <miaox@cn.fujitsu.com>

commit 391cd9df81ac07ce7e66ac8fb13e56693061a6e6
Author: Miao Xie <miaox@cn.fujitsu.com>
Date:   Thu Jan 30 16:46:54 2014 +0800

    Btrfs: fix unprotected alloc list insertion during the finishing procedure of replace

    the alloc list of the filesystem is protected by ->chunk_mutex, we need
    get that mutex when we insert the new device into the list.

    Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/dev-replace.c b/fs/btrfs/dev-replace.c
index c6c8b68..64368dc 100644
--- a/fs/btrfs/dev-replace.c
+++ b/fs/btrfs/dev-replace.c
@@ -484,6 +484,7 @@ static int btrfs_dev_replace_finishing(struct btrfs_fs_info *fs_info,
  WARN_ON(ret);
 
  /* keep away write_all_supers() during the finishing procedure */
+ mutex_lock(&root->fs_info->chunk_mutex);
  mutex_lock(&root->fs_info->fs_devices->device_list_mutex);
  btrfs_dev_replace_lock(dev_replace);
  dev_replace->replace_state =
@@ -503,6 +504,7 @@ static int btrfs_dev_replace_finishing(struct btrfs_fs_info *fs_info,
          rcu_str_deref(tgt_device->name), scrub_ret);
   btrfs_dev_replace_unlock(dev_replace);
   mutex_unlock(&root->fs_info->fs_devices->device_list_mutex);
+  mutex_unlock(&root->fs_info->chunk_mutex);
   if (tgt_device)
    btrfs_destroy_dev_replace_tgtdev(fs_info, tgt_device);
   mutex_unlock(&dev_replace->lock_finishing_cancel_unmount);
@@ -543,6 +545,7 @@ static int btrfs_dev_replace_finishing(struct btrfs_fs_info *fs_info,
   */
  btrfs_dev_replace_unlock(dev_replace);
  mutex_unlock(&root->fs_info->fs_devices->device_list_mutex);
+ mutex_unlock(&root->fs_info->chunk_mutex);
 
  /* write back the superblocks */
  trans = btrfs_start_transaction(root, 0);
-- 
1.7.1