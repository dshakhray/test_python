From b7f88aa7c6a2249646fb5d04bfc9f5172820d98b Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:07:37 -0400
Subject: [usb] xhci: Switch Intel Lynx Point ports to EHCI on shutdown

Message-id: <1410887463-20674-386-git-send-email-dzickus@redhat.com>
Patchwork-id: 95239
O-Subject: [RHEL7 PATCH 385/591] xhci: Switch Intel Lynx Point ports to EHCI on shutdown.
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit c09ec25d3684cad74d851c0f028a495999591279
Author: Denis Turischev <denis.turischev@compulab.co.il>
Date:   Fri Apr 25 19:20:14 2014 +0300

    xhci: Switch Intel Lynx Point ports to EHCI on shutdown.

    The same issue like with Panther Point chipsets. If the USB ports are
    switched to xHCI on shutdown, the xHCI host will send a spurious interrupt,
    which will wake the system. Some BIOS have work around for this, but not all.
    One example is Compulab's mini-desktop, the Intense-PC2.

    The bug can be avoided if the USB ports are switched back to EHCI on
    shutdown.

    This patch should be backported to stable kernels as old as 3.12,
    that contain the commit 638298dc66ea36623dbc2757a24fc2c4ab41b016
    "xhci: Fix spurious wakeups after S5 on Haswell"

    Signed-off-by: Denis Turischev <denis@compulab.co.il>
    Cc: stable@vger.kernel.org
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/host/xhci-pci.c b/drivers/usb/host/xhci-pci.c
index 5eb367c..ca830df 100644
--- a/drivers/usb/host/xhci-pci.c
+++ b/drivers/usb/host/xhci-pci.c
@@ -134,6 +134,8 @@ static void xhci_pci_quirks(struct device *dev, struct xhci_hcd *xhci)
    */
   if (pdev->subsystem_vendor == PCI_VENDOR_ID_HP)
    xhci->quirks |= XHCI_SPURIOUS_WAKEUP;
+
+  xhci->quirks |= XHCI_SPURIOUS_REBOOT;
  }
  if (pdev->vendor == PCI_VENDOR_ID_ETRON &&
    pdev->device == PCI_DEVICE_ID_ASROCK_P67) {
-- 
1.7.1