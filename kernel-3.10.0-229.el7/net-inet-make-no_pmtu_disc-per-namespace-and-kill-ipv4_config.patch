From 540135f3913b6d81a1af74574fae1a035dfc08ec Mon Sep 17 00:00:00 2001
From: Hannes Frederic Sowa <hannes@redhat.com>
Date: Mon, 8 Dec 2014 17:33:01 -0500
Subject: [net] inet: make no_pmtu_disc per namespace and kill ipv4_config

Message-id: <deaee5daea7c6367d73486bfa8d07c743998df48.1418058212.git.hannes@redhat.com>
Patchwork-id: 101178
O-Subject: [RHEL7.1 net 05/13] inet: make no_pmtu_disc per namespace and kill ipv4_config
Bugzilla: 1170116
RH-Acked-by: Jiri Benc <jbenc@redhat.com>
RH-Acked-by: Flavio Leitner <fbl@redhat.com>
RH-Acked-by: Daniel Borkmann <dborkman@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1170116
Upstream Status: 974eda11c54290a1be8f8b155edae7d791e5ce57
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=8344420

kabi: Moved sysctl_ip_no_pmtu_disc to global net namespace instead of
ipv4 netns.

Upstream Commit:
commit 974eda11c54290a1be8f8b155edae7d791e5ce57
Author: Hannes Frederic Sowa <hannes@stressinduktion.org>
Date:   Sat Dec 14 05:13:38 2013 +0100

    inet: make no_pmtu_disc per namespace and kill ipv4_config

    The other field in ipv4_config, log_martians, was converted to a
    per-interface setting, so we can just remove the whole structure.

    Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Hannes Frederic Sowa <hannes@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/net/ip.h b/include/net/ip.h
index 3f8d3e0..4accf9a 100644
--- a/include/net/ip.h
+++ b/include/net/ip.h
@@ -185,12 +185,6 @@ void ip_send_unicast_reply(struct net *net, struct sk_buff *skb, __be32 daddr,
       __be32 saddr, const struct ip_reply_arg *arg,
       unsigned int len);
 
-struct ipv4_config {
- int log_martians;
- int no_pmtu_disc;
-};
-
-extern struct ipv4_config ipv4_config;
 #define IP_INC_STATS(net, field) SNMP_INC_STATS64((net)->mib.ip_statistics, field)
 #define IP_INC_STATS_BH(net, field) SNMP_INC_STATS64_BH((net)->mib.ip_statistics, field)
 #define IP_ADD_STATS(net, field, val) SNMP_ADD_STATS64((net)->mib.ip_statistics, field, val)
diff --git a/include/net/net_namespace.h b/include/net/net_namespace.h
index be5471e..f3eaf0a 100644
--- a/include/net/net_namespace.h
+++ b/include/net/net_namespace.h
@@ -125,8 +125,9 @@ struct net {
  struct sock  *diag_nlsk;
  atomic_t  rt_genid;
 
- RH_KABI_EXTEND(unsigned int  dev_unreg_count)
+ RH_KABI_EXTEND(unsigned int dev_unreg_count)
  RH_KABI_EXTEND(atomic_t  fnhe_genid)
+ RH_KABI_EXTEND(int  sysctl_ip_no_pmtu_disc)
 };
 
 /*
diff --git a/net/ipv4/af_inet.c b/net/ipv4/af_inet.c
index 751b843..7da79ad 100644
--- a/net/ipv4/af_inet.c
+++ b/net/ipv4/af_inet.c
@@ -126,9 +126,6 @@
 static struct list_head inetsw[SOCK_MAX];
 static DEFINE_SPINLOCK(inetsw_lock);
 
-struct ipv4_config ipv4_config;
-EXPORT_SYMBOL(ipv4_config);
-
 /* New destruction routine */
 
 void inet_sock_destruct(struct sock *sk)
@@ -366,7 +363,7 @@ lookup_protocol:
    inet->hdrincl = 1;
  }
 
- if (ipv4_config.no_pmtu_disc)
+ if (net->sysctl_ip_no_pmtu_disc)
   inet->pmtudisc = IP_PMTUDISC_DONT;
  else
   inet->pmtudisc = IP_PMTUDISC_WANT;
diff --git a/net/ipv4/icmp.c b/net/ipv4/icmp.c
index f9ce257..463b2b1 100644
--- a/net/ipv4/icmp.c
+++ b/net/ipv4/icmp.c
@@ -698,7 +698,7 @@ static void icmp_unreach(struct sk_buff *skb)
   case ICMP_PORT_UNREACH:
    break;
   case ICMP_FRAG_NEEDED:
-   if (ipv4_config.no_pmtu_disc) {
+   if (net->sysctl_ip_no_pmtu_disc) {
     LIMIT_NETDEBUG(KERN_INFO pr_fmt("%pI4: fragmentation needed and DF set\n"),
             &iph->daddr);
    } else {
diff --git a/net/ipv4/sysctl_net_ipv4.c b/net/ipv4/sysctl_net_ipv4.c
index 4ad2fe4..966253f 100644
--- a/net/ipv4/sysctl_net_ipv4.c
+++ b/net/ipv4/sysctl_net_ipv4.c
@@ -317,13 +317,6 @@ static struct ctl_table ipv4_table[] = {
   .extra2  = &ip_ttl_max,
  },
  {
-  .procname = "ip_no_pmtu_disc",
-  .data  = &ipv4_config.no_pmtu_disc,
-  .maxlen  = sizeof(int),
-  .mode  = 0644,
-  .proc_handler = proc_dointvec
- },
- {
   .procname = "ip_nonlocal_bind",
   .data  = &sysctl_ip_nonlocal_bind,
   .maxlen  = sizeof(int),
@@ -862,6 +855,13 @@ static struct ctl_table ipv4_net_table[] = {
   .mode  = 0644,
   .proc_handler = ipv4_tcp_mem,
  },
+ {
+  .procname = "ip_no_pmtu_disc",
+  .data  = &init_net.sysctl_ip_no_pmtu_disc,
+  .maxlen  = sizeof(int),
+  .mode  = 0644,
+  .proc_handler = proc_dointvec
+ },
  { }
 };
 
diff --git a/net/ipv4/xfrm4_state.c b/net/ipv4/xfrm4_state.c
index 9258e75..8fdfb2e 100644
--- a/net/ipv4/xfrm4_state.c
+++ b/net/ipv4/xfrm4_state.c
@@ -16,7 +16,7 @@
 
 static int xfrm4_init_flags(struct xfrm_state *x)
 {
- if (ipv4_config.no_pmtu_disc)
+ if (xs_net(x)->sysctl_ip_no_pmtu_disc)
   x->props.flags |= XFRM_STATE_NOPMTUDISC;
  return 0;
 }
diff --git a/net/ipv6/af_inet6.c b/net/ipv6/af_inet6.c
index 92b5ad4..8eeb015 100644
--- a/net/ipv6/af_inet6.c
+++ b/net/ipv6/af_inet6.c
@@ -214,7 +214,7 @@ lookup_protocol:
  inet->mc_list = NULL;
  inet->rcv_tos = 0;
 
- if (ipv4_config.no_pmtu_disc)
+ if (net->sysctl_ip_no_pmtu_disc)
   inet->pmtudisc = IP_PMTUDISC_DONT;
  else
   inet->pmtudisc = IP_PMTUDISC_WANT;
-- 
1.7.1