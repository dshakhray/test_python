From 0c836ea18f35f91539ed71e767d73b47debb581e Mon Sep 17 00:00:00 2001
From: Stefan Assmann <sassmann@redhat.com>
Date: Fri, 12 Sep 2014 11:48:45 -0400
Subject: [ethernet] i40e: Fix an issue when PF reset fails

Message-id: <1410522528-19793-8-git-send-email-sassmann@redhat.com>
Patchwork-id: 93942
O-Subject: [RHEL7.1 PATCH 07/10] i40e: Fix an issue when PF reset fails
Bugzilla: 1140994
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>

From: Anjali Singhai Jain <anjali.singhai@intel.com>

We shouldn't restart Admin queue subtask if PF reset fails since we do
not have the AQ setup at that point. This patch makes sure we disable AQ
clean subtask when PF reset fails.

This will resolve an occasional kernel panic when PF reset fails for
some reason.

Change-ID: I11a747773362a8c5c0ad7a10cd34be0bda8eb9e8
Signed-off-by: Anjali Singhai Jain <anjali.singhai@intel.com>
Tested-by: Jim Young <jamesx.m.young@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: Stefan Assmann <sassmann@redhat.com>
(cherry picked from commit a316f651c73f782ff7c6df623a69b67f8f464856)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/i40e/i40e.h b/drivers/net/ethernet/intel/i40e/i40e.h
index 4e97ba1..f1e33f8 100644
--- a/drivers/net/ethernet/intel/i40e/i40e.h
+++ b/drivers/net/ethernet/intel/i40e/i40e.h
@@ -145,6 +145,7 @@ enum i40e_state_t {
  __I40E_BAD_EEPROM,
  __I40E_DOWN_REQUESTED,
  __I40E_FD_FLUSH_REQUESTED,
+ __I40E_RESET_FAILED,
 };
 
 enum i40e_interrupt_policy {
diff --git a/drivers/net/ethernet/intel/i40e/i40e_main.c b/drivers/net/ethernet/intel/i40e/i40e_main.c
index 3dac600..56d432f 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_main.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_main.c
@@ -5568,6 +5568,10 @@ static void i40e_clean_adminq_subtask(struct i40e_pf *pf)
  u32 oldval;
  u32 val;
 
+ /* Do not run clean AQ when PF reset fails */
+ if (test_bit(__I40E_RESET_FAILED, &pf->state))
+  return;
+
  /* check for error indications */
  val = rd32(&pf->hw, pf->hw.aq.arq.len);
  oldval = val;
@@ -5973,19 +5977,20 @@ static void i40e_reset_and_rebuild(struct i40e_pf *pf, bool reinit)
  ret = i40e_pf_reset(hw);
  if (ret) {
   dev_info(&pf->pdev->dev, "PF reset failed, %d\n", ret);
-  goto end_core_reset;
+  set_bit(__I40E_RESET_FAILED, &pf->state);
+  goto clear_recovery;
  }
  pf->pfr_count++;
 
  if (test_bit(__I40E_DOWN, &pf->state))
-  goto end_core_reset;
+  goto clear_recovery;
  dev_dbg(&pf->pdev->dev, "Rebuilding internal switch\n");
 
  /* rebuild the basics for the AdminQ, HMC, and initial HW switch */
  ret = i40e_init_adminq(&pf->hw);
  if (ret) {
   dev_info(&pf->pdev->dev, "Rebuild AdminQ failed, %d\n", ret);
-  goto end_core_reset;
+  goto clear_recovery;
  }
 
  /* re-verify the eeprom if we just had an EMP reset */
@@ -6103,6 +6108,8 @@ static void i40e_reset_and_rebuild(struct i40e_pf *pf, bool reinit)
  i40e_send_version(pf);
 
 end_core_reset:
+ clear_bit(__I40E_RESET_FAILED, &pf->state);
+clear_recovery:
  clear_bit(__I40E_RESET_RECOVERY_PENDING, &pf->state);
 }
 
-- 
1.7.1