From c1bc662996a0ea15b586c79f19a73a441bb8a3f1 Mon Sep 17 00:00:00 2001
From: Gustavo Duarte <gduarte@redhat.com>
Date: Fri, 1 Aug 2014 13:33:17 -0400
Subject: [powerpc] Add a cpu feature CPU_FTR_PMAO_BUG

Message-id: <1406899998-23901-2-git-send-email-gduarte@redhat.com>
Patchwork-id: 86935
O-Subject: [RHEL7.1 PATCH BZ 1121407 1/2] powerpc: Add a cpu feature CPU_FTR_PMAO_BUG
Bugzilla: 1121407
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1121407
Upstream Status: Backport of 68f2f0d431d9ea4fbd373cd31e828b0ceaefea30

commit 68f2f0d431d9ea4fbd373cd31e828b0ceaefea30
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Fri Mar 14 16:00:28 2014 +1100

    powerpc: Add a cpu feature CPU_FTR_PMAO_BUG

    Some power8 revisions have a hardware bug where we can lose a
    Performance Monitor (PMU) exception under certain circumstances.

    We will be adding a workaround for this case, see the next commit for
    details. The observed behaviour is that writing PMAO doesn't cause an
    exception as we would expect, hence the name of the feature.

    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/cputable.h b/arch/powerpc/include/asm/cputable.h
index 6f3887d..25ec132 100644
--- a/arch/powerpc/include/asm/cputable.h
+++ b/arch/powerpc/include/asm/cputable.h
@@ -177,6 +177,7 @@ extern const char *powerpc_base_platform;
 #define CPU_FTR_HAS_PPR   LONG_ASM_CONST(0x0200000000000000)
 #define CPU_FTR_DAWR   LONG_ASM_CONST(0x0400000000000000)
 #define CPU_FTR_DABRX   LONG_ASM_CONST(0x0800000000000000)
+#define CPU_FTR_PMAO_BUG  LONG_ASM_CONST(0x1000000000000000)
 
 #ifndef __ASSEMBLY__
 
@@ -428,6 +429,7 @@ extern const char *powerpc_base_platform;
      CPU_FTR_ICSWX | CPU_FTR_CFAR | CPU_FTR_HVMODE | CPU_FTR_VMX_COPY | \
      CPU_FTR_DBELL | CPU_FTR_HAS_PPR | CPU_FTR_DAWR | \
      CPU_FTR_ARCH_207S | CPU_FTR_TM_COMP)
+#define CPU_FTRS_POWER8E (CPU_FTRS_POWER8 | CPU_FTR_PMAO_BUG)
 #define CPU_FTRS_CELL (CPU_FTR_USE_TB | CPU_FTR_LWSYNC | \
      CPU_FTR_PPCAS_ARCH_V2 | CPU_FTR_CTRL | \
      CPU_FTR_ALTIVEC_COMP | CPU_FTR_MMCRA | CPU_FTR_SMT | \
@@ -449,8 +451,8 @@ extern const char *powerpc_base_platform;
 #define CPU_FTRS_POSSIBLE \
      (CPU_FTRS_POWER3 | CPU_FTRS_RS64 | CPU_FTRS_POWER4 | \
      CPU_FTRS_PPC970 | CPU_FTRS_POWER5 | CPU_FTRS_POWER6 | \
-     CPU_FTRS_POWER7 | CPU_FTRS_POWER8 | CPU_FTRS_CELL |  \
-     CPU_FTRS_PA6T | CPU_FTR_VSX)
+     CPU_FTRS_POWER7 | CPU_FTRS_POWER8E | CPU_FTRS_POWER8 | \
+     CPU_FTRS_CELL | CPU_FTRS_PA6T | CPU_FTR_VSX)
 #endif
 #else
 enum {
diff --git a/arch/powerpc/kernel/cputable.c b/arch/powerpc/kernel/cputable.c
index 22973a7..f03006b 100644
--- a/arch/powerpc/kernel/cputable.c
+++ b/arch/powerpc/kernel/cputable.c
@@ -498,7 +498,7 @@ static struct cpu_spec __initdata cpu_specs[] = {
   .pvr_mask  = 0xffff0000,
   .pvr_value  = 0x004b0000,
   .cpu_name  = "POWER8E (raw)",
-  .cpu_features  = CPU_FTRS_POWER8,
+  .cpu_features  = CPU_FTRS_POWER8E,
   .cpu_user_features = COMMON_USER_POWER8,
   .cpu_user_features2 = COMMON_USER2_POWER8,
   .mmu_features  = MMU_FTRS_POWER8,
-- 
1.7.1