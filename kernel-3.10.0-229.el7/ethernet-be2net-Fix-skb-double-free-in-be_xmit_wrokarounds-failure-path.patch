From 9545eae8376a9169d19b86710f83a39240f66f60 Mon Sep 17 00:00:00 2001
From: Ivan Vecera <ivecera@redhat.com>
Date: Mon, 8 Sep 2014 16:13:31 -0400
Subject: [ethernet] be2net: Fix skb double free in be_xmit_wrokarounds() failure path

Message-id: <1410192881-30702-9-git-send-email-ivecera@redhat.com>
Patchwork-id: 92400
O-Subject: [RHEL7.1 PATCH 08/78] be2net: Fix skb double free in be_xmit_wrokarounds() failure path
Bugzilla: 1088575
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>

BZ: #1088575

Upstream commit(s):
commit c91289510602baf9a05b3501d97dc70efa269e01
Author: Vasundhara Volam <vasundhara.volam@emulex.com>
Date:   Mon Mar 3 14:25:07 2014 +0530

    be2net: Fix skb double free in be_xmit_wrokarounds() failure path

    skb_padto(), skb_share_check() and __vlan_put_tag() routines free
    skb when they return an error. This patch fixes be_xmit_workarounds()
    to not free skb again in such cases.

    Signed-off-by: Vasundhara Volam <vasundhara.volam@emulex.com>
    Signed-off-by: Sathya Perla <sathya.perla@emulex.com>
    Signed-off-by: Somnath Kotur <somnath.kotur@emulex.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Ivan Vecera <ivecera@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/emulex/benet/be_main.c b/drivers/net/ethernet/emulex/benet/be_main.c
index b817182..fe910a7 100644
--- a/drivers/net/ethernet/emulex/benet/be_main.c
+++ b/drivers/net/ethernet/emulex/benet/be_main.c
@@ -927,7 +927,7 @@ static struct sk_buff *be_xmit_workarounds(struct be_adapter *adapter,
   */
  if (unlikely(!BEx_chip(adapter) && skb->len <= 32)) {
   if (skb_padto(skb, 36))
-   goto tx_drop;
+   goto err;
   skb->len = 36;
  }
 
@@ -959,7 +959,7 @@ static struct sk_buff *be_xmit_workarounds(struct be_adapter *adapter,
      vlan_tx_tag_present(skb)) {
   skb = be_insert_vlan_in_pkt(adapter, skb, skip_hw_vlan);
   if (unlikely(!skb))
-   goto tx_drop;
+   goto err;
  }
 
  /* HW may lockup when VLAN HW tagging is requested on
@@ -981,12 +981,13 @@ static struct sk_buff *be_xmit_workarounds(struct be_adapter *adapter,
      be_vlan_tag_tx_chk(adapter, skb)) {
   skb = be_insert_vlan_in_pkt(adapter, skb, skip_hw_vlan);
   if (unlikely(!skb))
-   goto tx_drop;
+   goto err;
  }
 
  return skb;
 tx_drop:
  dev_kfree_skb_any(skb);
+err:
  return NULL;
 }
 
-- 
1.7.1