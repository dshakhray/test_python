From f0101cb2274a22db17ad530b38630824fce7f40f Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:07:54 -0400
Subject: [powerpc] vfio: Enable on pSeries platform

Message-id: <1410545655-205645-246-git-send-email-dzickus@redhat.com>
Patchwork-id: 94308
O-Subject: [RHEL7 PATCH 245/626] powerpc/vfio: Enable on pSeries platform
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 5b25199eff8e124297e6e95392f1719d20daca89
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Tue May 21 13:33:11 2013 +1000

    powerpc/vfio: Enable on pSeries platform

    The enables VFIO on the pSeries platform, enabling user space
    programs to access PCI devices directly.

    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Cc: David Gibson <david@gibson.dropbear.id.au>
    Signed-off-by: Paul Mackerras <paulus@samba.org>
    Acked-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/platforms/pseries/iommu.c b/arch/powerpc/platforms/pseries/iommu.c
index e63cfed..ad05d03 100644
--- a/arch/powerpc/platforms/pseries/iommu.c
+++ b/arch/powerpc/platforms/pseries/iommu.c
@@ -614,6 +614,7 @@ static void pci_dma_bus_setup_pSeries(struct pci_bus *bus)
 
  iommu_table_setparms(pci->phb, dn, tbl);
  pci->iommu_table = iommu_init_table(tbl, pci->phb->node);
+ iommu_register_group(tbl, pci_domain_nr(bus), 0);
 
  /* Divide the rest (1.75GB) among the children */
  pci->phb->dma_window_size = 0x80000000ul;
@@ -658,6 +659,7 @@ static void pci_dma_bus_setup_pSeriesLP(struct pci_bus *bus)
        ppci->phb->node);
   iommu_table_setparms_lpar(ppci->phb, pdn, tbl, dma_window);
   ppci->iommu_table = iommu_init_table(tbl, ppci->phb->node);
+  iommu_register_group(tbl, pci_domain_nr(bus), 0);
   pr_debug("  created table: %p\n", ppci->iommu_table);
  }
 }
@@ -684,6 +686,7 @@ static void pci_dma_dev_setup_pSeries(struct pci_dev *dev)
        phb->node);
   iommu_table_setparms(phb, dn, tbl);
   PCI_DN(dn)->iommu_table = iommu_init_table(tbl, phb->node);
+  iommu_register_group(tbl, pci_domain_nr(phb->bus), 0);
   set_iommu_table_base(&dev->dev, PCI_DN(dn)->iommu_table);
   return;
  }
@@ -1096,6 +1099,7 @@ static void pci_dma_dev_setup_pSeriesLP(struct pci_dev *dev)
        pci->phb->node);
   iommu_table_setparms_lpar(pci->phb, pdn, tbl, dma_window);
   pci->iommu_table = iommu_init_table(tbl, pci->phb->node);
+  iommu_register_group(tbl, pci_domain_nr(pci->phb->bus), 0);
   pr_debug("  created table: %p\n", pci->iommu_table);
  } else {
   pr_debug("  found DMA window, table: %p\n", pci->iommu_table);
diff --git a/drivers/iommu/Kconfig b/drivers/iommu/Kconfig
index 3f3abde..01730b2 100644
--- a/drivers/iommu/Kconfig
+++ b/drivers/iommu/Kconfig
@@ -263,7 +263,7 @@ config SHMOBILE_IOMMU_L1SIZE
 
 config SPAPR_TCE_IOMMU
  bool "sPAPR TCE IOMMU Support"
- depends on PPC_POWERNV
+ depends on PPC_POWERNV || PPC_PSERIES
  select IOMMU_API
  help
    Enables bits of IOMMU API required by VFIO. The iommu_ops
diff --git a/drivers/vfio/Kconfig b/drivers/vfio/Kconfig
index b464687..26b3d9d 100644
--- a/drivers/vfio/Kconfig
+++ b/drivers/vfio/Kconfig
@@ -12,7 +12,7 @@ menuconfig VFIO
  tristate "VFIO Non-Privileged userspace driver framework"
  depends on IOMMU_API
  select VFIO_IOMMU_TYPE1 if X86
- select VFIO_IOMMU_SPAPR_TCE if PPC_POWERNV
+ select VFIO_IOMMU_SPAPR_TCE if (PPC_POWERNV || PPC_PSERIES)
  help
    VFIO provides a framework for secure userspace device drivers.
    See Documentation/vfio.txt for more details.
-- 
1.7.1