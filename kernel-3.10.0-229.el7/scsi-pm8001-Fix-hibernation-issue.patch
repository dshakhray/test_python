From 4a1d949708bbcfe1dcba8c48dd9ad186c36c1051 Mon Sep 17 00:00:00 2001
From: Rich Bono <rbono@redhat.com>
Date: Thu, 20 Nov 2014 21:23:30 -0500
Subject: [scsi] pm8001: Fix hibernation issue

Message-id: <1416518623-7080-10-git-send-email-rbono@redhat.com>
Patchwork-id: 100407
O-Subject: [RHEL7.1 e-stor PATCH V3 09/22] pm8001: Fix hibernation issue
Bugzilla: 1110943
RH-Acked-by: Rob Evers <revers@redhat.com>
RH-Acked-by: Tomas Henzl <thenzl@redhat.com>

From: Bradley Grove <bgrove@attotech.com>

During hibernation, the HBA firmware may lose power and forget the device
id info.   This causes the HBA to reject IO upon resume.   The fix is
to call the libsas power management routines to make the domain device
forgetful.

This fixes bug 76681: https://bugzilla.kernel.org/show_bug.cgi?id=76681

Signed-off-by: Bradley Grove <bgrove@attotech.com>
Acked-by: Jack Wang <xjtuwjp@gmail.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 9f17609968af25a4082d4329abbc6e4f52eda7cd)

Signed-off-by: Rich Bono <rbono@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/pm8001/pm8001_init.c b/drivers/scsi/pm8001/pm8001_init.c
index f8222c8..1da608f 100644
--- a/drivers/scsi/pm8001/pm8001_init.c
+++ b/drivers/scsi/pm8001/pm8001_init.c
@@ -967,6 +967,7 @@ static int pm8001_pci_suspend(struct pci_dev *pdev, pm_message_t state)
  int  i, j;
  u32 device_state;
  pm8001_ha = sha->lldd_ha;
+ sas_suspend_ha(sha);
  flush_workqueue(pm8001_wq);
  scsi_block_requests(pm8001_ha->shost);
  if (!pdev->pm_cap) {
@@ -1016,6 +1017,7 @@ static int pm8001_pci_resume(struct pci_dev *pdev)
  int rc;
  u8 i = 0, j;
  u32 device_state;
+ DECLARE_COMPLETION_ONSTACK(completion);
  pm8001_ha = sha->lldd_ha;
  device_state = pdev->current_state;
 
@@ -1036,7 +1038,7 @@ static int pm8001_pci_resume(struct pci_dev *pdev)
  rc = pci_go_44(pdev);
  if (rc)
   goto err_out_disable;
-
+ sas_prep_resume_ha(sha);
  /* chip soft rst only for spc */
  if (pm8001_ha->chip_id == chip_8001) {
   PM8001_CHIP_DISP->chip_soft_rst(pm8001_ha);
@@ -1068,7 +1070,13 @@ static int pm8001_pci_resume(struct pci_dev *pdev)
   for (i = 1; i < pm8001_ha->number_of_intr; i++)
    PM8001_CHIP_DISP->interrupt_enable(pm8001_ha, i);
  }
- scsi_unblock_requests(pm8001_ha->shost);
+ pm8001_ha->flags = PM8001F_RUN_TIME;
+ for (i = 0; i < pm8001_ha->chip->n_phy; i++) {
+  pm8001_ha->phy[i].enable_completion = &completion;
+  PM8001_CHIP_DISP->phy_start_req(pm8001_ha, i);
+  wait_for_completion(&completion);
+ }
+ sas_resume_ha(sha);
  return 0;
 
 err_out_disable:
-- 
1.7.1