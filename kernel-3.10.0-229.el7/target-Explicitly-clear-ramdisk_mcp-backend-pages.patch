From f963eaee145d5cdd6f7b21cdf385f5bb91eb7bfe Mon Sep 17 00:00:00 2001
From: Andy Grover <agrover@redhat.com>
Date: Fri, 5 Sep 2014 16:36:24 -0400
Subject: [target] Explicitly clear ramdisk_mcp backend pages

Message-id: <1409934989-29941-27-git-send-email-agrover@redhat.com>
Patchwork-id: 91491
O-Subject: [RHEL7.1 PATCH e-stor 26/31] target: Explicitly clear ramdisk_mcp backend pages
Bugzilla: 1129387
RH-Acked-by: Chris Leech <cleech@redhat.com>
RH-Acked-by: Rob Evers <revers@redhat.com>

From: "Nicholas A. Bellinger" <nab@linux-iscsi.org>

[Note that a different patch to address the same issue went in during
v3.15-rc1 (commit 4442dc8a), but includes a bunch of other changes that
don't strictly apply to fixing the bug]

This patch changes rd_allocate_sgl_table() to explicitly clear
ramdisk_mcp backend memory pages by passing __GFP_ZERO into
alloc_pages().

This addresses a potential security issue where reading from a
ramdisk_mcp could return sensitive information, and follows what
>= v3.15 does to explicitly clear ramdisk_mcp memory at backend
device initialization time.

Reported-by: Jorge Daniel Sequeira Matias <jdsm@tecnico.ulisboa.pt>
Cc: Jorge Daniel Sequeira Matias <jdsm@tecnico.ulisboa.pt>
Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/target/target_core_rd.c b/drivers/target/target_core_rd.c
index 0921a64..5c3b677 100644
--- a/drivers/target/target_core_rd.c
+++ b/drivers/target/target_core_rd.c
@@ -174,7 +174,7 @@ static int rd_build_device_space(struct rd_dev *rd_dev)
       - 1;
 
   for (j = 0; j < sg_per_table; j++) {
-   pg = alloc_pages(GFP_KERNEL, 0);
+   pg = alloc_pages(GFP_KERNEL | __GFP_ZERO, 0);
    if (!pg) {
     pr_err("Unable to allocate scatterlist"
      " pages for struct rd_dev_sg_table\n");
-- 
1.7.1