From e621c40e0e6f72e60f35d6895ed0cc5e7431904b Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:09:40 -0400
Subject: [virt] kvm/ppc: book3s - Trim top 4 bits of physical address in RTAS code

Message-id: <1410545655-205645-352-git-send-email-dzickus@redhat.com>
Patchwork-id: 94333
O-Subject: [RHEL7 PATCH 351/626] KVM: PPC: Book3S: Trim top 4 bits of physical address in RTAS code
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit b24f36f33ea088771c2bb7c09e84d0ddea35cf55
Author: Paul Mackerras <paulus@samba.org>
Date:   Tue Mar 25 10:47:04 2014 +1100

    KVM: PPC: Book3S: Trim top 4 bits of physical address in RTAS code

    The in-kernel emulation of RTAS functions needs to read the argument
    buffer from guest memory in order to find out what function is being
    requested.  The guest supplies the guest physical address of the buffer,
    and on a real system the code that reads that buffer would run in guest
    real mode.  In guest real mode, the processor ignores the top 4 bits
    of the address specified in load and store instructions.  In order to
    emulate that behaviour correctly, we need to mask off those bits
    before calling kvm_read_guest() or kvm_write_guest().  This adds that
    masking.

    Signed-off-by: Paul Mackerras <paulus@samba.org>
    Acked-by: Scott Wood <scottwood@freescale.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kvm/book3s_rtas.c b/arch/powerpc/kvm/book3s_rtas.c
index cf95cde..7a05315 100644
--- a/arch/powerpc/kvm/book3s_rtas.c
+++ b/arch/powerpc/kvm/book3s_rtas.c
@@ -213,8 +213,11 @@ int kvmppc_rtas_hcall(struct kvm_vcpu *vcpu)
  gpa_t args_phys;
  int rc;
 
- /* r4 contains the guest physical address of the RTAS args */
- args_phys = kvmppc_get_gpr(vcpu, 4);
+ /*
+  * r4 contains the guest physical address of the RTAS args
+  * Mask off the top 4 bits since this is a guest real address
+  */
+ args_phys = kvmppc_get_gpr(vcpu, 4) & KVM_PAM;
 
  rc = kvm_read_guest(vcpu->kvm, args_phys, &args, sizeof(args));
  if (rc)
-- 
1.7.1