From 5a80e6b86fd558eb914da2715d8ff0e2b2e80582 Mon Sep 17 00:00:00 2001
From: Stefan Assmann <sassmann@redhat.com>
Date: Tue, 26 Aug 2014 15:30:22 -0400
Subject: [ethernet] igbvf: fix 32-bit DMA mask handling

Message-id: <1409067034-17415-2-git-send-email-sassmann@redhat.com>
Patchwork-id: 89213
O-Subject: [RHEL7.1 PATCH 01/13] DMA-API: net: intel/igbvf: fix 32-bit DMA mask handling
Bugzilla: 1091122
RH-Acked-by: Neil Horman <nhorman@redhat.com>
RH-Acked-by: John Greene <jogreene@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: John Linville <linville@redhat.com>

From: Russell King <rmk+kernel@arm.linux.org.uk>

The fallback to 32-bit DMA mask is rather odd:
 err = dma_set_mask(&pdev->dev, DMA_BIT_MASK(64));
 if (!err) {
  err = dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(64));
  if (!err)
   pci_using_dac = 1;
 } else {
  err = dma_set_mask(&pdev->dev, DMA_BIT_MASK(32));
  if (err) {
   err = dma_set_coherent_mask(&pdev->dev,
          DMA_BIT_MASK(32));
   if (err) {
    dev_err(&pdev->dev, "No usable DMA "
     "configuration, aborting\n");
    goto err_dma;
   }
  }
 }
This means we only set the coherent DMA mask in the fallback path if
the DMA mask set failed, which is silly.  This fixes it to set the
coherent DMA mask only if dma_set_mask() succeeded, and to error out
if either fails.

Acked-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
Signed-off-by: Stefan Assmann <sassmann@redhat.com>
(cherry picked from commit c21b8ebc2f1613fd0a9d5aa0d0d1083aee8ca306)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/igbvf/netdev.c b/drivers/net/ethernet/intel/igbvf/netdev.c
index 93eb7ee..4e6b02f 100644
--- a/drivers/net/ethernet/intel/igbvf/netdev.c
+++ b/drivers/net/ethernet/intel/igbvf/netdev.c
@@ -2638,21 +2638,15 @@ static int igbvf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
   return err;
 
  pci_using_dac = 0;
- err = dma_set_mask(&pdev->dev, DMA_BIT_MASK(64));
+ err = dma_set_mask_and_coherent(&pdev->dev, DMA_BIT_MASK(64));
  if (!err) {
-  err = dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(64));
-  if (!err)
-   pci_using_dac = 1;
+  pci_using_dac = 1;
  } else {
-  err = dma_set_mask(&pdev->dev, DMA_BIT_MASK(32));
+  err = dma_set_mask_and_coherent(&pdev->dev, DMA_BIT_MASK(32));
   if (err) {
-   err = dma_set_coherent_mask(&pdev->dev,
-          DMA_BIT_MASK(32));
-   if (err) {
-    dev_err(&pdev->dev, "No usable DMA "
-            "configuration, aborting\n");
-    goto err_dma;
-   }
+   dev_err(&pdev->dev, "No usable DMA "
+           "configuration, aborting\n");
+   goto err_dma;
   }
  }
 
-- 
1.7.1