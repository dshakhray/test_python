From 31ae6c330196fcafa3bf772d2d2e7af8be4d8201 Mon Sep 17 00:00:00 2001
From: Amir Vadai <avadai@redhat.com>
Date: Mon, 3 Nov 2014 07:52:26 -0500
Subject: [infiniband] iser: Fix responder resources advertisement

Message-id: <087c314e71321fe12ac18fb51ef5e20a77a16cd7.1415000301.git.avadai@redhat.com>
Patchwork-id: 98697
O-Subject: [Patch RHEL7.1 28/37] IB/iser: Fix responder resources advertisement
Bugzilla: 1107622
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Doug Ledford <dledford@redhat.com>

From: Sagi Grimberg <sagig@mellanox.com>

The iser initiator is the RDMA responder so it should publish to the
target the max inflight rdma read requests its local HCA can handle in
responder_resources (max_qp_rd_atom).

The iser target should take the min of that and its local HCA max
inflight oustanding rdma read requests (max_qp_init_rd_atom).

We keep initiator_depth set to 1 in order to compat with old targets.

Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
Signed-off-by: Roland Dreier <roland@purestorage.com>
(cherry picked from commit 2ea32938f3a702d08c5cc2cc9cb8b11235eaad8c)
Signed-off-by: Amir Vadai <amirv@mellanox.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/infiniband/ulp/iser/iser_verbs.c b/drivers/infiniband/ulp/iser/iser_verbs.c
index da6f3dd..6c7d8ce 100644
--- a/drivers/infiniband/ulp/iser/iser_verbs.c
+++ b/drivers/infiniband/ulp/iser/iser_verbs.c
@@ -694,13 +694,15 @@ static void iser_route_handler(struct rdma_cm_id *cma_id)
  struct rdma_conn_param conn_param;
  int    ret;
  struct iser_cm_hdr req_hdr;
+ struct iser_conn *ib_conn = (struct iser_conn *)cma_id->context;
+ struct iser_device *device = ib_conn->device;
 
  ret = iser_create_ib_conn_res((struct iser_conn *)cma_id->context);
  if (ret)
   goto failure;
 
  memset(&conn_param, 0, sizeof conn_param);
- conn_param.responder_resources = 4;
+ conn_param.responder_resources = device->dev_attr.max_qp_rd_atom;
  conn_param.initiator_depth     = 1;
  conn_param.retry_count        = 7;
  conn_param.rnr_retry_count     = 6;
-- 
1.7.1