From b9b0792f2adb2ddcfd11a1220c4aedfa72ae9d8c Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:02:21 -0400
Subject: [usb] xhci: refactor TRB_RESET_DEV case into function

Message-id: <1410887463-20674-70-git-send-email-dzickus@redhat.com>
Patchwork-id: 95142
O-Subject: [RHEL7 PATCH 069/591] xhci: refactor TRB_RESET_DEV case into function
Bugzilla: 1032371
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1032371

commit f681321b40d77fa360b8b2155af95cd5959d2dde
Author: Xenia Ragiadakou <burzalodowa@gmail.com>
Date:   Mon Sep 9 13:29:51 2013 +0300

    xhci: refactor TRB_RESET_DEV case into function

    The function that handles xHCI command completion is much too long and
    there is need to be broken up into individual functions for each command
    completion to improve code readablity.
    This patch refactors the code in TRB_RESET_DEV switch case in
    handle_cmd_completion() into a fuction named xhci_handle_cmd_reset_dev().

    Signed-off-by: Xenia Ragiadakou <burzalodowa@gmail.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/host/xhci-ring.c b/drivers/usb/host/xhci-ring.c
index 1c3b3f4..3cba054 100644
--- a/drivers/usb/host/xhci-ring.c
+++ b/drivers/usb/host/xhci-ring.c
@@ -1414,6 +1414,20 @@ static void xhci_handle_cmd_addr_dev(struct xhci_hcd *xhci, int slot_id,
  complete(&xhci->addr_dev);
 }
 
+static void xhci_handle_cmd_reset_dev(struct xhci_hcd *xhci, int slot_id,
+  struct xhci_event_cmd *event)
+{
+ struct xhci_virt_device *virt_dev;
+
+ xhci_dbg(xhci, "Completed reset device command.\n");
+ virt_dev = xhci->devs[slot_id];
+ if (virt_dev)
+  handle_cmd_in_cmd_wait_list(xhci, virt_dev, event);
+ else
+  xhci_warn(xhci, "Reset device command completion "
+    "for disabled slot %u\n", slot_id);
+}
+
 static void handle_cmd_completion(struct xhci_hcd *xhci,
   struct xhci_event_cmd *event)
 {
@@ -1549,13 +1563,7 @@ bandwidth_change:
  case TRB_TYPE(TRB_RESET_DEV):
   WARN_ON(slot_id != TRB_TO_SLOT_ID(
     le32_to_cpu(xhci->cmd_ring->dequeue->generic.field[3])));
-  xhci_dbg(xhci, "Completed reset device command.\n");
-  virt_dev = xhci->devs[slot_id];
-  if (virt_dev)
-   handle_cmd_in_cmd_wait_list(xhci, virt_dev, event);
-  else
-   xhci_warn(xhci, "Reset device command completion "
-     "for disabled slot %u\n", slot_id);
+  xhci_handle_cmd_reset_dev(xhci, slot_id, event);
   break;
  case TRB_TYPE(TRB_NEC_GET_FW):
   if (!(xhci->quirks & XHCI_NEC_HOST)) {
-- 
1.7.1