From c46c7289f262fa5f5025b8980e68fcfa786a8d9d Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 01:50:54 -0400
Subject: [iommu] vt-d: Remove pdev from iommu_no_mapping()

Message-id: <20140905015054.31297.61464.stgit@gir.stowe>
Patchwork-id: 91344
O-Subject: [RHEL7.1 PATCH 51/65] iommu/vt-d: Remove pdev from iommu_no_mapping()
Bugzilla: 1129880 1087643
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1087643
Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1129880
Upstream Status: ecb509ec2bacfe341530e56abf6bf3f20548bcd6

commit ecb509ec2bacfe341530e56abf6bf3f20548bcd6
Author: David Woodhouse <David.Woodhouse@intel.com>
Date:   Sun Mar 9 16:29:55 2014 -0700

    iommu/vt-d: Remove pdev from iommu_no_mapping()

    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c
index 2333f36..0f5e6c9 100644
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@ -2902,10 +2902,9 @@ static int iommu_dummy(struct device *dev)
  return dev->archdata.iommu == DUMMY_DEVICE_DOMAIN_INFO;
 }
 
-/* Check if the pdev needs to go through non-identity map and unmap process.*/
+/* Check if the dev needs to go through non-identity map and unmap process.*/
 static int iommu_no_mapping(struct device *dev)
 {
- struct pci_dev *pdev;
  int found;
 
  if (unlikely(!dev_is_pci(dev)))
@@ -2917,10 +2916,9 @@ static int iommu_no_mapping(struct device *dev)
  if (!iommu_identity_mapping)
   return 0;
 
- pdev = to_pci_dev(dev);
  found = identity_mapping(dev);
  if (found) {
-  if (iommu_should_identity_map(&pdev->dev, 0))
+  if (iommu_should_identity_map(dev, 0))
    return 1;
   else {
    /*
@@ -2929,7 +2927,7 @@ static int iommu_no_mapping(struct device *dev)
     */
    domain_remove_one_dev_info(si_domain, dev);
    printk(KERN_INFO "32bit %s uses non-identity mapping\n",
-          pci_name(pdev));
+          dev_name(dev));
    return 0;
   }
  } else {
@@ -2937,7 +2935,7 @@ static int iommu_no_mapping(struct device *dev)
    * In case of a detached 64 bit DMA device from vm, the device
    * is put into si_domain for identity mapping.
    */
-  if (iommu_should_identity_map(&pdev->dev, 0)) {
+  if (iommu_should_identity_map(dev, 0)) {
    int ret;
    ret = domain_add_dev_info(si_domain, dev,
         hw_pass_through ?
@@ -2945,7 +2943,7 @@ static int iommu_no_mapping(struct device *dev)
         CONTEXT_TT_MULTI_LEVEL);
    if (!ret) {
     printk(KERN_INFO "64bit %s uses identity mapping\n",
-           pci_name(pdev));
+           dev_name(dev));
     return 1;
    }
   }
-- 
1.7.1