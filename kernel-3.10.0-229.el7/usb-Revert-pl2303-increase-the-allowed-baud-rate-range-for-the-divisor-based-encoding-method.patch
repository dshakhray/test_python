From 4249f4ca001577159fc489495d6b41195175e48c Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:10:35 -0400
Subject: [usb] Revert: pl2303: increase the allowed baud rate range for the divisor based encoding method

Message-id: <1410887463-20674-564-git-send-email-dzickus@redhat.com>
Patchwork-id: 95397
O-Subject: [RHEL7 PATCH 563/591] Revert "usb: pl2303: increase the allowed baud rate range for the divisor based encoding method"
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 92dfe410880b8bde731ca1a6e7da2dd3b13404e6
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Nov 1 09:18:47 2013 -0700

    Revert "usb: pl2303: increase the allowed baud rate range for the divisor based encoding method"

    This reverts commit b5c16c6a031c52cc4b7dda6c3de46462fbc92eab.

    Revert all of the pl2303 changes that went into 3.12-rc1 and -rc2 as
    they cause regressions on some versions of the chip.  This will all be
    revisited for later kernel versions when we can figure out how to handle
    this in a way that does not break working devices.

    Reported-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Cc: Frank Schafer <fschaefer.oss@googlemail.com>
    Acked-by: Johan Hovold <jhovold@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/serial/pl2303.c b/drivers/usb/serial/pl2303.c
index 2c23438..8057c24 100644
--- a/drivers/usb/serial/pl2303.c
+++ b/drivers/usb/serial/pl2303.c
@@ -328,20 +328,12 @@ static int pl2303_baudrate_encode_divisor(int baud, enum pl2303_type type,
   */
  unsigned int A, B;
 
- /*
-  * NOTE: The Windows driver allows maximum baud rates of 110% of the
-  * specified maximium value.
-  * Quick tests with early (2004) HX (rev. A) chips suggest, that even
-  * higher baud rates (up to the maximum of 24M baud !) are working fine,
-  * but that should really be tested carefully in "real life" scenarios
-  * before removing the upper limit completely.
-  * Baud rates smaller than the specified 75 baud are definitely working
-  * fine.
-  */
+ /* Respect the specified baud rate limits */
+ baud = max_t(int, baud, 75);
  if (type == HX)
-  baud = min_t(int, baud, 6000000 * 1.1);
+  baud = min_t(int, baud, 6000000);
  else
-  baud = min_t(int, baud, 1228800 * 1.1);
+  baud = min_t(int, baud, 1228800);
  /* Determine factors A and B */
  A = 0;
  B = 12000000 * 32 / baud;  /* 12MHz */
-- 
1.7.1