From 7ee5ba5f36989036b337538e5e64cb626636813d Mon Sep 17 00:00:00 2001
From: Jiri Benc <jbenc@redhat.com>
Date: Fri, 12 Sep 2014 14:26:50 -0400
Subject: [net] genetlink: make all genl_ops users const

Message-id: <861ad532740b3ef29d4d2bebf1bf18dc0a25809f.1410528958.git.jbenc@redhat.com>
Patchwork-id: 93974
O-Subject: [RHEL7.1 net PATCH 08/23] genetlink: make all genl_ops users const
Bugzilla: 1140656
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: Florian Westphal <fwestpha@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1140656
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7948291

RHEL backport: removed modules that we don't have or don't enable.

commit 4534de8305b3f1460a527a0cda0e3dc2224c6f0c
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Nov 14 17:14:46 2013 +0100

    genetlink: make all genl_ops users const

    Now that genl_ops are no longer modified in place when
    registering, they can be made const. This patch was done
    mostly with spatch:

    @@
    identifier ops;
    @@
    +const
     struct genl_ops ops[] = {
     ...
     };

    (except the struct thing in net/openvswitch/datapath.c)

    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/team/team.c b/drivers/net/team/team.c
index b69a91a..ad7669e 100644
--- a/drivers/net/team/team.c
+++ b/drivers/net/team/team.c
@@ -2680,7 +2680,7 @@ static int team_nl_cmd_port_list_get(struct sk_buff *skb,
  return err;
 }
 
-static struct genl_ops team_nl_ops[] = {
+static const struct genl_ops team_nl_ops[] = {
  {
   .cmd = TEAM_CMD_NOOP,
   .doit = team_nl_cmd_noop,
diff --git a/kernel/taskstats.c b/kernel/taskstats.c
index 778bb99..b08c6a4 100644
--- a/kernel/taskstats.c
+++ b/kernel/taskstats.c
@@ -667,7 +667,7 @@ err:
  nlmsg_free(rep_skb);
 }
 
-static struct genl_ops taskstats_ops[] = {
+static const struct genl_ops taskstats_ops[] = {
  {
   .cmd  = TASKSTATS_CMD_GET,
   .doit  = taskstats_user_cmd,
diff --git a/net/core/drop_monitor.c b/net/core/drop_monitor.c
index d23b668..24346da 100644
--- a/net/core/drop_monitor.c
+++ b/net/core/drop_monitor.c
@@ -333,7 +333,7 @@ out:
  return NOTIFY_DONE;
 }
 
-static struct genl_ops dropmon_ops[] = {
+static const struct genl_ops dropmon_ops[] = {
  {
   .cmd = NET_DM_CMD_CONFIG,
   .doit = net_dm_cmd_config,
diff --git a/net/ieee802154/netlink.c b/net/ieee802154/netlink.c
index eb9faef..3ffcdbb 100644
--- a/net/ieee802154/netlink.c
+++ b/net/ieee802154/netlink.c
@@ -109,7 +109,7 @@ out:
  return -ENOBUFS;
 }
 
-static struct genl_ops ieee8021154_ops[] = {
+static const struct genl_ops ieee8021154_ops[] = {
  /* see nl-phy.c */
  IEEE802154_DUMP(IEEE802154_LIST_PHY, ieee802154_list_phy,
    ieee802154_dump_phy),
diff --git a/net/ipv4/tcp_metrics.c b/net/ipv4/tcp_metrics.c
index 37136f1..9b59349 100644
--- a/net/ipv4/tcp_metrics.c
+++ b/net/ipv4/tcp_metrics.c
@@ -996,7 +996,7 @@ static int tcp_metrics_nl_cmd_del(struct sk_buff *skb, struct genl_info *info)
  return 0;
 }
 
-static struct genl_ops tcp_metrics_nl_ops[] = {
+static const struct genl_ops tcp_metrics_nl_ops[] = {
  {
   .cmd = TCP_METRICS_CMD_GET,
   .doit = tcp_metrics_nl_cmd_get,
diff --git a/net/l2tp/l2tp_netlink.c b/net/l2tp/l2tp_netlink.c
index 462a307..927f97c 100644
--- a/net/l2tp/l2tp_netlink.c
+++ b/net/l2tp/l2tp_netlink.c
@@ -799,7 +799,7 @@ static struct nla_policy l2tp_nl_policy[L2TP_ATTR_MAX + 1] = {
  },
 };
 
-static struct genl_ops l2tp_nl_ops[] = {
+static const struct genl_ops l2tp_nl_ops[] = {
  {
   .cmd = L2TP_CMD_NOOP,
   .doit = l2tp_nl_cmd_noop,
diff --git a/net/netfilter/ipvs/ip_vs_ctl.c b/net/netfilter/ipvs/ip_vs_ctl.c
index 3c31d7a..bde2fe4 100644
--- a/net/netfilter/ipvs/ip_vs_ctl.c
+++ b/net/netfilter/ipvs/ip_vs_ctl.c
@@ -3565,7 +3565,7 @@ out:
 }
 
 
-static struct genl_ops ip_vs_genl_ops[] __read_mostly = {
+static const struct genl_ops ip_vs_genl_ops[] __read_mostly = {
  {
   .cmd = IPVS_CMD_NEW_SERVICE,
   .flags = GENL_ADMIN_PERM,
diff --git a/net/netlabel/netlabel_cipso_v4.c b/net/netlabel/netlabel_cipso_v4.c
index a110064..7066917 100644
--- a/net/netlabel/netlabel_cipso_v4.c
+++ b/net/netlabel/netlabel_cipso_v4.c
@@ -737,7 +737,7 @@ static int netlbl_cipsov4_remove(struct sk_buff *skb, struct genl_info *info)
  * NetLabel Generic NETLINK Command Definitions
  */
 
-static struct genl_ops netlbl_cipsov4_ops[] = {
+static const struct genl_ops netlbl_cipsov4_ops[] = {
  {
  .cmd = NLBL_CIPSOV4_C_ADD,
  .flags = GENL_ADMIN_PERM,
diff --git a/net/netlabel/netlabel_mgmt.c b/net/netlabel/netlabel_mgmt.c
index dd1c37d..7de6f66 100644
--- a/net/netlabel/netlabel_mgmt.c
+++ b/net/netlabel/netlabel_mgmt.c
@@ -705,7 +705,7 @@ version_failure:
  * NetLabel Generic NETLINK Command Definitions
  */
 
-static struct genl_ops netlbl_mgmt_genl_ops[] = {
+static const struct genl_ops netlbl_mgmt_genl_ops[] = {
  {
  .cmd = NLBL_MGMT_C_ADD,
  .flags = GENL_ADMIN_PERM,
diff --git a/net/netlabel/netlabel_unlabeled.c b/net/netlabel/netlabel_unlabeled.c
index 8162e07..2a4909b 100644
--- a/net/netlabel/netlabel_unlabeled.c
+++ b/net/netlabel/netlabel_unlabeled.c
@@ -1324,7 +1324,7 @@ unlabel_staticlistdef_return:
  * NetLabel Generic NETLINK Command Definitions
  */
 
-static struct genl_ops netlbl_unlabel_genl_ops[] = {
+static const struct genl_ops netlbl_unlabel_genl_ops[] = {
  {
  .cmd = NLBL_UNLABEL_C_STATICADD,
  .flags = GENL_ADMIN_PERM,
diff --git a/net/openvswitch/datapath.c b/net/openvswitch/datapath.c
index 2b3c0af..f6c2c62 100644
--- a/net/openvswitch/datapath.c
+++ b/net/openvswitch/datapath.c
@@ -582,7 +582,7 @@ static const struct nla_policy packet_policy[OVS_PACKET_ATTR_MAX + 1] = {
  [OVS_PACKET_ATTR_ACTIONS] = { .type = NLA_NESTED },
 };
 
-static struct genl_ops dp_packet_genl_ops[] = {
+static const struct genl_ops dp_packet_genl_ops[] = {
  { .cmd = OVS_PACKET_CMD_EXECUTE,
    .flags = GENL_ADMIN_PERM, /* Requires CAP_NET_ADMIN privilege. */
    .policy = packet_policy,
@@ -1037,7 +1037,7 @@ static int ovs_flow_cmd_dump(struct sk_buff *skb, struct netlink_callback *cb)
  return skb->len;
 }
 
-static struct genl_ops dp_flow_genl_ops[] = {
+static const struct genl_ops dp_flow_genl_ops[] = {
  { .cmd = OVS_FLOW_CMD_NEW,
    .flags = GENL_ADMIN_PERM, /* Requires CAP_NET_ADMIN privilege. */
    .policy = flow_policy,
@@ -1430,7 +1430,7 @@ static int ovs_dp_cmd_dump(struct sk_buff *skb, struct netlink_callback *cb)
  return skb->len;
 }
 
-static struct genl_ops dp_datapath_genl_ops[] = {
+static const struct genl_ops dp_datapath_genl_ops[] = {
  { .cmd = OVS_DP_CMD_NEW,
    .flags = GENL_ADMIN_PERM, /* Requires CAP_NET_ADMIN privilege. */
    .policy = datapath_policy,
@@ -1791,7 +1791,7 @@ out:
  return skb->len;
 }
 
-static struct genl_ops dp_vport_genl_ops[] = {
+static const struct genl_ops dp_vport_genl_ops[] = {
  { .cmd = OVS_VPORT_CMD_NEW,
    .flags = GENL_ADMIN_PERM, /* Requires CAP_NET_ADMIN privilege. */
    .policy = vport_policy,
@@ -1817,7 +1817,7 @@ static struct genl_ops dp_vport_genl_ops[] = {
 
 struct genl_family_and_ops {
  struct genl_family *family;
- struct genl_ops *ops;
+ const struct genl_ops *ops;
  int n_ops;
  struct genl_multicast_group *group;
 };
diff --git a/net/wireless/nl80211.c b/net/wireless/nl80211.c
index ac2cb32..dcd0479 100644
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -8397,7 +8397,7 @@ static void nl80211_post_doit(const struct genl_ops *ops, struct sk_buff *skb,
   rtnl_unlock();
 }
 
-static struct genl_ops nl80211_ops[] = {
+static const struct genl_ops nl80211_ops[] = {
  {
   .cmd = NL80211_CMD_GET_WIPHY,
   .doit = nl80211_get_wiphy,
-- 
1.7.1