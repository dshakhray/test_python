From 579c361c7c3686fbbfef3afa4451228fea6223f5 Mon Sep 17 00:00:00 2001
From: Steve Dickson <SteveD@redhat.com>
Date: Thu, 26 Jun 2014 15:53:53 -0400
Subject: [fs] nfs: clean up filelayout_alloc_commit_info

Message-id: <1403798077-28799-35-git-send-email-steved@redhat.com>
Patchwork-id: 84934
O-Subject: [RHEL7.1 PATCH 34/78] pnfs: clean up filelayout_alloc_commit_info
Bugzilla: 1113248
RH-Acked-by: J. Bruce Fields <bfields@redhat.com>

From: Weston Andros Adamson <dros@primarydata.com>

Remove unneeded else statement and clean up how commit info
dataserver buckets are replaced.

Suggested-by: Trond Myklebust <trond.myklebust@primarydata.com>
Signed-off-by: Weston Andros Adamson <dros@primarydata.com>
Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
Upstream Id: dd7663e7000d3408b5a5037ae8f774feaa9c0628
Bugzilla: 1113248
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfs/nfs4filelayout.c b/fs/nfs/nfs4filelayout.c
index 9319427..9cea935 100644
--- a/fs/nfs/nfs4filelayout.c
+++ b/fs/nfs/nfs4filelayout.c
@@ -850,11 +850,15 @@ filelayout_alloc_commit_info(struct pnfs_layout_segment *lseg,
 {
  struct nfs4_filelayout_segment *fl = FILELAYOUT_LSEG(lseg);
  struct pnfs_commit_bucket *buckets;
- int size;
+ int size, i;
 
  if (fl->commit_through_mds)
   return 0;
- if (cinfo->ds->nbuckets != 0) {
+
+ size = (fl->stripe_type == STRIPE_SPARSE) ?
+  fl->dsaddr->ds_num : fl->dsaddr->stripe_count;
+
+ if (cinfo->ds->nbuckets >= size) {
   /* This assumes there is only one IOMODE_RW lseg.  What
    * we really want to do is have a layout_hdr level
    * dictionary of <multipath_list4, fh> keys, each
@@ -864,30 +868,32 @@ filelayout_alloc_commit_info(struct pnfs_layout_segment *lseg,
   return 0;
  }
 
- size = (fl->stripe_type == STRIPE_SPARSE) ?
-  fl->dsaddr->ds_num : fl->dsaddr->stripe_count;
-
  buckets = kcalloc(size, sizeof(struct pnfs_commit_bucket),
      gfp_flags);
  if (!buckets)
   return -ENOMEM;
- else {
-  int i;
+ for (i = 0; i < size; i++) {
+  INIT_LIST_HEAD(&buckets[i].written);
+  INIT_LIST_HEAD(&buckets[i].committing);
+ }
 
-  spin_lock(cinfo->lock);
-  if (cinfo->ds->nbuckets != 0)
-   kfree(buckets);
-  else {
-   cinfo->ds->buckets = buckets;
-   cinfo->ds->nbuckets = size;
-   for (i = 0; i < size; i++) {
-    INIT_LIST_HEAD(&buckets[i].written);
-    INIT_LIST_HEAD(&buckets[i].committing);
-   }
-  }
-  spin_unlock(cinfo->lock);
-  return 0;
+ spin_lock(cinfo->lock);
+ if (cinfo->ds->nbuckets >= size)
+  goto out;
+ for (i = 0; i < cinfo->ds->nbuckets; i++) {
+  list_splice(&cinfo->ds->buckets[i].written,
+       &buckets[i].written);
+  list_splice(&cinfo->ds->buckets[i].committing,
+       &buckets[i].committing);
+  buckets[i].wlseg = cinfo->ds->buckets[i].wlseg;
+  buckets[i].clseg = cinfo->ds->buckets[i].clseg;
  }
+ swap(cinfo->ds->buckets, buckets);
+ cinfo->ds->nbuckets = size;
+out:
+ spin_unlock(cinfo->lock);
+ kfree(buckets);
+ return 0;
 }
 
 static struct pnfs_layout_segment *
-- 
1.7.1