From 27374435472a6e853c448c4f9aac3e771129f768 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:23:47 -0400
Subject: [cpufreq] resume drivers before enabling governors

Message-id: <1409235879-1283-134-git-send-email-prarit@redhat.com>
Patchwork-id: 89480
O-Subject: [RHEL7.1 PATCH BZ 1134639 133/185] cpufreq: resume drivers before enabling governors
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit 0c5aa405a9437d97e09ec289d4f29bb62e0f01b6
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Mon Mar 24 12:30:29 2014 +0530

    cpufreq: resume drivers before enabling governors

    During suspend, we first stop governors and then suspend cpufreq drivers and
    resume must be exactly opposite of that. i.e. resume drivers first and then
    start governors.

    But the current code in resume enables governors first and then resume drivers.
    Fix it be changing code sequence there.

    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/cpufreq.c b/drivers/cpufreq/cpufreq.c
index 10ceac7..98489d3 100644
--- a/drivers/cpufreq/cpufreq.c
+++ b/drivers/cpufreq/cpufreq.c
@@ -1650,14 +1650,13 @@ void cpufreq_resume(void)
  cpufreq_suspended = false;
 
  list_for_each_entry(policy, &cpufreq_policy_list, policy_list) {
-  if (__cpufreq_governor(policy, CPUFREQ_GOV_START)
+  if (cpufreq_driver->resume && cpufreq_driver->resume(policy))
+   pr_err("%s: Failed to resume driver: %p\n", __func__,
+    policy);
+  else if (__cpufreq_governor(policy, CPUFREQ_GOV_START)
       || __cpufreq_governor(policy, CPUFREQ_GOV_LIMITS))
    pr_err("%s: Failed to start governor for policy: %p\n",
     __func__, policy);
-  else if (cpufreq_driver->resume
-      && cpufreq_driver->resume(policy))
-   pr_err("%s: Failed to resume driver: %p\n", __func__,
-    policy);
 
   /*
    * schedule call cpufreq_update_policy() for boot CPU, i.e. last
-- 
1.7.1