From 69e722e72781500c99cc5a53dcec4261dd606c8a Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:01:57 -0400
Subject: [usb] core/hcd: converted busmap from struct to bitmap

Message-id: <1410887463-20674-46-git-send-email-dzickus@redhat.com>
Patchwork-id: 95296
O-Subject: [RHEL7 PATCH 045/591] drivers: usb: core: hcd.c: converted busmap from struct to bitmap
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 059239adfe577866115cd5270eba40e3cac33f8a
Author: Matthias Beyer <mail@beyermatthias.de>
Date:   Sat Oct 5 23:09:15 2013 +0200

    drivers: usb: core: hcd.c: converted busmap from struct to bitmap

    The DECLARE_BITMAP macro should be used for declaring this bitmap.
    This commit converts the busmap from a struct to a simple (static)
    bitmap, using the DECLARE_BITMAP macro from linux/types.h.

    Please review, as I'm new to kernel development, I don't know if this
    has any hidden side effects!

    Suggested by joe@perches.com

    Signed-off-by: Matthias Beyer <mail@beyermatthias.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/core/hcd.c b/drivers/usb/core/hcd.c
index 149cdf1..6ec8dda 100644
--- a/drivers/usb/core/hcd.c
+++ b/drivers/usb/core/hcd.c
@@ -40,6 +40,7 @@
 #include <linux/platform_device.h>
 #include <linux/workqueue.h>
 #include <linux/pm_runtime.h>
+#include <linux/types.h>
 
 #include <linux/usb.h>
 #include <linux/usb/hcd.h>
@@ -92,10 +93,7 @@ EXPORT_SYMBOL_GPL (usb_bus_list);
 
 /* used when allocating bus numbers */
 #define USB_MAXBUS  64
-struct usb_busmap {
- unsigned long busmap[USB_MAXBUS / (8*sizeof (unsigned long))];
-};
-static struct usb_busmap busmap;
+static DECLARE_BITMAP(busmap, USB_MAXBUS);
 
 /* used when updating list of hcds */
 DEFINE_MUTEX(usb_bus_list_lock); /* exported only for usbfs */
@@ -941,12 +939,12 @@ static int usb_register_bus(struct usb_bus *bus)
  int busnum;
 
  mutex_lock(&usb_bus_list_lock);
- busnum = find_next_zero_bit (busmap.busmap, USB_MAXBUS, 1);
+ busnum = find_next_zero_bit(busmap, USB_MAXBUS, 1);
  if (busnum >= USB_MAXBUS) {
   printk (KERN_ERR "%s: too many buses\n", usbcore_name);
   goto error_find_busnum;
  }
- set_bit (busnum, busmap.busmap);
+ set_bit(busnum, busmap);
  bus->busnum = busnum;
 
  /* Add it to the local list of buses */
@@ -987,7 +985,7 @@ static void usb_deregister_bus (struct usb_bus *bus)
 
  usb_notify_remove_bus(bus);
 
- clear_bit (bus->busnum, busmap.busmap);
+ clear_bit(bus->busnum, busmap);
 }
 
 /**
-- 
1.7.1