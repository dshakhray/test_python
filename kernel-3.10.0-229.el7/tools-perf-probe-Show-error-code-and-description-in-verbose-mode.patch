From 79090e3eea8da2278ed98dd7890a4825fb272dc9 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:08:53 -0400
Subject: [tools] perf/probe: Show error code and description in verbose mode

Message-id: <1410181752-25631-289-git-send-email-jolsa@redhat.com>
Patchwork-id: 91889
O-Subject: [PATCH RHEL7.1 BZ1134356 288/307] perf probe: Show error code and description in verbose mode
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit b4bf1130cdee7d5247bd3171530869809f5aca54
Author: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
Date: Fri Jun 6 07:13:52 2014 +0000

description
===========
Show error code and description only in verbose mode if 'perf probe'
command failed.

Current 'perf probe' shows error code with final error message, and that
is meaningless for many users.

This changes error messages to show the error code and its description
only in verbose mode (-v option).

Without this patch:
  -----
  # perf probe -a do_execve@hoge
  Probe point 'do_execve@hoge' not found.
    Error: Failed to add events. (-2)
  -----

With this patch, normally the message doesn't show the misterious error
number:
  -----
  # perf probe -a do_execve@hoge
  Probe point 'do_execve@hoge' not found.
    Error: Failed to add events.
  -----

And in verbose mode, it also shows additional error messages as below:
  -----
  # perf probe -va do_execve@hoge
  probe-definition(0): do_execve@hoge
  symbol:do_execve file:hoge line:0 offset:0 return:0 lazy:(null)
  0 arguments
  Looking at the vmlinux_path (6 entries long)
  Using /lib/modules/3.15.0-rc8+/build/vmlinux for symbols
  Open Debuginfo file: /lib/modules/3.15.0-rc8+/build/vmlinux
  Try to find probe point from debuginfo.
  Probe point 'do_execve@hoge' not found.
    Error: Failed to add events. Reason: No such file or directory (Code: -2)
  -----
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-probe.c b/tools/perf/builtin-probe.c
index cdcd4eb..c63fa29 100644
--- a/tools/perf/builtin-probe.c
+++ b/tools/perf/builtin-probe.c
@@ -288,6 +288,13 @@ static void cleanup_params(void)
  memset(&params, 0, sizeof(params));
 }
 
+static void pr_err_with_code(const char *msg, int err)
+{
+ pr_err("%s", msg);
+ pr_debug(" Reason: %s (Code: %d)", strerror(-err), err);
+ pr_err("\n");
+}
+
 static int
 __cmd_probe(int argc, const char **argv, const char *prefix __maybe_unused)
 {
@@ -379,7 +386,7 @@ __cmd_probe(int argc, const char **argv, const char *prefix __maybe_unused)
   }
   ret = parse_probe_event_argv(argc, argv);
   if (ret < 0) {
-   pr_err("  Error: Parse Error.  (%d)\n", ret);
+   pr_err_with_code("  Error: Command Parse Error.", ret);
    return ret;
   }
  }
@@ -419,8 +426,7 @@ __cmd_probe(int argc, const char **argv, const char *prefix __maybe_unused)
   }
   ret = show_perf_probe_events();
   if (ret < 0)
-   pr_err("  Error: Failed to show event list. (%d)\n",
-          ret);
+   pr_err_with_code("  Error: Failed to show event list.", ret);
   return ret;
  }
  if (params.show_funcs) {
@@ -445,8 +451,7 @@ __cmd_probe(int argc, const char **argv, const char *prefix __maybe_unused)
   strfilter__delete(params.filter);
   params.filter = NULL;
   if (ret < 0)
-   pr_err("  Error: Failed to show functions."
-          " (%d)\n", ret);
+   pr_err_with_code("  Error: Failed to show functions.", ret);
   return ret;
  }
 
@@ -464,7 +469,7 @@ __cmd_probe(int argc, const char **argv, const char *prefix __maybe_unused)
 
   ret = show_line_range(&params.line_range, params.target);
   if (ret < 0)
-   pr_err("  Error: Failed to show lines. (%d)\n", ret);
+   pr_err_with_code("  Error: Failed to show lines.", ret);
   return ret;
  }
  if (params.show_vars) {
@@ -485,7 +490,7 @@ __cmd_probe(int argc, const char **argv, const char *prefix __maybe_unused)
   strfilter__delete(params.filter);
   params.filter = NULL;
   if (ret < 0)
-   pr_err("  Error: Failed to show vars. (%d)\n", ret);
+   pr_err_with_code("  Error: Failed to show vars.", ret);
   return ret;
  }
 #endif
@@ -493,7 +498,7 @@ __cmd_probe(int argc, const char **argv, const char *prefix __maybe_unused)
  if (params.dellist) {
   ret = del_perf_probe_events(params.dellist);
   if (ret < 0) {
-   pr_err("  Error: Failed to delete events. (%d)\n", ret);
+   pr_err_with_code("  Error: Failed to delete events.", ret);
    return ret;
   }
  }
@@ -504,7 +509,7 @@ __cmd_probe(int argc, const char **argv, const char *prefix __maybe_unused)
          params.target,
          params.force_add);
   if (ret < 0) {
-   pr_err("  Error: Failed to add events. (%d)\n", ret);
+   pr_err_with_code("  Error: Failed to add events.", ret);
    return ret;
   }
  }
-- 
1.7.1