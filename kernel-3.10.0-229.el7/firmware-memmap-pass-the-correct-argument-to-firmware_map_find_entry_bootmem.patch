From 02bd19f7ce16c04aa2495fc1e1ccdf1d5d69dce1 Mon Sep 17 00:00:00 2001
From: Motohiro Kosaki <mkosaki@redhat.com>
Date: Mon, 25 Aug 2014 22:51:34 -0400
Subject: [firmware] memmap: pass the correct argument to firmware_map_find_entry_bootmem()

Message-id: <1409007096-2821-5-git-send-email-mkosaki@redhat.com>
Patchwork-id: 89068
O-Subject: [RHEL7.1 BZ1116286 PATCH 4/6] drivers/firmware/memmap.c: pass the correct argument to firmware_map_find_entry_bootmem()
Bugzilla: 1117186
RH-Acked-by: Lenny Szubowicz <lszubowi@redhat.com>
RH-Acked-by: Larry Woodman <lwoodman@redhat.com>

From: KOSAKI Motohiro <mkosaki@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1117186
Tree: Linus
Brew: http://brewweb.devel.redhat.com/brew/taskinfo?taskID=7878648
Changes-from-upstream: none

commit 49c8b24d00b6cb06a9c3fb959a957319cc770d71
Author: Yasuaki Ishimatsu <isimatu.yasuaki@jp.fujitsu.com>

    drivers/firmware/memmap.c: pass the correct argument to firmware_map_find_entry_bootmem()

    firmware_map_add_hotplug() calls firmware_map_find_entry_bootmem() to
    get free firmware_map_entry.  But end arguments is not correct.  So
    firmware_map_find_entry_bootmem() cannot not find firmware_map_entry.

    The patch passes the correct end argument to firmware_map_find_entry_bootmem().

    Signed-off-by: Yasuaki Ishimatsu <isimatu.yasuaki@jp.fujitsu.com>
    Cc: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Cc: Toshi Kani <toshi.kani@hp.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Signed-off-by: KOSAKI Motohiro <mkosaki@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/firmware/memmap.c b/drivers/firmware/memmap.c
index e2e04b0..5538e6e 100644
--- a/drivers/firmware/memmap.c
+++ b/drivers/firmware/memmap.c
@@ -286,7 +286,7 @@ int __meminit firmware_map_add_hotplug(u64 start, u64 end, const char *type)
 {
  struct firmware_map_entry *entry;
 
- entry = firmware_map_find_entry_bootmem(start, end, type);
+ entry = firmware_map_find_entry_bootmem(start, end - 1, type);
  if (!entry) {
   entry = kzalloc(sizeof(struct firmware_map_entry), GFP_ATOMIC);
   if (!entry)
-- 
1.7.1