From 903a71916815ab0d7e1cc84549f43dea5ef4a66d Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:26:39 -0400
Subject: [block] rbd: harden rbd_dev_refresh() and callers a bit
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-293-git-send-email-sweil@redhat.com>
Patchwork-id: 89755
O-Subject: [PATCH 292/303] rbd: harden rbd_dev_refresh() and callers a bit
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Ilya Dryomov <ilya.dryomov@inktank.com>

Recently discovered watch/notify problems showed that we really can't
ignore errors in anything refresh related.  Alas, currently there is
not much we can do in response to those errors, except print warnings.

Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>
Reviewed-by: Alex Elder <elder@linaro.org>
(cherry picked from commit 52bb1f9bed796127e8b446b12e5b834026241cdd)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/block/rbd.c b/drivers/block/rbd.c
index f8c8608..93fabb0 100644
--- a/drivers/block/rbd.c
+++ b/drivers/block/rbd.c
@@ -3006,11 +3006,20 @@ static void rbd_watch_cb(u64 ver, u64 notify_id, u8 opcode, void *data)
  dout("%s: \"%s\" notify_id %llu opcode %u\n", __func__,
   rbd_dev->header_name, (unsigned long long)notify_id,
   (unsigned int)opcode);
+
+ /*
+  * Until adequate refresh error handling is in place, there is
+  * not much we can do here, except warn.
+  *
+  * See http://tracker.ceph.com/issues/5040
+  */
  ret = rbd_dev_refresh(rbd_dev);
  if (ret)
-  rbd_warn(rbd_dev, "header refresh error (%d)\n", ret);
+  rbd_warn(rbd_dev, "refresh failed: %d\n", ret);
 
- rbd_obj_notify_ack_sync(rbd_dev, notify_id);
+ ret = rbd_obj_notify_ack_sync(rbd_dev, notify_id);
+ if (ret)
+  rbd_warn(rbd_dev, "notify_ack ret %d\n", ret);
 }
 
 /*
@@ -3553,6 +3562,8 @@ static int rbd_dev_refresh(struct rbd_device *rbd_dev)
  mapping_size = rbd_dev->mapping.size;
 
  ret = rbd_dev_header_info(rbd_dev);
+ if (ret)
+  return ret;
 
  /* If it's a mapped snapshot, validate its EXISTS flag */
 
@@ -3563,7 +3574,7 @@ static int rbd_dev_refresh(struct rbd_device *rbd_dev)
   rbd_dev_update_size(rbd_dev);
  }
 
- return ret;
+ return 0;
 }
 
 static int rbd_init_disk(struct rbd_device *rbd_dev)
@@ -3767,9 +3778,9 @@ static ssize_t rbd_image_refresh(struct device *dev,
 
  ret = rbd_dev_refresh(rbd_dev);
  if (ret)
-  rbd_warn(rbd_dev, ": manual header refresh error (%d)\n", ret);
+  return ret;
 
- return ret < 0 ? ret : size;
+ return size;
 }
 
 static DEVICE_ATTR(size, S_IRUGO, rbd_size_show, NULL);
-- 
1.7.1