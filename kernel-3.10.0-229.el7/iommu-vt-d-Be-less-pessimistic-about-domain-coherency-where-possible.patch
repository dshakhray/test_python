From 0a8515e1a05c22a570f78aa31b397d253d36d4cb Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 01:48:01 -0400
Subject: [iommu] vt-d: Be less pessimistic about domain coherency where possible

Message-id: <20140905014801.31297.55355.stgit@gir.stowe>
Patchwork-id: 91315
O-Subject: [RHEL7.1 PATCH 22/65] iommu/vt-d: Be less pessimistic about domain coherency where possible
Bugzilla: 1129880 1087643
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1087643
Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1129880
Upstream Status: d05019608746240d86a406fbf8d8c1fc71a87101

commit d05019608746240d86a406fbf8d8c1fc71a87101
Author: David Woodhouse <dwmw2@infradead.org>
Date:   Tue Mar 11 17:10:29 2014 -0700

    iommu/vt-d: Be less pessimistic about domain coherency where possible

    In commit 2e12bc29 ("intel-iommu: Default to non-coherent for domains
    unattached to iommus") we decided to err on the side of caution and
    always assume that it's possible that a device will be attached which is
    behind a non-coherent IOMMU.

    In some cases, however, that just *cannot* happen. If there *are* no
    IOMMUs in the system which are non-coherent, then we don't need to do
    it. And flushing the dcache is a *significant* performance hit.

    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c
index c3d4bc9..1599cb1 100644
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@ -592,18 +592,31 @@ static struct intel_iommu *domain_get_iommu(struct dmar_domain *domain)
 
 static void domain_update_iommu_coherency(struct dmar_domain *domain)
 {
- int i;
-
- i = find_first_bit(domain->iommu_bmp, g_num_of_iommus);
+ struct dmar_drhd_unit *drhd;
+ struct intel_iommu *iommu;
+ int i, found = 0;
 
- domain->iommu_coherency = i < g_num_of_iommus ? 1 : 0;
+ domain->iommu_coherency = 1;
 
  for_each_set_bit(i, domain->iommu_bmp, g_num_of_iommus) {
+  found = 1;
   if (!ecap_coherent(g_iommus[i]->ecap)) {
    domain->iommu_coherency = 0;
    break;
   }
  }
+ if (found)
+  return;
+
+ /* No hardware attached; use lowest common denominator */
+ rcu_read_lock();
+ for_each_active_iommu(iommu, drhd) {
+  if (!ecap_coherent(iommu->ecap)) {
+   domain->iommu_coherency = 0;
+   break;
+  }
+ }
+ rcu_read_unlock();
 }
 
 static void domain_update_iommu_snooping(struct dmar_domain *domain)
-- 
1.7.1