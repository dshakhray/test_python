From 74c4c255dd603ac0f8699ce57e2107b2216419e9 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:10:22 -0400
Subject: [usb] core: bail out if user gives an unknown RefId when using new_id

Message-id: <1410887463-20674-551-git-send-email-dzickus@redhat.com>
Patchwork-id: 95393
O-Subject: [RHEL7 PATCH 550/591] usb: core: bail out if user gives an unknown RefId when using new_id
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 52a6966c350624db89addc3e6a825f5e797a73e4
Author: Wolfram Sang <wsa@the-dreams.de>
Date:   Sun Jan 12 10:07:50 2014 +0100

    usb: core: bail out if user gives an unknown RefId when using new_id

    If users use the new RefId feature of new_id, give them an error message
    if they provided an unknown reference. That helps detecting typos.

    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/core/driver.c b/drivers/usb/core/driver.c
index a988806..f94ab7c 100644
--- a/drivers/usb/core/driver.c
+++ b/drivers/usb/core/driver.c
@@ -71,10 +71,13 @@ ssize_t usb_store_new_id(struct usb_dynids *dynids,
   const struct usb_device_id *id = id_table;
 
   for (; id->match_flags; id++)
-   if (id->idVendor == refVendor && id->idProduct == refProduct) {
-    dynid->id.driver_info = id->driver_info;
+   if (id->idVendor == refVendor && id->idProduct == refProduct)
     break;
-   }
+
+  if (id->match_flags)
+   dynid->id.driver_info = id->driver_info;
+  else
+   return -ENODEV;
  }
 
  spin_lock(&dynids->lock);
-- 
1.7.1