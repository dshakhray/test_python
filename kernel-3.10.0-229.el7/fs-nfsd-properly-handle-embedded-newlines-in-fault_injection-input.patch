From 03a510765f08cfe4eec32a036f827188465ff73b Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Tue, 16 Sep 2014 20:18:14 -0400
Subject: [fs] nfsd: properly handle embedded newlines in fault_injection input

Message-id: <1410898849-22126-11-git-send-email-bfields@redhat.com>
Patchwork-id: 95695
O-Subject: [Patch RHEL7 010/165] nfsd: properly handle embedded newlines in fault_injection input
Bugzilla: 1044798 1123721 1141932
RH-Acked-by: Benjamin Coddington <bcodding@redhat.com>
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Jeff Layton <jlayton@primarydata.com>

Currently rpc_pton() fails to handle the case where you echo an address
into the file, as it barfs on the newline. Ensure that we NULL out the
first occurrence of any newline.

Signed-off-by: Jeff Layton <jlayton@primarydata.com>
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: d4c8e34fe8beeb7877ce7f8d2da6affd7231b2cb
Bugzilla: 1044798
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/fault_inject.c b/fs/nfsd/fault_inject.c
index 2ed05c3..f1333fc 100644
--- a/fs/nfsd/fault_inject.c
+++ b/fs/nfsd/fault_inject.c
@@ -115,11 +115,19 @@ static ssize_t fault_inject_write(struct file *file, const char __user *buf,
  struct net *net = current->nsproxy->net_ns;
  struct sockaddr_storage sa;
  u64 val;
+ char *nl;
 
  if (copy_from_user(write_buf, buf, size))
   return -EFAULT;
  write_buf[size] = '\0';
 
+ /* Deal with any embedded newlines in the string */
+ nl = strchr(write_buf, '\n');
+ if (nl) {
+  size = nl - write_buf;
+  *nl = '\0';
+ }
+
  size = rpc_pton(net, write_buf, size, (struct sockaddr *)&sa, sizeof(sa));
  if (size > 0)
   nfsd_inject_set_client(file_inode(file)->i_private, &sa, size);
-- 
1.7.1