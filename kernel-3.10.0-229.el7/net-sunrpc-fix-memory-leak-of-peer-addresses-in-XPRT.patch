From 6b7138023baec262453868e9d71f4610f8ae7701 Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Mon, 23 Jun 2014 21:50:05 -0400
Subject: [net] sunrpc: fix memory leak of peer addresses in XPRT

Message-id: <1403560314-32525-64-git-send-email-bfields@redhat.com>
Patchwork-id: 84573
O-Subject: [Patch RHEL7 063/172] SUNRPC: fix memory leak of peer addresses in XPRT
Bugzilla: 1111719
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Kinglong Mee <kinglongmee@gmail.com>

Creating xprt failed after xs_format_peer_addresses,
sunrpc must free those memory of peer addresses in xprt.

Signed-off-by: Kinglong Mee <kinglongmee@gmail.com>
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: 315f3812dbd92c7c8f26a8dbba183266ec219795
Bugzilla: 1111719
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/sunrpc/xprtsock.c b/net/sunrpc/xprtsock.c
index 77c17f0..26f166a 100644
--- a/net/sunrpc/xprtsock.c
+++ b/net/sunrpc/xprtsock.c
@@ -909,6 +909,12 @@ static void xs_tcp_close(struct rpc_xprt *xprt)
   xs_tcp_shutdown(xprt);
 }
 
+static void xs_xprt_free(struct rpc_xprt *xprt)
+{
+ xs_free_peer_addresses(xprt);
+ xprt_free(xprt);
+}
+
 /**
  * xs_destroy - prepare to shutdown a transport
  * @xprt: doomed transport
@@ -919,8 +925,7 @@ static void xs_destroy(struct rpc_xprt *xprt)
  dprintk("RPC:       xs_destroy xprt %p\n", xprt);
 
  xs_close(xprt);
- xs_free_peer_addresses(xprt);
- xprt_free(xprt);
+ xs_xprt_free(xprt);
  module_put(THIS_MODULE);
 }
 
@@ -2744,7 +2749,7 @@ static struct rpc_xprt *xs_setup_local(struct xprt_create *args)
   return xprt;
  ret = ERR_PTR(-EINVAL);
 out_err:
- xprt_free(xprt);
+ xs_xprt_free(xprt);
  return ret;
 }
 
@@ -2822,7 +2827,7 @@ static struct rpc_xprt *xs_setup_udp(struct xprt_create *args)
   return xprt;
  ret = ERR_PTR(-EINVAL);
 out_err:
- xprt_free(xprt);
+ xs_xprt_free(xprt);
  return ret;
 }
 
@@ -2897,12 +2902,11 @@ static struct rpc_xprt *xs_setup_tcp(struct xprt_create *args)
     xprt->address_strings[RPC_DISPLAY_ADDR],
     xprt->address_strings[RPC_DISPLAY_PROTO]);
 
-
  if (try_module_get(THIS_MODULE))
   return xprt;
  ret = ERR_PTR(-EINVAL);
 out_err:
- xprt_free(xprt);
+ xs_xprt_free(xprt);
  return ret;
 }
 
@@ -2985,13 +2989,12 @@ static struct rpc_xprt *xs_setup_bc_tcp(struct xprt_create *args)
   */
  xprt_set_connected(xprt);
 
-
  if (try_module_get(THIS_MODULE))
   return xprt;
  xprt_put(xprt);
  ret = ERR_PTR(-EINVAL);
 out_err:
- xprt_free(xprt);
+ xs_xprt_free(xprt);
  return ret;
 }
 
-- 
1.7.1