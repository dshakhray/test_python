From ebb1462f8b88e7e07c1c5db388652e49fe48ec06 Mon Sep 17 00:00:00 2001
From: John Greene <jogreene@redhat.com>
Date: Wed, 10 Sep 2014 18:28:57 -0400
Subject: [ethernet] ixgbe: use ixgbe_read_pci_cfg_word

Message-id: <1410373750-11341-38-git-send-email-jogreene@redhat.com>
Patchwork-id: 93547
O-Subject: [RHEL7.1 PATCH 37/50] ixgbe: use ixgbe_read_pci_cfg_word
Bugzilla: 1091123
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Neil Horman <nhorman@redhat.com>

BZ: 1091123
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7919168
Tested: In beaker. See BZ for details

This patch replaces some direct uses of pci_read_config_word with the
protected ixgbe_read_pci_cfg_word function, which checks for whether the
adapter is removed when LER is enabled. We shouldn't use the
pci_read_config_word calls directly because of these checks.

This patch also cleans up an unnecessary save of a pointer to the mac
object, as our standard style is to just use the hw pointer.

CC: Arun Sharma <asharma@fb.com>
Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 0d7c6e008e3f5b38e9126e7baeb35ce84581911a)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_common.c b/drivers/net/ethernet/intel/ixgbe/ixgbe_common.c
index 7a9d874..911b711 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_common.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_common.c
@@ -646,20 +646,17 @@ enum ixgbe_bus_speed ixgbe_convert_bus_speed(u16 link_status)
  **/
 s32 ixgbe_get_bus_info_generic(struct ixgbe_hw *hw)
 {
- struct ixgbe_adapter *adapter = hw->back;
- struct ixgbe_mac_info *mac = &hw->mac;
  u16 link_status;
 
  hw->bus.type = ixgbe_bus_type_pci_express;
 
  /* Get the negotiated link width and speed from PCI config space */
- pci_read_config_word(adapter->pdev, IXGBE_PCI_LINK_STATUS,
-                      &link_status);
+ link_status = ixgbe_read_pci_cfg_word(hw, IXGBE_PCI_LINK_STATUS);
 
  hw->bus.width = ixgbe_convert_bus_width(link_status);
  hw->bus.speed = ixgbe_convert_bus_speed(link_status);
 
- mac->ops.set_lan_id(hw);
+ hw->mac.ops.set_lan_id(hw);
 
  return 0;
 }
@@ -2437,12 +2434,10 @@ out:
  **/
 static u32 ixgbe_pcie_timeout_poll(struct ixgbe_hw *hw)
 {
- struct ixgbe_adapter *adapter = hw->back;
  s16 devctl2;
  u32 pollcnt;
 
- pci_read_config_word(adapter->pdev, IXGBE_PCI_DEVICE_CONTROL2,
-        &devctl2);
+ devctl2 = ixgbe_read_pci_cfg_word(hw, IXGBE_PCI_DEVICE_CONTROL2);
  devctl2 &= IXGBE_PCIDEVCTRL2_TIMEO_MASK;
 
  switch (devctl2) {
-- 
1.7.1