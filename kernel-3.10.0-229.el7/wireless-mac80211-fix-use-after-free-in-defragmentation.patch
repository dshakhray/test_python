From bbdbad6b04e9337b8c0f46d67a6189152b091577 Mon Sep 17 00:00:00 2001
From: Stanislaw Gruszka <sgruszka@redhat.com>
Date: Wed, 10 Dec 2014 10:29:40 -0500
Subject: [wireless] mac80211: fix use-after-free in defragmentation

Message-id: <1418207389-7899-27-git-send-email-sgruszka@redhat.com>
Patchwork-id: 101597
O-Subject: [RHEL7.1 PATCH 26/35] mac80211: fix use-after-free in defragmentation
Bugzilla: 1155538
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: John Greene <jogreene@redhat.com>

From: Johannes Berg <johannes.berg@intel.com>

BZ#1155538

commit b8fff407a180286aa683d543d878d98d9fc57b13 upstream.

Upon receiving the last fragment, all but the first fragment
are freed, but the multicast check for statistics at the end
of the function refers to the current skb (the last fragment)
causing a use-after-free bug.

Since multicast frames cannot be fragmented and we check for
this early in the function, just modify that check to also
do the accounting to fix the issue.

Reported-by: Yosef Khyal <yosefx.khyal@intel.com>
Signed-off-by: Johannes Berg <johannes.berg@intel.com>
Signed-off-by: Luis Henriques <luis.henriques@canonical.com>

Brew:
https://brewweb.devel.redhat.com/taskinfo?taskID=8330268

Testing:
Tested on Intel, Atheros and Ralink hardware.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/mac80211/rx.c b/net/mac80211/rx.c
index 394e201..e3f758a 100644
--- a/net/mac80211/rx.c
+++ b/net/mac80211/rx.c
@@ -1646,11 +1646,14 @@ ieee80211_rx_h_defragment(struct ieee80211_rx_data *rx)
  sc = le16_to_cpu(hdr->seq_ctrl);
  frag = sc & IEEE80211_SCTL_FRAG;
 
- if (likely((!ieee80211_has_morefrags(fc) && frag == 0) ||
-     is_multicast_ether_addr(hdr->addr1))) {
-  /* not fragmented */
+ if (likely(!ieee80211_has_morefrags(fc) && frag == 0))
+  goto out;
+
+ if (is_multicast_ether_addr(hdr->addr1)) {
+  rx->local->dot11MulticastReceivedFrameCount++;
   goto out;
  }
+
  I802_DEBUG_INC(rx->local->rx_handlers_fragments);
 
  if (skb_linearize(rx->skb))
@@ -1743,10 +1746,7 @@ ieee80211_rx_h_defragment(struct ieee80211_rx_data *rx)
  out:
  if (rx->sta)
   rx->sta->rx_packets++;
- if (is_multicast_ether_addr(hdr->addr1))
-  rx->local->dot11MulticastReceivedFrameCount++;
- else
-  ieee80211_led_rx(rx->local);
+ ieee80211_led_rx(rx->local);
  return RX_CONTINUE;
 }
 
-- 
1.7.1