From 0731af64f7de3babf0e5db6faf3a59887e8cf2a7 Mon Sep 17 00:00:00 2001
From: Jiri Benc <jbenc@redhat.com>
Date: Fri, 24 Oct 2014 20:28:12 -0400
Subject: [net] openvswitch: change the data type of error status to atomic_long_t

Message-id: <463ee2556094b3be1e6bf17b5c8e61c91a238945.1414182116.git.jbenc@redhat.com>
Patchwork-id: 98450
O-Subject: [RHEL7.1 net PATCH 04/11] openvswitch: change the data type of error status to atomic_long_t
Bugzilla: 1110384
RH-Acked-by: Flavio Leitner <fbl@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110384
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=8159383

commit e403aded79a1bfb610adc53490ded8d2058f9daf
Author: Li RongQing <roy.qing.li@gmail.com>
Date:   Sat Sep 6 19:06:11 2014 +0800

    openvswitch: change the data type of error status to atomic_long_t

    Change the date type of error status from u64 to atomic_long_t, and use atomic
    operation, then remove the lock which is used to protect the error status.

    The operation of atomic maybe faster than spin lock.

    Cc: Pravin Shelar <pshelar@nicira.com>
    Signed-off-by: Li RongQing <roy.qing.li@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/openvswitch/vport.c b/net/openvswitch/vport.c
index 6e4f9d2..c79376b 100644
--- a/net/openvswitch/vport.c
+++ b/net/openvswitch/vport.c
@@ -148,8 +148,6 @@ struct vport *ovs_vport_alloc(int priv_size, const struct vport_ops *ops,
   return ERR_PTR(-ENOMEM);
  }
 
- spin_lock_init(&vport->stats_lock);
-
  return vport;
 }
 
@@ -268,14 +266,10 @@ void ovs_vport_get_stats(struct vport *vport, struct ovs_vport_stats *stats)
   * netdev-stats can be directly read over netlink-ioctl.
   */
 
- spin_lock_bh(&vport->stats_lock);
-
- stats->rx_errors = vport->err_stats.rx_errors;
- stats->tx_errors = vport->err_stats.tx_errors;
- stats->tx_dropped = vport->err_stats.tx_dropped;
- stats->rx_dropped = vport->err_stats.rx_dropped;
-
- spin_unlock_bh(&vport->stats_lock);
+ stats->rx_errors  = atomic_long_read(&vport->err_stats.rx_errors);
+ stats->tx_errors  = atomic_long_read(&vport->err_stats.tx_errors);
+ stats->tx_dropped = atomic_long_read(&vport->err_stats.tx_dropped);
+ stats->rx_dropped = atomic_long_read(&vport->err_stats.rx_dropped);
 
  for_each_possible_cpu(i) {
   const struct pcpu_tstats *percpu_stats;
@@ -495,27 +489,24 @@ int ovs_vport_send(struct vport *vport, struct sk_buff *skb)
 static void ovs_vport_record_error(struct vport *vport,
        enum vport_err_type err_type)
 {
- spin_lock(&vport->stats_lock);
-
  switch (err_type) {
  case VPORT_E_RX_DROPPED:
-  vport->err_stats.rx_dropped++;
+  atomic_long_inc(&vport->err_stats.rx_dropped);
   break;
 
  case VPORT_E_RX_ERROR:
-  vport->err_stats.rx_errors++;
+  atomic_long_inc(&vport->err_stats.rx_errors);
   break;
 
  case VPORT_E_TX_DROPPED:
-  vport->err_stats.tx_dropped++;
+  atomic_long_inc(&vport->err_stats.tx_dropped);
   break;
 
  case VPORT_E_TX_ERROR:
-  vport->err_stats.tx_errors++;
+  atomic_long_inc(&vport->err_stats.tx_errors);
   break;
  }
 
- spin_unlock(&vport->stats_lock);
 }
 
 static void free_vport_rcu(struct rcu_head *rcu)
diff --git a/net/openvswitch/vport.h b/net/openvswitch/vport.h
index 9d170e9..94f19e8 100644
--- a/net/openvswitch/vport.h
+++ b/net/openvswitch/vport.h
@@ -62,10 +62,10 @@ int ovs_vport_send(struct vport *, struct sk_buff *);
 /* The following definitions are for implementers of vport devices: */
 
 struct vport_err_stats {
- u64 rx_dropped;
- u64 rx_errors;
- u64 tx_dropped;
- u64 tx_errors;
+ atomic_long_t rx_dropped;
+ atomic_long_t rx_errors;
+ atomic_long_t tx_dropped;
+ atomic_long_t tx_errors;
 };
 /**
  * struct vport_portids - array of netlink portids of a vport.
@@ -93,7 +93,6 @@ struct vport_portids {
  * @dp_hash_node: Element in @datapath->ports hash table in datapath.c.
  * @ops: Class structure.
  * @percpu_stats: Points to per-CPU statistics used and maintained by vport
- * @stats_lock: Protects @err_stats;
  * @err_stats: Points to error statistics used and maintained by vport
  */
 struct vport {
@@ -108,7 +107,6 @@ struct vport {
 
  struct pcpu_tstats __percpu *percpu_stats;
 
- spinlock_t stats_lock;
  struct vport_err_stats err_stats;
 };
 
-- 
1.7.1