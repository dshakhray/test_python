From 1ca19a5a9d498b276750da7999bb4446409652cc Mon Sep 17 00:00:00 2001
From: Hendrik Brueckner <brueckner@redhat.com>
Date: Wed, 23 Jul 2014 10:49:57 -0400
Subject: [virt] virtio_scsi: verify if queue is broken after virtqueue_get_buf()

Message-id: <1406112611-9862-10-git-send-email-brueckner@redhat.com>
Patchwork-id: 86323
O-Subject: [RHEL7.1 PATCH 09/23] [virt] virtio_scsi: verify if queue is broken after virtqueue_get_buf()
Bugzilla: 1088554
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Description
-----------
commit 2bf4fd31394a3f875ea093ee8a209f30b378cbf3
Author: Heinz Graalfs <graalfs@linux.vnet.ibm.com>
Commit: Rusty Russell <rusty@rustcorp.com.au>

    virtio_scsi: verify if queue is broken after virtqueue_get_buf()

    If virtqueue_get_buf() returned with a NULL pointer avoid a possibly
    endless loop by checking for a broken virtqueue.

    Signed-off-by: Heinz Graalfs <graalfs@linux.vnet.ibm.com>
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

Bugzilla
--------
BZ 1088554
https://bugzilla.redhat.com/show_bug.cgi?id=1088554

Upstream status of the patch
----------------------------
The patch is upstream as of kernel version v3.13-rc1
http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=2bf4fd31394a3f875ea093ee8a209f30b378cbf3

Brew
----
https://brewweb.devel.redhat.com/taskinfo?taskID=7725759

Test status
-----------
The patch has been tested and fixes the problem.
The fix has been verified by the IBM test department.

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/virtio_scsi.c b/drivers/scsi/virtio_scsi.c
index 06d293b..5853835 100644
--- a/drivers/scsi/virtio_scsi.c
+++ b/drivers/scsi/virtio_scsi.c
@@ -224,6 +224,9 @@ static void virtscsi_vq_done(struct virtio_scsi *vscsi,
   virtqueue_disable_cb(vq);
   while ((buf = virtqueue_get_buf(vq, &len)) != NULL)
    fn(vscsi, buf);
+
+  if (unlikely(virtqueue_is_broken(vq)))
+   break;
  } while (!virtqueue_enable_cb(vq));
  spin_unlock_irqrestore(&virtscsi_vq->vq_lock, flags);
 }
-- 
1.7.1