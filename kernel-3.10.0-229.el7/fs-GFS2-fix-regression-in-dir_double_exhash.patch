From 03c08783d9efbca00ffb2d003fdbfd48748af8d4 Mon Sep 17 00:00:00 2001
From: Robert S Peterson <rpeterso@redhat.com>
Date: Thu, 6 Nov 2014 20:46:48 -0500
Subject: [fs] GFS2: fix regression in dir_double_exhash

Message-id: <1532861060.8293769.1415306808768.JavaMail.zimbra@redhat.com>
Patchwork-id: 99771
O-Subject: [RHEL7.1 PATCH fs] [bz#1160229] GFS2: fix regression in dir_double_exhash
Bugzilla: 1160229
RH-Acked-by: Steven Whitehouse <swhiteho@redhat.com>
RH-Acked-by: Abhijith Das <adas@redhat.com>

Hi,

This is for bug #1160229 - GFS2: BUG in gfs2_dir_add.
This is a simple RHEL7.1 back-port of this upstream patch:

https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit?id=512cbf02fde42b747c5752f135afd3f3f6d598e2

I don't exactly know why this never got into the RHEL7 kernel, but it
needs to be there.

The patch was built into a RHEL7.1 kernel here:
https://brewweb.devel.redhat.com/taskinfo?taskID=8208658

It was tested on system gfs-i8c-01.mpc.lab.eng.bos.redhat.com using a
known reproducer.

Patch description:

Recent commit e8830d8 introduced a bug in function dir_double_exhash;
it was failing to set h in the fall-back case. This patch corrects it.

rhbz#1160229

Signed-off-by: Bob Peterson <rpeterso@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/gfs2/dir.c b/fs/gfs2/dir.c
index 6859fd8..e95eadc 100644
--- a/fs/gfs2/dir.c
+++ b/fs/gfs2/dir.c
@@ -1130,13 +1130,14 @@ static int dir_double_exhash(struct gfs2_inode *dip)
  if (IS_ERR(hc))
   return PTR_ERR(hc);
 
- h = hc2 = kmalloc(hsize_bytes * 2, GFP_NOFS | __GFP_NOWARN);
+ hc2 = kmalloc(hsize_bytes * 2, GFP_NOFS | __GFP_NOWARN);
  if (hc2 == NULL)
   hc2 = __vmalloc(hsize_bytes * 2, GFP_NOFS, PAGE_KERNEL);
 
  if (!hc2)
   return -ENOMEM;
 
+ h = hc2;
  error = gfs2_meta_inode_buffer(dip, &dibh);
  if (error)
   goto out_kfree;
-- 
1.7.1