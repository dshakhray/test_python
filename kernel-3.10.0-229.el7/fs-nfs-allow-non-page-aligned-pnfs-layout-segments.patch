From ddf416348aed882effa4e182f009d69ee41d1d54 Mon Sep 17 00:00:00 2001
From: Steve Dickson <SteveD@redhat.com>
Date: Thu, 26 Jun 2014 15:53:59 -0400
Subject: [fs] nfs: allow non page aligned pnfs layout segments

Message-id: <1403798077-28799-41-git-send-email-steved@redhat.com>
Patchwork-id: 84910
O-Subject: [RHEL7.1 PATCH 40/78] pnfs: allow non page aligned pnfs layout segments
Bugzilla: 1113248
RH-Acked-by: J. Bruce Fields <bfields@redhat.com>

From: Weston Andros Adamson <dros@primarydata.com>

Remove alignment checks that would revert to MDS and change pg_test
to return the max ammount left in the segment (or other pg_test call)
up to size of passed request, or 0 if no space is left.

Signed-off-by: Weston Andros Adamson <dros@primarydata.com>
Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
Upstream Id: 19b54848fee419f0bb35479e4ea98d9f2b985657
Bugzilla: 1113248
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfs/pnfs.c b/fs/nfs/pnfs.c
index 6ef108b..ce46a41 100644
--- a/fs/nfs/pnfs.c
+++ b/fs/nfs/pnfs.c
@@ -1388,11 +1388,6 @@ pnfs_generic_pg_init_read(struct nfs_pageio_descriptor *pgio, struct nfs_page *r
 
  WARN_ON_ONCE(pgio->pg_lseg != NULL);
 
- if (req->wb_offset != req->wb_pgbase) {
-  nfs_pageio_reset_read_mds(pgio);
-  return;
- }
-
  if (pgio->pg_dreq == NULL)
   rd_size = i_size_read(pgio->pg_inode) - req_offset(req);
  else
@@ -1417,11 +1412,6 @@ pnfs_generic_pg_init_write(struct nfs_pageio_descriptor *pgio,
 {
  WARN_ON_ONCE(pgio->pg_lseg != NULL);
 
- if (req->wb_offset != req->wb_pgbase) {
-  nfs_pageio_reset_write_mds(pgio);
-  return;
- }
-
  pgio->pg_lseg = pnfs_update_layout(pgio->pg_inode,
         req->wb_context,
         req_offset(req),
@@ -1443,9 +1433,9 @@ pnfs_generic_pg_test(struct nfs_pageio_descriptor *pgio, struct nfs_page *prev,
        struct nfs_page *req)
 {
  unsigned int size;
+ u64 end;
 
  size = nfs_generic_pg_test(pgio, prev, req);
-
  if (!size)
   return 0;
 
@@ -1463,11 +1453,16 @@ pnfs_generic_pg_test(struct nfs_pageio_descriptor *pgio, struct nfs_page *prev,
   * first byte that lies outside the pnfs_layout_range. FIXME?
   *
   */
- if (req_offset(req) >= end_offset(pgio->pg_lseg->pls_range.offset,
-      pgio->pg_lseg->pls_range.length))
-  return 0;
+ if (pgio->pg_lseg) {
+  end = end_offset(pgio->pg_lseg->pls_range.offset,
+     pgio->pg_lseg->pls_range.length);
+  WARN_ON_ONCE(req_offset(req) > end);
+  if (req_offset(req) >= end)
+   return 0;
+  size = min((unsigned int)(end - req_offset(req)), size);
+ }
 
- return min(size, req->wb_bytes);
+ return size;
 }
 EXPORT_SYMBOL_GPL(pnfs_generic_pg_test);
 
-- 
1.7.1