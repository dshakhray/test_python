From fe27d4128eb9a7d9ec8e3039df70a507753c5c27 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Fri, 2 May 2014 14:37:25 -0400
Subject: [misc] mei: fix potential read outside of array bounds

Message-id: <1399041470-21330-53-git-send-email-prarit@redhat.com>
Patchwork-id: 79338
O-Subject: [RHEL7.1 PATCH BZ 1088953 52/77] mei: fix potential read outside of array bounds
Bugzilla: 1088953
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1088953

commit a27a76d3c07de08a0d0d298b6bc280c5b820e997
Author: Alexander Usyskin <alexander.usyskin@intel.com>
Date:   Mon Feb 17 15:13:22 2014 +0200

    mei: fix potential read outside of array bounds

    Drop not-very-useful check and with this
    fix read on index that can be after array end.
    Cleanup search function as byproduct.

    Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Cc: Dean Nelson <dnelson@redhat.com>
Cc: Stefan Assmann <sassmann@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/misc/mei/client.c b/drivers/misc/mei/client.c
index 8afba05..539e861 100644
--- a/drivers/misc/mei/client.c
+++ b/drivers/misc/mei/client.c
@@ -29,20 +29,21 @@
  * mei_me_cl_by_uuid - locate index of me client
  *
  * @dev: mei device
+ *
+ * Locking: called under "dev->device_lock" lock
+ *
  * returns me client index or -ENOENT if not found
  */
 int mei_me_cl_by_uuid(const struct mei_device *dev, const uuid_le *uuid)
 {
- int i, res = -ENOENT;
+ int i;
 
  for (i = 0; i < dev->me_clients_num; ++i)
   if (uuid_le_cmp(*uuid,
-    dev->me_clients[i].props.protocol_name) == 0) {
-   res = i;
-   break;
-  }
+    dev->me_clients[i].props.protocol_name) == 0)
+   return i;
 
- return res;
+ return -ENOENT;
 }
 
 
@@ -60,16 +61,12 @@ int mei_me_cl_by_uuid(const struct mei_device *dev, const uuid_le *uuid)
 int mei_me_cl_by_id(struct mei_device *dev, u8 client_id)
 {
  int i;
+
  for (i = 0; i < dev->me_clients_num; i++)
   if (dev->me_clients[i].client_id == client_id)
-   break;
- if (WARN_ON(dev->me_clients[i].client_id != client_id))
-  return -ENOENT;
+   return i;
 
- if (i == dev->me_clients_num)
-  return -ENOENT;
-
- return i;
+ return -ENOENT;
 }
 
 
-- 
1.7.1