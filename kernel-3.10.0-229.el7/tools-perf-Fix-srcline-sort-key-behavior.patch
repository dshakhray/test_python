From 27f2dfa2ce3f78bb8cd14762ef333189308227a0 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:25:00 -0400
Subject: [tools] perf: Fix srcline sort key behavior

Message-id: <1408462094-14194-132-git-send-email-jolsa@redhat.com>
Patchwork-id: 88109
O-Subject: [PATCH RHEL7.1 BZ1131394 131/325] perf tools: Fix srcline sort key behavior
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 4adcc43003024354b45edadfad4ea2fa205f135f
Author: Namhyung Kim <namhyung.kim@lge.com>
Date: Wed Sep 11 14:09:33 2013 +0900

description
===========
Currently the srcline sort key compares ip rather than srcline info.  I
guess this was due to a performance reason to run external addr2line
utility.  Now we have implemented the functionality inside, use the
srcline info when comparing hist entries.

Also constantly print "??:0" string for unknown srcline rather than
printing ip.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/sort.c b/tools/perf/util/sort.c
index f732120..32c5637 100644
--- a/tools/perf/util/sort.c
+++ b/tools/perf/util/sort.c
@@ -243,33 +243,32 @@ struct sort_entry sort_sym = {
 static int64_t
 sort__srcline_cmp(struct hist_entry *left, struct hist_entry *right)
 {
- return (int64_t)(right->ip - left->ip);
+ if (!left->srcline) {
+  if (!left->ms.map)
+   left->srcline = SRCLINE_UNKNOWN;
+  else {
+   struct map *map = left->ms.map;
+   left->srcline = get_srcline(map->dso,
+         map__rip_2objdump(map, left->ip));
+  }
+ }
+ if (!right->srcline) {
+  if (!right->ms.map)
+   right->srcline = SRCLINE_UNKNOWN;
+  else {
+   struct map *map = right->ms.map;
+   right->srcline = get_srcline(map->dso,
+         map__rip_2objdump(map, right->ip));
+  }
+ }
+ return strcmp(left->srcline, right->srcline);
 }
 
 static int hist_entry__srcline_snprintf(struct hist_entry *self, char *bf,
      size_t size,
      unsigned int width __maybe_unused)
 {
- FILE *fp = NULL;
- char *path = self->srcline;
-
- if (path != NULL)
-  goto out_path;
-
- if (!self->ms.map)
-  goto out_ip;
-
- path = get_srcline(self->ms.map->dso, self->ip);
- self->srcline = path;
-
-out_path:
- if (fp)
-  pclose(fp);
- return repsep_snprintf(bf, size, "%s", path);
-out_ip:
- if (fp)
-  pclose(fp);
- return repsep_snprintf(bf, size, "%-#*llx", BITS_PER_LONG / 4, self->ip);
+ return repsep_snprintf(bf, size, "%s", self->srcline);
 }
 
 struct sort_entry sort_srcline = {
-- 
1.7.1