From 247a0c9d6a6b65a44a73567d0f33def8c900e3a5 Mon Sep 17 00:00:00 2001
From: Herbert Xu <herbert@gondor.apana.org.au>
Date: Mon, 15 Sep 2014 12:12:29 -0400
Subject: [crypto] drbg: fix maximum value checks on 32 bit systems

Message-id: <E1XTV8v-0001OV-Pt@gondolin.me.apana.org.au>
Patchwork-id: 94797
O-Subject: [PATCH 2/2] crypto: drbg - fix maximum value checks on 32 bit systems
Bugzilla: 1138311
RH-Acked-by: Jarod Wilson <jarod@redhat.com>
RH-Acked-by: Rafael Aquini <aquini@redhat.com>

RHEL7 Bugzilla #1138311

The maximum values for additional input string or generated blocks is
larger than 1<<32. To ensure a sensible value on 32 bit systems, return
SIZE_MAX on 32 bit systems. This value is lower than the maximum
allowed values defined in SP800-90A. The standard allow lower maximum
values, but not larger values.

SIZE_MAX - 1 is used for drbg_max_addtl to allow
drbg_healthcheck_sanity to check the enforcement of the variable
without wrapping.

Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
Reported-by: kbuild test robot <fengguang.wu@intel.com>
Signed-off-by: Stephan Mueller <smueller@chronox.de>
Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/crypto/drbg.h b/include/crypto/drbg.h
index b9be0eb..2c4e001 100644
--- a/include/crypto/drbg.h
+++ b/include/crypto/drbg.h
@@ -155,13 +155,26 @@ static inline size_t drbg_max_request_bytes(struct drbg_state *drbg)
 static inline size_t drbg_max_addtl(struct drbg_state *drbg)
 {
  /* SP800-90A requires 2**35 bytes additional info str / pers str */
+#if (__BITS_PER_LONG == 32)
+ /*
+  * SP800-90A allows smaller maximum numbers to be returned -- we
+  * return SIZE_MAX - 1 to allow the verification of the enforcement
+  * of this value in drbg_healthcheck_sanity.
+  */
+ return (SIZE_MAX - 1);
+#else
  return (1UL<<35);
+#endif
 }
 
 static inline size_t drbg_max_requests(struct drbg_state *drbg)
 {
  /* SP800-90A requires 2**48 maximum requests before reseeding */
+#if (__BITS_PER_LONG == 32)
+ return SIZE_MAX;
+#else
  return (1UL<<48);
+#endif
 }
 
 /*
-- 
1.7.1