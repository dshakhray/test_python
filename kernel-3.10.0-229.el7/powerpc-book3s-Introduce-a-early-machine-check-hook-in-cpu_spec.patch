From b8c1dd396afa86b27d8ee80308d4c99d063e8bd7 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:07:21 -0400
Subject: [powerpc] book3s: Introduce a early machine check hook in cpu_spec

Message-id: <1410545655-205645-213-git-send-email-dzickus@redhat.com>
Patchwork-id: 94192
O-Subject: [RHEL7 PATCH 212/626] powerpc/book3s: Introduce a early machine check hook in cpu_spec.
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 4c703416efc0a23f83a282b9240bb92fbd9e0be9
Author: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com>
Date:   Wed Oct 30 20:04:40 2013 +0530

    powerpc/book3s: Introduce a early machine check hook in cpu_spec.

    This patch adds the early machine check function pointer in cputable for
    CPU specific early machine check handling. The early machine handle routine
    will be called in real mode to handle SLB and TLB errors. We can not reuse
    the existing machine_check hook because it is always invoked in kernel
    virtual mode and we would already be in trouble if we get SLB or TLB errors.
    This patch just sets up a mechanism to invoke CPU specific handler. The
    subsequent patches will populate the function pointer.

    Signed-off-by: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com>
    Acked-by: Paul Mackerras <paulus@samba.org>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/cputable.h b/arch/powerpc/include/asm/cputable.h
index 25ec132..bacfba4 100644
--- a/arch/powerpc/include/asm/cputable.h
+++ b/arch/powerpc/include/asm/cputable.h
@@ -90,6 +90,13 @@ struct cpu_spec {
   * if the error is fatal, 1 if it was fully recovered and 0 to
   * pass up (not CPU originated) */
  int  (*machine_check)(struct pt_regs *regs);
+
+ /*
+  * Processor specific early machine check handler which is
+  * called in real mode to handle SLB and TLB errors.
+  */
+ long  (*machine_check_early)(struct pt_regs *regs);
+
 };
 
 extern struct cpu_spec  *cur_cpu_spec;
diff --git a/arch/powerpc/kernel/traps.c b/arch/powerpc/kernel/traps.c
index 9cc0d18..6514ed9 100644
--- a/arch/powerpc/kernel/traps.c
+++ b/arch/powerpc/kernel/traps.c
@@ -292,8 +292,11 @@ void system_reset_exception(struct pt_regs *regs)
  */
 long machine_check_early(struct pt_regs *regs)
 {
- /* TODO: handle/decode machine check reason */
- return 0;
+ long handled = 0;
+
+ if (cur_cpu_spec && cur_cpu_spec->machine_check_early)
+  handled = cur_cpu_spec->machine_check_early(regs);
+ return handled;
 }
 
 #endif
-- 
1.7.1