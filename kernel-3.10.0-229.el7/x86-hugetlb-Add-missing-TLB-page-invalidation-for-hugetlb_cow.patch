From 5411ee372b05e71e02d1f3579ee5a3ef14f9b2df Mon Sep 17 00:00:00 2001
From: Larry Woodman <lwoodman@redhat.com>
Date: Thu, 15 May 2014 10:04:30 -0400
Subject: [x86] hugetlb: Add missing TLB page invalidation for hugetlb_cow()

Message-id: <1400148270-6661-1-git-send-email-lwoodman@redhat.com>
Patchwork-id: 79834
O-Subject: [iRHEL7.1 PATCH] Add missing TLB page invalidation for hugetlb_cow()
Bugzilla: 1097919
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Rik van Riel <riel@redhat.com>
RH-Acked-by: Rafael Aquini <aquini@redhat.com>

x86, mm, hugetlb: Add missing TLB page invalidation for hugetlb_cow()

    The attached upstream backport adds a missing TLB invalidation for
    hugetlb_cow().  This patch is accplicable to RHEL7 aw well.

  Commit-ID:  9844f5462392b53824e8b86726e7c33b5ecbb676
 Author:     Anthony Iliopoulos <anthony.iliopoulos@huawei.com>
 AuthorDate: Wed, 14 May 2014 11:29:48 +0200
  Committer:  H. Peter Anvin <hpa@linux.intel.com>
  CommitDate: Tue, 13 May 2014 16:34:09 -0700

 x86, mm, hugetlb: Add missing TLB page invalidation for hugetlb_cow()

 The invalidation is required in order to maintain proper semantics
 under CoW conditions. In scenarios where a process clones several
 threads, a thread operating on a core whose DTLB entry for a
 particular hugepage has not been invalidated, will be reading from
 the hugepage that belongs to the forked child process, even after
 hugetlb_cow().

 The thread will not see the updated page as long as the stale DTLB
 entry remains cached, the thread attempts to write into the page,
 the child process exits, or the thread gets migrated to a different
 processor.

 Signed-off-by: Anthony Iliopoulos <anthony.iliopoulos@huawei.com>
 Link: http://lkml.kernel.org/r/20140514092948.GA17391@server-36.huawei.corp
 Suggested-by: Shay Goikhman <shay.goikhman@huawei.com>
 Acked-by: Dave Hansen <dave.hansen@intel.com>
 Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
 Cc: <stable@vger.kernel.org> # v2.6.16+ (!)

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/include/asm/hugetlb.h b/arch/x86/include/asm/hugetlb.h
index a89819c..c8c2aba 100644
--- a/arch/x86/include/asm/hugetlb.h
+++ b/arch/x86/include/asm/hugetlb.h
@@ -55,6 +55,7 @@ static inline pte_t huge_ptep_get_and_clear(struct mm_struct *mm,
 static inline void huge_ptep_clear_flush(struct vm_area_struct *vma,
       unsigned long addr, pte_t *ptep)
 {
+ ptep_clear_flush(vma, addr, ptep);
 }
 
 static inline int huge_pte_none(pte_t pte)
-- 
1.7.1