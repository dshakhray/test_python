From 09aa985cc250fb95a94a7c13eb256835cf379547 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:08:08 -0400
Subject: [usb] qcserial: refactor device layout selection

Message-id: <1410887463-20674-417-git-send-email-dzickus@redhat.com>
Patchwork-id: 95263
O-Subject: [RHEL7 PATCH 416/591] usb: qcserial: refactor device layout selection
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit d712ca91db6d5463ca5a9b06eb6ba937c59a15fa
Author: Bjorn Mork <bjorn@mork.no>
Date:   Sun Apr 27 16:47:44 2014 +0200

    usb: qcserial: refactor device layout selection

    Preparing for more supported standard device layouts. Keeping
    the matching macros unchanged to avoid breaking stable
    backporting of new device additions.

    Signed-off-by: Bjorn Mork <bjorn@mork.no>
    Signed-off-by: Johan Hovold <jhovold@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/serial/qcserial.c b/drivers/usb/serial/qcserial.c
index 202888f..cfd55dc 100644
--- a/drivers/usb/serial/qcserial.c
+++ b/drivers/usb/serial/qcserial.c
@@ -22,8 +22,14 @@
 #define DRIVER_AUTHOR "Qualcomm Inc"
 #define DRIVER_DESC "Qualcomm USB Serial driver"
 
+/* standard device layouts supported by this driver */
+enum qcserial_layouts {
+ QCSERIAL_G2K = 0, /* Gobi 2000 */
+ QCSERIAL_G1K = 1, /* Gobi 1000 */
+};
+
 #define DEVICE_G1K(v, p) \
- USB_DEVICE(v, p), .driver_info = 1
+ USB_DEVICE(v, p), .driver_info = QCSERIAL_G1K
 
 static const struct usb_device_id id_table[] = {
  /* Gobi 1000 devices */
@@ -175,11 +181,8 @@ static int qcprobe(struct usb_serial *serial, const struct usb_device_id *id)
  int retval = -ENODEV;
  __u8 nintf;
  __u8 ifnum;
- bool is_gobi1k = id->driver_info ? true : false;
  int altsetting = -1;
 
- dev_dbg(dev, "Is Gobi 1000 = %d\n", is_gobi1k);
-
  nintf = serial->dev->actconfig->desc.bNumInterfaces;
  dev_dbg(dev, "Num Interfaces = %d\n", nintf);
  ifnum = intf->desc.bInterfaceNumber;
@@ -227,7 +230,8 @@ static int qcprobe(struct usb_serial *serial, const struct usb_device_id *id)
   * gets handled by other drivers.
   */
 
- if (is_gobi1k) {
+ switch (id->driver_info) {
+ case QCSERIAL_G1K:
   /*
    * Gobi 1K USB layout:
    * 0: DM/DIAG (use libqcdm from ModemManager for communication)
@@ -242,7 +246,8 @@ static int qcprobe(struct usb_serial *serial, const struct usb_device_id *id)
    dev_dbg(dev, "Modem port found\n");
   else
    altsetting = -1;
- } else {
+  break;
+ case QCSERIAL_G2K:
   /*
    * Gobi 2K+ USB layout:
    * 0: QMI/net
@@ -270,6 +275,11 @@ static int qcprobe(struct usb_serial *serial, const struct usb_device_id *id)
    dev_dbg(dev, "Gobi 2K+ NMEA GPS interface found\n");
    break;
   }
+  break;
+ default:
+  dev_err(dev, "unsupported device layout type: %lu\n",
+   id->driver_info);
+  break;
  }
 
 done:
-- 
1.7.1