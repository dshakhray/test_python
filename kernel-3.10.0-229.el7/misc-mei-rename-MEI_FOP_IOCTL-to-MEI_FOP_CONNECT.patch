From e0e002549fae58e8a924d869d789a7c29561aeeb Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Fri, 2 May 2014 14:37:20 -0400
Subject: [misc] mei: rename MEI_FOP_IOCTL to MEI_FOP_CONNECT

Message-id: <1399041470-21330-48-git-send-email-prarit@redhat.com>
Patchwork-id: 79334
O-Subject: [RHEL7.1 PATCH BZ 1088953 47/77] mei: rename MEI_FOP_IOCTL to MEI_FOP_CONNECT
Bugzilla: 1088953
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1088953

commit 02a7eecc6ee565f5f3af836d56fe25bafcc49c98
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Wed Feb 12 21:41:51 2014 +0200

    mei: rename MEI_FOP_IOCTL to MEI_FOP_CONNECT

    This operation actually only support connection
    and not a generic ioctl

    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Cc: Dean Nelson <dnelson@redhat.com>
Cc: Stefan Assmann <sassmann@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/misc/mei/amthif.c b/drivers/misc/mei/amthif.c
index 2fad844..11f516e 100644
--- a/drivers/misc/mei/amthif.c
+++ b/drivers/misc/mei/amthif.c
@@ -365,7 +365,7 @@ int mei_amthif_write(struct mei_device *dev, struct mei_cl_cb *cb)
  if (ret)
   return ret;
 
- cb->fop_type = MEI_FOP_IOCTL;
+ cb->fop_type = MEI_FOP_WRITE;
 
  if (!list_empty(&dev->amthif_cmd_list.list) ||
      dev->iamthif_state != MEI_IAMTHIF_IDLE) {
diff --git a/drivers/misc/mei/client.c b/drivers/misc/mei/client.c
index 9b809cf..9ac72f1 100644
--- a/drivers/misc/mei/client.c
+++ b/drivers/misc/mei/client.c
@@ -505,7 +505,7 @@ int mei_cl_connect(struct mei_cl *cl, struct file *file)
   goto out;
  }
 
- cb->fop_type = MEI_FOP_IOCTL;
+ cb->fop_type = MEI_FOP_CONNECT;
 
  if (dev->hbuf_is_ready && !mei_cl_is_other_connecting(cl)) {
   dev->hbuf_is_ready = false;
diff --git a/drivers/misc/mei/hbm.c b/drivers/misc/mei/hbm.c
index fe970d6..ff98786 100644
--- a/drivers/misc/mei/hbm.c
+++ b/drivers/misc/mei/hbm.c
@@ -507,7 +507,7 @@ static void mei_hbm_cl_connect_res(struct mei_device *dev,
    list_del(&pos->list);
    return;
   }
-  if (pos->fop_type == MEI_FOP_IOCTL) {
+  if (pos->fop_type == MEI_FOP_CONNECT) {
    if (is_treat_specially_client(cl, rs)) {
     list_del(&pos->list);
     cl->status = 0;
diff --git a/drivers/misc/mei/interrupt.c b/drivers/misc/mei/interrupt.c
index f0fbb51..3f0b0b9 100644
--- a/drivers/misc/mei/interrupt.c
+++ b/drivers/misc/mei/interrupt.c
@@ -244,8 +244,7 @@ static int mei_cl_irq_read(struct mei_cl *cl, struct mei_cl_cb *cb,
 
 
 /**
- * mei_cl_irq_ioctl - processes client ioctl related operation from the
- * interrupt thread context -   send connection request
+ * mei_cl_irq_connect - send connect request in irq_thread context
  *
  * @cl: client
  * @cb: callback block.
@@ -254,7 +253,7 @@ static int mei_cl_irq_read(struct mei_cl *cl, struct mei_cl_cb *cb,
  *
  * returns 0, OK; otherwise, error.
  */
-static int mei_cl_irq_ioctl(struct mei_cl *cl, struct mei_cl_cb *cb,
+static int mei_cl_irq_connect(struct mei_cl *cl, struct mei_cl_cb *cb,
       s32 *slots, struct mei_cl_cb *cmpl_list)
 {
  struct mei_device *dev = cl->dev;
@@ -263,6 +262,9 @@ static int mei_cl_irq_ioctl(struct mei_cl *cl, struct mei_cl_cb *cb,
  u32 msg_slots =
   mei_data2slots(sizeof(struct hbm_client_connect_request));
 
+ if (mei_cl_is_other_connecting(cl))
+  return 0;
+
  if (*slots < msg_slots) {
   /* return the cancel routine */
   list_del(&cb->list);
@@ -496,11 +498,9 @@ int mei_irq_write_handler(struct mei_device *dev, struct mei_cl_cb *cmpl_list)
     return ret;
 
    break;
-  case MEI_FOP_IOCTL:
+  case MEI_FOP_CONNECT:
    /* connect message */
-   if (mei_cl_is_other_connecting(cl))
-    continue;
-   ret = mei_cl_irq_ioctl(cl, cb, &slots, cmpl_list);
+   ret = mei_cl_irq_connect(cl, cb, &slots, cmpl_list);
    if (ret)
     return ret;
 
diff --git a/drivers/misc/mei/mei_dev.h b/drivers/misc/mei/mei_dev.h
index 85d2a1a..6085ba6 100644
--- a/drivers/misc/mei/mei_dev.h
+++ b/drivers/misc/mei/mei_dev.h
@@ -135,16 +135,16 @@ enum mei_wd_states {
 
 /**
  * enum mei_cb_file_ops  - file operation associated with the callback
- * @MEI_FOP_READ   - read
- * @MEI_FOP_WRITE  - write
- * @MEI_FOP_IOCTL  - ioctl
- * @MEI_FOP_OPEN   - open
- * @MEI_FOP_CLOSE  - close
+ * @MEI_FOP_READ      - read
+ * @MEI_FOP_WRITE     - write
+ * @MEI_FOP_CONNECT   - connect
+ * @MEI_FOP_OPEN      - open
+ * @MEI_FOP_CLOSE     - close
  */
 enum mei_cb_file_ops {
  MEI_FOP_READ = 0,
  MEI_FOP_WRITE,
- MEI_FOP_IOCTL,
+ MEI_FOP_CONNECT,
  MEI_FOP_OPEN,
  MEI_FOP_CLOSE
 };
-- 
1.7.1