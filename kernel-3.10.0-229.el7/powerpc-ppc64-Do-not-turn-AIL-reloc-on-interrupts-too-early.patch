From 1dbf0931c01f28ba665f649e49b78ec053936e3c Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:10:16 -0400
Subject: [powerpc] ppc64: Do not turn AIL (reloc-on interrupts) too early

Message-id: <1410545655-205645-388-git-send-email-dzickus@redhat.com>
Patchwork-id: 94361
O-Subject: [RHEL7 PATCH 387/626] powerpc/ppc64: Do not turn AIL (reloc-on interrupts) too early
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 8f619b5429d9d852df09b85d9e41459859e04951
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Fri Mar 28 13:36:30 2014 +1100

    powerpc/ppc64: Do not turn AIL (reloc-on interrupts) too early

    Turn them on at the same time as we allow MSR_IR/DR in the paca
    kernel MSR, ie, after the MMU has been setup enough to be able
    to handle relocated access to the linear mapping.

    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kernel/cpu_setup_power.S b/arch/powerpc/kernel/cpu_setup_power.S
index 37d1bb0..1557e7c 100644
--- a/arch/powerpc/kernel/cpu_setup_power.S
+++ b/arch/powerpc/kernel/cpu_setup_power.S
@@ -56,7 +56,6 @@ _GLOBAL(__setup_cpu_power8)
  li r0,0
  mtspr SPRN_LPID,r0
  mfspr r3,SPRN_LPCR
- oris r3, r3, LPCR_AIL_3@h
  bl __init_LPCR
  bl __init_HFSCR
  bl __init_tlb_power8
@@ -75,7 +74,6 @@ _GLOBAL(__restore_cpu_power8)
  li r0,0
  mtspr SPRN_LPID,r0
  mfspr   r3,SPRN_LPCR
- oris r3, r3, LPCR_AIL_3@h
  bl __init_LPCR
  bl __init_HFSCR
  bl __init_tlb_power8
diff --git a/arch/powerpc/kernel/setup_64.c b/arch/powerpc/kernel/setup_64.c
index d0ccffb..485916b 100644
--- a/arch/powerpc/kernel/setup_64.c
+++ b/arch/powerpc/kernel/setup_64.c
@@ -162,6 +162,18 @@ static void fixup_boot_paca(void)
  get_paca()->data_offset = 0;
 }
 
+static void cpu_ready_for_interrupts(void)
+{
+ /* Set IR and DR in PACA MSR */
+ get_paca()->kernel_msr = MSR_KERNEL;
+
+ /* Enable AIL if supported */
+ if (cpu_has_feature(CPU_FTR_ARCH_207S)) {
+  unsigned long lpcr = mfspr(SPRN_LPCR);
+  mtspr(SPRN_LPCR, lpcr | LPCR_AIL_3);
+ }
+}
+
 /*
  * Early initialization entry point. This is called by head.S
  * with MMU translation disabled. We rely on the "feature" of
@@ -229,9 +241,9 @@ void __init early_setup(unsigned long dt_ptr)
  /*
   * At this point, we can let interrupts switch to virtual mode
   * (the MMU has been setup), so adjust the MSR in the PACA to
-  * have IR and DR set.
+  * have IR and DR set and enable AIL if it exists
   */
- get_paca()->kernel_msr = MSR_KERNEL;
+ cpu_ready_for_interrupts();
 
  /* Reserve large chunks of memory for use by CMA for KVM */
  kvm_cma_reserve();
@@ -260,7 +272,7 @@ void early_setup_secondary(void)
   * (the MMU has been setup), so adjust the MSR in the PACA to
   * have IR and DR set.
   */
- get_paca()->kernel_msr = MSR_KERNEL;
+ cpu_ready_for_interrupts();
 }
 
 #endif /* CONFIG_SMP */
-- 
1.7.1