From 8e5227c6b16a10103c9cd8ce2decd615d6cc228c Mon Sep 17 00:00:00 2001
From: Sachin Prabhu <sprabhu@redhat.com>
Date: Mon, 28 Jul 2014 12:16:56 -0400
Subject: [fs] cifs: replace seq_printf by seq_puts

Message-id: <1406549822-10376-64-git-send-email-sprabhu@redhat.com>
Patchwork-id: 86767
O-Subject: [RHEL7.1 PATCH 63/69] [bz1082049]fs/cifs/cifs.c: replace seq_printf by seq_puts
Bugzilla: 1082049
RH-Acked-by: J. Bruce Fields <bfields@redhat.com>
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Fabian Frederick <fabf@skynet.be>

Replace seq_printf where possible

Cc: Steve French <sfrench@samba.org>
Cc: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Fabian Frederick <fabf@skynet.be>
Signed-off-by: Steve French <smfrench@gmail.com>
(cherry picked from commit 571d597206a94a042f9a3c9fdc2b9d7f33ab85e5)
Signed-off-by: Sachin Prabhu <sprabhu@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/cifs/cifsfs.c b/fs/cifs/cifsfs.c
index 5a63030..91d4961 100644
--- a/fs/cifs/cifsfs.c
+++ b/fs/cifs/cifsfs.c
@@ -298,7 +298,7 @@ cifs_show_address(struct seq_file *s, struct TCP_Server_Info *server)
  struct sockaddr_in *sa = (struct sockaddr_in *) &server->dstaddr;
  struct sockaddr_in6 *sa6 = (struct sockaddr_in6 *) &server->dstaddr;
 
- seq_printf(s, ",addr=");
+ seq_puts(s, ",addr=");
 
  switch (server->dstaddr.ss_family) {
  case AF_INET:
@@ -310,7 +310,7 @@ cifs_show_address(struct seq_file *s, struct TCP_Server_Info *server)
    seq_printf(s, "%%%u", sa6->sin6_scope_id);
   break;
  default:
-  seq_printf(s, "(unknown)");
+  seq_puts(s, "(unknown)");
  }
 }
 
@@ -320,45 +320,45 @@ cifs_show_security(struct seq_file *s, struct cifs_ses *ses)
  if (ses->sectype == Unspecified)
   return;
 
- seq_printf(s, ",sec=");
+ seq_puts(s, ",sec=");
 
  switch (ses->sectype) {
  case LANMAN:
-  seq_printf(s, "lanman");
+  seq_puts(s, "lanman");
   break;
  case NTLMv2:
-  seq_printf(s, "ntlmv2");
+  seq_puts(s, "ntlmv2");
   break;
  case NTLM:
-  seq_printf(s, "ntlm");
+  seq_puts(s, "ntlm");
   break;
  case Kerberos:
-  seq_printf(s, "krb5");
+  seq_puts(s, "krb5");
   break;
  case RawNTLMSSP:
-  seq_printf(s, "ntlmssp");
+  seq_puts(s, "ntlmssp");
   break;
  default:
   /* shouldn't ever happen */
-  seq_printf(s, "unknown");
+  seq_puts(s, "unknown");
   break;
  }
 
  if (ses->sign)
-  seq_printf(s, "i");
+  seq_puts(s, "i");
 }
 
 static void
 cifs_show_cache_flavor(struct seq_file *s, struct cifs_sb_info *cifs_sb)
 {
- seq_printf(s, ",cache=");
+ seq_puts(s, ",cache=");
 
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_STRICT_IO)
-  seq_printf(s, "strict");
+  seq_puts(s, "strict");
  else if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_DIRECT_IO)
-  seq_printf(s, "none");
+  seq_puts(s, "none");
  else
-  seq_printf(s, "loose");
+  seq_puts(s, "loose");
 }
 
 static void
@@ -391,7 +391,7 @@ cifs_show_options(struct seq_file *s, struct dentry *root)
  cifs_show_cache_flavor(s, cifs_sb);
 
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_MULTIUSER)
-  seq_printf(s, ",multiuser");
+  seq_puts(s, ",multiuser");
  else if (tcon->ses->user_name)
   seq_printf(s, ",username=%s", tcon->ses->user_name);
 
@@ -417,16 +417,16 @@ cifs_show_options(struct seq_file *s, struct dentry *root)
  seq_printf(s, ",uid=%u",
      from_kuid_munged(&init_user_ns, cifs_sb->mnt_uid));
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_OVERR_UID)
-  seq_printf(s, ",forceuid");
+  seq_puts(s, ",forceuid");
  else
-  seq_printf(s, ",noforceuid");
+  seq_puts(s, ",noforceuid");
 
  seq_printf(s, ",gid=%u",
      from_kgid_munged(&init_user_ns, cifs_sb->mnt_gid));
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_OVERR_GID)
-  seq_printf(s, ",forcegid");
+  seq_puts(s, ",forcegid");
  else
-  seq_printf(s, ",noforcegid");
+  seq_puts(s, ",noforcegid");
 
  cifs_show_address(s, tcon->ses->server);
 
@@ -438,47 +438,47 @@ cifs_show_options(struct seq_file *s, struct dentry *root)
  cifs_show_nls(s, cifs_sb->local_nls);
 
  if (tcon->seal)
-  seq_printf(s, ",seal");
+  seq_puts(s, ",seal");
  if (tcon->nocase)
-  seq_printf(s, ",nocase");
+  seq_puts(s, ",nocase");
  if (tcon->retry)
-  seq_printf(s, ",hard");
+  seq_puts(s, ",hard");
  if (tcon->unix_ext)
-  seq_printf(s, ",unix");
+  seq_puts(s, ",unix");
  else
-  seq_printf(s, ",nounix");
+  seq_puts(s, ",nounix");
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_POSIX_PATHS)
-  seq_printf(s, ",posixpaths");
+  seq_puts(s, ",posixpaths");
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_SET_UID)
-  seq_printf(s, ",setuids");
+  seq_puts(s, ",setuids");
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_SERVER_INUM)
-  seq_printf(s, ",serverino");
+  seq_puts(s, ",serverino");
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_RWPIDFORWARD)
-  seq_printf(s, ",rwpidforward");
+  seq_puts(s, ",rwpidforward");
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_NOPOSIXBRL)
-  seq_printf(s, ",forcemand");
+  seq_puts(s, ",forcemand");
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_NO_XATTR)
-  seq_printf(s, ",nouser_xattr");
+  seq_puts(s, ",nouser_xattr");
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_MAP_SPECIAL_CHR)
-  seq_printf(s, ",mapchars");
+  seq_puts(s, ",mapchars");
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_UNX_EMUL)
-  seq_printf(s, ",sfu");
+  seq_puts(s, ",sfu");
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_NO_BRL)
-  seq_printf(s, ",nobrl");
+  seq_puts(s, ",nobrl");
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_CIFS_ACL)
-  seq_printf(s, ",cifsacl");
+  seq_puts(s, ",cifsacl");
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_DYNPERM)
-  seq_printf(s, ",dynperm");
+  seq_puts(s, ",dynperm");
  if (root->d_sb->s_flags & MS_POSIXACL)
-  seq_printf(s, ",acl");
+  seq_puts(s, ",acl");
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_MF_SYMLINKS)
-  seq_printf(s, ",mfsymlinks");
+  seq_puts(s, ",mfsymlinks");
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_FSCACHE)
-  seq_printf(s, ",fsc");
+  seq_puts(s, ",fsc");
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_NOSSYNC)
-  seq_printf(s, ",nostrictsync");
+  seq_puts(s, ",nostrictsync");
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_NO_PERM)
-  seq_printf(s, ",noperm");
+  seq_puts(s, ",noperm");
  if (cifs_sb->mnt_cifs_flags & CIFS_MOUNT_CIFS_BACKUPUID)
   seq_printf(s, ",backupuid=%u",
       from_kuid_munged(&init_user_ns,
-- 
1.7.1