From 386e76edab684e4143230c73c1016eeee04c1a67 Mon Sep 17 00:00:00 2001
From: Jason Wang <jasowang@redhat.com>
Date: Mon, 29 Sep 2014 00:59:11 -0400
Subject: [virt] hyperv: Add handler for RNDIS_STATUS_NETWORK_CHANGE event

Message-id: <1411952358-34104-28-git-send-email-jasowang@redhat.com>
Patchwork-id: 96770
O-Subject: [RHEL7.1 PATCH 27/34] hyperv: Add handler for RNDIS_STATUS_NETWORK_CHANGE event
Bugzilla: 1146357
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Vitaly Kuznetsov <vkuznets@redhat.com>

From: Haiyang Zhang <haiyangz@microsoft.com>

Bugzilla: 1146357

The RNDIS_STATUS_NETWORK_CHANGE event is received after the Hyper-V host
sleep or hibernation. We refresh network at this time.
MS-TFS: 135162

Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
Reviewed-by: K. Y. Srinivasan <kys@microsoft.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3a494e710367c0a233d86bcde9853781859fc008)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/hyperv/hyperv_net.h b/drivers/net/hyperv/hyperv_net.h
index e4e68cb..476b0f6 100644
--- a/drivers/net/hyperv/hyperv_net.h
+++ b/drivers/net/hyperv/hyperv_net.h
@@ -171,6 +171,7 @@ struct rndis_device {
 
  enum rndis_device_state state;
  bool link_state;
+ bool link_change;
  atomic_t new_req_id;
 
  spinlock_t request_lock;
@@ -186,7 +187,7 @@ int netvsc_device_remove(struct hv_device *device);
 int netvsc_send(struct hv_device *device,
   struct hv_netvsc_packet *packet);
 void netvsc_linkstatus_callback(struct hv_device *device_obj,
-    unsigned int status);
+    struct rndis_message *resp);
 int netvsc_recv_callback(struct hv_device *device_obj,
    struct hv_netvsc_packet *packet,
    struct ndis_tcp_ip_checksum_info *csum_info);
diff --git a/drivers/net/hyperv/netvsc_drv.c b/drivers/net/hyperv/netvsc_drv.c
index 0ce223d..f6393ee 100644
--- a/drivers/net/hyperv/netvsc_drv.c
+++ b/drivers/net/hyperv/netvsc_drv.c
@@ -579,8 +579,9 @@ drop:
  * netvsc_linkstatus_callback - Link up/down notification
  */
 void netvsc_linkstatus_callback(struct hv_device *device_obj,
-           unsigned int status)
+    struct rndis_message *resp)
 {
+ struct rndis_indicate_status *indicate = &resp->msg.indicate_status;
  struct net_device *net;
  struct net_device_context *ndev_ctx;
  struct netvsc_device *net_device;
@@ -589,7 +590,19 @@ void netvsc_linkstatus_callback(struct hv_device *device_obj,
  net_device = hv_get_drvdata(device_obj);
  rdev = net_device->extension;
 
- rdev->link_state = status != 1;
+ switch (indicate->status) {
+ case RNDIS_STATUS_MEDIA_CONNECT:
+  rdev->link_state = false;
+  break;
+ case RNDIS_STATUS_MEDIA_DISCONNECT:
+  rdev->link_state = true;
+  break;
+ case RNDIS_STATUS_NETWORK_CHANGE:
+  rdev->link_change = true;
+  break;
+ default:
+  return;
+ }
 
  net = net_device->ndev;
 
@@ -597,7 +610,7 @@ void netvsc_linkstatus_callback(struct hv_device *device_obj,
   return;
 
  ndev_ctx = netdev_priv(net);
- if (status == 1) {
+ if (!rdev->link_state) {
   schedule_delayed_work(&ndev_ctx->dwork, 0);
   schedule_delayed_work(&ndev_ctx->dwork, msecs_to_jiffies(20));
  } else {
@@ -767,7 +780,9 @@ static void netvsc_link_change(struct work_struct *w)
  struct net_device *net;
  struct netvsc_device *net_device;
  struct rndis_device *rdev;
- bool notify;
+ bool notify, refresh = false;
+ char *argv[] = { "/etc/init.d/network", "restart", NULL };
+ char *envp[] = { "HOME=/", "PATH=/sbin:/usr/sbin:/bin:/usr/bin", NULL };
 
  rtnl_lock();
 
@@ -782,10 +797,17 @@ static void netvsc_link_change(struct work_struct *w)
  } else {
   netif_carrier_on(net);
   notify = true;
+  if (rdev->link_change) {
+   rdev->link_change = false;
+   refresh = true;
+  }
  }
 
  rtnl_unlock();
 
+ if (refresh)
+  call_usermodehelper(argv[0], argv, envp, UMH_WAIT_EXEC);
+
  if (notify)
   netdev_notify_peers(net);
 }
diff --git a/drivers/net/hyperv/rndis_filter.c b/drivers/net/hyperv/rndis_filter.c
index 888539b..eb98273 100644
--- a/drivers/net/hyperv/rndis_filter.c
+++ b/drivers/net/hyperv/rndis_filter.c
@@ -321,25 +321,6 @@ static void rndis_filter_receive_response(struct rndis_device *dev,
  }
 }
 
-static void rndis_filter_receive_indicate_status(struct rndis_device *dev,
-          struct rndis_message *resp)
-{
- struct rndis_indicate_status *indicate =
-   &resp->msg.indicate_status;
-
- if (indicate->status == RNDIS_STATUS_MEDIA_CONNECT) {
-  netvsc_linkstatus_callback(
-   dev->net_dev->dev, 1);
- } else if (indicate->status == RNDIS_STATUS_MEDIA_DISCONNECT) {
-  netvsc_linkstatus_callback(
-   dev->net_dev->dev, 0);
- } else {
-  /*
-   * TODO:
-   */
- }
-}
-
 /*
  * Get the Per-Packet-Info with the specified type
  * return NULL if not found.
@@ -465,7 +446,7 @@ int rndis_filter_receive(struct hv_device *dev,
 
  case RNDIS_MSG_INDICATE:
   /* notification msgs */
-  rndis_filter_receive_indicate_status(rndis_dev, rndis_msg);
+  netvsc_linkstatus_callback(dev, rndis_msg);
   break;
  default:
   netdev_err(ndev,
diff --git a/include/linux/rndis.h b/include/linux/rndis.h
index 0c8dc71..93c0a64 100644
--- a/include/linux/rndis.h
+++ b/include/linux/rndis.h
@@ -65,6 +65,7 @@
 #define RNDIS_STATUS_MEDIA_SPECIFIC_INDICATION 0x40010012
 #define RNDIS_STATUS_WW_INDICATION  RDIA_SPECIFIC_INDICATION
 #define RNDIS_STATUS_LINK_SPEED_CHANGE  0x40010013L
+#define RNDIS_STATUS_NETWORK_CHANGE  0x40010018
 
 #define RNDIS_STATUS_NOT_RESETTABLE  0x80010001
 #define RNDIS_STATUS_SOFT_ERRORS  0x80010003
-- 
1.7.1