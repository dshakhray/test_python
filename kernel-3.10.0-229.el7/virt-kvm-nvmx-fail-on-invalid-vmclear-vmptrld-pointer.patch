From 8ed90746c28ac01c655d92f8243344864378f24e Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:39:50 -0400
Subject: [virt] kvm/nvmx: fail on invalid vmclear/vmptrld pointer

Message-id: <1406040016-3289-196-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86274
O-Subject: [RHEL7 PATCH v2 195/221] KVM: nVMX: fail on invalid vmclear/vmptrld pointer
Bugzilla: 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Bandan Das <bsd@redhat.com>

The spec mandates that if the vmptrld or vmclear
address is equal to the vmxon region pointer, the
instruction should fail with error "VMPTRLD with
VMXON pointer" or "VMCLEAR with VMXON pointer"

Signed-off-by: Bandan Das <bsd@redhat.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 96ec146330d18a938b4773be8d6dd1f93399507c)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index 0f79347..1d7e727 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -6100,6 +6100,12 @@ static int handle_vmclear(struct kvm_vcpu *vcpu)
   return 1;
  }
 
+ if (vmptr == vmx->nested.vmxon_ptr) {
+  nested_vmx_failValid(vcpu, VMXERR_VMCLEAR_VMXON_POINTER);
+  skip_emulated_instruction(vcpu);
+  return 1;
+ }
+
  if (vmptr == vmx->nested.current_vmptr) {
   nested_release_vmcs12(vmx);
   vmx->nested.current_vmptr = -1ull;
@@ -6443,6 +6449,12 @@ static int handle_vmptrld(struct kvm_vcpu *vcpu)
   return 1;
  }
 
+ if (vmptr == vmx->nested.vmxon_ptr) {
+  nested_vmx_failValid(vcpu, VMXERR_VMCLEAR_VMXON_POINTER);
+  skip_emulated_instruction(vcpu);
+  return 1;
+ }
+
  if (vmx->nested.current_vmptr != vmptr) {
   struct vmcs12 *new_vmcs12;
   struct page *page;
-- 
1.7.1