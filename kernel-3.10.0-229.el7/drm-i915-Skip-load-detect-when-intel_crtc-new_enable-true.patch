From 532346149b0c76c0eb82dec7b6e7960cc9f8af46 Mon Sep 17 00:00:00 2001
From: Rob Clark <rclark@redhat.com>
Date: Wed, 17 Dec 2014 21:38:30 -0500
Subject: [drm] i915: Skip load detect when intel_crtc->new_enable==true

Message-id: <1418852380-13061-20-git-send-email-rclark@redhat.com>
Patchwork-id: 102170
O-Subject: [RHEL7 drm 19/89] drm/i915: Skip load detect when intel_crtc->new_enable==true
Bugzilla: 1153301
RH-Acked-by: Jerome Glisse <jglisse@redhat.com>
RH-Acked-by: Dave Airlie <airlied@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1153301
Upstream: since v3.16.4

commit e77979325d8f613c0fa127b0a9437f003d0dd865

Author:     Ville Syrjala <ville.syrjala@linux.intel.com>
AuthorDate: Mon Aug 11 13:15:36 2014 +0300
Commit:     Rob Clark <rclark@redhat.com>
CommitDate: Wed Dec 10 17:13:10 2014 -0500

    drm/i915: Skip load detect when intel_crtc->new_enable==true

    commit a459249c73eaec1daf4e4657ea3564cc3550e66c upstream.

    During suspend we turn off the crtcs, but leave the staged config in
    place so that we can restore the display(s) to their previous state on
    resume.

    During resume when we attempt to apply the force pipe A quirk we use the
    load detect mechanism. That doesn't check whether there was an already
    staged configuration for the crtc since that's not even possible during
    normal runtime load detection. But during resume it is possible, and if
    we just blindly go and overwrite the staged crtc configuration for the
    load detection we can no longer restore the display to the correct
    state.

    Even worse, we don't even clear all the staged connector->encoder->crtc
    links so we may end up using a cloned setup for the load detection, and
    after we're done we just clear the links related to the VGA output
    leaving the links for the other outputs in place. This will eventually
    result in calling intel_set_mode() with mode==NULL but with valid
    connector->encoder->crtc links which will result in dereferencing the
    NULL mode since the code thinks it will have to a modeset.

    To avoid these problems don't use any crtc with new_enabled==true for
    load detection.

    Signed-off-by: Ville Syrjala <ville.syrjala@linux.intel.com>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Signed-off-by: Rob Clark <rclark@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index ebfec26..513c731 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -8380,10 +8380,14 @@ retry:
   i++;
   if (!(encoder->possible_crtcs & (1 << i)))
    continue;
-  if (!possible_crtc->enabled) {
-   crtc = possible_crtc;
-   break;
-  }
+  if (possible_crtc->enabled)
+   continue;
+  /* This can occur when applying the pipe A quirk on resume. */
+  if (to_intel_crtc(possible_crtc)->new_enabled)
+   continue;
+
+  crtc = possible_crtc;
+  break;
  }
 
  /*
-- 
1.7.1