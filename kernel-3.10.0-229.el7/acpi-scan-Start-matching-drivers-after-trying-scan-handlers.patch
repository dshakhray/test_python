From d2a46c6f1979efdbb99e24eee04c423dda002c57 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 10 Jul 2014 01:07:40 -0400
Subject: [acpi] scan: Start matching drivers after trying scan handlers

Message-id: <20140710010740.22146.72795.stgit@gir.stowe>
Patchwork-id: 85630
O-Subject: [RHEL7.1 PATCH 091/105] ACPI / scan: Start matching drivers after trying scan handlers
Bugzilla: 1114228
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1114228
Upstream Status: 6931007cc90ba94b3c2b29179d0a7cde194dabe8

commit 6931007cc90ba94b3c2b29179d0a7cde194dabe8
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Nov 7 01:41:01 2013 +0100

    ACPI / scan: Start matching drivers after trying scan handlers

    ACPI scan handlers should always be attached to struct acpi_device
    objects before any ACPI drivers, but there is a window during which
    a driver may be attached to a struct acpi_device before checking if
    there is a matching scan handler.  Namely, that will happen if an
    ACPI driver module is loaded during acpi_bus_scan() right after
    the first namespace walk is complete and before the given device
    is processed by the second namespace walk.

    To prevent that from happening, set the match_driver flags of
    struct acpi_device objects right before running device_attach()
    for them in acpi_bus_device_attach().

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Acked-by: Toshi Kani <toshi.kani@hp.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/acpi/scan.c b/drivers/acpi/scan.c
index 40140fa..f9c7443 100644
--- a/drivers/acpi/scan.c
+++ b/drivers/acpi/scan.c
@@ -1663,7 +1663,6 @@ void acpi_init_device_object(struct acpi_device *device, acpi_handle handle,
 
 void acpi_device_add_finalize(struct acpi_device *device)
 {
- device->flags.match_driver = true;
  dev_set_uevent_suppress(&device->dev, false);
  kobject_uevent(&device->dev.kobj, KOBJ_ADD);
 }
@@ -1902,8 +1901,12 @@ static acpi_status acpi_bus_device_attach(acpi_handle handle, u32 lvl_not_used,
   return AE_OK;
 
  ret = acpi_scan_attach_handler(device);
- if (ret)
-  return ret > 0 ? AE_OK : AE_CTRL_DEPTH;
+ if (ret < 0)
+  return AE_CTRL_DEPTH;
+
+ device->flags.match_driver = true;
+ if (ret > 0)
+  return AE_OK;
 
  ret = device_attach(&device->dev);
  return ret >= 0 ? AE_OK : AE_CTRL_DEPTH;
-- 
1.7.1