From f3b8cf65d87f9cf6af816c3be9e7353b1b58bf4b Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:05:15 -0400
Subject: [usb] ch341: refactor line-status handling

Message-id: <1410887463-20674-244-git-send-email-dzickus@redhat.com>
Patchwork-id: 95233
O-Subject: [RHEL7 PATCH 243/591] USB: ch341: refactor line-status handling
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit ac035628a95f20ff4c53b80c4b80e12287231e1a
Author: Johan Hovold <jhovold@gmail.com>
Date:   Thu Jan 2 22:49:28 2014 +0100

    USB: ch341: refactor line-status handling

    Refactor line-status handling.

    Signed-off-by: Johan Hovold <jhovold@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/serial/ch341.c b/drivers/usb/serial/ch341.c
index 8908760..f647dbd 100644
--- a/drivers/usb/serial/ch341.c
+++ b/drivers/usb/serial/ch341.c
@@ -440,6 +440,33 @@ static int ch341_tiocmset(struct tty_struct *tty,
  return ch341_set_handshake(port->serial->dev, control);
 }
 
+static void ch341_update_line_status(struct usb_serial_port *port,
+     unsigned char *data, size_t len)
+{
+ struct ch341_private *priv = usb_get_serial_port_data(port);
+ unsigned long flags;
+ u8 prev_line_status = priv->line_status;
+
+ if (len < 4)
+  return;
+
+ spin_lock_irqsave(&priv->lock, flags);
+ priv->line_status = (~(data[2])) & CH341_BITS_MODEM_STAT;
+ if ((data[1] & CH341_MULT_STAT))
+  priv->multi_status_change = 1;
+ spin_unlock_irqrestore(&priv->lock, flags);
+
+ if ((priv->line_status ^ prev_line_status) & CH341_BIT_DCD) {
+  struct tty_struct *tty = tty_port_tty_get(&port->port);
+  if (tty)
+   usb_serial_handle_dcd_change(port, tty,
+     priv->line_status & CH341_BIT_DCD);
+  tty_kref_put(tty);
+ }
+
+ wake_up_interruptible(&port->port.delta_msr_wait);
+}
+
 static void ch341_read_int_callback(struct urb *urb)
 {
  struct usb_serial_port *port = (struct usb_serial_port *) urb->context;
@@ -466,29 +493,7 @@ static void ch341_read_int_callback(struct urb *urb)
 
  usb_serial_debug_data(&port->dev, __func__,
          urb->actual_length, urb->transfer_buffer);
-
- if (actual_length >= 4) {
-  struct ch341_private *priv = usb_get_serial_port_data(port);
-  unsigned long flags;
-  u8 prev_line_status = priv->line_status;
-
-  spin_lock_irqsave(&priv->lock, flags);
-  priv->line_status = (~(data[2])) & CH341_BITS_MODEM_STAT;
-  if ((data[1] & CH341_MULT_STAT))
-   priv->multi_status_change = 1;
-  spin_unlock_irqrestore(&priv->lock, flags);
-
-  if ((priv->line_status ^ prev_line_status) & CH341_BIT_DCD) {
-   struct tty_struct *tty = tty_port_tty_get(&port->port);
-   if (tty)
-    usb_serial_handle_dcd_change(port, tty,
-         priv->line_status & CH341_BIT_DCD);
-   tty_kref_put(tty);
-  }
-
-  wake_up_interruptible(&port->port.delta_msr_wait);
- }
-
+ ch341_update_line_status(port, data, actual_length);
 exit:
  status = usb_submit_urb(urb, GFP_ATOMIC);
  if (status)
-- 
1.7.1