From 7e91c7f8a9ccdf1a137e55829d2187ca7008f0ef Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:22:40 -0400
Subject: [cpufreq] call cpufreq_driver->get() after calling ->init()

Message-id: <1409235879-1283-67-git-send-email-prarit@redhat.com>
Patchwork-id: 89409
O-Subject: [RHEL7.1 PATCH BZ 1134639 066/185] cpufreq: call cpufreq_driver->get() after calling ->init()
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit da60ce9f2faca87013fd3cab1c3bed5183608c3d
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Thu Oct 3 20:28:30 2013 +0530

    cpufreq: call cpufreq_driver->get() after calling ->init()

    Almost all drivers set policy->cur with current CPU frequency in their ->init()
    part. This can be done for all of them at core level and so they wouldn't need
    to do it.

    This patch adds supporting code in cpufreq core for calling get() after we have
    called init() for a policy.

    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/cpufreq.c b/drivers/cpufreq/cpufreq.c
index f981e56..2b38953 100644
--- a/drivers/cpufreq/cpufreq.c
+++ b/drivers/cpufreq/cpufreq.c
@@ -1042,6 +1042,14 @@ static int __cpufreq_add_dev(struct device *dev, struct subsys_interface *sif,
   goto err_set_policy_cpu;
  }
 
+ if (cpufreq_driver->get) {
+  policy->cur = cpufreq_driver->get(policy->cpu);
+  if (!policy->cur) {
+   pr_err("%s: ->get() failed\n", __func__);
+   goto err_get_freq;
+  }
+ }
+
  /* related cpus should atleast have policy->cpus */
  cpumask_or(policy->related_cpus, policy->related_cpus, policy->cpus);
 
@@ -1095,6 +1103,9 @@ err_out_unregister:
   per_cpu(cpufreq_cpu_data, j) = NULL;
  write_unlock_irqrestore(&cpufreq_driver_lock, flags);
 
+err_get_freq:
+ if (cpufreq_driver->exit)
+  cpufreq_driver->exit(policy);
 err_set_policy_cpu:
  cpufreq_policy_free(policy);
 nomem_out:
-- 
1.7.1