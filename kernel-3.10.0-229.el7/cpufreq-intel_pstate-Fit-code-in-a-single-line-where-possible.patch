From 0859ccd129151a775119e237c64db3592e061b31 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:24:26 -0400
Subject: [cpufreq] intel_pstate: Fit code in a single line where possible

Message-id: <1409235879-1283-173-git-send-email-prarit@redhat.com>
Patchwork-id: 89490
O-Subject: [RHEL7.1 PATCH BZ 1134639 172/185] cpufreq: intel_pstate: Fit code in a single line where possible
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit 2d8d1f18ed2b51bcc65a99bf940514b1a697b5f2
Author: Stratos Karafotis <stratosk@semaphore.gr>
Date:   Fri Jul 18 08:37:20 2014 -0700

    cpufreq: intel_pstate: Fit code in a single line where possible

    We can fit these lines in a single one, under the 80 characters
    limit.

    Signed-off-by: Stratos Karafotis <stratosk@semaphore.gr>
    Signed-off-by: Dirk Brandewie <dirk.j.brandewie@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
Cc: Tony Camuso <tcamuso@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/intel_pstate.c b/drivers/cpufreq/intel_pstate.c
index aadcf8f..b59b26b 100644
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@ -207,11 +207,7 @@ static inline void intel_pstate_busy_pid_reset(struct cpudata *cpu)
  pid_d_gain_set(&cpu->pid, pid_params.d_gain_pct);
  pid_i_gain_set(&cpu->pid, pid_params.i_gain_pct);
 
- pid_reset(&cpu->pid,
-  pid_params.setpoint,
-  100,
-  pid_params.deadband,
-  0);
+ pid_reset(&cpu->pid, pid_params.setpoint, 100, pid_params.deadband, 0);
 }
 
 static inline void intel_pstate_reset_all_pid(void)
@@ -235,8 +231,7 @@ static int pid_param_get(void *data, u64 *val)
  *val = *(u32 *)data;
  return 0;
 }
-DEFINE_SIMPLE_ATTRIBUTE(fops_pid_param, pid_param_get,
-   pid_param_set, "%llu\n");
+DEFINE_SIMPLE_ATTRIBUTE(fops_pid_param, pid_param_get, pid_param_set, "%llu\n");
 
 struct pid_param {
  char *name;
@@ -351,8 +346,7 @@ static void __init intel_pstate_sysfs_expose_params(void)
  intel_pstate_kobject = kobject_create_and_add("intel_pstate",
       &cpu_subsys.dev_root->kobj);
  BUG_ON(!intel_pstate_kobject);
- rc = sysfs_create_group(intel_pstate_kobject,
-    &intel_pstate_attr_group);
+ rc = sysfs_create_group(intel_pstate_kobject, &intel_pstate_attr_group);
  BUG_ON(rc);
 }
 
@@ -507,8 +501,7 @@ static void intel_pstate_get_min_max(struct cpudata *cpu, int *min, int *max)
    cpu->pstate.min_pstate, cpu->pstate.turbo_pstate);
 
  min_perf = fp_toint(mul_fp(int_tofp(max_perf), limits.min_perf));
- *min = clamp_t(int, min_perf,
-   cpu->pstate.min_pstate, max_perf);
+ *min = clamp_t(int, min_perf, cpu->pstate.min_pstate, max_perf);
 }
 
 static void intel_pstate_set_pstate(struct cpudata *cpu, int pstate)
@@ -705,8 +698,7 @@ static int intel_pstate_init_cpu(unsigned int cpunum)
 
  init_timer_deferrable(&cpu->timer);
  cpu->timer.function = intel_pstate_timer_func;
- cpu->timer.data =
-  (unsigned long)cpu;
+ cpu->timer.data = (unsigned long)cpu;
  cpu->timer.expires = jiffies + HZ/100;
  intel_pstate_busy_pid_reset(cpu);
  intel_pstate_sample(cpu);
-- 
1.7.1