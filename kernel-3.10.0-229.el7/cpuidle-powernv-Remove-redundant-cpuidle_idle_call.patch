From 157385975557af655e5851fc9050be36cfb181c0 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:12:23 -0400
Subject: [cpuidle] powernv: Remove redundant cpuidle_idle_call()

Message-id: <1410545655-205645-515-git-send-email-dzickus@redhat.com>
Patchwork-id: 94600
O-Subject: [RHEL7 PATCH 514/626] cpuidle/powernv: Remove redundant cpuidle_idle_call()
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 591ac0cb01ec8d0ff131a318f9b9abf6ecab6225
Author: Nicolas Pitre <nicolas.pitre@linaro.org>
Date:   Mon Feb 17 10:59:29 2014 -0500

    cpuidle/powernv: Remove redundant cpuidle_idle_call()

    The core idle loop now takes care of it. We need to add the runlatch
    function calls to the idle routines which was earlier taken care of by
    the arch specific idle routine.

    Signed-off-by: Nicolas Pitre <nico@linaro.org>
    Signed-off-by: Preeti U Murthy <preeti@linux.vnet.ibm.com>
    Reviewed-by: Deepthi Dharwar <deepthi@linux.vnet.ibm.com>
    Signed-off-by: Peter Zijlstra <peterz@infradead.org>
    Cc: Paul Burton <paul.burton@imgtec.com>
    Cc: "Rafael J. Wysocki" <rjw@rjwysocki.net>
    Cc: Daniel Lezcano <daniel.lezcano@linaro.org>
    Cc: linux-pm@vger.kernel.org
    Cc: linaro-kernel@lists.linaro.org
    Link: http://lkml.kernel.org/n/tip-nr4mtbkkzf2oomaj85m24o7c@git.kernel.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/platforms/powernv/setup.c b/arch/powerpc/platforms/powernv/setup.c
index b6ed4ad..05d63aa 100644
--- a/arch/powerpc/platforms/powernv/setup.c
+++ b/arch/powerpc/platforms/powernv/setup.c
@@ -26,7 +26,6 @@
 #include <linux/of_fdt.h>
 #include <linux/interrupt.h>
 #include <linux/bug.h>
-#include <linux/cpuidle.h>
 #include <linux/pci.h>
 
 #include <asm/machdep.h>
@@ -291,16 +290,6 @@ static int __init pnv_probe(void)
  return 1;
 }
 
-void powernv_idle(void)
-{
- /* Hook to cpuidle framework if available, else
-  * call on default platform idle code
-  */
- if (cpuidle_idle_call()) {
-  power7_idle();
- }
-}
-
 define_machine(powernv) {
  .name   = "PowerNV",
  .probe   = pnv_probe,
@@ -310,7 +299,7 @@ define_machine(powernv) {
  .show_cpuinfo  = pnv_show_cpuinfo,
  .progress  = pnv_progress,
  .machine_shutdown = pnv_shutdown,
- .power_save             = powernv_idle,
+ .power_save             = power7_idle,
  .calibrate_decr  = generic_calibrate_decr,
  .dma_set_mask  = pnv_dma_set_mask,
 #ifdef CONFIG_KEXEC
diff --git a/drivers/cpuidle/cpuidle-powernv.c b/drivers/cpuidle/cpuidle-powernv.c
index 78fd174..f48607c 100644
--- a/drivers/cpuidle/cpuidle-powernv.c
+++ b/drivers/cpuidle/cpuidle-powernv.c
@@ -14,6 +14,7 @@
 
 #include <asm/machdep.h>
 #include <asm/firmware.h>
+#include <asm/runlatch.h>
 
 struct cpuidle_driver powernv_idle_driver = {
  .name             = "powernv_idle",
@@ -30,12 +31,14 @@ static int snooze_loop(struct cpuidle_device *dev,
  local_irq_enable();
  set_thread_flag(TIF_POLLING_NRFLAG);
 
+ ppc64_runlatch_off();
  while (!need_resched()) {
   HMT_low();
   HMT_very_low();
  }
 
  HMT_medium();
+ ppc64_runlatch_on();
  clear_thread_flag(TIF_POLLING_NRFLAG);
  smp_mb();
  return index;
@@ -45,7 +48,9 @@ static int nap_loop(struct cpuidle_device *dev,
    struct cpuidle_driver *drv,
    int index)
 {
+ ppc64_runlatch_off();
  power7_idle();
+ ppc64_runlatch_on();
  return index;
 }
 
-- 
1.7.1