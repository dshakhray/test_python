From 0f0cf7959321c65a0b92e1f871c4e53b3c154383 Mon Sep 17 00:00:00 2001
From: Amit Shah <amit.shah@redhat.com>
Date: Tue, 12 Aug 2014 11:30:51 -0400
Subject: [virt] virtio/pm: use CONFIG_PM_SLEEP instead of CONFIG_PM

Message-id: <9a930e1b5c4dd2019f451cd28d8513273a3ee393.1407842211.git.amit.shah@redhat.com>
Patchwork-id: 87648
O-Subject: [RHEL7.1 kernel PATCH 1/9] virtio: pm: use CONFIG_PM_SLEEP instead of CONFIG_PM
Bugzilla: 1119299
RH-Acked-by: Amos Kong <akong@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Herbert Xu <herbert.xu@redhat.com>

From: Aaron Lu <aaron.lu@intel.com>

The freeze and restore functions defined in virtio drivers are used
for suspend and hibernate, so CONFIG_PM_SLEEP is more appropriate than
CONFIG_PM. This patch replace all CONFIG_PM with CONFIG_PM_SLEEP for
virtio drivers that implement freeze and restore callbacks.

Signed-off-by: Aaron Lu <aaron.lu@intel.com>
Reviewed-by: Amit Shah <amit.shah@redhat.com>
Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
(cherry picked from commit 891070003999e7ac8881bba6f8242615382742eb)
Signed-off-by: Amit Shah <amit.shah@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/block/virtio_blk.c b/drivers/block/virtio_blk.c
index 6472395..1df5a36 100644
--- a/drivers/block/virtio_blk.c
+++ b/drivers/block/virtio_blk.c
@@ -899,7 +899,7 @@ static void virtblk_remove(struct virtio_device *vdev)
   ida_simple_remove(&vd_index_ida, index);
 }
 
-#ifdef CONFIG_PM
+#ifdef CONFIG_PM_SLEEP
 static int virtblk_freeze(struct virtio_device *vdev)
 {
  struct virtio_blk *vblk = vdev->priv;
@@ -959,7 +959,7 @@ static struct virtio_driver virtio_blk = {
  .probe   = virtblk_probe,
  .remove   = virtblk_remove,
  .config_changed  = virtblk_config_changed,
-#ifdef CONFIG_PM
+#ifdef CONFIG_PM_SLEEP
  .freeze   = virtblk_freeze,
  .restore  = virtblk_restore,
 #endif
diff --git a/drivers/char/hw_random/virtio-rng.c b/drivers/char/hw_random/virtio-rng.c
index d6a11ca..0b513cd 100644
--- a/drivers/char/hw_random/virtio-rng.c
+++ b/drivers/char/hw_random/virtio-rng.c
@@ -162,7 +162,7 @@ static void virtrng_remove(struct virtio_device *vdev)
  remove_common(vdev);
 }
 
-#ifdef CONFIG_PM
+#ifdef CONFIG_PM_SLEEP
 static int virtrng_freeze(struct virtio_device *vdev)
 {
  remove_common(vdev);
@@ -186,7 +186,7 @@ static struct virtio_driver virtio_rng_driver = {
  .id_table = id_table,
  .probe = virtrng_probe,
  .remove = virtrng_remove,
-#ifdef CONFIG_PM
+#ifdef CONFIG_PM_SLEEP
  .freeze = virtrng_freeze,
  .restore = virtrng_restore,
 #endif
diff --git a/drivers/char/virtio_console.c b/drivers/char/virtio_console.c
index 307aec5..d32f889 100644
--- a/drivers/char/virtio_console.c
+++ b/drivers/char/virtio_console.c
@@ -2142,7 +2142,7 @@ static struct virtio_device_id rproc_serial_id_table[] = {
 static unsigned int rproc_serial_features[] = {
 };
 
-#ifdef CONFIG_PM
+#ifdef CONFIG_PM_SLEEP
 static int virtcons_freeze(struct virtio_device *vdev)
 {
  struct ports_device *portdev;
@@ -2220,7 +2220,7 @@ static struct virtio_driver virtio_console = {
  .probe = virtcons_probe,
  .remove = virtcons_remove,
  .config_changed = config_intr,
-#ifdef CONFIG_PM
+#ifdef CONFIG_PM_SLEEP
  .freeze = virtcons_freeze,
  .restore = virtcons_restore,
 #endif
diff --git a/drivers/net/virtio_net.c b/drivers/net/virtio_net.c
index b4e9bcf..9acf56d 100644
--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@ -1733,7 +1733,7 @@ static void virtnet_remove(struct virtio_device *vdev)
  free_netdev(vi->dev);
 }
 
-#ifdef CONFIG_PM
+#ifdef CONFIG_PM_SLEEP
 static int virtnet_freeze(struct virtio_device *vdev)
 {
  struct virtnet_info *vi = vdev->priv;
@@ -1825,7 +1825,7 @@ static struct virtio_driver virtio_net_driver = {
  .probe = virtnet_probe,
  .remove = virtnet_remove,
  .config_changed = virtnet_config_changed,
-#ifdef CONFIG_PM
+#ifdef CONFIG_PM_SLEEP
  .freeze = virtnet_freeze,
  .restore = virtnet_restore,
 #endif
diff --git a/drivers/scsi/virtio_scsi.c b/drivers/scsi/virtio_scsi.c
index b26f1a5..06d293b 100644
--- a/drivers/scsi/virtio_scsi.c
+++ b/drivers/scsi/virtio_scsi.c
@@ -954,7 +954,7 @@ static void virtscsi_remove(struct virtio_device *vdev)
  scsi_host_put(shost);
 }
 
-#ifdef CONFIG_PM
+#ifdef CONFIG_PM_SLEEP
 static int virtscsi_freeze(struct virtio_device *vdev)
 {
  struct Scsi_Host *sh = virtio_scsi_host(vdev);
@@ -1001,7 +1001,7 @@ static struct virtio_driver virtio_scsi_driver = {
  .id_table = id_table,
  .probe = virtscsi_probe,
  .scan = virtscsi_scan,
-#ifdef CONFIG_PM
+#ifdef CONFIG_PM_SLEEP
  .freeze = virtscsi_freeze,
  .restore = virtscsi_restore,
 #endif
diff --git a/drivers/virtio/virtio_balloon.c b/drivers/virtio/virtio_balloon.c
index 71af7b5..73db44d 100644
--- a/drivers/virtio/virtio_balloon.c
+++ b/drivers/virtio/virtio_balloon.c
@@ -512,7 +512,7 @@ static void virtballoon_remove(struct virtio_device *vdev)
  kfree(vb);
 }
 
-#ifdef CONFIG_PM
+#ifdef CONFIG_PM_SLEEP
 static int virtballoon_freeze(struct virtio_device *vdev)
 {
  struct virtio_balloon *vb = vdev->priv;
@@ -555,7 +555,7 @@ static struct virtio_driver virtio_balloon_driver = {
  .probe = virtballoon_probe,
  .remove = virtballoon_remove,
  .config_changed = virtballoon_changed,
-#ifdef CONFIG_PM
+#ifdef CONFIG_PM_SLEEP
  .freeze = virtballoon_freeze,
  .restore = virtballoon_restore,
 #endif
-- 
1.7.1