From dd38eb05566e7118e606ab63bd4fb28f671948f6 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:13:46 -0400
Subject: [powerpc] perf: Never program book3s PMCs with values >= 0x80000000

Message-id: <1410545655-205645-598-git-send-email-dzickus@redhat.com>
Patchwork-id: 94456
O-Subject: [RHEL7 PATCH 597/626] powerpc/perf: Never program book3s PMCs with values >= 0x80000000
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit f56029410a13cae3652d1f34788045c40a13ffc7
Author: Anton Blanchard <anton@samba.org>
Date:   Thu May 29 08:15:38 2014 +1000

    powerpc/perf: Never program book3s PMCs with values >= 0x80000000

    We are seeing a lot of PMU warnings on POWER8:

        Can't find PMC that caused IRQ

    Looking closer, the active PMC is 0 at this point and we took a PMU
    exception on the transition from negative to 0. Some versions of POWER8
    have an issue where they edge detect and not level detect PMC overflows.

    A number of places program the PMC with (0x80000000 - period_left),
    where period_left can be negative. We can either fix all of these or
    just ensure that period_left is always >= 1.

    This patch takes the second option.

    Cc: <stable@vger.kernel.org>
    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/perf/core-book3s.c b/arch/powerpc/perf/core-book3s.c
index bae697c..6b0641c 100644
--- a/arch/powerpc/perf/core-book3s.c
+++ b/arch/powerpc/perf/core-book3s.c
@@ -996,7 +996,22 @@ static void power_pmu_read(struct perf_event *event)
  } while (local64_cmpxchg(&event->hw.prev_count, prev, val) != prev);
 
  local64_add(delta, &event->count);
- local64_sub(delta, &event->hw.period_left);
+
+ /*
+  * A number of places program the PMC with (0x80000000 - period_left).
+  * We never want period_left to be less than 1 because we will program
+  * the PMC with a value >= 0x800000000 and an edge detected PMC will
+  * roll around to 0 before taking an exception. We have seen this
+  * on POWER8.
+  *
+  * To fix this, clamp the minimum value of period_left to 1.
+  */
+ do {
+  prev = local64_read(&event->hw.period_left);
+  val = prev - delta;
+  if (val < 1)
+   val = 1;
+ } while (local64_cmpxchg(&event->hw.period_left, prev, val) != prev);
 }
 
 /*
-- 
1.7.1