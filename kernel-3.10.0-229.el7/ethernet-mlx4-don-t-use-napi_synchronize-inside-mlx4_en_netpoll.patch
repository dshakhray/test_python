From d9319a415e3e519e4c3a71e0cb261d905fa9be0c Mon Sep 17 00:00:00 2001
From: Amir Vadai <avadai@redhat.com>
Date: Thu, 11 Sep 2014 12:00:41 -0400
Subject: [ethernet] mlx4: don't use napi_synchronize inside mlx4_en_netpoll

Message-id: <47740e8a3b7fa6de5bbb9d0c44ee10aa6f334335.1410425016.git.avadai@redhat.com>
Patchwork-id: 93680
O-Subject: [Patch RHEL7.1 V1 105/197] mlx4_en: don't use napi_synchronize inside mlx4_en_netpoll
Bugzilla: 1107617 1107618 1107619 1107620
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

From: Chris Mason <clm@fb.com>

The mlx4 driver is triggering schedules while atomic inside
mlx4_en_netpoll:

 spin_lock_irqsave(&cq->lock, flags);
 napi_synchronize(&cq->napi);
  ^^^^^ msleep here
 mlx4_en_process_rx_cq(dev, cq, 0);
 spin_unlock_irqrestore(&cq->lock, flags);

This was part of a patch by Alexander Guller from Mellanox in 2011,
but it still isn't upstream.

Signed-off-by: Chris Mason <clm@fb.com>
cc: stable@vger.kernel.org
Acked-By: Amir Vadai <amirv@mellanox.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c98235cb8584a72e95786e17d695a8e5fafcd766)
Signed-off-by: Amir Vadai <avadai@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/mellanox/mlx4/en_cq.c b/drivers/net/ethernet/mellanox/mlx4/en_cq.c
index 0b8eff4..635a24b 100644
--- a/drivers/net/ethernet/mellanox/mlx4/en_cq.c
+++ b/drivers/net/ethernet/mellanox/mlx4/en_cq.c
@@ -67,7 +67,6 @@ int mlx4_en_create_cq(struct mlx4_en_priv *priv,
 
  cq->ring = ring;
  cq->is_tx = mode;
- spin_lock_init(&cq->lock);
 
  /* Allocate HW buffers on provided NUMA node.
   * dev->numa_node is used in mtt range allocation flow.
diff --git a/drivers/net/ethernet/mellanox/mlx4/en_netdev.c b/drivers/net/ethernet/mellanox/mlx4/en_netdev.c
index f085c2d..7e4b172 100644
--- a/drivers/net/ethernet/mellanox/mlx4/en_netdev.c
+++ b/drivers/net/ethernet/mellanox/mlx4/en_netdev.c
@@ -1304,15 +1304,11 @@ static void mlx4_en_netpoll(struct net_device *dev)
 {
  struct mlx4_en_priv *priv = netdev_priv(dev);
  struct mlx4_en_cq *cq;
- unsigned long flags;
  int i;
 
  for (i = 0; i < priv->rx_ring_num; i++) {
   cq = priv->rx_cq[i];
-  spin_lock_irqsave(&cq->lock, flags);
-  napi_synchronize(&cq->napi);
-  mlx4_en_process_rx_cq(dev, cq, 0);
-  spin_unlock_irqrestore(&cq->lock, flags);
+  napi_schedule(&cq->napi);
  }
 }
 #endif
diff --git a/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h b/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h
index 20e3686..f965882 100644
--- a/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h
+++ b/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h
@@ -319,7 +319,6 @@ struct mlx4_en_cq {
  struct mlx4_cq          mcq;
  struct mlx4_hwq_resources wqres;
  int                     ring;
- spinlock_t              lock;
  struct net_device      *dev;
  struct napi_struct napi;
  int size;
-- 
1.7.1