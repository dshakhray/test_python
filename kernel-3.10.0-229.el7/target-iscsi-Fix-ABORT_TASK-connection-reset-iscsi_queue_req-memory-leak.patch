From 3e213304c1ab4ca19951d2b49c0de24e5a6a9c78 Mon Sep 17 00:00:00 2001
From: Andy Grover <agrover@redhat.com>
Date: Fri, 5 Sep 2014 16:36:22 -0400
Subject: [target] iscsi: Fix ABORT_TASK + connection reset iscsi_queue_req memory leak

Message-id: <1409934989-29941-25-git-send-email-agrover@redhat.com>
Patchwork-id: 91492
O-Subject: [RHEL7.1 PATCH e-stor 24/31] iscsi-target: Fix ABORT_TASK + connection reset iscsi_queue_req memory leak
Bugzilla: 1129387
RH-Acked-by: Chris Leech <cleech@redhat.com>
RH-Acked-by: Rob Evers <revers@redhat.com>

From: Nicholas Bellinger <nab@linux-iscsi.org>

commit bbc050488525e1ab1194c27355f63c66814385b8 upstream.

This patch fixes a iscsi_queue_req memory leak when ABORT_TASK response
has been queued by TFO->queue_tm_rsp() -> lio_queue_tm_rsp() after a
long standing I/O completes, but the connection has already reset and
waiting for cleanup to complete in iscsit_release_commands_from_conn()
-> transport_generic_free_cmd() -> transport_wait_for_tasks() code.

It moves iscsit_free_queue_reqs_for_conn() after the per-connection command
list has been released, so that the associated se_cmd tag can be completed +
released by target-core before freeing any remaining iscsi_queue_req memory
for the connection generated by lio_queue_tm_rsp().

Cc: Thomas Glanzmann <thomas@glanzmann.de>
Cc: Charalampos Pournaris <charpour@gmail.com>
Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/target/iscsi/iscsi_target.c b/drivers/target/iscsi/iscsi_target.c
index b4c458d..2173451 100644
--- a/drivers/target/iscsi/iscsi_target.c
+++ b/drivers/target/iscsi/iscsi_target.c
@@ -4149,8 +4149,6 @@ int iscsit_close_connection(
  if (conn->conn_transport->iscsit_wait_conn)
   conn->conn_transport->iscsit_wait_conn(conn);
 
- iscsit_free_queue_reqs_for_conn(conn);
-
  /*
   * During Connection recovery drop unacknowledged out of order
   * commands for this connection, and prepare the other commands
@@ -4167,6 +4165,7 @@ int iscsit_close_connection(
   iscsit_clear_ooo_cmdsns_for_conn(conn);
   iscsit_release_commands_from_conn(conn);
  }
+ iscsit_free_queue_reqs_for_conn(conn);
 
  /*
   * Handle decrementing session or connection usage count if
-- 
1.7.1