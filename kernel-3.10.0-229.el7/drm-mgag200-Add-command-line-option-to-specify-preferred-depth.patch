From a5280f0ac5dcc7d3c113559c3a538f9ac53f3281 Mon Sep 17 00:00:00 2001
From: Dave Airlie <airlied@redhat.com>
Date: Thu, 8 Jan 2015 00:45:36 -0500
Subject: [drm] mgag200: Add command line option to specify preferred depth

Message-id: <1420677936-9887-2-git-send-email-airlied@redhat.com>
Patchwork-id: 102547
O-Subject: [PATCH 2/2] [PATCH RHEL7.1 BZ1044555] drm/mgag200: Add command line option to specify preferred depth
Bugzilla: 1044555
RH-Acked-by: Rob Clark <rclark@redhat.com>
RH-Acked-by: Jerome Glisse <jglisse@redhat.com>

From: Egbert Eich <eich@suse.de>

upstream: waiting for SuSE to submit, this patch is from SuSE kernel,
and it is required for partner hw.
bugzilla: 1044555

This adds a command line parameter to override the preferred bpp
on mga g200 server chips, so you can run some servers with low
VRAM at a higher resolution but at 16bpp.

Signed-off-by: Dave Airlie <airlied@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/gpu/drm/mgag200/mgag200_drv.c b/drivers/gpu/drm/mgag200/mgag200_drv.c
index f15ea3c..2a37e65 100644
--- a/drivers/gpu/drm/mgag200/mgag200_drv.c
+++ b/drivers/gpu/drm/mgag200/mgag200_drv.c
@@ -22,9 +22,12 @@
  * functions
  */
 int mgag200_modeset = -1;
+int mgag200_preferred_depth __read_mostly = 0;
 
 MODULE_PARM_DESC(modeset, "Disable/Enable modesetting");
 module_param_named(modeset, mgag200_modeset, int, 0400);
+MODULE_PARM_DESC(preferreddepth, "Set preferred bpp");
+module_param_named(preferreddepth, mgag200_preferred_depth, int, 0400);
 
 static struct drm_driver driver;
 
@@ -121,6 +124,14 @@ static int __init mgag200_init(void)
 
  if (mgag200_modeset == 0)
   return -EINVAL;
+ switch (mgag200_preferred_depth) {
+ case 0: /* driver default */
+ case 16:
+ case 24:
+  break;
+ default:
+  return -EINVAL;
+ }
  return drm_pci_init(&driver, &mgag200_pci_driver);
 }
 
diff --git a/drivers/gpu/drm/mgag200/mgag200_main.c b/drivers/gpu/drm/mgag200/mgag200_main.c
index c860078..b2bbb63 100644
--- a/drivers/gpu/drm/mgag200/mgag200_main.c
+++ b/drivers/gpu/drm/mgag200/mgag200_main.c
@@ -14,6 +14,8 @@
 #include <drm/drm_crtc_helper.h>
 #include "mgag200_drv.h"
 
+extern int mgag200_preferred_depth __read_mostly;
+
 static void mga_user_framebuffer_destroy(struct drm_framebuffer *fb)
 {
  struct mga_framebuffer *mga_fb = to_mga_framebuffer(fb);
@@ -217,12 +219,27 @@ int mgag200_driver_load(struct drm_device *dev, unsigned long flags)
 
  drm_mode_config_init(dev);
  dev->mode_config.funcs = (void *)&mga_mode_funcs;
- if (IS_G200_SE(mdev) && mdev->mc.vram_size < (2048*1024)) {
-  mdev->preferred_bpp = dev->mode_config.preferred_depth = 16;
+ if (mgag200_preferred_depth == 0) {
+  if (IS_G200_SE(mdev) && mdev->mc.vram_size <= (2048*1024)) {
+   mdev->preferred_bpp =
+    dev->mode_config.preferred_depth = 16;
+  } else {
+   /* prefer 16bpp on low end gpus with limited VRAM */
+   mdev->preferred_bpp = 32;
+   dev->mode_config.preferred_depth = 24;
+  }
  } else {
-  /* prefer 16bpp on low end gpus with limited VRAM */
-  mdev->preferred_bpp = 32;
-  dev->mode_config.preferred_depth = 24;
+  dev->mode_config.preferred_depth = mgag200_preferred_depth;
+  switch (mgag200_preferred_depth) {
+  case 16:
+   mdev->preferred_bpp = 16;
+   break;
+  case 24:
+   mdev->preferred_bpp = 32;
+   break;
+  default:
+   goto out;
+  }
  }
  dev->mode_config.prefer_shadow = 1;
 
-- 
1.7.1