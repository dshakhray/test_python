From d6ad87f3df00f32bfb8b41af785997a9c572769b Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 18:59:01 -0400
Subject: [fs] btrfs: use a bit to track if we're in the radix tree

Message-id: <1407179109-13714-55-git-send-email-sandeen@redhat.com>
Patchwork-id: 86998
O-Subject: [RHEL7.1 PATCH 054/422] Btrfs: use a bit to track if we're in the radix tree
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Josef Bacik <jbacik@fb.com>

commit 34b41acec1ccc06373ec584de19618d48ceb09fc
Author: Josef Bacik <jbacik@fb.com>
Date:   Fri Dec 13 10:41:51 2013 -0500

    Btrfs: use a bit to track if we're in the radix tree

    For creating a dummy in-memory btree I need to be able to use the radix tree to
    keep track of the buffers like normal extent buffers.  With dummy buffers we
    skip the radix tree step, and we still want to do that for the tree mod log
    dummy buffers but for my test buffers we need to be able to remove them from the
    radix tree like normal.  This will give me a way to do that.  Thanks,

    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/extent_io.c b/fs/btrfs/extent_io.c
index ee81925..37711eb 100644
--- a/fs/btrfs/extent_io.c
+++ b/fs/btrfs/extent_io.c
@@ -4617,6 +4617,7 @@ again:
  }
  /* add one reference for the tree */
  check_buffer_tree_ref(eb);
+ set_bit(EXTENT_BUFFER_IN_TREE, &eb->bflags);
 
  /*
   * there is a race where release page may have
@@ -4660,9 +4661,7 @@ static int release_extent_buffer(struct extent_buffer *eb)
 {
  WARN_ON(atomic_read(&eb->refs) == 0);
  if (atomic_dec_and_test(&eb->refs)) {
-  if (test_bit(EXTENT_BUFFER_DUMMY, &eb->bflags)) {
-   spin_unlock(&eb->refs_lock);
-  } else {
+  if (test_and_clear_bit(EXTENT_BUFFER_IN_TREE, &eb->bflags)) {
    struct extent_io_tree *tree = eb->tree;
 
    spin_unlock(&eb->refs_lock);
@@ -4671,6 +4670,8 @@ static int release_extent_buffer(struct extent_buffer *eb)
    radix_tree_delete(&tree->buffer,
        eb->start >> PAGE_CACHE_SHIFT);
    spin_unlock(&tree->buffer_lock);
+  } else {
+   spin_unlock(&eb->refs_lock);
   }
 
   /* Should be safe to release our pages at this point */
diff --git a/fs/btrfs/extent_io.h b/fs/btrfs/extent_io.h
index 19620c5..92e4347 100644
--- a/fs/btrfs/extent_io.h
+++ b/fs/btrfs/extent_io.h
@@ -43,6 +43,7 @@
 #define EXTENT_BUFFER_WRITEBACK 7
 #define EXTENT_BUFFER_IOERR 8
 #define EXTENT_BUFFER_DUMMY 9
+#define EXTENT_BUFFER_IN_TREE 10
 
 /* these are flags for extent_clear_unlock_delalloc */
 #define PAGE_UNLOCK  (1 << 0)
-- 
1.7.1