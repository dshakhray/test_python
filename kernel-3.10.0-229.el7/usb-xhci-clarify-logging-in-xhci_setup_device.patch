From bdfac0767f2dd665735f711688cd1be741f404a9 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:04:50 -0400
Subject: [usb] xhci: clarify logging in xhci_setup_device

Message-id: <1410887463-20674-219-git-send-email-dzickus@redhat.com>
Patchwork-id: 95351
O-Subject: [RHEL7 PATCH 218/591] xhci: clarify logging in xhci_setup_device
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 6f8ffc0b43c1043481306ffb8a4b8f53fa1f5ead
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Fri Nov 22 01:20:01 2013 -0800

    xhci: clarify logging in xhci_setup_device

    Specify whether we are only performing the context setup portion of the
    'address device' command, or the full operation issuing 'SetAddress'
    on the wire.

    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/host/xhci.c b/drivers/usb/host/xhci.c
index 6598f7e..d68ec1a 100644
--- a/drivers/usb/host/xhci.c
+++ b/drivers/usb/host/xhci.c
@@ -3717,6 +3717,7 @@ disable_slot:
 static int xhci_setup_device(struct usb_hcd *hcd, struct usb_device *udev,
         enum xhci_setup_dev setup)
 {
+ const char *act = setup == SETUP_CONTEXT_ONLY ? "context" : "address";
  unsigned long flags;
  int timeleft;
  struct xhci_virt_device *virt_dev;
@@ -3792,8 +3793,8 @@ static int xhci_setup_device(struct usb_hcd *hcd, struct usb_device *udev,
   * command on a timeout.
   */
  if (timeleft <= 0) {
-  xhci_warn(xhci, "%s while waiting for address device command\n",
-    timeleft == 0 ? "Timeout" : "Signal");
+  xhci_warn(xhci, "%s while waiting for setup %s command\n",
+     timeleft == 0 ? "Timeout" : "Signal", act);
   /* cancel the address device command */
   ret = xhci_cancel_cmd(xhci, NULL, cmd_trb);
   if (ret < 0)
@@ -3804,26 +3805,27 @@ static int xhci_setup_device(struct usb_hcd *hcd, struct usb_device *udev,
  switch (virt_dev->cmd_status) {
  case COMP_CTX_STATE:
  case COMP_EBADSLT:
-  xhci_err(xhci, "Setup ERROR: address device command for slot %d.\n",
-    udev->slot_id);
+  xhci_err(xhci, "Setup ERROR: setup %s command for slot %d.\n",
+    act, udev->slot_id);
   ret = -EINVAL;
   break;
  case COMP_TX_ERR:
-  dev_warn(&udev->dev, "Device not responding to set address.\n");
+  dev_warn(&udev->dev, "Device not responding to setup %s.\n", act);
   ret = -EPROTO;
   break;
  case COMP_DEV_ERR:
-  dev_warn(&udev->dev, "ERROR: Incompatible device for address "
-    "device command.\n");
+  dev_warn(&udev->dev,
+    "ERROR: Incompatible device for setup %s command\n", act);
   ret = -ENODEV;
   break;
  case COMP_SUCCESS:
   xhci_dbg_trace(xhci, trace_xhci_dbg_address,
-    "Successful Address Device command");
+          "Successful setup %s command", act);
   break;
  default:
-  xhci_err(xhci, "ERROR: unexpected command completion "
-    "code 0x%x.\n", virt_dev->cmd_status);
+  xhci_err(xhci,
+    "ERROR: unexpected setup %s command completion code 0x%x.\n",
+    act, virt_dev->cmd_status);
   xhci_dbg(xhci, "Slot ID %d Output Context:\n", udev->slot_id);
   xhci_dbg_ctx(xhci, virt_dev->out_ctx, 2);
   trace_xhci_address_ctx(xhci, virt_dev->out_ctx, 1);
-- 
1.7.1