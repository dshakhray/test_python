From 8079350faef2babf712227074b4c7c38dfb23b24 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 01:46:21 -0400
Subject: [iommu] vt-d: Factor out dmar_alloc_dev_scope() for later reuse

Message-id: <20140905014621.31297.85063.stgit@gir.stowe>
Patchwork-id: 91298
O-Subject: [RHEL7.1 PATCH 05/65] iommu/vt-d: Factor out dmar_alloc_dev_scope() for later reuse
Bugzilla: 1129880 1087643
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1087643
Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1129880
Upstream Status: bb3a6b7845851d23cb826040b4c3c9c294e7cfb4

commit bb3a6b7845851d23cb826040b4c3c9c294e7cfb4
Author: Jiang Liu <jiang.liu@linux.intel.com>
Date:   Wed Feb 19 14:07:24 2014 +0800

    iommu/vt-d: Factor out dmar_alloc_dev_scope() for later reuse

    Factor out function dmar_alloc_dev_scope() from dmar_parse_dev_scope()
    for later reuse.

    Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
    Signed-off-by: Joerg Roedel <joro@8bytes.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/dmar.c b/drivers/iommu/dmar.c
index 06d740a..32089ff 100644
--- a/drivers/iommu/dmar.c
+++ b/drivers/iommu/dmar.c
@@ -117,13 +117,9 @@ static int __init dmar_parse_one_dev_scope(struct acpi_dmar_device_scope *scope,
  return 0;
 }
 
-int __init dmar_parse_dev_scope(void *start, void *end, int *cnt,
-    struct pci_dev ***devices, u16 segment)
+void *dmar_alloc_dev_scope(void *start, void *end, int *cnt)
 {
  struct acpi_dmar_device_scope *scope;
- void * tmp = start;
- int index;
- int ret;
 
  *cnt = 0;
  while (start < end) {
@@ -138,15 +134,24 @@ int __init dmar_parse_dev_scope(void *start, void *end, int *cnt,
   start += scope->length;
  }
  if (*cnt == 0)
-  return 0;
+  return NULL;
+
+ return kcalloc(*cnt, sizeof(struct pci_dev *), GFP_KERNEL);
+}
+
+int __init dmar_parse_dev_scope(void *start, void *end, int *cnt,
+    struct pci_dev ***devices, u16 segment)
+{
+ struct acpi_dmar_device_scope *scope;
+ int index, ret;
 
- *devices = kcalloc(*cnt, sizeof(struct pci_dev *), GFP_KERNEL);
- if (!*devices)
+ *devices = dmar_alloc_dev_scope(start, end, cnt);
+ if (*cnt == 0)
+  return 0;
+ else if (!*devices)
   return -ENOMEM;
 
- start = tmp;
- index = 0;
- while (start < end) {
+ for (index = 0; start < end; start += scope->length) {
   scope = start;
   if (scope->entry_type == ACPI_DMAR_SCOPE_TYPE_ENDPOINT ||
       scope->entry_type == ACPI_DMAR_SCOPE_TYPE_BRIDGE) {
@@ -158,7 +163,6 @@ int __init dmar_parse_dev_scope(void *start, void *end, int *cnt,
    }
    index ++;
   }
-  start += scope->length;
  }
 
  return 0;
diff --git a/include/linux/dmar.h b/include/linux/dmar.h
index eccb0c0..1b08ce8 100644
--- a/include/linux/dmar.h
+++ b/include/linux/dmar.h
@@ -69,6 +69,7 @@ extern int dmar_table_init(void);
 extern int dmar_dev_scope_init(void);
 extern int dmar_parse_dev_scope(void *start, void *end, int *cnt,
     struct pci_dev ***devices, u16 segment);
+extern void *dmar_alloc_dev_scope(void *start, void *end, int *cnt);
 extern void dmar_free_dev_scope(struct pci_dev ***devices, int *cnt);
 
 /* Intel IOMMU detection */
-- 
1.7.1