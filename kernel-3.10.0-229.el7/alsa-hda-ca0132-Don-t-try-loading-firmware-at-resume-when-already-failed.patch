From d3aaf21a32f48300e19a594466d47b87ceb3492f Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <jkysela@redhat.com>
Date: Wed, 3 Sep 2014 07:40:55 -0400
Subject: [alsa] hda/ca0132: Don't try loading firmware at resume when already failed

Message-id: <140972823573-418-patchset-jkysela@redhat.com>
Patchwork-id: 91114
O-Subject: [RHEL 7.1 PATCH 417/442] ALSA: hda/ca0132 - Don't try loading firmware at resume when already failed
Bugzilla: 1112200
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>

CA0132 driver tries to reload the firmware at resume.  Usually this
works since the firmware loader core caches the firmware contents by
itself.  However, if the driver failed to load the firmwares
(e.g. missing files), reloading the firmware at resume goes through
the actual file loading code path, and triggers a kernel WARNING like:

WARNING: CPU: 10 PID:11371 at drivers/base/firmware_class.c:1105 _request_firmware+0x9ab/0x9d0()

For avoiding this situation, this patch makes CA0132 skipping the f/w
loading at resume when it failed at probe time.

Reported-and-tested-by: Janek Kozicki <cosurgi@gmail.com>
Cc: <stable@vger.kernel.org>
Signed-off-by: Takashi Iwai <tiwai@suse.de>

(picked from kernel: e24aa0a4c5ac92a171d9dd74a8d3dbf652990d36)
rhbz#1112200
Signed-off-by: Jaroslav Kysela <jkysela@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/sound/pci/hda/patch_ca0132.c b/sound/pci/hda/patch_ca0132.c
index 4f3aba7..5d8455e 100644
--- a/sound/pci/hda/patch_ca0132.c
+++ b/sound/pci/hda/patch_ca0132.c
@@ -4376,6 +4376,9 @@ static void ca0132_download_dsp(struct hda_codec *codec)
  return; /* NOP */
 #endif
 
+ if (spec->dsp_state == DSP_DOWNLOAD_FAILED)
+  return; /* don't retry failures */
+
  chipio_enable_clocks(codec);
  spec->dsp_state = DSP_DOWNLOADING;
  if (!ca0132_download_dsp_images(codec))
@@ -4552,7 +4555,8 @@ static int ca0132_init(struct hda_codec *codec)
  struct auto_pin_cfg *cfg = &spec->autocfg;
  int i;
 
- spec->dsp_state = DSP_DOWNLOAD_INIT;
+ if (spec->dsp_state != DSP_DOWNLOAD_FAILED)
+  spec->dsp_state = DSP_DOWNLOAD_INIT;
  spec->curr_chip_addx = INVALID_CHIP_ADDRESS;
 
  snd_hda_power_up(codec);
@@ -4663,6 +4667,7 @@ static int patch_ca0132(struct hda_codec *codec)
  codec->spec = spec;
  spec->codec = codec;
 
+ spec->dsp_state = DSP_DOWNLOAD_INIT;
  spec->num_mixers = 1;
  spec->mixers[0] = ca0132_mixer;
 
-- 
1.7.1