From 5bed92c76c17785cf39eb3bbbf8b136f81357b63 Mon Sep 17 00:00:00 2001
From: Jeff Moyer <jmoyer@redhat.com>
Date: Fri, 10 Oct 2014 21:03:24 -0400
Subject: [block] blk-mq: fix potential oops on out-of-memory in __blk_mq_alloc_rq_maps()

Message-id: <1412975015-5370-24-git-send-email-jmoyer@redhat.com>
Patchwork-id: 97458
O-Subject: [RHEL7 PATCH 23/34] blk-mq: fix potential oops on out-of-memory in __blk_mq_alloc_rq_maps()
Bugzilla: 1146660
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Mike Snitzer <snitzer@redhat.com>

This is a backport of the following commit.  This resolves bug
1146660.

  commit 6b55e1f2d0a5e462e52678278ab749468f1db81c
  Author: Jens Axboe <axboe@fb.com>
  Date:   Fri Sep 19 08:04:53 2014 -0600

    blk-mq: fix potential oops on out-of-memory in __blk_mq_alloc_rq_maps()

    __blk_mq_alloc_rq_maps() can be invoked multiple times, if we scale
    back the queue depth if we are low on memory. So don't clear
    set->tags when we fail, this is handled directly in
    the parent function, blk_mq_alloc_tag_set().

    Reported-by: Robert Elliott  <Elliott@hp.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>

Signed-off-by: Jeff Moyer <jmoyer@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/block/blk-mq.c b/block/blk-mq.c
index 149efb8..a0186c7 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -1962,7 +1962,6 @@ out_unwind:
  while (--i >= 0)
   blk_mq_free_rq_map(set, set->tags[i], i);
 
- set->tags = NULL;
  return -ENOMEM;
 }
 
-- 
1.7.1