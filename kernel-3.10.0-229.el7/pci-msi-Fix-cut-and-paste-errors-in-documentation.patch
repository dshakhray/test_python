From 9a1dba0c6865471aa655e2a07944d07e9407da56 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Sat, 19 Jul 2014 04:30:36 -0400
Subject: [pci] msi: Fix cut-and-paste errors in documentation

Message-id: <20140719043036.19438.85638.stgit@gir.stowe>
Patchwork-id: 86037
O-Subject: [RHEL7.1 PATCH 75/81] PCI/MSI: Fix cut-and-paste errors in documentation
Bugzilla: 1110895
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110895
Upstream Status: 13f9653dab9a5d350a560c435a0f3d90ff7905ef

commit 13f9653dab9a5d350a560c435a0f3d90ff7905ef
Author: Alexander Gordeev <agordeev@redhat.com>
Date:   Thu Feb 13 10:47:56 2014 -0700

    PCI/MSI: Fix cut-and-paste errors in documentation

    Function pci_enable_msi_range() is used in examples where
    pci_enable_msix_range() should have been used instead.

    Reported-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Alexander Gordeev <agordeev@redhat.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/Documentation/PCI/MSI-HOWTO.txt b/Documentation/PCI/MSI-HOWTO.txt
index 3c3080e..96ee5eb 100644
--- a/Documentation/PCI/MSI-HOWTO.txt
+++ b/Documentation/PCI/MSI-HOWTO.txt
@@ -274,8 +274,8 @@ possible, likely up to the limit returned by pci_msix_vec_count() function:
 
 static int foo_driver_enable_msix(struct foo_adapter *adapter, int nvec)
 {
- return pci_enable_msi_range(adapter->pdev, adapter->msix_entries,
-        1, nvec);
+ return pci_enable_msix_range(adapter->pdev, adapter->msix_entries,
+         1, nvec);
 }
 
 Note the value of 'minvec' parameter is 1.  As 'minvec' is inclusive,
@@ -286,8 +286,8 @@ In this case the function could look like this:
 
 static int foo_driver_enable_msix(struct foo_adapter *adapter, int nvec)
 {
- return pci_enable_msi_range(adapter->pdev, adapter->msix_entries,
-        FOO_DRIVER_MINIMUM_NVEC, nvec);
+ return pci_enable_msix_range(adapter->pdev, adapter->msix_entries,
+         FOO_DRIVER_MINIMUM_NVEC, nvec);
 }
 
 4.3.1.2 Exact number of MSI-X interrupts
@@ -299,8 +299,8 @@ parameters:
 
 static int foo_driver_enable_msix(struct foo_adapter *adapter, int nvec)
 {
- return pci_enable_msi_range(adapter->pdev, adapter->msix_entries,
-        nvec, nvec);
+ return pci_enable_msix_range(adapter->pdev, adapter->msix_entries,
+         nvec, nvec);
 }
 
 4.3.1.3 Specific requirements to the number of MSI-X interrupts
-- 
1.7.1