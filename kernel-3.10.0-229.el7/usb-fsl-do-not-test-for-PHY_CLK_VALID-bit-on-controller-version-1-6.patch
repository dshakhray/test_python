From b9b849c829a6bc58ff6b6cab0a7ea0a6ef4b172e Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:07:50 -0400
Subject: [usb] fsl: do not test for PHY_CLK_VALID bit on controller version 1.6

Message-id: <1410887463-20674-399-git-send-email-dzickus@redhat.com>
Patchwork-id: 95337
O-Subject: [RHEL7 PATCH 398/591] fsl-usb: do not test for PHY_CLK_VALID bit on controller version 1.6
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit d183c81929beeba842b74422f754446ef2b8b49c
Author: Nikita Yushchenko <nyushchenko@dev.rtsoft.ru>
Date:   Mon Apr 28 19:23:44 2014 +0400

    fsl-usb: do not test for PHY_CLK_VALID bit on controller version 1.6

    Per reference manuals of Freescale P1020 and P2020 SoCs, USB controller
    present in these SoCs has bit 17 of USBx_CONTROL register marked as
    Reserved - there is no PHY_CLK_VALID bit there.

    Testing for this bit in ehci_fsl_setup_phy() behaves differently on two
    P1020RDB boards available here - on one board test passes and fsl-usb
    init succeeds, but on other board test fails, causing fsl-usb init to
    fail.

    This patch changes ehci_fsl_setup_phy() not to test PHY_CLK_VALID on
    controller version 1.6 that (per manual) does not have this bit.

    Signed-off-by: Nikita Yushchenko <nyushchenko@dev.rtsoft.ru>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/host/ehci-fsl.c b/drivers/usb/host/ehci-fsl.c
index 0475960..1d86612 100644
--- a/drivers/usb/host/ehci-fsl.c
+++ b/drivers/usb/host/ehci-fsl.c
@@ -261,7 +261,8 @@ static int ehci_fsl_setup_phy(struct usb_hcd *hcd,
   break;
  }
 
- if (pdata->have_sysif_regs && pdata->controller_ver &&
+ if (pdata->have_sysif_regs &&
+     pdata->controller_ver > FSL_USB_VER_1_6 &&
      (phy_mode == FSL_USB2_PHY_ULPI)) {
   /* check PHY_CLK_VALID to get phy clk valid */
   if (!spin_event_timeout(in_be32(non_ehci + FSL_SOC_USB_CTRL) &
-- 
1.7.1