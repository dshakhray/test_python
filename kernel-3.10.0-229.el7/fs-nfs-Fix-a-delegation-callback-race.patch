From 88c5907a422f19fb84ad3e8bd157c329ec502505 Mon Sep 17 00:00:00 2001
From: Steve Dickson <SteveD@redhat.com>
Date: Thu, 26 Jun 2014 15:33:08 -0400
Subject: [fs] nfs: Fix a delegation callback race

Message-id: <1403796815-28580-3-git-send-email-steved@redhat.com>
Patchwork-id: 84852
O-Subject: [RHEL7.1 PATCH 02/29] NFS: Fix a delegation callback race
Bugzilla: 1111170
RH-Acked-by: J. Bruce Fields <bfields@redhat.com>

From: Trond Myklebust <trond.myklebust@primarydata.com>

The clean-up in commit 36281caa839f ended up removing a NULL pointer check
that is needed in order to prevent an Oops in
nfs_async_inode_return_delegation().

Reported-by: "Yan, Zheng" <zheng.z.yan@intel.com>
Link: http://lkml.kernel.org/r/5313E9F6.2020405@intel.com
Fixes: 36281caa839f (NFSv4: Further clean-ups of delegation stateid validation)
Cc: stable@vger.kernel.org # 3.4+
Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
Upstream Id: 755a48a7a4eb05b9c8424e3017d947b2961a60e0
Bugzilla: 1111170
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfs/delegation.c b/fs/nfs/delegation.c
index ef792f2..5d8ccec 100644
--- a/fs/nfs/delegation.c
+++ b/fs/nfs/delegation.c
@@ -659,16 +659,19 @@ int nfs_async_inode_return_delegation(struct inode *inode,
 
  rcu_read_lock();
  delegation = rcu_dereference(NFS_I(inode)->delegation);
+ if (delegation == NULL)
+  goto out_enoent;
 
- if (!clp->cl_mvops->match_stateid(&delegation->stateid, stateid)) {
-  rcu_read_unlock();
-  return -ENOENT;
- }
+ if (!clp->cl_mvops->match_stateid(&delegation->stateid, stateid))
+  goto out_enoent;
  nfs_mark_return_delegation(server, delegation);
  rcu_read_unlock();
 
  nfs_delegation_run_state_manager(clp);
  return 0;
+out_enoent:
+ rcu_read_unlock();
+ return -ENOENT;
 }
 
 static struct inode *
-- 
1.7.1