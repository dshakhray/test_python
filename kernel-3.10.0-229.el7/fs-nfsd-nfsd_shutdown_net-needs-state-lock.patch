From ad0d54c66e8bd48ce9e4ba44f57c36c5ca44fb5b Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Mon, 23 Jun 2014 21:49:14 -0400
Subject: [fs] nfsd: nfsd_shutdown_net needs state lock

Message-id: <1403560314-32525-13-git-send-email-bfields@redhat.com>
Patchwork-id: 84465
O-Subject: [Patch RHEL7 012/172] nfsd4: nfsd_shutdown_net needs state lock
Bugzilla: 1111719
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

A comment claims the caller should take it, but that's not being done.
Note we don't want it around the cancel_delayed_work_sync since that may
wait on work which holds the client lock.

Reported-by: Benny Halevy <bhalevy@primarydata.com>
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: e50a26dc785f12a6df1f1ac16d62faf0342b72af
Bugzilla: 1111719
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4state.c b/fs/nfsd/nfs4state.c
index 4a11208..299772a 100644
--- a/fs/nfsd/nfs4state.c
+++ b/fs/nfsd/nfs4state.c
@@ -5127,7 +5127,6 @@ out_recovery:
  return ret;
 }
 
-/* should be called with the state lock held */
 void
 nfs4_state_shutdown_net(struct net *net)
 {
@@ -5138,6 +5137,7 @@ nfs4_state_shutdown_net(struct net *net)
  cancel_delayed_work_sync(&nn->laundromat_work);
  locks_end_grace(&nn->nfsd4_manager);
 
+ nfs4_lock_state();
  INIT_LIST_HEAD(&reaplist);
  spin_lock(&recall_lock);
  list_for_each_safe(pos, next, &nn->del_recall_lru) {
@@ -5152,6 +5152,7 @@ nfs4_state_shutdown_net(struct net *net)
 
  nfsd4_client_tracking_exit(net);
  nfs4_state_destroy_net(net);
+ nfs4_unlock_state();
 }
 
 void
-- 
1.7.1