From 0e8a7d7d37d0aa6346966cb3b1d8f1d355a77ec9 Mon Sep 17 00:00:00 2001
From: Vivek Goyal <vgoyal@redhat.com>
Date: Fri, 5 Sep 2014 18:55:53 -0400
Subject: [kernel] kexec: rename unusebale_pages to unusable_pages

Message-id: <1409943373-12669-19-git-send-email-vgoyal@redhat.com>
Patchwork-id: 91523
O-Subject: [RHEL7.1 PATCH 18/38] kexec: rename unusebale_pages to unusable_pages
Bugzilla: 852066
RH-Acked-by: Dave Anderson <anderson@redhat.com>
RH-Acked-by: Baoquan He <bhe@redhat.com>
RH-Acked-by: Dave Young <dyoung@redhat.com>
RH-Acked-by: Chao WANG <chaowang@redhat.com>

BZ:852066

commit 7d3e2bca22feb1f4a624009ff6c15e6f724cb4e7
Author: Vivek Goyal <vgoyal@redhat.com>
Date: Fri, 8 Aug 2014 14:25:43 -0700

Let's use the more common "unusable".

This patch was originally written and posted by Boris. I am including it
in this patch series.

Signed-off-by: Borislav Petkov <bp@suse.de>
Signed-off-by: Vivek Goyal <vgoyal@redhat.com>
Cc: Borislav Petkov <bp@suse.de>
Cc: Michael Kerrisk <mtk.manpages@gmail.com>
Cc: Yinghai Lu <yinghai@kernel.org>
Cc: Eric Biederman <ebiederm@xmission.com>
Cc: H. Peter Anvin <hpa@zytor.com>
Cc: Matthew Garrett <mjg59@srcf.ucam.org>
Cc: Greg Kroah-Hartman <greg@kroah.com>
Cc: Dave Young <dyoung@redhat.com>
Cc: WANG Chao <chaowang@redhat.com>
Cc: Baoquan He <bhe@redhat.com>
Cc: Andy Lutomirski <luto@amacapital.net>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/linux/kexec.h b/include/linux/kexec.h
index a756419..d9bb0a5 100644
--- a/include/linux/kexec.h
+++ b/include/linux/kexec.h
@@ -100,7 +100,7 @@ struct kimage {
 
  struct list_head control_pages;
  struct list_head dest_pages;
- struct list_head unuseable_pages;
+ struct list_head unusable_pages;
 
  /* Address of next control page to allocate for crash kernels. */
  unsigned long control_page;
diff --git a/kernel/kexec.c b/kernel/kexec.c
index 1b611bc..c2c68e2 100644
--- a/kernel/kexec.c
+++ b/kernel/kexec.c
@@ -155,7 +155,7 @@ static int do_kimage_alloc(struct kimage **rimage, unsigned long entry,
  INIT_LIST_HEAD(&image->dest_pages);
 
  /* Initialize the list of unusable pages */
- INIT_LIST_HEAD(&image->unuseable_pages);
+ INIT_LIST_HEAD(&image->unusable_pages);
 
  /* Read in the segments */
  image->nr_segments = nr_segments;
@@ -610,7 +610,7 @@ static void kimage_free_extra_pages(struct kimage *image)
  kimage_free_page_list(&image->dest_pages);
 
  /* Walk through and free any unusable pages I have cached */
- kimage_free_page_list(&image->unuseable_pages);
+ kimage_free_page_list(&image->unusable_pages);
 
 }
 static void kimage_terminate(struct kimage *image)
@@ -733,7 +733,7 @@ static struct page *kimage_alloc_page(struct kimage *image,
   /* If the page cannot be used file it away */
   if (page_to_pfn(page) >
     (KEXEC_SOURCE_MEMORY_LIMIT >> PAGE_SHIFT)) {
-   list_add(&page->lru, &image->unuseable_pages);
+   list_add(&page->lru, &image->unusable_pages);
    continue;
   }
   addr = page_to_pfn(page) << PAGE_SHIFT;
-- 
1.7.1