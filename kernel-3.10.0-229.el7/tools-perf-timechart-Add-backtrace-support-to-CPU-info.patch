From 95b077ffc11d2ec9610f695bd78b2fd4dc59e3b0 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:50:47 -0400
Subject: [tools] perf/timechart: Add backtrace support to CPU info

Message-id: <1408953210-26343-160-git-send-email-jolsa@redhat.com>
Patchwork-id: 88869
O-Subject: [PATCH RHEL7.1 BZ1133083 159/322] perf timechart: Add backtrace support to CPU info
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 8b6dcca017aa53fe13066411a653b5997c158a2c
Author: Stanislav Fomichev <stfomichev@yandex-team.ru>
Date: Mon Dec 2 18:37:33 2013 +0400

description
===========
Add backtrace info to the CPU usage timechart.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/builtin-timechart.c b/tools/perf/builtin-timechart.c
index 0bda620..d955095 100644
--- a/tools/perf/builtin-timechart.c
+++ b/tools/perf/builtin-timechart.c
@@ -837,8 +837,14 @@ static void draw_cpu_usage(struct timechart *tchart)
   while (c) {
    sample = c->samples;
    while (sample) {
-    if (sample->type == TYPE_RUNNING)
-     svg_process(sample->cpu, sample->start_time, sample->end_time, "sample", c->comm);
+    if (sample->type == TYPE_RUNNING) {
+     svg_process(sample->cpu,
+          sample->start_time,
+          sample->end_time,
+          "sample",
+          c->comm,
+          sample->backtrace);
+    }
 
     sample = sample->next;
    }
diff --git a/tools/perf/util/svghelper.c b/tools/perf/util/svghelper.c
index 8b79d3a..740f032 100644
--- a/tools/perf/util/svghelper.c
+++ b/tools/perf/util/svghelper.c
@@ -285,7 +285,7 @@ void svg_cpu_box(int cpu, u64 __max_freq, u64 __turbo_freq)
  fprintf(svgfile, "</g>\n");
 }
 
-void svg_process(int cpu, u64 start, u64 end, const char *type, const char *name)
+void svg_process(int cpu, u64 start, u64 end, const char *type, const char *name, const char *backtrace)
 {
  double width;
 
@@ -295,6 +295,8 @@ void svg_process(int cpu, u64 start, u64 end, const char *type, const char *name
 
  fprintf(svgfile, "<g transform=\"translate(%4.8f,%4.8f)\">\n", time2pixels(start), cpu2y(cpu));
  fprintf(svgfile, "<title>%s %s</title>\n", name, time_to_string(end - start));
+ if (backtrace)
+  fprintf(svgfile, "<desc>Switched because:\n%s</desc>\n", backtrace);
  fprintf(svgfile, "<rect x=\"0\" width=\"%4.8f\" y=\"0\" height=\"%4.1f\" class=\"%s\"/>\n",
   time2pixels(end)-time2pixels(start), SLOT_MULT+SLOT_HEIGHT, type);
  width = time2pixels(end)-time2pixels(start);
diff --git a/tools/perf/util/svghelper.h b/tools/perf/util/svghelper.h
index fad79ce..7db6ae9 100644
--- a/tools/perf/util/svghelper.h
+++ b/tools/perf/util/svghelper.h
@@ -11,7 +11,7 @@ extern void svg_waiting(int Yslot, int cpu, u64 start, u64 end, const char *back
 extern void svg_cpu_box(int cpu, u64 max_frequency, u64 turbo_frequency);
 
 
-extern void svg_process(int cpu, u64 start, u64 end, const char *type, const char *name);
+extern void svg_process(int cpu, u64 start, u64 end, const char *type, const char *name, const char *backtrace);
 extern void svg_cstate(int cpu, u64 start, u64 end, int type);
 extern void svg_pstate(int cpu, u64 start, u64 end, u64 freq);
 
-- 
1.7.1