From 1d8fd8df43760957204a74106c8e536fb397e849 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Fri, 13 Jun 2014 14:35:07 -0400
Subject: [block] only calculate part_in_flight() once

Message-id: <1402670238-13916-20-git-send-email-snitzer@redhat.com>
Patchwork-id: 83771
O-Subject: [RHEL7.1 PATCH 019/150] block: only calculate part_in_flight() once
Bugzilla: 1105204
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Jeff Moyer <jmoyer@redhat.com>

BZ: 1105204

Upstream commit 7276d02e241dc3595d4a18ac2456fa449e448de7
Author: Jens Axboe <axboe@fb.com>
Date:   Fri May 9 15:48:23 2014 -0600

    block: only calculate part_in_flight() once

    We first check if we have inflight IO, then retrieve that
    same number again. Usually this isn't that costly since the
    chance of having the data dirtied in between is small, but
    there's no reason for calling part_in_flight() twice.

    Signed-off-by: Jens Axboe <axboe@fb.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/block/blk-core.c b/block/blk-core.c
index bb24d74..d9d9afc 100644
--- a/block/blk-core.c
+++ b/block/blk-core.c
@@ -1230,12 +1230,15 @@ static void add_acct_request(struct request_queue *q, struct request *rq,
 static void part_round_stats_single(int cpu, struct hd_struct *part,
         unsigned long now)
 {
+ int inflight;
+
  if (now == part->stamp)
   return;
 
- if (part_in_flight(part)) {
+ inflight = part_in_flight(part);
+ if (inflight) {
   __part_stat_add(cpu, part, time_in_queue,
-    part_in_flight(part) * (now - part->stamp));
+    inflight * (now - part->stamp));
   __part_stat_add(cpu, part, io_ticks, (now - part->stamp));
  }
  part->stamp = now;
-- 
1.7.1