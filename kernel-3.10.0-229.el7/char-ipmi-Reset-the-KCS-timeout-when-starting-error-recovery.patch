From 6d08cecee62bc248f04d75977b6d26d7d44921c8 Mon Sep 17 00:00:00 2001
From: Tony Camuso <tcamuso@redhat.com>
Date: Fri, 8 Aug 2014 18:14:45 -0400
Subject: [char] ipmi: Reset the KCS timeout when starting error recovery

Message-id: <1407521687-4858-12-git-send-email-tcamuso@redhat.com>
Patchwork-id: 87550
O-Subject: [RHEL7.1 PATCH 11/13] ipmi: Reset the KCS timeout when starting error recovery
Bugzilla: 1111214
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1111214

Cherry-picked without conflicts from the following upstream commit.

commit eb6d78ec213e6938559b801421d64714dafcf4b2
Author: Corey Minyard <cminyard@mvista.com>
Date:   Mon Apr 14 09:46:52 2014 -0500

    ipmi: Reset the KCS timeout when starting error recovery

    The OBF timer in KCS was not reset in one situation when error recovery
    was started, resulting in an immediate timeout.

    Reported-by: Bodo Stroesser <bstroesser@ts.fujitsu.com>
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Signed-off-by: Tony Camuso <tcamuso@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/char/ipmi/ipmi_kcs_sm.c b/drivers/char/ipmi/ipmi_kcs_sm.c
index 6a4bdc1..8c25f59 100644
--- a/drivers/char/ipmi/ipmi_kcs_sm.c
+++ b/drivers/char/ipmi/ipmi_kcs_sm.c
@@ -251,8 +251,9 @@ static inline int check_obf(struct si_sm_data *kcs, unsigned char status,
  if (!GET_STATUS_OBF(status)) {
   kcs->obf_timeout -= time;
   if (kcs->obf_timeout < 0) {
-      start_error_recovery(kcs, "OBF not ready in time");
-      return 1;
+   kcs->obf_timeout = OBF_RETRY_TIMEOUT;
+   start_error_recovery(kcs, "OBF not ready in time");
+   return 1;
   }
   return 0;
  }
-- 
1.7.1