From 6a03f8f848789f16f781a3d831cb4ebcee0627fe Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:12:24 -0400
Subject: [powerpc] powernv: Implement ppc_md.get_proc_freq()

Message-id: <1410545655-205645-516-git-send-email-dzickus@redhat.com>
Patchwork-id: 94465
O-Subject: [RHEL7 PATCH 515/626] powerpc: powernv: Implement ppc_md.get_proc_freq()
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit fb5153d05a7dd42b9bb9855985dd9a99a09fbd80
Author: Gautham R. Shenoy <ego@linux.vnet.ibm.com>
Date:   Tue Mar 11 17:01:19 2014 +0530

    powerpc: powernv: Implement ppc_md.get_proc_freq()

    Implement a method named pnv_get_proc_freq(unsigned int cpu) which
    returns the current clock rate on the 'cpu' in Hz to be reported in
    /proc/cpuinfo. This method uses the value reported by cpufreq when
    such a value is sane. Otherwise it falls back to old way of reporting
    the clockrate, i.e. ppc_proc_freq.

    Set the ppc_md.get_proc_freq() hook to pnv_get_proc_freq() on the
    PowerNV platform.

    Signed-off-by: Gautham R. Shenoy <ego@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/platforms/powernv/setup.c b/arch/powerpc/platforms/powernv/setup.c
index 05d63aa..865aab4 100644
--- a/arch/powerpc/platforms/powernv/setup.c
+++ b/arch/powerpc/platforms/powernv/setup.c
@@ -27,6 +27,7 @@
 #include <linux/interrupt.h>
 #include <linux/bug.h>
 #include <linux/pci.h>
+#include <linux/cpufreq.h>
 
 #include <asm/machdep.h>
 #include <asm/firmware.h>
@@ -290,6 +291,25 @@ static int __init pnv_probe(void)
  return 1;
 }
 
+/*
+ * Returns the cpu frequency for 'cpu' in Hz. This is used by
+ * /proc/cpuinfo
+ */
+unsigned long pnv_get_proc_freq(unsigned int cpu)
+{
+ unsigned long ret_freq;
+
+ ret_freq = cpufreq_quick_get(cpu) * 1000ul;
+
+ /*
+  * If the backend cpufreq driver does not exist,
+         * then fallback to old way of reporting the clockrate.
+  */
+ if (!ret_freq)
+  ret_freq = ppc_proc_freq;
+ return ret_freq;
+}
+
 define_machine(powernv) {
  .name   = "PowerNV",
  .probe   = pnv_probe,
@@ -297,6 +317,7 @@ define_machine(powernv) {
  .setup_arch  = pnv_setup_arch,
  .init_IRQ  = pnv_init_IRQ,
  .show_cpuinfo  = pnv_show_cpuinfo,
+ .get_proc_freq          = pnv_get_proc_freq,
  .progress  = pnv_progress,
  .machine_shutdown = pnv_shutdown,
  .power_save             = power7_idle,
-- 
1.7.1