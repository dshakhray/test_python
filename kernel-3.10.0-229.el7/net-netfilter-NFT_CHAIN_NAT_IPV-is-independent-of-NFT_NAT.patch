From eea64b7fd4013e837dc144b175de7ff29f753d49 Mon Sep 17 00:00:00 2001
From: Marcelo Leitner <mleitner@redhat.com>
Date: Tue, 21 Oct 2014 16:21:16 -0400
Subject: [net] netfilter: NFT_CHAIN_NAT_IPV* is independent of NFT_NAT

Message-id: <20141021162116.22888.41693.stgit@localhost.localdomain>
Patchwork-id: 98016
O-Subject: [RHEL7 net PATCH 119/124] netfilter: NFT_CHAIN_NAT_IPV* is independent of NFT_NAT
Bugzilla: 1148041 1155088
RH-Acked-by: Florian Westphal <fwestpha@redhat.com>

Backport of upstream commit: 3e8dc212a0e68a9a90c97f34a92c4cdd97d19dd3

 commit 3e8dc212a0e68a9a90c97f34a92c4cdd97d19dd3
 Author: Pablo Neira Ayuso <pablo@netfilter.org>
 Date:   Thu Sep 11 17:42:00 2014 +0200

    netfilter: NFT_CHAIN_NAT_IPV* is independent of NFT_NAT

    Now that we have masquerading support in nf_tables, the NAT chain can
    be use with it, not only for SNAT/DNAT. So make this chain type
    independent of it.

    While at it, move it inside the scope of 'if NF_NAT_IPV*' to simplify
    dependencies.

    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

Signed-off-by: Marcelo Ricardo Leitner <mleitner@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ipv4/netfilter/Kconfig b/net/ipv4/netfilter/Kconfig
index 1857538..b4e2e60 100644
--- a/net/ipv4/netfilter/Kconfig
+++ b/net/ipv4/netfilter/Kconfig
@@ -56,16 +56,6 @@ config NFT_CHAIN_ROUTE_IPV4
    fields such as the source, destination, type of service and
    the packet mark.
 
-config NFT_CHAIN_NAT_IPV4
- depends on NF_TABLES_IPV4
- depends on NF_NAT_IPV4 && NFT_NAT
- tristate "IPv4 nf_tables nat chain support"
- help
-   This option enables the "nat" chain for IPv4 in nf_tables. This
-   chain type is used to perform Network Address Translation (NAT)
-   packet transformations such as the source, destination address and
-   source and destination ports.
-
 config NFT_REJECT_IPV4
  depends on NF_TABLES_IPV4
  default NFT_REJECT
@@ -89,6 +79,15 @@ config NF_NAT_IPV4
 
 if NF_NAT_IPV4
 
+config NFT_CHAIN_NAT_IPV4
+ depends on NF_TABLES_IPV4
+ tristate "IPv4 nf_tables nat chain support"
+ help
+   This option enables the "nat" chain for IPv4 in nf_tables. This
+   chain type is used to perform Network Address Translation (NAT)
+   packet transformations such as the source, destination address and
+   source and destination ports.
+
 config NF_NAT_SNMP_BASIC
  tristate "Basic SNMP-ALG support"
  depends on NF_CONNTRACK_SNMP
diff --git a/net/ipv6/netfilter/Kconfig b/net/ipv6/netfilter/Kconfig
index d8fbbaf..8578ef8 100644
--- a/net/ipv6/netfilter/Kconfig
+++ b/net/ipv6/netfilter/Kconfig
@@ -40,16 +40,6 @@ config NFT_CHAIN_ROUTE_IPV6
    fields such as the source, destination, flowlabel, hop-limit and
    the packet mark.
 
-config NFT_CHAIN_NAT_IPV6
- depends on NF_TABLES_IPV6
- depends on NF_NAT_IPV6 && NFT_NAT
- tristate "IPv6 nf_tables nat chain support"
- help
-   This option enables the "nat" chain for IPv6 in nf_tables. This
-   chain type is used to perform Network Address Translation (NAT)
-   packet transformations such as the source, destination address and
-   source and destination ports.
-
 config NFT_REJECT_IPV6
  depends on NF_TABLES_IPV6
  default NFT_REJECT
@@ -70,6 +60,19 @@ config NF_NAT_IPV6
    forms of full Network Address Port Translation. This can be
    controlled by iptables or nft.
 
+if NF_NAT_IPV6
+
+config NFT_CHAIN_NAT_IPV6
+ depends on NF_TABLES_IPV6
+ tristate "IPv6 nf_tables nat chain support"
+ help
+   This option enables the "nat" chain for IPv6 in nf_tables. This
+   chain type is used to perform Network Address Translation (NAT)
+   packet transformations such as the source, destination address and
+   source and destination ports.
+
+endif # NF_NAT_IPV6
+
 config IP6_NF_IPTABLES
  tristate "IP6 tables support (required for filtering)"
  depends on INET && IPV6
-- 
1.7.1