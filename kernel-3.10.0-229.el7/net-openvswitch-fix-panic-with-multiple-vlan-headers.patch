From 03a12d40308e82dbeb275890f74773fb3c8b8cda Mon Sep 17 00:00:00 2001
From: Jiri Benc <jbenc@redhat.com>
Date: Mon, 25 Aug 2014 14:37:01 -0400
Subject: [net] openvswitch: fix panic with multiple vlan headers

Message-id: <dbd9e03ed8302aae77adc753bff36306135e2ce1.1408977415.git.jbenc@redhat.com>
Patchwork-id: 89046
O-Subject: [RHEL7.1 net PATCH] openvswitch: fix panic with multiple vlan headers
Bugzilla: 1133109
RH-Acked-by: Daniel Borkmann <dborkman@redhat.com>
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: Florian Westphal <fwestpha@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Vlad Yasevich <vyasevic@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1133109
Brew: http://brewweb.devel.redhat.com/brew/taskinfo?taskID=7874193
Tested: only on RHEL6, see bz#1122405

commit 2ba5af42a7b59ef01f9081234d8855140738defd
Author: Jiri Benc <jbenc@redhat.com>
Date:   Thu Aug 21 21:33:44 2014 +0200

    openvswitch: fix panic with multiple vlan headers

    When there are multiple vlan headers present in a received frame, the first
    one is put into vlan_tci and protocol is set to ETH_P_8021Q. Anything in the
    skb beyond the VLAN TPID may be still non-linear, including the inner TCI
    and ethertype. While ovs_flow_extract takes care of IP and IPv6 headers, it
    does nothing with ETH_P_8021Q. Later, if OVS_ACTION_ATTR_POP_VLAN is
    executed, __pop_vlan_tci pulls the next vlan header into vlan_tci.

    This leads to two things:

    1. Part of the resulting ethernet header is in the non-linear part of the
       skb. When eth_type_trans is called later as the result of
       OVS_ACTION_ATTR_OUTPUT, kernel BUGs in __skb_pull. Also, __pop_vlan_tci
       is in fact accessing random data when it reads past the TPID.

    2. network_header points into the ethernet header instead of behind it.
       mac_len is set to a wrong value (10), too.

    Reported-by: Yulong Pei <ypei@redhat.com>
    Signed-off-by: Jiri Benc <jbenc@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/openvswitch/actions.c b/net/openvswitch/actions.c
index 716b7ee..abe1ac2 100644
--- a/net/openvswitch/actions.c
+++ b/net/openvswitch/actions.c
@@ -42,6 +42,9 @@ static int do_execute_actions(struct datapath *dp, struct sk_buff *skb,
 
 static int make_writable(struct sk_buff *skb, int write_len)
 {
+ if (!pskb_may_pull(skb, write_len))
+  return -ENOMEM;
+
  if (!skb_cloned(skb) || skb_clone_writable(skb, write_len))
   return 0;
 
@@ -70,6 +73,8 @@ static int __pop_vlan_tci(struct sk_buff *skb, __be16 *current_tci)
 
  vlan_set_encap_proto(skb, vhdr);
  skb->mac_header += VLAN_HLEN;
+ if (skb_network_offset(skb) < ETH_HLEN)
+  skb_set_network_header(skb, ETH_HLEN);
  skb_reset_mac_len(skb);
 
  return 0;
-- 
1.7.1