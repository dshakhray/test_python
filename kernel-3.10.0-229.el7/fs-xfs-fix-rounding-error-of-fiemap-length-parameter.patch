From bd2551c74698ec1981f9bc9673aca11aad07c9fc Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Thu, 9 Oct 2014 21:00:27 -0400
Subject: [fs] xfs: fix rounding error of fiemap length parameter

Message-id: <1412888441-4181-34-git-send-email-sandeen@redhat.com>
Patchwork-id: 97311
O-Subject: [RHEL7.1 PATCH 33/47] [fs] xfs: fix rounding error of fiemap length parameter
Bugzilla: 1145837
RH-Acked-by: Brian Foster <bfoster@redhat.com>
RH-Acked-by: Dave Chinner <dchinner@redhat.com>

Bugzilla: 1145837
Upstream Status: Committed upstream
Build Info: https://brewweb.devel.redhat.com/taskinfo?taskID=8082426
Tested: locally using xfstests

Thanks,
-Eric

    commit eedf32bfcace7d8e20cc66757d74fc68f3439ff7
    Author: Brian Foster <bfoster@redhat.com>
    Date:   Mon Aug 4 11:35:35 2014 +1000

    xfs: fix rounding error of fiemap length parameter

    The offset and length parameters are converted from bytes to basic
    blocks by xfs_vn_fiemap(). The BTOBB() converter rounds the value up to
    the nearest basic block. This leads to unexpected behavior when
    unaligned offsets are provided to FIEMAP.

    Fix the conversions of byte values to block values to cover the provided
    offsets. Round down the start offset to the nearest basic block.
    Calculate the end offset based on the provided values, round up and
    calculate length based on the start block offset.

    Reported-by: Chandan Rajendra <chandan@linux.vnet.ibm.com>
    Signed-off-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Dave Chinner <dchinner@redhat.com>
    Signed-off-by: Dave Chinner <david@fromorbit.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/xfs/xfs_iops.c b/fs/xfs/xfs_iops.c
index a713fca..e0bbc95 100644
--- a/fs/xfs/xfs_iops.c
+++ b/fs/xfs/xfs_iops.c
@@ -1030,12 +1030,12 @@ xfs_vn_fiemap(
   return error;
 
  /* Set up bmap header for xfs internal routine */
- bm.bmv_offset = BTOBB(start);
+ bm.bmv_offset = BTOBBT(start);
  /* Special case for whole file */
  if (length == FIEMAP_MAX_OFFSET)
   bm.bmv_length = -1LL;
  else
-  bm.bmv_length = BTOBB(length);
+  bm.bmv_length = BTOBB(start + length) - bm.bmv_offset;
 
  /* We add one because in getbmap world count includes the header */
  bm.bmv_count = !fieinfo->fi_extents_max ? MAXEXTNUM :
-- 
1.7.1