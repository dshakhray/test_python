From 85cce7f1f1d31b8fea331ffdaa5c95e088b4d876 Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 23 Oct 2014 09:54:43 -0400
Subject: [fs] jbd2: minimize region locked by j_list_lock in jbd2_journal_forget()

Message-id: <1414058125-4183-130-git-send-email-lczerner@redhat.com>
Patchwork-id: 98169
O-Subject: [RHEL 7.1 PATCH v2 129/171] jbd2: minimize region locked by j_list_lock in jbd2_journal_forget()
Bugzilla: 1150139
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Theodore Ts'o <tytso@mit.edu>

BZ 1150139
https://bugzilla.redhat.com/show_bug.cgi?id=1150139

BREW 8142710
https://brewweb.devel.redhat.com/taskinfo?taskID=8142710

Upstream commit 0bfea8118d8e4f6aeb476511350d649e8dcb0ce8

 It's not needed until we start trying to modifying fields in the
 journal_head which are protected by j_list_lock.

 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/jbd2/transaction.c b/fs/jbd2/transaction.c
index 71bd0e4..563ef45 100644
--- a/fs/jbd2/transaction.c
+++ b/fs/jbd2/transaction.c
@@ -1414,7 +1414,6 @@ int jbd2_journal_forget (handle_t *handle, struct buffer_head *bh)
  BUFFER_TRACE(bh, "entry");
 
  jbd_lock_bh_state(bh);
- spin_lock(&journal->j_list_lock);
 
  if (!buffer_jbd(bh))
   goto not_jbd;
@@ -1467,6 +1466,7 @@ int jbd2_journal_forget (handle_t *handle, struct buffer_head *bh)
    * we know to remove the checkpoint after we commit.
    */
 
+  spin_lock(&journal->j_list_lock);
   if (jh->b_cp_transaction) {
    __jbd2_journal_temp_unlink_buffer(jh);
    __jbd2_journal_file_buffer(jh, transaction, BJ_Forget);
@@ -1479,6 +1479,7 @@ int jbd2_journal_forget (handle_t *handle, struct buffer_head *bh)
     goto drop;
    }
   }
+  spin_unlock(&journal->j_list_lock);
  } else if (jh->b_transaction) {
   J_ASSERT_JH(jh, (jh->b_transaction ==
      journal->j_committing_transaction));
@@ -1490,7 +1491,9 @@ int jbd2_journal_forget (handle_t *handle, struct buffer_head *bh)
 
   if (jh->b_next_transaction) {
    J_ASSERT(jh->b_next_transaction == transaction);
+   spin_lock(&journal->j_list_lock);
    jh->b_next_transaction = NULL;
+   spin_unlock(&journal->j_list_lock);
 
    /*
     * only drop a reference if this transaction modified
@@ -1502,7 +1505,6 @@ int jbd2_journal_forget (handle_t *handle, struct buffer_head *bh)
  }
 
 not_jbd:
- spin_unlock(&journal->j_list_lock);
  jbd_unlock_bh_state(bh);
  __brelse(bh);
 drop:
-- 
1.7.1