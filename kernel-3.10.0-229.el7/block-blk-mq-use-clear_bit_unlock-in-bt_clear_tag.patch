From 4e1fa1090062d54e0be9d148cf37333acdffbb4d Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Fri, 13 Jun 2014 14:35:51 -0400
Subject: [block] blk-mq: use clear_bit_unlock in bt_clear_tag()

Message-id: <1402670238-13916-64-git-send-email-snitzer@redhat.com>
Patchwork-id: 83893
O-Subject: [RHEL7.1 PATCH 063/150] blk-mq: bitmap tag: use clear_bit_unlock in bt_clear_tag()
Bugzilla: 1105204
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Jeff Moyer <jmoyer@redhat.com>

BZ: 1105204

Upstream commit 0289b2e110b7824b2f76d194ad6f8f0844e270ad
Author: Ming Lei <tom.leiming@gmail.com>
Date:   Sun May 11 01:01:48 2014 +0800

    blk-mq: bitmap tag: use clear_bit_unlock in bt_clear_tag()

    The unlock memory barrier need to order access to req in free
    path and clearing tag bit, otherwise either request free path
    may see a allocated request, or initialized request in allocate
    path might be modified by the ongoing free path.

    Signed-off-by: Ming Lei <tom.leiming@gmail.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/block/blk-mq-tag.c b/block/blk-mq-tag.c
index 6c78c08..a81b138 100644
--- a/block/blk-mq-tag.c
+++ b/block/blk-mq-tag.c
@@ -236,7 +236,11 @@ static void bt_clear_tag(struct blk_mq_bitmap_tags *bt, unsigned int tag)
  const int index = TAG_TO_INDEX(bt, tag);
  struct bt_wait_state *bs;
 
- clear_bit(TAG_TO_BIT(bt, tag), &bt->map[index].word);
+ /*
+  * The unlock memory barrier need to order access to req in free
+  * path and clearing tag bit
+  */
+ clear_bit_unlock(TAG_TO_BIT(bt, tag), &bt->map[index].word);
 
  bs = bt_wake_ptr(bt);
  if (bs && atomic_dec_and_test(&bs->wait_cnt)) {
-- 
1.7.1