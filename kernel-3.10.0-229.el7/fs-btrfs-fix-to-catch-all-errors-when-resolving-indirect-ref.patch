From 5093d7a0ffdf81ffbb7b34c937ae52e1c7bb6798 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:00:23 -0400
Subject: [fs] btrfs: fix to catch all errors when resolving indirect ref

Message-id: <1407179109-13714-137-git-send-email-sandeen@redhat.com>
Patchwork-id: 87012
O-Subject: [RHEL7.1 PATCH 136/422] Btrfs: fix to catch all errors when resolving indirect ref
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Wang Shilong <wangsl.fnst@cn.fujitsu.com>

commit 95def2ede1a9dd12b164932eaf5fefb67aefc41c
Author: Wang Shilong <wangsl.fnst@cn.fujitsu.com>
Date:   Thu Jan 23 13:47:49 2014 +0800

    Btrfs: fix to catch all errors when resolving indirect ref

    We can only tolerate ENOENT here, for other errors, we should
    return directly.

    Signed-off-by: Wang Shilong <wangsl.fnst@cn.fujitsu.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/backref.c b/fs/btrfs/backref.c
index 10ae570..55ffcf4 100644
--- a/fs/btrfs/backref.c
+++ b/fs/btrfs/backref.c
@@ -388,10 +388,16 @@ static int __resolve_indirect_refs(struct btrfs_fs_info *fs_info,
    continue;
   err = __resolve_indirect_ref(fs_info, path, time_seq, ref,
           parents, extent_item_pos);
-  if (err == -ENOMEM)
-   goto out;
-  if (err)
+  /*
+   * we can only tolerate ENOENT,otherwise,we should catch error
+   * and return directly.
+   */
+  if (err == -ENOENT) {
    continue;
+  } else if (err) {
+   ret = err;
+   goto out;
+  }
 
   /* we put the first parent into the ref at hand */
   ULIST_ITER_INIT(&uiter);
-- 
1.7.1