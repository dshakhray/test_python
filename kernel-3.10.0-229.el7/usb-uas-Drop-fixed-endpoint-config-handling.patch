From 2f777dda1a9a2ec43963e0595588d227a357319c Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:06:35 -0400
Subject: [usb] uas: Drop fixed endpoint config handling

Message-id: <1410887463-20674-324-git-send-email-dzickus@redhat.com>
Patchwork-id: 95365
O-Subject: [RHEL7 PATCH 323/591] uas: Drop fixed endpoint config handling
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 74d71aec619f33ec1ff5b2090792ab96d840bd3b
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Oct 29 10:10:36 2013 +0100

    uas: Drop fixed endpoint config handling

    The fixed endpoint config code was only necessary to deal with an early
    uas prototype which has never been released, so lets drop it and enforce
    proper uas endpoint descriptors.

    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/storage/uas.c b/drivers/usb/storage/uas.c
index 5cedc7f..754468b 100644
--- a/drivers/usb/storage/uas.c
+++ b/drivers/usb/storage/uas.c
@@ -908,31 +908,17 @@ static void uas_configure_endpoints(struct uas_dev_info *devinfo)
  devinfo->cmnd = NULL;
 
  r = uas_find_endpoints(devinfo->intf->cur_altsetting, eps);
-
- /*
-  * Assume that if we didn't find a proper set of descriptors, we're
-  * using a device with old firmware that happens to be set up like
-  * this.
-  */
- if (r != 0) {
-  devinfo->cmd_pipe = usb_sndbulkpipe(udev, 1);
-  devinfo->status_pipe = usb_rcvbulkpipe(udev, 1);
-  devinfo->data_in_pipe = usb_rcvbulkpipe(udev, 2);
-  devinfo->data_out_pipe = usb_sndbulkpipe(udev, 2);
-
-  eps[1] = usb_pipe_endpoint(udev, devinfo->status_pipe);
-  eps[2] = usb_pipe_endpoint(udev, devinfo->data_in_pipe);
-  eps[3] = usb_pipe_endpoint(udev, devinfo->data_out_pipe);
- } else {
-  devinfo->cmd_pipe = usb_sndbulkpipe(udev,
-          usb_endpoint_num(&eps[0]->desc));
-  devinfo->status_pipe = usb_rcvbulkpipe(udev,
-          usb_endpoint_num(&eps[1]->desc));
-  devinfo->data_in_pipe = usb_rcvbulkpipe(udev,
-          usb_endpoint_num(&eps[2]->desc));
-  devinfo->data_out_pipe = usb_sndbulkpipe(udev,
-          usb_endpoint_num(&eps[3]->desc));
- }
+ if (r)
+  return r;
+
+ devinfo->cmd_pipe = usb_sndbulkpipe(udev,
+         usb_endpoint_num(&eps[0]->desc));
+ devinfo->status_pipe = usb_rcvbulkpipe(udev,
+         usb_endpoint_num(&eps[1]->desc));
+ devinfo->data_in_pipe = usb_rcvbulkpipe(udev,
+         usb_endpoint_num(&eps[2]->desc));
+ devinfo->data_out_pipe = usb_sndbulkpipe(udev,
+         usb_endpoint_num(&eps[3]->desc));
 
  devinfo->qdepth = usb_alloc_streams(devinfo->intf, eps + 1, 3, 256,
         GFP_KERNEL);
-- 
1.7.1