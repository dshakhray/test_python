From 22a436495703e1d08f82a65bdce8c7874259fcd4 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:26:26 -0400
Subject: [tools] perf/top: Add --max-stack option to limit callchain stack scan

Message-id: <1408462094-14194-218-git-send-email-jolsa@redhat.com>
Patchwork-id: 88180
O-Subject: [PATCH RHEL7.1 BZ1131394 217/325] perf top: Add --max-stack option to limit callchain stack scan
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 5dbb6e81d85e55ee2b4cf523c1738e16f63e5400
Author: Waiman Long <Waiman.Long@hp.com>
Date: Fri Oct 18 10:38:49 2013 -0400

description
===========
When the callgraph function is enabled (-G), it may take a long time to
scan all the stack data and merge them accordingly.

This patch adds a new --max-stack option to perf-top to limit the depth
of callchain stack data to look at to reduce the time it takes for
perf-top to finish its processing. It reduces the amount of information
provided to the user in exchange for faster speed.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/Documentation/perf-top.txt b/tools/perf/Documentation/perf-top.txt
index 92e152d..7de01dd 100644
--- a/tools/perf/Documentation/perf-top.txt
+++ b/tools/perf/Documentation/perf-top.txt
@@ -150,6 +150,14 @@ Default is to monitor all CPUS.
  Setup and enable call-graph (stack chain/backtrace) recording,
  implies -G.
 
+--max-stack::
+ Set the stack depth limit when parsing the callchain, anything
+ beyond the specified depth will be ignored. This is a trade-off
+ between information loss and faster processing especially for
+ workloads that can have a very long callchain stack.
+
+ Default: 127
+
 --ignore-callees=<regex>::
         Ignore callees of the function(s) matching the given regex.
         This has the effect of collecting the callers of each such
diff --git a/tools/perf/builtin-top.c b/tools/perf/builtin-top.c
index 9cf6336..3ce6784 100644
--- a/tools/perf/builtin-top.c
+++ b/tools/perf/builtin-top.c
@@ -771,7 +771,7 @@ static void perf_event__process_sample(struct perf_tool *tool,
    err = machine__resolve_callchain(machine, evsel,
         al.thread, sample,
         &parent, &al,
-        PERF_MAX_STACK_DEPTH);
+        top->max_stack);
    if (err)
     return;
   }
@@ -1050,10 +1050,11 @@ int cmd_top(int argc, const char **argv, const char *prefix __maybe_unused)
    .user_freq = UINT_MAX,
    .user_interval = ULLONG_MAX,
    .freq  = 4000, /* 4 KHz */
-   .target       = {
+   .target  = {
     .uses_mmap   = true,
    },
   },
+  .max_stack      = PERF_MAX_STACK_DEPTH,
   .sym_pcnt_filter     = 5,
  };
  struct perf_record_opts *opts = &top.record_opts;
@@ -1115,6 +1116,9 @@ int cmd_top(int argc, const char **argv, const char *prefix __maybe_unused)
  OPT_CALLBACK(0, "call-graph", &top.record_opts,
        "mode[,dump_size]", record_callchain_help,
        &parse_callchain_opt),
+ OPT_INTEGER(0, "max-stack", &top.max_stack,
+      "Set the maximum stack depth when parsing the callchain. "
+      "Default: " __stringify(PERF_MAX_STACK_DEPTH)),
  OPT_CALLBACK(0, "ignore-callees", NULL, "regex",
      "ignore callees of these functions in call graphs",
      report_parse_ignore_callees_opt),
diff --git a/tools/perf/util/top.h b/tools/perf/util/top.h
index b554ffc..88cfeaf 100644
--- a/tools/perf/util/top.h
+++ b/tools/perf/util/top.h
@@ -24,6 +24,7 @@ struct perf_top {
  u64     exact_samples;
  u64     guest_us_samples, guest_kernel_samples;
  int     print_entries, count_filter, delay_secs;
+ int     max_stack;
  bool     hide_kernel_symbols, hide_user_symbols, zero;
  bool     use_tui, use_stdio;
  bool     kptr_restrict_warned;
-- 
1.7.1