From 2339fff85773e2827910736e35b895ff56ecfec9 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 01:48:12 -0400
Subject: [iommu] vt-d: Parse ANDD records

Message-id: <20140905014812.31297.75208.stgit@gir.stowe>
Patchwork-id: 91317
O-Subject: [RHEL7.1 PATCH 24/65] iommu/vt-d: Parse ANDD records
Bugzilla: 1129880 1087643
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1087643
Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1129880
Upstream Status: e625b4a95d50fa2f2d2fd0ab4b9ac9d6b6c2474c

commit e625b4a95d50fa2f2d2fd0ab4b9ac9d6b6c2474c
Author: David Woodhouse <David.Woodhouse@intel.com>
Date:   Fri Mar 7 14:34:38 2014 +0000

    iommu/vt-d: Parse ANDD records

    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/dmar.c b/drivers/iommu/dmar.c
index 4b5884d..a6c86b0 100644
--- a/drivers/iommu/dmar.c
+++ b/drivers/iommu/dmar.c
@@ -373,6 +373,26 @@ static void dmar_free_drhd(struct dmar_drhd_unit *dmaru)
  kfree(dmaru);
 }
 
+static int __init dmar_parse_one_andd(struct acpi_dmar_header *header)
+{
+ struct acpi_dmar_andd *andd = (void *)header;
+
+ /* Check for NUL termination within the designated length */
+ if (strnlen(andd->object_name, header->length - 8) == header->length - 8) {
+  WARN_TAINT(1, TAINT_FIRMWARE_WORKAROUND,
+      "Your BIOS is broken; ANDD object name is not NUL-terminated\n"
+      "BIOS vendor: %s; Ver: %s; Product Version: %s\n",
+      dmi_get_system_info(DMI_BIOS_VENDOR),
+      dmi_get_system_info(DMI_BIOS_VERSION),
+      dmi_get_system_info(DMI_PRODUCT_VERSION));
+  return -EINVAL;
+ }
+ pr_info("ANDD device: %x name: %s\n", andd->device_number,
+  andd->object_name);
+
+ return 0;
+}
+
 #ifdef CONFIG_ACPI_NUMA
 static int __init
 dmar_parse_one_rhsa(struct acpi_dmar_header *header)
@@ -436,6 +456,10 @@ dmar_table_print_dmar_entry(struct acpi_dmar_header *header)
          (unsigned long long)rhsa->base_address,
          rhsa->proximity_domain);
   break;
+ case ACPI_DMAR_TYPE_ANDD:
+  /* We don't print this here because we need to sanity-check
+     it first. So print it in dmar_parse_one_andd() instead. */
+  break;
  }
 }
 
@@ -521,6 +545,9 @@ parse_dmar_table(void)
    ret = dmar_parse_one_rhsa(entry_header);
 #endif
    break;
+  case ACPI_DMAR_TYPE_ANDD:
+   ret = dmar_parse_one_andd(entry_header);
+   break;
   default:
    pr_warn("Unknown DMAR structure type %d\n",
     entry_header->type);
-- 
1.7.1