From 82aedb85abd95cda90089fe6522035b46446a2d0 Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:23:35 -0400
Subject: [net] crush: pass parent r value for indep call
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-109-git-send-email-sweil@redhat.com>
Patchwork-id: 89830
O-Subject: [PATCH 108/303] crush: pass parent r value for indep call
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Ilya Dryomov <ilya.dryomov@inktank.com>

Pass down the parent's 'r' value so that we will sample different values in
the recursive call when the parent tries multiple times.  This avoids doing
useless work (calling multiple times and trying the same values).

Reflects ceph.git commit 2731d3030d7a3e80922b7f1b7756f9a4a124bac5.

Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>
Reviewed-by: Sage Weil <sage@inktank.com>
(cherry picked from commit 4158608139de02f5265ec4f41774af7418911016)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ceph/crush/mapper.c b/net/ceph/crush/mapper.c
index 125dbd0..c727836 100644
--- a/net/ceph/crush/mapper.c
+++ b/net/ceph/crush/mapper.c
@@ -460,7 +460,8 @@ static void crush_choose_indep(const struct crush_map *map,
           int x, int left, int numrep, int type,
          int *out, int outpos,
          int recurse_to_leaf,
-         int *out2)
+          int *out2,
+          int parent_r)
 {
  struct crush_bucket *in = bucket;
  int endpos = outpos + left;
@@ -499,7 +500,7 @@ static void crush_choose_indep(const struct crush_map *map,
      * this will involve more devices in data
      * movement and tend to distribute the load.
      */
-    r = rep;
+    r = rep + parent_r;
 
     /* be careful */
     if (in->alg == CRUSH_BUCKET_UNIFORM &&
@@ -567,7 +568,7 @@ static void crush_choose_indep(const struct crush_map *map,
            weight, weight_max,
            x, 1, numrep, 0,
            out2, rep,
-           0, NULL);
+           0, NULL, r);
       if (out2[rep] == CRUSH_ITEM_NONE) {
        /* placed nothing; no leaf */
        break;
@@ -702,7 +703,8 @@ int crush_do_rule(const struct crush_map *map,
       curstep->arg2,
       o+osize, j,
       recurse_to_leaf,
-      c+osize);
+      c+osize,
+      0);
      osize += numrep;
     }
    }
-- 
1.7.1