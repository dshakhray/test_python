From f8ea05bc7906b6f7f8e3c48b5ae166975bcbe0af Mon Sep 17 00:00:00 2001
From: John Greene <jogreene@redhat.com>
Date: Wed, 10 Sep 2014 18:29:05 -0400
Subject: [ethernet] ixgbe: Indicate removal state explicitly

Message-id: <1410373750-11341-46-git-send-email-jogreene@redhat.com>
Patchwork-id: 93522
O-Subject: [RHEL7.1 PATCH 45/50] ixgbe: Indicate removal state explicitly
Bugzilla: 1091123
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Neil Horman <nhorman@redhat.com>

BZ: 1091123
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7919168
Tested: In beaker. See BZ for details

Add a bit, __IXGBE_REMOVING, to indicate that the module is being
removed. The __IXGBE_DOWN bit had been overloaded for this purpose,
but that leads to trouble. A few places now check both __IXGBE_DOWN
and __IXGBE_REMOVE. Notably, setting either bit will prevent service
task execution.

Signed-off-by: Mark Rustad <mark.d.rustad@intel.com>
Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com>
Signed-off-by: Aaron Brown <aaron.f.brown@intel.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 09f40aeddd77ad07093516b267ae7b4aebcc57bb)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe.h b/drivers/net/ethernet/intel/ixgbe/ixgbe.h
index bd59d32..a2abd70 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe.h
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe.h
@@ -789,6 +789,7 @@ enum ixgbe_state_t {
  __IXGBE_TESTING,
  __IXGBE_RESETTING,
  __IXGBE_DOWN,
+ __IXGBE_REMOVING,
  __IXGBE_SERVICE_SCHED,
  __IXGBE_IN_SFP_INIT,
  __IXGBE_PTP_RUNNING,
diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c b/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
index ef39325..aa128ff 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
@@ -285,6 +285,7 @@ static void ixgbe_check_minimum_link(struct ixgbe_adapter *adapter,
 static void ixgbe_service_event_schedule(struct ixgbe_adapter *adapter)
 {
  if (!test_bit(__IXGBE_DOWN, &adapter->state) &&
+     !test_bit(__IXGBE_REMOVING, &adapter->state) &&
      !test_and_set_bit(__IXGBE_SERVICE_SCHED, &adapter->state))
   schedule_work(&adapter->service_task);
 }
@@ -5740,8 +5741,9 @@ static void ixgbe_check_hang_subtask(struct ixgbe_adapter *adapter)
  u64 eics = 0;
  int i;
 
- /* If we're down or resetting, just bail */
+ /* If we're down, removing or resetting, just bail */
  if (test_bit(__IXGBE_DOWN, &adapter->state) ||
+     test_bit(__IXGBE_REMOVING, &adapter->state) ||
      test_bit(__IXGBE_RESETTING, &adapter->state))
   return;
 
@@ -5988,8 +5990,9 @@ static void ixgbe_spoof_check(struct ixgbe_adapter *adapter)
  **/
 static void ixgbe_watchdog_subtask(struct ixgbe_adapter *adapter)
 {
- /* if interface is down do nothing */
+ /* if interface is down, removing or resetting, do nothing */
  if (test_bit(__IXGBE_DOWN, &adapter->state) ||
+     test_bit(__IXGBE_REMOVING, &adapter->state) ||
      test_bit(__IXGBE_RESETTING, &adapter->state))
   return;
 
@@ -6199,8 +6202,9 @@ static void ixgbe_reset_subtask(struct ixgbe_adapter *adapter)
 
  adapter->flags2 &= ~IXGBE_FLAG2_RESET_REQUESTED;
 
- /* If we're already down or resetting, just bail */
+ /* If we're already down, removing or resetting, just bail */
  if (test_bit(__IXGBE_DOWN, &adapter->state) ||
+     test_bit(__IXGBE_REMOVING, &adapter->state) ||
      test_bit(__IXGBE_RESETTING, &adapter->state))
   return;
 
@@ -7990,7 +7994,7 @@ static void ixgbe_remove(struct pci_dev *pdev)
 
  ixgbe_dbg_adapter_exit(adapter);
 
- set_bit(__IXGBE_DOWN, &adapter->state);
+ set_bit(__IXGBE_REMOVING, &adapter->state);
  cancel_work_sync(&adapter->service_task);
 
 
-- 
1.7.1