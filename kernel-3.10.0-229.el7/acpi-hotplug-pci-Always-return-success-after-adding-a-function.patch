From 49c6187c5f31e9713d16355e69b1e71bb4e9324c Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 10 Jul 2014 01:00:51 -0400
Subject: [acpi] hotplug/pci: Always return success after adding a function

Message-id: <20140710010051.22146.54957.stgit@gir.stowe>
Patchwork-id: 85564
O-Subject: [RHEL7.1 PATCH 025/105] ACPI / hotplug / PCI: Always return success after adding a function
Bugzilla: 1114228
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1114228
Upstream Status: 2e862c51904ddd12be2d256513160e1f87beafee

commit 2e862c51904ddd12be2d256513160e1f87beafee
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Sat Jul 13 23:27:23 2013 +0200

    ACPI / hotplug / PCI: Always return success after adding a function

    When a new ACPIPHP function is added by register_slot() and the
    notify handler cannot be installed for it, register_slot() returns an
    error status without cleaning up, which causes the entire namespace
    walk in acpiphp_enumerate_slots() to be aborted, although it still
    may be possible to successfully install the function notify handler
    for other device objects under the given brigde.

    To address this issue make register_slot() return success after
    a new function has been added, even if the addition of the notify
    handler for it has failed.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Mika Westerberg <mika.westerberg@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/hotplug/acpiphp_glue.c b/drivers/pci/hotplug/acpiphp_glue.c
index 4084e87..9c8ac66 100644
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@ -325,10 +325,9 @@ register_slot(acpi_handle handle, u32 lvl, void *context, void **rv)
 
   if (ACPI_FAILURE(status))
    pr_err("failed to register interrupt notify handler\n");
- } else
-  status = AE_OK;
+ }
 
- return status;
+ return AE_OK;
 
  err_exit:
  bridge->nr_slots--;
-- 
1.7.1