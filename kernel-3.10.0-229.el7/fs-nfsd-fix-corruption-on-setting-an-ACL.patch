From fa2e26d07794361de13b979ceef22e4a839ac44d Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Mon, 23 Jun 2014 21:50:27 -0400
Subject: [fs] nfsd: fix corruption on setting an ACL

Message-id: <1403560314-32525-86-git-send-email-bfields@redhat.com>
Patchwork-id: 84533
O-Subject: [Patch RHEL7 085/172] nfsd4: fix corruption on setting an ACL.
Bugzilla: 1111719
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

As of 06f9cc12caa862f5bc86ebdb4f77568a4bef0167 "nfsd4: don't create
unnecessary mask acl", any non-trivial ACL will be left with an
unitialized entry, and a trivial ACL may write one entry beyond what's
allocated.

Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: 5513a510fad73594e29e1e48e760e0a644a8a4f3
Bugzilla: 1111719
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4acl.c b/fs/nfsd/nfs4acl.c
index 1eec850..abe43aa 100644
--- a/fs/nfsd/nfs4acl.c
+++ b/fs/nfsd/nfs4acl.c
@@ -572,7 +572,7 @@ posix_state_to_acl(struct posix_acl_state *state, unsigned int flags)
   add_to_mask(state, &state->groups->aces[i].perms);
  }
 
- if (!state->users->n && !state->groups->n) {
+ if (state->users->n || state->groups->n) {
   pace++;
   pace->e_tag = ACL_MASK;
   low_mode_from_nfs4(state->mask.allow, &pace->e_perm, flags);
-- 
1.7.1