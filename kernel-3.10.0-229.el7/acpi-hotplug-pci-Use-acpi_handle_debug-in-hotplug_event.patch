From fafe28432a23ae3eebfb4c672278b6dbef14a21b Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Fri, 19 Sep 2014 12:29:07 -0400
Subject: [acpi] hotplug/pci: Use acpi_handle_debug() in hotplug_event()

Message-id: <1411129776-21656-33-git-send-email-prarit@redhat.com>
Patchwork-id: 96392
O-Subject: [RHEL7.1 PATCH BZ 1141846 32/61] ACPI / hotplug / PCI: Use acpi_handle_debug() in hotplug_event()
Bugzilla: 1141846
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Myron Stowe <mstowe@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1141846

commit 1d4a5b610e500fe860570db4ceb64e45255221ab
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Feb 4 00:41:52 2014 +0100

    ACPI / hotplug / PCI: Use acpi_handle_debug() in hotplug_event()

    Make hotplug_event() use acpi_handle_debug() instead of an open-coded
    debug message printing and clean up the messages printed by it.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Mika Westerberg <mika.westerberg@linux.intel.com>

Cc: Myron Stowe <mstowe@redhat.com>
Cc: Andy Gospodarek <agospoda@redhat.com>
Cc: Tony Camuso <tcamuso@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/hotplug/acpiphp_glue.c b/drivers/pci/hotplug/acpiphp_glue.c
index 2779b63..e73b015 100644
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@ -819,9 +819,6 @@ static void hotplug_event(acpi_handle handle, u32 type, void *data)
  struct acpiphp_func *func = &context->func;
  struct acpiphp_slot *slot = func->slot;
  struct acpiphp_bridge *bridge;
- char objname[64];
- struct acpi_buffer buffer = { .length = sizeof(objname),
-          .pointer = objname };
 
  mutex_lock(&acpiphp_context_lock);
  bridge = context->bridge;
@@ -831,14 +828,11 @@ static void hotplug_event(acpi_handle handle, u32 type, void *data)
  mutex_unlock(&acpiphp_context_lock);
 
  pci_lock_rescan_remove();
- acpi_get_name(handle, ACPI_FULL_PATHNAME, &buffer);
 
  switch (type) {
  case ACPI_NOTIFY_BUS_CHECK:
   /* bus re-enumerate */
-  pr_debug("%s: Bus check notify on %s\n", __func__, objname);
-  pr_debug("%s: re-enumerating slots under %s\n",
-    __func__, objname);
+  acpi_handle_debug(handle, "Bus check in %s()\n", __func__);
   if (bridge)
    acpiphp_check_bridge(bridge);
   else if (!(slot->flags & SLOT_IS_GOING_AWAY))
@@ -848,7 +842,7 @@ static void hotplug_event(acpi_handle handle, u32 type, void *data)
 
  case ACPI_NOTIFY_DEVICE_CHECK:
   /* device check */
-  pr_debug("%s: Device check notify on %s\n", __func__, objname);
+  acpi_handle_debug(handle, "Device check in %s()\n", __func__);
   if (bridge) {
    acpiphp_check_bridge(bridge);
   } else if (!(slot->flags & SLOT_IS_GOING_AWAY)) {
@@ -863,7 +857,7 @@ static void hotplug_event(acpi_handle handle, u32 type, void *data)
 
  case ACPI_NOTIFY_EJECT_REQUEST:
   /* request device eject */
-  pr_debug("%s: Device eject notify on %s\n", __func__, objname);
+  acpi_handle_debug(handle, "Eject request in %s()\n", __func__);
   acpiphp_disable_and_eject_slot(slot);
   break;
  }
-- 
1.7.1