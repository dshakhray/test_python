From 9ce3612755a9ecce0b17b0e47fd00ef664a8c488 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Fri, 13 Jun 2014 14:35:38 -0400
Subject: [block] fold __blk_add_timer into blk_add_timer

Message-id: <1402670238-13916-51-git-send-email-snitzer@redhat.com>
Patchwork-id: 83805
O-Subject: [RHEL7.1 PATCH 050/150] block: fold __blk_add_timer into blk_add_timer
Bugzilla: 1105204
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Jeff Moyer <jmoyer@redhat.com>

BZ: 1105204

Upstream commit c4a634f432376a28c9639b35746e33168ab97709
Author: Christoph Hellwig <hch@lst.de>
Date:   Fri Apr 25 14:14:48 2014 +0200

    block: fold __blk_add_timer into blk_add_timer

    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@fb.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/block/blk-timeout.c b/block/blk-timeout.c
index a45dc1f..cca7876 100644
--- a/block/blk-timeout.c
+++ b/block/blk-timeout.c
@@ -165,8 +165,15 @@ void blk_abort_request(struct request *req)
 }
 EXPORT_SYMBOL_GPL(blk_abort_request);
 
-static void __blk_add_timer(struct request *req,
-       struct list_head *timeout_list)
+/**
+ * blk_add_timer - Start timeout timer for a single request
+ * @req: request that is about to start running.
+ *
+ * Notes:
+ *    Each request has its own timer, and as it is added to the queue, we
+ *    set up the timer. When the request completes, we cancel the timer.
+ */
+void blk_add_timer(struct request *req)
 {
  struct request_queue *q = req->q;
  unsigned long expiry;
@@ -184,8 +191,8 @@ static void __blk_add_timer(struct request *req,
   req->timeout = q->rq_timeout;
 
  req->deadline = jiffies + req->timeout;
- if (timeout_list)
-  list_add_tail(&req->timeout_list, timeout_list);
+ if (!q->mq_ops)
+  list_add_tail(&req->timeout_list, &req->q->timeout_list);
 
  /*
   * If the timer isn't already pending or this timeout is earlier
@@ -210,22 +217,3 @@ static void __blk_add_timer(struct request *req,
  }
 
 }
-
-/**
- * blk_add_timer - Start timeout timer for a single request
- * @req: request that is about to start running.
- *
- * Notes:
- *    Each request has its own timer, and as it is added to the queue, we
- *    set up the timer. When the request completes, we cancel the timer.
- */
-void blk_add_timer(struct request *req)
-{
- struct request_queue *q = req->q;
-
- if (q->mq_ops)
-  __blk_add_timer(req, NULL);
- else
-  __blk_add_timer(req, &req->q->timeout_list);
-}
-
-- 
1.7.1