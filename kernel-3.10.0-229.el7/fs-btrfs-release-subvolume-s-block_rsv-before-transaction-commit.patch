From 1f2f0d151b0979013bed05c4a26c1f8743583ee3 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 18:59:55 -0400
Subject: [fs] btrfs: release subvolume's block_rsv before transaction commit

Message-id: <1407179109-13714-109-git-send-email-sandeen@redhat.com>
Patchwork-id: 87015
O-Subject: [RHEL7.1 PATCH 108/422] Btrfs: release subvolume's block_rsv before transaction commit
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Liu Bo <bo.li.liu@oracle.com>

commit de6e8200669f9b60694ca87eadf0a0a99cbdb6aa
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Thu Jan 9 14:57:06 2014 +0800

    Btrfs: release subvolume's block_rsv before transaction commit

    We don't have to keep subvolume's block_rsv during transaction commit,
    and within transaction commit, we may also need the free space reclaimed
    from this block_rsv to process delayed refs.

    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/ioctl.c b/fs/btrfs/ioctl.c
index 9b1109a..1c33a9c 100644
--- a/fs/btrfs/ioctl.c
+++ b/fs/btrfs/ioctl.c
@@ -436,7 +436,9 @@ static noinline int create_subvol(struct inode *dir,
  trans = btrfs_start_transaction(root, 0);
  if (IS_ERR(trans)) {
   ret = PTR_ERR(trans);
-  goto out;
+  btrfs_subvolume_release_metadata(root, &block_rsv,
+       qgroup_reserved);
+  return ret;
  }
  trans->block_rsv = &block_rsv;
  trans->bytes_reserved = block_rsv.size;
@@ -561,6 +563,8 @@ static noinline int create_subvol(struct inode *dir,
 fail:
  trans->block_rsv = NULL;
  trans->bytes_reserved = 0;
+ btrfs_subvolume_release_metadata(root, &block_rsv, qgroup_reserved);
+
  if (async_transid) {
   *async_transid = trans->transid;
   err = btrfs_commit_transaction_async(trans, root, 1);
@@ -574,14 +578,10 @@ fail:
 
  if (!ret) {
   inode = btrfs_lookup_dentry(dir, dentry);
-  if (IS_ERR(inode)) {
-   ret = PTR_ERR(inode);
-   goto out;
-  }
+  if (IS_ERR(inode))
+   return PTR_ERR(inode);
   d_instantiate(dentry, inode);
  }
-out:
- btrfs_subvolume_release_metadata(root, &block_rsv, qgroup_reserved);
  return ret;
 }
 
-- 
1.7.1