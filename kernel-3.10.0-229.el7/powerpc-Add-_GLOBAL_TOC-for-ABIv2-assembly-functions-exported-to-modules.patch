From 7b0bdc19ac8b51b281f2928d2439ac69dcf464fc Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:11:07 -0400
Subject: [powerpc] Add _GLOBAL_TOC for ABIv2 assembly functions exported to modules

Message-id: <1410545655-205645-439-git-send-email-dzickus@redhat.com>
Patchwork-id: 94504
O-Subject: [RHEL7 PATCH 438/626] powerpc: Add _GLOBAL_TOC for ABIv2 assembly functions exported to modules
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 169c7cee3131cdf5e2f2d2a6c722c7db0283bcd5
Author: Anton Blanchard <anton@samba.org>
Date:   Thu Apr 3 16:01:11 2014 +1100

    powerpc: Add _GLOBAL_TOC for ABIv2 assembly functions exported to modules

    If an assembly function that calls back into c code is exported to
    modules, we need to ensure r2 is setup correctly. There are only
    two places crazy enough to do it (two of which are my fault).

    Signed-off-by: Anton Blanchard <anton@samba.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/ppc_asm.h b/arch/powerpc/include/asm/ppc_asm.h
index ca94485..36b3226 100644
--- a/arch/powerpc/include/asm/ppc_asm.h
+++ b/arch/powerpc/include/asm/ppc_asm.h
@@ -208,6 +208,16 @@ END_FW_FTR_SECTION_IFSET(FW_FEATURE_SPLPAR)
  .globl name; \
 name:
 
+#define _GLOBAL_TOC(name) \
+ .section ".text"; \
+ .align 2 ; \
+ .type name,@function; \
+ .globl name; \
+name: \
+0: addis r2,r12,(.TOC.-0b)@ha; \
+ addi r2,r2,(.TOC.-0b)@l; \
+ .localentry name,.-name
+
 #define _KPROBE(name) \
  .section ".kprobes.text","a"; \
  .align 2 ; \
@@ -236,6 +246,8 @@ name: \
  .type GLUE(.,name),@function; \
 GLUE(.,name):
 
+#define _GLOBAL_TOC(name) _GLOBAL(name)
+
 #define _KPROBE(name) \
  .section ".kprobes.text","a"; \
  .align 2 ; \
diff --git a/arch/powerpc/lib/copyuser_64.S b/arch/powerpc/lib/copyuser_64.S
index 596a285..0860ee4 100644
--- a/arch/powerpc/lib/copyuser_64.S
+++ b/arch/powerpc/lib/copyuser_64.S
@@ -18,7 +18,7 @@
 #endif
 
  .align 7
-_GLOBAL(__copy_tofrom_user)
+_GLOBAL_TOC(__copy_tofrom_user)
 BEGIN_FTR_SECTION
  nop
 FTR_SECTION_ELSE
diff --git a/arch/powerpc/lib/memcpy_64.S b/arch/powerpc/lib/memcpy_64.S
index f71365f..14a4628 100644
--- a/arch/powerpc/lib/memcpy_64.S
+++ b/arch/powerpc/lib/memcpy_64.S
@@ -10,7 +10,7 @@
 #include <asm/ppc_asm.h>
 
  .align 7
-_GLOBAL(memcpy)
+_GLOBAL_TOC(memcpy)
 BEGIN_FTR_SECTION
  std r3,-STACKFRAMESIZE+STK_REG(R31)(r1) /* save destination pointer for return value */
 FTR_SECTION_ELSE
-- 
1.7.1