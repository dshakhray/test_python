From 0293c9dfa4a769fabf75a314ba3e1f408b638761 Mon Sep 17 00:00:00 2001
From: Hendrik Brueckner <brueckner@redhat.com>
Date: Tue, 30 Sep 2014 09:51:51 -0400
Subject: [s390] qeth: don't query for info if hardware not ready

Message-id: <1412070711-29775-1-git-send-email-brueckner@redhat.com>
Patchwork-id: 96800
O-Subject: [RHEL7.1 PATCH] [s390] qeth: don't query for info if hardware not ready.
Bugzilla: 1147573
RH-Acked-by: Don Zickus <dzickus@redhat.com>

Description
-----------
commit 511c24456ad19d51fcdbc5eda9df7be98c20e6b0
Author: Eugene Crosser <Eugene.Crosser@ru.ibm.com>
Commit: David S. Miller <davem@davemloft.net>

    qeth: don't query for info if hardware not ready.

    When qeth device is queried for ethtool data, hardware operation
    is performed to extract the necessary information from the card.
    If the card is not online at the moment (e.g. it is undergoing
    recovery), this operation produces undesired effects like
    temporarily freezing the system. This patch prevents execution
    of the hardware query operation when the card is not online.
    In such case, ioctl() operation returns error with errno ENODEV.

    Reviewed-by: Ursula Braun <ursula.braun@de.ibm.com>
    Signed-off-by: Eugene Crosser <Eugene.Crosser@ru.ibm.com>
    Signed-off-by: Frank Blaschka <blaschka@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Bugzilla
--------
BZ 1147573
https://bugzilla.redhat.com/show_bug.cgi?id=1147573

Upstream status of the patch
----------------------------
The patch is upstream as of kernel version v3.17-rc5
http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=511c24456ad19d51fcdbc5eda9df7be98c20e6b0

Patch hunks that are related to hipersockets bridge port functions have not
been backported.

Brew
----
https://brewweb.devel.redhat.com/taskinfo?taskID=8039509

Test status
-----------
The patch has been tested and fixes the problem.
The fix has been verified by the IBM test department.

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/s390/net/qeth_core_main.c b/drivers/s390/net/qeth_core_main.c
index c49e2b0..c241c4f 100644
--- a/drivers/s390/net/qeth_core_main.c
+++ b/drivers/s390/net/qeth_core_main.c
@@ -5702,6 +5702,7 @@ int qeth_core_ethtool_get_settings(struct net_device *netdev,
  struct qeth_card *card = netdev->ml_priv;
  enum qeth_link_types link_type;
  struct carrier_info carrier_info;
+ int rc;
 
  if ((card->info.type == QETH_CARD_TYPE_IQD) || (card->info.guestlan))
   link_type = QETH_LINK_TYPE_10GBIT_ETH;
@@ -5742,8 +5743,15 @@ int qeth_core_ethtool_get_settings(struct net_device *netdev,
  /* Check if we can obtain more accurate information.  */
  /* If QUERY_CARD_INFO command is not supported or fails, */
  /* just return the heuristics that was filled above.  */
- if (qeth_query_card_info(card, &carrier_info) != 0)
+ if ((card->state != CARD_STATE_SOFTSETUP) &&
+     (card->state != CARD_STATE_UP))
+  return -ENODEV;
+ rc = qeth_query_card_info(card, &carrier_info);
+ if (rc == -EOPNOTSUPP) /* for old hardware, return heuristic */
   return 0;
+ if (rc) /* report error from the hardware operation */
+  return rc;
+ /* on success, fill in the information got from the hardware */
 
  netdev_dbg(netdev,
  "card info: card_type=0x%02x, port_mode=0x%04x, port_speed=0x%08x\n",
-- 
1.7.1