From 6d699014d9ea38cfeffe4f7259b7d2ee584acacd Mon Sep 17 00:00:00 2001
From: Gustavo Duarte <gduarte@redhat.com>
Date: Mon, 27 Oct 2014 19:36:27 -0400
Subject: [scsi] ibmvscsi: Abort init sequence during error recovery

Message-id: <1414438587-32612-3-git-send-email-gduarte@redhat.com>
Patchwork-id: 98483
O-Subject: [RHEL7.1 PATCH BZ 1105496 2/2] ibmvscsi: Abort init sequence during error recovery
Bugzilla: 1105496
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1105496
Upstream Status: 9ee755974bea2f9880e517ec985dc9dede1b3a36

commit 9ee755974bea2f9880e517ec985dc9dede1b3a36
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Fri May 23 10:52:10 2014 -0500

    ibmvscsi: Abort init sequence during error recovery

    If a CRQ reset is triggered for some reason while in the middle
    of performing VSCSI adapter initialization, we don't want to
    call the done function for the initialization MAD commands as
    this will only result in two threads attempting initialization
    at the same time, resulting in failures.

    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Acked-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Christoph Hellwig <hch@lst.de>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/ibmvscsi/ibmvscsi.c b/drivers/scsi/ibmvscsi/ibmvscsi.c
index fb7b663..c5bb0e0 100644
--- a/drivers/scsi/ibmvscsi/ibmvscsi.c
+++ b/drivers/scsi/ibmvscsi/ibmvscsi.c
@@ -807,7 +807,8 @@ static void purge_requests(struct ibmvscsi_host_data *hostdata, int error_code)
            evt->hostdata->dev);
    if (evt->cmnd_done)
     evt->cmnd_done(evt->cmnd);
-  } else if (evt->done)
+  } else if (evt->done && evt->crq.format != VIOSRP_MAD_FORMAT &&
+      evt->iu.srp.login_req.opcode != SRP_LOGIN_REQ)
    evt->done(evt);
   free_event_struct(&evt->hostdata->pool, evt);
   spin_lock_irqsave(hostdata->host->host_lock, flags);
-- 
1.7.1