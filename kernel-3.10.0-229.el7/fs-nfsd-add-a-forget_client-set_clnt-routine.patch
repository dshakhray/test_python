From 3347c6ef58d226cdb7c2316f878590828e588245 Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Tue, 16 Sep 2014 20:20:28 -0400
Subject: [fs] nfsd: add a forget_client set_clnt routine

Message-id: <1410898849-22126-145-git-send-email-bfields@redhat.com>
Patchwork-id: 95738
O-Subject: [Patch RHEL7 144/165] nfsd: add a forget_client set_clnt routine
Bugzilla: 1044798 1123721 1141932
RH-Acked-by: Benjamin Coddington <bcodding@redhat.com>
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Jeff Layton <jlayton@primarydata.com>

...that relies on the client_lock instead of client_mutex.

Signed-off-by: Jeff Layton <jlayton@primarydata.com>
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: a0926d15271a0139606d54d0521c527746e2815b
Bugzilla: 1044798
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/fault_inject.c b/fs/nfsd/fault_inject.c
index a0387fd..5f3ead0 100644
--- a/fs/nfsd/fault_inject.c
+++ b/fs/nfsd/fault_inject.c
@@ -136,7 +136,7 @@ static struct nfsd_fault_inject_op inject_ops[] = {
   .file     = "forget_clients",
   .get   = nfsd_inject_print_clients,
   .set_val  = nfsd_inject_set,
-  .set_clnt = nfsd_inject_set_client,
+  .set_clnt = nfsd_inject_forget_client,
   .forget   = nfsd_forget_client,
  },
  {
diff --git a/fs/nfsd/nfs4state.c b/fs/nfsd/nfs4state.c
index 2225e11..c4c28f8 100644
--- a/fs/nfsd/nfs4state.c
+++ b/fs/nfsd/nfs4state.c
@@ -5760,6 +5760,34 @@ u64 nfsd_forget_client(struct nfs4_client *clp, u64 max)
  return 1;
 }
 
+u64
+nfsd_inject_forget_client(struct nfsd_fault_inject_op *op,
+     struct sockaddr_storage *addr, size_t addr_size)
+{
+ u64 count = 0;
+ struct nfs4_client *clp;
+ struct nfsd_net *nn = net_generic(current->nsproxy->net_ns,
+       nfsd_net_id);
+
+ if (!nfsd_netns_ready(nn))
+  return count;
+
+ spin_lock(&nn->client_lock);
+ clp = nfsd_find_client(addr, addr_size);
+ if (clp) {
+  if (mark_client_expired_locked(clp) == nfs_ok)
+   ++count;
+  else
+   clp = NULL;
+ }
+ spin_unlock(&nn->client_lock);
+
+ if (clp)
+  expire_client(clp);
+
+ return count;
+}
+
 static void nfsd_print_count(struct nfs4_client *clp, unsigned int count,
         const char *type)
 {
diff --git a/fs/nfsd/state.h b/fs/nfsd/state.h
index 7c7580e..77a1903 100644
--- a/fs/nfsd/state.h
+++ b/fs/nfsd/state.h
@@ -480,6 +480,9 @@ struct nfs4_client *nfsd_find_client(struct sockaddr_storage *, size_t);
 
 u64 nfsd_inject_print_clients(struct nfsd_fault_inject_op *op);
 u64 nfsd_forget_client(struct nfs4_client *, u64);
+u64 nfsd_inject_forget_client(struct nfsd_fault_inject_op *,
+         struct sockaddr_storage *, size_t);
+
 u64 nfsd_forget_client_locks(struct nfs4_client*, u64);
 u64 nfsd_forget_client_openowners(struct nfs4_client *, u64);
 u64 nfsd_forget_client_delegations(struct nfs4_client *, u64);
-- 
1.7.1