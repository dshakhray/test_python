From 63fe883db28b4d0efe75beaf47fc84a9628507ac Mon Sep 17 00:00:00 2001
From: Stefan Assmann <sassmann@redhat.com>
Date: Tue, 26 Aug 2014 14:11:20 -0400
Subject: [ethernet] igb: Read flow control for i350 from correct EEPROM section

Message-id: <1409062359-13063-3-git-send-email-sassmann@redhat.com>
Patchwork-id: 89121
O-Subject: [RHEL7.1 PATCH 02/81] igb: Read flow control for i350 from correct EEPROM section
Bugzilla: 1091121
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Neil Horman <nhorman@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: "Fujinaka, Todd" <todd.fujinaka@intel.com>

Flow control is defined in the four EEPROM sections but the driver only reads
from section 0.

Signed-off-by: Todd Fujinaka <todd.fujinaka@intel.com>
Tested-by: Aaron Brown <aaron.f.brown@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Stefan Assmann <sassmann@redhat.com>
(cherry picked from commit c7cb020d0b670428eddd9702dfdc5ff0a48de653)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/igb/e1000_mac.c b/drivers/net/ethernet/intel/igb/e1000_mac.c
index f0dfd41..298f0ed 100644
--- a/drivers/net/ethernet/intel/igb/e1000_mac.c
+++ b/drivers/net/ethernet/intel/igb/e1000_mac.c
@@ -712,6 +712,7 @@ static s32 igb_set_fc_watermarks(struct e1000_hw *hw)
 static s32 igb_set_default_fc(struct e1000_hw *hw)
 {
  s32 ret_val = 0;
+ u16 lan_offset;
  u16 nvm_data;
 
  /* Read and store word 0x0F of the EEPROM. This word contains bits
@@ -722,7 +723,14 @@ static s32 igb_set_default_fc(struct e1000_hw *hw)
   * control setting, then the variable hw->fc will
   * be initialized based on a value in the EEPROM.
   */
- ret_val = hw->nvm.ops.read(hw, NVM_INIT_CONTROL2_REG, 1, &nvm_data);
+ if (hw->mac.type == e1000_i350) {
+  lan_offset = NVM_82580_LAN_FUNC_OFFSET(hw->bus.func);
+  ret_val = hw->nvm.ops.read(hw, NVM_INIT_CONTROL2_REG
+        + lan_offset, 1, &nvm_data);
+  } else {
+  ret_val = hw->nvm.ops.read(hw, NVM_INIT_CONTROL2_REG,
+        1, &nvm_data);
+  }
 
  if (ret_val) {
   hw_dbg("NVM Read Error\n");
-- 
1.7.1