From 7b01ea9d24a2941902c182d819fb2602f57fb2df Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:14:12 -0400
Subject: [scripts] modpost: handle non ABS crc symbols

Message-id: <1410545655-205645-624-git-send-email-dzickus@redhat.com>
Patchwork-id: 94594
O-Subject: [RHEL7 PATCH 623/626] scripts/mod/modpost.c: handle non ABS crc symbols
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit b5064654c538ad9a2eb1195d80e7593b2e1c1452
Author: Andi Kleen <ak@linux.intel.com>
Date:   Tue Nov 12 15:08:38 2013 -0800

    scripts/mod/modpost.c: handle non ABS crc symbols

    For some reason I managed to trick gcc into create CRC symbols that are
    not absolute anymore, but weak.

    Make modpost handle this case.

    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Cc: Al Viro <viro@ZenIV.linux.org.uk>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/scripts/mod/modpost.c b/scripts/mod/modpost.c
index 0473f07..fcd78ca 100644
--- a/scripts/mod/modpost.c
+++ b/scripts/mod/modpost.c
@@ -604,18 +604,17 @@ static void handle_modversions(struct module *mod, struct elf_info *info,
  else
   export = export_from_sec(info, get_secindex(info, sym));
 
+ /* CRC'd symbol */
+ if (strncmp(symname, CRC_PFX, strlen(CRC_PFX)) == 0) {
+  crc = (unsigned int) sym->st_value;
+  sym_update_crc(symname + strlen(CRC_PFX), mod, crc,
+    export);
+ }
+
  switch (sym->st_shndx) {
  case SHN_COMMON:
   warn("\"%s\" [%s] is COMMON symbol\n", symname, mod->name);
   break;
- case SHN_ABS:
-  /* CRC'd symbol */
-  if (strncmp(symname, CRC_PFX, strlen(CRC_PFX)) == 0) {
-   crc = (unsigned int) sym->st_value;
-   sym_update_crc(symname + strlen(CRC_PFX), mod, crc,
-     export);
-  }
-  break;
  case SHN_UNDEF:
   /* undefined symbol */
   if (ELF_ST_BIND(sym->st_info) != STB_GLOBAL &&
-- 
1.7.1