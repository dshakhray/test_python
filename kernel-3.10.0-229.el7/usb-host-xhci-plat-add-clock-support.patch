From 80755c828450d81a46fbb2849769b026822c6caf Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:09:23 -0400
Subject: [usb] host/xhci-plat: add clock support

Message-id: <1410887463-20674-492-git-send-email-dzickus@redhat.com>
Patchwork-id: 95382
O-Subject: [RHEL7 PATCH 491/591] usb: host: xhci-plat: add clock support
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 4718c177405112386a977fd9f1cba5fd6aa82315
Author: Gregory CLEMENT <gregory.clement@free-electrons.com>
Date:   Thu May 15 12:17:32 2014 +0200

    usb: host: xhci-plat: add clock support

    Some platforms (such as the Armada 38x ones) can gate the clock of
    their USB controller. This patch adds the support for one clock in
    xhci-plat, by enabling it during probe and disabling it on remove.

    To achieve this, it adds a 'struct clk *' member in xhci_hcd. While
    only used for now in xhci-plat, it might be used by other drivers in
    the future. Moreover, the xhci_hcd structure already holds other
    members such as msix_count and msix_entries, which are MSI-X specific,
    and therefore only used by xhci-pci.

    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Acked-by: Felipe Balbi <balbi@ti.com>
    Acked-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/host/xhci-plat.c b/drivers/usb/host/xhci-plat.c
index 5c11e3e..287359c 100644
--- a/drivers/usb/host/xhci-plat.c
+++ b/drivers/usb/host/xhci-plat.c
@@ -11,6 +11,7 @@
  * version 2 as published by the Free Software Foundation.
  */
 
+#include <linux/clk.h>
 #include <linux/dma-mapping.h>
 #include <linux/module.h>
 #include <linux/of.h>
@@ -91,6 +92,7 @@ static int xhci_plat_probe(struct platform_device *pdev)
  struct xhci_hcd  *xhci;
  struct resource         *res;
  struct usb_hcd  *hcd;
+ struct clk              *clk;
  int   ret;
  int   irq;
 
@@ -137,13 +139,26 @@ static int xhci_plat_probe(struct platform_device *pdev)
   goto release_mem_region;
  }
 
+ /*
+  * Not all platforms have a clk so it is not an error if the
+  * clock does not exists.
+  */
+ clk = devm_clk_get(&pdev->dev, NULL);
+ if (!IS_ERR(clk)) {
+  ret = clk_prepare_enable(clk);
+  if (ret)
+   goto unmap_registers;
+ }
+
  ret = usb_add_hcd(hcd, irq, IRQF_SHARED);
  if (ret)
-  goto unmap_registers;
+  goto disable_clk;
+
 
  /* USB 2.0 roothub is stored in the platform_device now. */
  hcd = dev_get_drvdata(&pdev->dev);
  xhci = hcd_to_xhci(hcd);
+ xhci->clk = clk;
  xhci->shared_hcd = usb_create_shared_hcd(driver, &pdev->dev,
    dev_name(&pdev->dev), hcd);
  if (!xhci->shared_hcd) {
@@ -172,6 +187,10 @@ put_usb3_hcd:
 dealloc_usb2_hcd:
  usb_remove_hcd(hcd);
 
+disable_clk:
+ if (!IS_ERR(clk))
+  clk_disable_unprepare(clk);
+
 unmap_registers:
  iounmap(hcd->regs);
 
@@ -188,11 +207,14 @@ static int xhci_plat_remove(struct platform_device *dev)
 {
  struct usb_hcd *hcd = platform_get_drvdata(dev);
  struct xhci_hcd *xhci = hcd_to_xhci(hcd);
+ struct clk *clk = xhci->clk;
 
  usb_remove_hcd(xhci->shared_hcd);
  usb_put_hcd(xhci->shared_hcd);
 
  usb_remove_hcd(hcd);
+ if (!IS_ERR(clk))
+  clk_disable_unprepare(clk);
  iounmap(hcd->regs);
  release_mem_region(hcd->rsrc_start, hcd->rsrc_len);
  usb_put_hcd(hcd);
diff --git a/drivers/usb/host/xhci.h b/drivers/usb/host/xhci.h
index 2774526..9ffecd5 100644
--- a/drivers/usb/host/xhci.h
+++ b/drivers/usb/host/xhci.h
@@ -1472,6 +1472,8 @@ struct xhci_hcd {
  /* msi-x vectors */
  int  msix_count;
  struct msix_entry *msix_entries;
+ /* optional clock */
+ struct clk  *clk;
  /* data structures */
  struct xhci_device_context_array *dcbaa;
  struct xhci_ring *cmd_ring;
-- 
1.7.1