From eec1f031de708873f2c135171887da5bcda1387f Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:03:50 -0400
Subject: [powerpc] smp: Use '==' instead of '<' for system_state

Message-id: <1410545655-205645-2-git-send-email-dzickus@redhat.com>
Patchwork-id: 94062
O-Subject: [RHEL7 PATCH 001/626] powerpc/smp: Use '==' instead of '<' for system_state
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit a5b45ded097908d40803b5c2770259398811b24e
Author: liguang <lig.fnst@cn.fujitsu.com>
Date:   Thu May 30 14:47:53 2013 +0800

    powerpc/smp: Use '==' instead of '<' for system_state

    'system_state < SYSTEM_RUNNING' will have same effect
    with 'system_state == SYSTEM_BOOTING', but the later
    one is more clearer.

    Signed-off-by: liguang <lig.fnst@cn.fujitsu.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/platforms/cell/smp.c b/arch/powerpc/platforms/cell/smp.c
index d35dbbc..f75f6fc 100644
--- a/arch/powerpc/platforms/cell/smp.c
+++ b/arch/powerpc/platforms/cell/smp.c
@@ -142,7 +142,7 @@ static int smp_cell_cpu_bootable(unsigned int nr)
   * during boot if the user requests it.  Odd-numbered
   * cpus are assumed to be secondary threads.
   */
- if (system_state < SYSTEM_RUNNING &&
+ if (system_state == SYSTEM_BOOTING &&
      cpu_has_feature(CPU_FTR_SMT) &&
      !smt_enabled_at_boot && cpu_thread_in_core(nr) != 0)
   return 0;
diff --git a/arch/powerpc/platforms/powernv/smp.c b/arch/powerpc/platforms/powernv/smp.c
index c22b2b3..89e3857 100644
--- a/arch/powerpc/platforms/powernv/smp.c
+++ b/arch/powerpc/platforms/powernv/smp.c
@@ -51,7 +51,7 @@ static int pnv_smp_cpu_bootable(unsigned int nr)
  /* Special case - we inhibit secondary thread startup
   * during boot if the user requests it.
   */
- if (system_state < SYSTEM_RUNNING && cpu_has_feature(CPU_FTR_SMT)) {
+ if (system_state == SYSTEM_BOOTING && cpu_has_feature(CPU_FTR_SMT)) {
   if (!smt_enabled_at_boot && cpu_thread_in_core(nr) != 0)
    return 0;
   if (smt_enabled_at_boot
diff --git a/arch/powerpc/platforms/pseries/smp.c b/arch/powerpc/platforms/pseries/smp.c
index b48ccb2..d98394c 100644
--- a/arch/powerpc/platforms/pseries/smp.c
+++ b/arch/powerpc/platforms/pseries/smp.c
@@ -192,7 +192,7 @@ static int smp_pSeries_cpu_bootable(unsigned int nr)
  /* Special case - we inhibit secondary thread startup
   * during boot if the user requests it.
   */
- if (system_state < SYSTEM_RUNNING && cpu_has_feature(CPU_FTR_SMT)) {
+ if (system_state == SYSTEM_BOOTING && cpu_has_feature(CPU_FTR_SMT)) {
   if (!smt_enabled_at_boot && cpu_thread_in_core(nr) != 0)
    return 0;
   if (smt_enabled_at_boot
-- 
1.7.1