From ad12ca2ce01d15727721b0f6f619e4aa5aacb6d3 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:52:48 -0400
Subject: [tools] perf/probe: Release allocated probe_trace_event if failed

Message-id: <1408953210-26343-281-git-send-email-jolsa@redhat.com>
Patchwork-id: 88938
O-Subject: [PATCH RHEL7.1 BZ1133083 280/322] perf probe: Release allocated probe_trace_event if failed
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 981d05adf2e2acc328abb929a6ed3536c0d41c5f
Author: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
Date: Thu Jan 16 09:39:44 2014 +0000

description
===========
To fix a memory leak, release all allocated probe_trace_event on the
error path of try_to_find_probe_trace_events.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/probe-event.c b/tools/perf/util/probe-event.c
index a4ee6b4..579b655 100644
--- a/tools/perf/util/probe-event.c
+++ b/tools/perf/util/probe-event.c
@@ -72,6 +72,7 @@ static int e_snprintf(char *str, size_t size, const char *format, ...)
 static char *synthesize_perf_probe_point(struct perf_probe_point *pp);
 static int convert_name_to_addr(struct perf_probe_event *pev,
     const char *exec);
+static void clear_probe_trace_event(struct probe_trace_event *tev);
 static struct machine machine;
 
 /* Initialize symbol maps and path of vmlinux/modules */
@@ -407,6 +408,14 @@ static int add_module_to_probe_trace_events(struct probe_trace_event *tevs,
  return ret;
 }
 
+static void clear_probe_trace_events(struct probe_trace_event *tevs, int ntevs)
+{
+ int i;
+
+ for (i = 0; i < ntevs; i++)
+  clear_probe_trace_event(tevs + i);
+}
+
 /* Try to find perf_probe_event with debuginfo */
 static int try_to_find_probe_trace_events(struct perf_probe_event *pev,
        struct probe_trace_event **tevs,
@@ -442,6 +451,10 @@ static int try_to_find_probe_trace_events(struct perf_probe_event *pev,
     ret = add_module_to_probe_trace_events(*tevs,
        ntevs, target);
   }
+  if (ret < 0) {
+   clear_probe_trace_events(*tevs, ntevs);
+   zfree(tevs);
+  }
   return ret < 0 ? ret : ntevs;
  }
 
-- 
1.7.1