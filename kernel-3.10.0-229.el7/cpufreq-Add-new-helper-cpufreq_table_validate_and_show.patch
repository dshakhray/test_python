From 54825b7e3c5e4016a7b51cd98361d17fc7c055ff Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:22:24 -0400
Subject: [cpufreq] Add new helper cpufreq_table_validate_and_show()

Message-id: <1409235879-1283-51-git-send-email-prarit@redhat.com>
Patchwork-id: 89376
O-Subject: [RHEL7.1 PATCH BZ 1134639 050/185] cpufreq: Add new helper cpufreq_table_validate_and_show()
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit 27047a603645d0885bcd72d7a0b6cce6e3c94ca7
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Mon Sep 16 18:56:03 2013 +0530

    cpufreq: Add new helper cpufreq_table_validate_and_show()

    Almost every cpufreq driver is required to validate its frequency table with:
    cpufreq_frequency_table_cpuinfo() and then expose it to cpufreq core with:
    cpufreq_frequency_table_get_attr().

    This patch creates another helper routine cpufreq_table_validate_and_show() that
    will do both these steps in a single call and will return 0 for success, error
    otherwise.

    This also fixes potential bugs in cpufreq drivers where people have called
    cpufreq_frequency_table_get_attr() before calling
    cpufreq_frequency_table_cpuinfo(), as the later may fail.

    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/freq_table.c b/drivers/cpufreq/freq_table.c
index 29ff77f..b9336ed 100644
--- a/drivers/cpufreq/freq_table.c
+++ b/drivers/cpufreq/freq_table.c
@@ -218,6 +218,18 @@ void cpufreq_frequency_table_put_attr(unsigned int cpu)
 }
 EXPORT_SYMBOL_GPL(cpufreq_frequency_table_put_attr);
 
+int cpufreq_table_validate_and_show(struct cpufreq_policy *policy,
+          struct cpufreq_frequency_table *table)
+{
+ int ret = cpufreq_frequency_table_cpuinfo(policy, table);
+
+ if (!ret)
+  cpufreq_frequency_table_get_attr(table, policy->cpu);
+
+ return ret;
+}
+EXPORT_SYMBOL_GPL(cpufreq_table_validate_and_show);
+
 void cpufreq_frequency_table_update_policy_cpu(struct cpufreq_policy *policy)
 {
  pr_debug("Updating show_table for new_cpu %u from last_cpu %u\n",
diff --git a/include/linux/cpufreq.h b/include/linux/cpufreq.h
index 60db9df..f55b6bd 100644
--- a/include/linux/cpufreq.h
+++ b/include/linux/cpufreq.h
@@ -436,6 +436,8 @@ void cpufreq_frequency_table_get_attr(struct cpufreq_frequency_table *table,
 void cpufreq_frequency_table_update_policy_cpu(struct cpufreq_policy *policy);
 
 void cpufreq_frequency_table_put_attr(unsigned int cpu);
+int cpufreq_table_validate_and_show(struct cpufreq_policy *policy,
+          struct cpufreq_frequency_table *table);
 
 ssize_t cpufreq_show_cpus(const struct cpumask *mask, char *buf);
 
-- 
1.7.1