From 75af09338f635fd44cdc6654809f286cddfafe1f Mon Sep 17 00:00:00 2001
From: Jason Wang <jasowang@redhat.com>
Date: Mon, 29 Sep 2014 00:58:47 -0400
Subject: [virt] hyperv/util: Fix a bug in the KVP code

Message-id: <1411952358-34104-4-git-send-email-jasowang@redhat.com>
Patchwork-id: 96755
O-Subject: [RHEL7.1 PATCH 03/34] Drivers: hv: util: Fix a bug in the KVP code
Bugzilla: 1102584
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Vitaly Kuznetsov <vkuznets@redhat.com>

From: K. Y. Srinivasan <kys@microsoft.com>

Add code to poll the channel since we process only one message
at a time and the host may not interrupt us. Also increase the
receive buffer size since some KVP messages are close to 8K bytes in size.

Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
Cc: <stable@vger.kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 9bd2d0dfe4714dd5d7c09a93a5c9ea9e14ceb3fc)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/hv/hv_kvp.c b/drivers/hv/hv_kvp.c
index 09988b2..1dc2861 100644
--- a/drivers/hv/hv_kvp.c
+++ b/drivers/hv/hv_kvp.c
@@ -127,6 +127,17 @@ kvp_work_func(struct work_struct *dummy)
  kvp_respond_to_host(NULL, HV_E_FAIL);
 }
 
+static void poll_channel(struct vmbus_channel *channel)
+{
+ if (channel->target_cpu != smp_processor_id())
+  smp_call_function_single(channel->target_cpu,
+      hv_kvp_onchannelcallback,
+      channel, true);
+ else
+  hv_kvp_onchannelcallback(channel);
+}
+
+
 static int kvp_handle_handshake(struct hv_kvp_msg *msg)
 {
  int ret = 1;
@@ -155,7 +166,7 @@ static int kvp_handle_handshake(struct hv_kvp_msg *msg)
   kvp_register(dm_reg_value);
   kvp_transaction.active = false;
   if (kvp_transaction.kvp_context)
-   hv_kvp_onchannelcallback(kvp_transaction.kvp_context);
+   poll_channel(kvp_transaction.kvp_context);
  }
  return ret;
 }
@@ -568,7 +579,7 @@ response_done:
 
  vmbus_sendpacket(channel, recv_buffer, buf_len, req_id,
     VM_PKT_DATA_INBAND, 0);
-
+ poll_channel(channel);
 }
 
 /*
@@ -603,7 +614,7 @@ void hv_kvp_onchannelcallback(void *context)
   return;
  }
 
- vmbus_recvpacket(channel, recv_buffer, PAGE_SIZE * 2, &recvlen,
+ vmbus_recvpacket(channel, recv_buffer, PAGE_SIZE * 4, &recvlen,
     &requestid);
 
  if (recvlen > 0) {
diff --git a/drivers/hv/hv_util.c b/drivers/hv/hv_util.c
index c748f18..788dbc0 100644
--- a/drivers/hv/hv_util.c
+++ b/drivers/hv/hv_util.c
@@ -319,7 +319,7 @@ static int util_probe(struct hv_device *dev,
   (struct hv_util_service *)dev_id->driver_data;
  int ret;
 
- srv->recv_buffer = kmalloc(PAGE_SIZE * 2, GFP_KERNEL);
+ srv->recv_buffer = kmalloc(PAGE_SIZE * 4, GFP_KERNEL);
  if (!srv->recv_buffer)
   return -ENOMEM;
  if (srv->util_init) {
-- 
1.7.1