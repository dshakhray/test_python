From e362a8442c9d126ec056241913397f7fa93c26af Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 18:58:28 -0400
Subject: [fs] btrfs: remove unused variables from disk-io.c

Message-id: <1407179109-13714-22-git-send-email-sandeen@redhat.com>
Patchwork-id: 86965
O-Subject: [RHEL7.1 PATCH 021/422] btrfs: remove unused variables from disk-io.c
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Valentina Giusti <valentina.giusti@microon.de>

commit 71db2a7751b6c4befad06e66a26d7f2b8dd3c1b9
Author: Valentina Giusti <valentina.giusti@microon.de>
Date:   Mon Nov 4 22:34:23 2013 +0100

    btrfs: remove unused variables from disk-io.c

    Remove unused variables:
    * tree from csum_dirty_buffer,
    * tree from btree_readpage_end_io_hook,
    * tree from btree_writepages,
    * bytenr from btrfs_create_tree,
    * fs_info from end_workqueue_fn.

    Signed-off-by: Valentina Giusti <valentina.giusti@microon.de>
    Signed-off-by: Josef Bacik <jbacik@fusionio.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/disk-io.c b/fs/btrfs/disk-io.c
index 037e580..a20ba87 100644
--- a/fs/btrfs/disk-io.c
+++ b/fs/btrfs/disk-io.c
@@ -465,13 +465,10 @@ static int btree_read_extent_buffer_pages(struct btrfs_root *root,
 
 static int csum_dirty_buffer(struct btrfs_root *root, struct page *page)
 {
- struct extent_io_tree *tree;
  u64 start = page_offset(page);
  u64 found_start;
  struct extent_buffer *eb;
 
- tree = &BTRFS_I(page->mapping->host)->io_tree;
-
  eb = (struct extent_buffer *)page->private;
  if (page != eb->pages[0])
   return 0;
@@ -570,7 +567,6 @@ static int btree_readpage_end_io_hook(struct btrfs_io_bio *io_bio,
           u64 phy_offset, struct page *page,
           u64 start, u64 end, int mirror)
 {
- struct extent_io_tree *tree;
  u64 found_start;
  int found_level;
  struct extent_buffer *eb;
@@ -581,7 +577,6 @@ static int btree_readpage_end_io_hook(struct btrfs_io_bio *io_bio,
  if (!page->private)
   goto out;
 
- tree = &BTRFS_I(page->mapping->host)->io_tree;
  eb = (struct extent_buffer *)page->private;
 
  /* the pending IO might have been the only thing that kept this buffer
@@ -968,11 +963,9 @@ static int btree_migratepage(struct address_space *mapping,
 static int btree_writepages(struct address_space *mapping,
        struct writeback_control *wbc)
 {
- struct extent_io_tree *tree;
  struct btrfs_fs_info *fs_info;
  int ret;
 
- tree = &BTRFS_I(mapping->host)->io_tree;
  if (wbc->sync_mode == WB_SYNC_NONE) {
 
   if (wbc->for_kupdate)
@@ -1273,7 +1266,6 @@ struct btrfs_root *btrfs_create_tree(struct btrfs_trans_handle *trans,
  struct btrfs_root *root;
  struct btrfs_key key;
  int ret = 0;
- u64 bytenr;
  uuid_le uuid;
 
  root = btrfs_alloc_root(fs_info);
@@ -1295,7 +1287,6 @@ struct btrfs_root *btrfs_create_tree(struct btrfs_trans_handle *trans,
   goto fail;
  }
 
- bytenr = leaf->start;
  memset_extent_buffer(leaf, 0, 0, sizeof(struct btrfs_header));
  btrfs_set_header_bytenr(leaf, leaf->start);
  btrfs_set_header_generation(leaf, trans->transid);
@@ -1684,12 +1675,10 @@ static void end_workqueue_fn(struct btrfs_work *work)
 {
  struct bio *bio;
  struct end_io_wq *end_io_wq;
- struct btrfs_fs_info *fs_info;
  int error;
 
  end_io_wq = container_of(work, struct end_io_wq, work);
  bio = end_io_wq->bio;
- fs_info = end_io_wq->info;
 
  error = end_io_wq->error;
  bio->bi_private = end_io_wq->private;
-- 
1.7.1