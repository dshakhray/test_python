From 2309d154b6d5c33dff23eeb4f4ac7132b7f7645f Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 23 Oct 2014 09:54:22 -0400
Subject: [fs] ext4: clean up error handling in swap_inode_boot_loader()

Message-id: <1414058125-4183-109-git-send-email-lczerner@redhat.com>
Patchwork-id: 98267
O-Subject: [RHEL 7.1 PATCH v2 108/171] ext4: clean up error handling in swap_inode_boot_loader()
Bugzilla: 1150139
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Theodore Ts'o <tytso@mit.edu>

BZ 1150139
https://bugzilla.redhat.com/show_bug.cgi?id=1150139

BREW 8142710
https://brewweb.devel.redhat.com/taskinfo?taskID=8142710

Upstream commit d8558a297878f1a7af995f6801983783e1487208

 Tighten up the code to make the code easier to read and maintain.

 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/ioctl.c b/fs/ext4/ioctl.c
index a2a837f..0f2252e 100644
--- a/fs/ext4/ioctl.c
+++ b/fs/ext4/ioctl.c
@@ -104,21 +104,15 @@ static long swap_inode_boot_loader(struct super_block *sb,
  struct ext4_inode_info *ei_bl;
  struct ext4_sb_info *sbi = EXT4_SB(sb);
 
- if (inode->i_nlink != 1 || !S_ISREG(inode->i_mode)) {
-  err = -EINVAL;
-  goto swap_boot_out;
- }
+ if (inode->i_nlink != 1 || !S_ISREG(inode->i_mode))
+  return -EINVAL;
 
- if (!inode_owner_or_capable(inode) || !capable(CAP_SYS_ADMIN)) {
-  err = -EPERM;
-  goto swap_boot_out;
- }
+ if (!inode_owner_or_capable(inode) || !capable(CAP_SYS_ADMIN))
+  return -EPERM;
 
  inode_bl = ext4_iget(sb, EXT4_BOOT_LOADER_INO);
- if (IS_ERR(inode_bl)) {
-  err = PTR_ERR(inode_bl);
-  goto swap_boot_out;
- }
+ if (IS_ERR(inode_bl))
+  return PTR_ERR(inode_bl);
  ei_bl = EXT4_I(inode_bl);
 
  filemap_flush(inode->i_mapping);
@@ -193,20 +187,14 @@ static long swap_inode_boot_loader(struct super_block *sb,
    ext4_mark_inode_dirty(handle, inode);
   }
  }
-
  ext4_journal_stop(handle);
-
  ext4_double_up_write_data_sem(inode, inode_bl);
 
 journal_err_out:
  ext4_inode_resume_unlocked_dio(inode);
  ext4_inode_resume_unlocked_dio(inode_bl);
-
  unlock_two_nondirectories(inode, inode_bl);
-
  iput(inode_bl);
-
-swap_boot_out:
  return err;
 }
 
-- 
1.7.1