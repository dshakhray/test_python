From d1573ed4169e5e8161085f17443e992a2d1b3429 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:07:50 -0400
Subject: [powerpc] Fix alignment of secondary cpu spin vars

Message-id: <1410545655-205645-242-git-send-email-dzickus@redhat.com>
Patchwork-id: 94259
O-Subject: [RHEL7 PATCH 241/626] powerpc: Fix alignment of secondary cpu spin vars
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 7d4151b5098fb0bf7f6f8d1156e1ab9d83260580
Author: Olof Johansson <olof@lixom.net>
Date:   Sat Dec 28 13:01:47 2013 -0800

    powerpc: Fix alignment of secondary cpu spin vars

    Commit 5c0484e25ec0 ('powerpc: Endian safe trampoline') resulted in
    losing proper alignment of the spinlock variables used when booting
    secondary CPUs, causing some quite odd issues with failing to boot on
    PA Semi-based systems.

    This showed itself on ppc64_defconfig, but not on pasemi_defconfig,
    so it had gone unnoticed when I initially tested the LE patch set.

    Fix is to add explicit alignment instead of relying on good luck. :)

    [ It appears that there is a different issue with PA Semi systems
      however this fix is definitely correct so applying anyway -- BenH
    ]

    Fixes: 5c0484e25ec0 ('powerpc: Endian safe trampoline')
    Reported-by: Christian Zigotzky <chzigotzky@xenosoft.de>
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=67811
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kernel/head_64.S b/arch/powerpc/kernel/head_64.S
index fad2abd..4f0946d 100644
--- a/arch/powerpc/kernel/head_64.S
+++ b/arch/powerpc/kernel/head_64.S
@@ -80,6 +80,7 @@ END_FTR_SECTION(0, 1)
   * of the function that the cpu should jump to to continue
   * initialization.
   */
+ .balign 8
  .globl  __secondary_hold_spinloop
 __secondary_hold_spinloop:
  .llong 0x0
-- 
1.7.1