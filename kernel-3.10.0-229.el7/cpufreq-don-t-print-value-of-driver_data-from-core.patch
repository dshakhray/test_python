From 8a71267150c6611a70a1d170091f1772171d588e Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:24:01 -0400
Subject: [cpufreq] don't print value of .driver_data from core

Message-id: <1409235879-1283-148-git-send-email-prarit@redhat.com>
Patchwork-id: 89527
O-Subject: [RHEL7.1 PATCH BZ 1134639 147/185] cpufreq: don't print value of .driver_data from core
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit ae87f10f35f75deb8f74dbd92d062200932c2f26
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Fri Mar 28 19:11:45 2014 +0530

    cpufreq: don't print value of .driver_data from core

    CPUFreq core doesn't control value of .driver_data and this field is
    completely driver specific. This can contain any value and not only
    indexes. For most of the drivers, which aren't using this field, its
    value is zero. So, printing this from core doesn't make any sense.
    Don't print it.

    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/freq_table.c b/drivers/cpufreq/freq_table.c
index ea0b32f..08e7bbc 100644
--- a/drivers/cpufreq/freq_table.c
+++ b/drivers/cpufreq/freq_table.c
@@ -36,8 +36,7 @@ int cpufreq_frequency_table_cpuinfo(struct cpufreq_policy *policy,
       && (table[i].flags & CPUFREQ_BOOST_FREQ))
    continue;
 
-  pr_debug("table entry %u: %u kHz, %u driver_data\n",
-     i, freq, table[i].driver_data);
+  pr_debug("table entry %u: %u kHz\n", i, freq);
   if (freq < min_freq)
    min_freq = freq;
   if (freq > max_freq)
@@ -175,8 +174,8 @@ int cpufreq_frequency_table_target(struct cpufreq_policy *policy,
  } else
   *index = optimal.driver_data;
 
- pr_debug("target is %u (%u kHz, %u)\n", *index, table[*index].frequency,
-  table[*index].driver_data);
+ pr_debug("target index is %u, freq is:%u kHz\n", *index,
+   table[*index].frequency);
 
  return 0;
 }
-- 
1.7.1