From a9e7c473f2bafdadd183425f66c330ab35698119 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Thu, 23 Oct 2014 20:01:18 -0400
Subject: [md] dm-thin-metadata: change dm_thin_find_block to allow blocking, but not issuing, IO

Message-id: <1414094494-22068-9-git-send-email-snitzer@redhat.com>
Patchwork-id: 98340
O-Subject: [RHEL7.2 PATCH 08/24] dm thin metadata: change dm_thin_find_block to allow blocking, but not issuing, IO
Bugzilla: 1156161
RH-Acked-by: Heinz Mauelshagen <heinzm@redhat.com>
RH-Acked-by: Joe Thornber <thornber@redhat.com>

BZ: 1156161

Upstream linux-dm.git commit 1d1b64531aa3856d5a0b4dee074a5d49a711f426
Author: Joe Thornber <ejt@redhat.com>
Date:   Mon Oct 6 15:24:55 2014 +0100

    dm thin metadata: change dm_thin_find_block to allow blocking, but not issuing, IO

    This change is a prerequisite for allowing metadata to be prefetched.

    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/dm-thin-metadata.c b/drivers/md/dm-thin-metadata.c
index e9d33ad..ee42d1c 100644
--- a/drivers/md/dm-thin-metadata.c
+++ b/drivers/md/dm-thin-metadata.c
@@ -1384,42 +1384,38 @@ static bool __snapshotted_since(struct dm_thin_device *td, uint32_t time)
 }
 
 int dm_thin_find_block(struct dm_thin_device *td, dm_block_t block,
-         int can_block, struct dm_thin_lookup_result *result)
+         int can_issue_io, struct dm_thin_lookup_result *result)
 {
- int r = -EINVAL;
- uint64_t block_time = 0;
+ int r;
  __le64 value;
  struct dm_pool_metadata *pmd = td->pmd;
  dm_block_t keys[2] = { td->id, block };
  struct dm_btree_info *info;
 
- if (can_block) {
-  down_read(&pmd->root_lock);
-  info = &pmd->info;
- } else if (down_read_trylock(&pmd->root_lock))
-  info = &pmd->nb_info;
- else
-  return -EWOULDBLOCK;
-
  if (pmd->fail_io)
-  goto out;
+  return -EINVAL;
 
- r = dm_btree_lookup(info, pmd->root, keys, &value);
- if (!r)
-  block_time = le64_to_cpu(value);
+ down_read(&pmd->root_lock);
 
-out:
- up_read(&pmd->root_lock);
+ if (can_issue_io) {
+  info = &pmd->info;
+ } else
+  info = &pmd->nb_info;
 
+ r = dm_btree_lookup(info, pmd->root, keys, &value);
  if (!r) {
+  uint64_t block_time = 0;
   dm_block_t exception_block;
   uint32_t exception_time;
+
+  block_time = le64_to_cpu(value);
   unpack_block_time(block_time, &exception_block,
       &exception_time);
   result->block = exception_block;
   result->shared = __snapshotted_since(td, exception_time);
  }
 
+ up_read(&pmd->root_lock);
  return r;
 }
 
diff --git a/drivers/md/dm-thin-metadata.h b/drivers/md/dm-thin-metadata.h
index e3c857d..efedd5a 100644
--- a/drivers/md/dm-thin-metadata.h
+++ b/drivers/md/dm-thin-metadata.h
@@ -139,12 +139,12 @@ struct dm_thin_lookup_result {
 
 /*
  * Returns:
- *   -EWOULDBLOCK iff @can_block is set and would block.
+ *   -EWOULDBLOCK iff @can_issue_io is set and would issue IO
  *   -ENODATA iff that mapping is not present.
  *   0 success
  */
 int dm_thin_find_block(struct dm_thin_device *td, dm_block_t block,
-         int can_block, struct dm_thin_lookup_result *result);
+         int can_issue_io, struct dm_thin_lookup_result *result);
 
 /*
  * Obtain an unused block.
-- 
1.7.1