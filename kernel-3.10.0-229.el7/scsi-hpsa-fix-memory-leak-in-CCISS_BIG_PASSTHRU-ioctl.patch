From 0419c11f6fac2ab6b5e5ccf725b15fb3526b9795 Mon Sep 17 00:00:00 2001
From: Tomas Henzl <thenzl@redhat.com>
Date: Mon, 8 Sep 2014 14:30:55 -0400
Subject: [scsi] hpsa: fix memory leak in CCISS_BIG_PASSTHRU ioctl

Message-id: <1410186734-19986-5-git-send-email-thenzl@redhat.com>
Patchwork-id: 92029
O-Subject: [RHEL6.6 e-stor PATCH 04/83] hpsa: fix memory leak in CCISS_BIG_PASSTHRU ioctl
Bugzilla: 1069185
RH-Acked-by: Maurizio Lombardi <mlombard@redhat.com>
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Ewan Milne <emilne@redhat.com>

We were leaking a command buffer if a DMA mapping error was
encountered in the CCISS_BIG_PASSTHRU ioctl.

Signed-off-by: Stephen M. Cameron <scameron@beardog.cce.hp.com>
Signed-off-by: James Bottomley <JBottomley@Parallels.com>
(cherry picked from commit e2d4a1f6b497e39d68775378960ad27be4f86250)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/hpsa.c b/drivers/scsi/hpsa.c
index d8f1da3..bb848af 100644
--- a/drivers/scsi/hpsa.c
+++ b/drivers/scsi/hpsa.c
@@ -3180,7 +3180,7 @@ static int hpsa_big_passthru_ioctl(struct ctlr_info *h, void __user *argp)
     hpsa_pci_unmap(h->pdev, c, i,
      PCI_DMA_BIDIRECTIONAL);
     status = -ENOMEM;
-    goto cleanup1;
+    goto cleanup0;
    }
    c->SG[i].Addr.lower = temp64.val32.lower;
    c->SG[i].Addr.upper = temp64.val32.upper;
@@ -3196,24 +3196,23 @@ static int hpsa_big_passthru_ioctl(struct ctlr_info *h, void __user *argp)
  /* Copy the error information out */
  memcpy(&ioc->error_info, c->err_info, sizeof(ioc->error_info));
  if (copy_to_user(argp, ioc, sizeof(*ioc))) {
-  cmd_special_free(h, c);
   status = -EFAULT;
-  goto cleanup1;
+  goto cleanup0;
  }
  if (ioc->Request.Type.Direction == XFER_READ && ioc->buf_size > 0) {
   /* Copy the data out of the buffer we created */
   BYTE __user *ptr = ioc->buf;
   for (i = 0; i < sg_used; i++) {
    if (copy_to_user(ptr, buff[i], buff_size[i])) {
-    cmd_special_free(h, c);
     status = -EFAULT;
-    goto cleanup1;
+    goto cleanup0;
    }
    ptr += buff_size[i];
   }
  }
- cmd_special_free(h, c);
  status = 0;
+cleanup0:
+ cmd_special_free(h, c);
 cleanup1:
  if (buff) {
   for (i = 0; i < sg_used; i++)
-- 
1.7.1