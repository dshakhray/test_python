From e09b88de27fa99aa0808733f07037cdc5af550fb Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Fri, 13 Jun 2014 14:37:09 -0400
Subject: [scsi] remove a useless get_put_device pair in scsi_requeue_command

Message-id: <1402670238-13916-142-git-send-email-snitzer@redhat.com>
Patchwork-id: 83866
O-Subject: [RHEL7.1 PATCH 141/150] scsi: remove a useless get_put_device pair in scsi_requeue_command
Bugzilla: 1105204
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Paolo Bonzini <pbonzini@redhat.com>

BZ: 1105204

Upstream commit 134997a041f70d4aa5434d2833c8a3cf33697899
Author: Christoph Hellwig <hch@infradead.org>
Date:   Thu Feb 20 14:20:58 2014 -0800

    [SCSI] remove a useless get/put_device pair in scsi_requeue_command

    Avoid a spurious device get/put pair by cleaning up scsi_requeue_command
    and folding scsi_unprep_request into it.

    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/scsi_lib.c b/drivers/scsi/scsi_lib.c
index 09b97d8..e6641bd 100644
--- a/drivers/scsi/scsi_lib.c
+++ b/drivers/scsi/scsi_lib.c
@@ -97,29 +97,6 @@ EXPORT_SYMBOL_GPL(scsi_unregister_acpi_bus_type);
  */
 #define SCSI_QUEUE_DELAY 3
 
-/*
- * Function: scsi_unprep_request()
- *
- * Purpose: Remove all preparation done for a request, including its
- *  associated scsi_cmnd, so that it can be requeued.
- *
- * Arguments: req - request to unprepare
- *
- * Lock status: Assumed that no locks are held upon entry.
- *
- * Returns: Nothing.
- */
-static void scsi_unprep_request(struct request *req)
-{
- struct scsi_cmnd *cmd = req->special;
-
- blk_unprep_request(req);
- req->special = NULL;
-
- scsi_put_command(cmd);
- put_device(&cmd->device->sdev_gendev);
-}
-
 /**
  * __scsi_queue_insert - private queue insertion
  * @cmd: The SCSI command being requeued
@@ -526,16 +503,10 @@ static void scsi_requeue_command(struct request_queue *q, struct scsi_cmnd *cmd)
  struct request *req = cmd->request;
  unsigned long flags;
 
- /*
-  * We need to hold a reference on the device to avoid the queue being
-  * killed after the unlock and before scsi_run_queue is invoked which
-  * may happen because scsi_unprep_request() puts the command which
-  * releases its reference on the device.
-  */
- get_device(&sdev->sdev_gendev);
-
  spin_lock_irqsave(q->queue_lock, flags);
- scsi_unprep_request(req);
+ blk_unprep_request(req);
+ req->special = NULL;
+ scsi_put_command(cmd);
  blk_requeue_request(q, req);
  spin_unlock_irqrestore(q->queue_lock, flags);
 
-- 
1.7.1