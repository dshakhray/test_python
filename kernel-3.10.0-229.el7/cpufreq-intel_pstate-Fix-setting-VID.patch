From 659103d226714eaff025f4255868be1fbdad8df9 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:24:19 -0400
Subject: [cpufreq] intel_pstate: Fix setting VID

Message-id: <1409235879-1283-166-git-send-email-prarit@redhat.com>
Patchwork-id: 89526
O-Subject: [RHEL7.1 PATCH BZ 1134639 165/185] intel_pstate: Fix setting VID
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit c16ed06024a6e699c332831dd50d8276744e3de8
Author: Dirk Brandewie <dirk.j.brandewie@intel.com>
Date:   Fri Jun 20 07:27:58 2014 -0700

    intel_pstate: Fix setting VID

    Commit 21855ff5 (intel_pstate: Set turbo VID for BayTrail) introduced
    setting the turbo VID which is required to prevent a machine check on
    some Baytrail SKUs under heavy graphics based workloads.  The
    docmumentation update that brought the requirement to light also
    changed the bit mask used for enumerating P state and VID values from
    0x7f to 0x3f.

    This change returns the mask value to 0x7f.

    Tested with the Intel NUC DN2820FYK,
    BIOS version FYBYT10H.86A.0034.2014.0513.1413 with v3.16-rc1 and
    v3.14.8 kernel versions.

    Fixes: 21855ff5 (intel_pstate: Set turbo VID for BayTrail)
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=77951
    Reported-and-tested-by: Rune Reterson <rune@megahurts.dk>
    Reported-and-tested-by: Eric Eickmeyer <erich@ericheickmeyer.com>
    Cc: 3.13+ <stable@vger.kernel.org>  # 3.13+
    Signed-off-by: Dirk Brandewie <dirk.j.brandewie@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
Cc: Tony Camuso <tcamuso@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/intel_pstate.c b/drivers/cpufreq/intel_pstate.c
index 924bb2d..74376d6 100644
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@ -357,21 +357,21 @@ static int byt_get_min_pstate(void)
 {
  u64 value;
  rdmsrl(BYT_RATIOS, value);
- return (value >> 8) & 0x3F;
+ return (value >> 8) & 0x7F;
 }
 
 static int byt_get_max_pstate(void)
 {
  u64 value;
  rdmsrl(BYT_RATIOS, value);
- return (value >> 16) & 0x3F;
+ return (value >> 16) & 0x7F;
 }
 
 static int byt_get_turbo_pstate(void)
 {
  u64 value;
  rdmsrl(BYT_TURBO_RATIOS, value);
- return value & 0x3F;
+ return value & 0x7F;
 }
 
 static void byt_set_pstate(struct cpudata *cpudata, int pstate)
@@ -405,8 +405,8 @@ static void byt_get_vid(struct cpudata *cpudata)
 
 
  rdmsrl(BYT_VIDS, value);
- cpudata->vid.min = int_tofp((value >> 8) & 0x3f);
- cpudata->vid.max = int_tofp((value >> 16) & 0x3f);
+ cpudata->vid.min = int_tofp((value >> 8) & 0x7f);
+ cpudata->vid.max = int_tofp((value >> 16) & 0x7f);
  cpudata->vid.ratio = div_fp(
   cpudata->vid.max - cpudata->vid.min,
   int_tofp(cpudata->pstate.max_pstate -
-- 
1.7.1