From 90364784dacb5a3ac04f9ff61cec5b1dbc962450 Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <jkysela@redhat.com>
Date: Wed, 3 Sep 2014 07:34:25 -0400
Subject: [alsa] seq: correctly detect input buffer overflow

Message-id: <140972823573-325-patchset-jkysela@redhat.com>
Patchwork-id: 91021
O-Subject: [RHEL 7.1 PATCH 324/442] ALSA: seq: correctly detect input buffer overflow
Bugzilla: 1112200
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>

snd_seq_event_dup returns -ENOMEM in some buffer-full conditions,
but usually returns -EAGAIN. Make -EAGAIN trigger the overflow
condition in snd_seq_fifo_event_in so that the fifo is cleared
and -ENOSPC is returned to userspace as stated in the alsa-lib docs.

Signed-off-by: Adam Goode <agoode@google.com>
Signed-off-by: Takashi Iwai <tiwai@suse.de>

(picked from kernel: 21fd3e956ee8a307a06bc6e095f5767a00eb2a7e)
rhbz#1112200
Signed-off-by: Jaroslav Kysela <jkysela@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/sound/core/seq/seq_fifo.c b/sound/core/seq/seq_fifo.c
index 5599899..53a403e 100644
--- a/sound/core/seq/seq_fifo.c
+++ b/sound/core/seq/seq_fifo.c
@@ -124,7 +124,7 @@ int snd_seq_fifo_event_in(struct snd_seq_fifo *f,
  snd_use_lock_use(&f->use_lock);
  err = snd_seq_event_dup(f->pool, event, &cell, 1, NULL); /* always non-blocking */
  if (err < 0) {
-  if (err == -ENOMEM)
+  if ((err == -ENOMEM) || (err == -EAGAIN))
    atomic_inc(&f->overflow);
   snd_use_lock_free(&f->use_lock);
   return err;
-- 
1.7.1