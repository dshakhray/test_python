From 997dd7ece91e350fba3529db8daf51b71710a1fc Mon Sep 17 00:00:00 2001
From: Florian Westphal <fwestpha@redhat.com>
Date: Tue, 18 Nov 2014 20:56:34 -0500
Subject: [net] netfilter: xt_tcpmss: lookup route from proper net namespace

Message-id: <1416344195-20265-3-git-send-email-fwestpha@redhat.com>
Patchwork-id: 100267
O-Subject: [PATCH 2/3] [RHEL7.1 net] netfilter: xt_TCPMSS: lookup route from proper net namespace
Bugzilla: 1163847
RH-Acked-by: Daniel Borkmann <dborkman@redhat.com>
RH-Acked-by: Jesper Brouer <jbrouer@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Marcelo Leitner <mleitner@redhat.com>

commit 7722e0d1c076d9610f00d79bde8af977157aa23b
Author: Gao feng <gaofeng@cn.fujitsu.com>
Date:   Thu Sep 26 15:00:31 2013 +0800

    netfilter: xt_TCPMSS: lookup route from proper net namespace

    Otherwise the pmtu will be incorrect.

    Signed-off-by: Gao feng <gaofeng@cn.fujitsu.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/netfilter/xt_TCPMSS.c b/net/netfilter/xt_TCPMSS.c
index 62776de..e762de5 100644
--- a/net/netfilter/xt_TCPMSS.c
+++ b/net/netfilter/xt_TCPMSS.c
@@ -43,7 +43,8 @@ optlen(const u_int8_t *opt, unsigned int offset)
   return opt[offset+1];
 }
 
-static u_int32_t tcpmss_reverse_mtu(const struct sk_buff *skb,
+static u_int32_t tcpmss_reverse_mtu(struct net *net,
+        const struct sk_buff *skb,
         unsigned int family)
 {
  struct flowi fl;
@@ -64,7 +65,7 @@ static u_int32_t tcpmss_reverse_mtu(const struct sk_buff *skb,
  rcu_read_lock();
  ai = nf_get_afinfo(family);
  if (ai != NULL)
-  ai->route(&init_net, (struct dst_entry **)&rt, &fl, false);
+  ai->route(net, (struct dst_entry **)&rt, &fl, false);
  rcu_read_unlock();
 
  if (rt != NULL) {
@@ -107,7 +108,8 @@ tcpmss_mangle_packet(struct sk_buff *skb,
   return -1;
 
  if (info->mss == XT_TCPMSS_CLAMP_PMTU) {
-  unsigned int in_mtu = tcpmss_reverse_mtu(skb, family);
+  struct net *net = dev_net(par->in ? par->in : par->out);
+  unsigned int in_mtu = tcpmss_reverse_mtu(net, skb, family);
 
   if (dst_mtu(skb_dst(skb)) <= minlen) {
    net_err_ratelimited("unknown or invalid path-MTU (%u)\n",
-- 
1.7.1