From 209daec457af07824cd8bcac70c57bf42a58a826 Mon Sep 17 00:00:00 2001
From: Ivan Vecera <ivecera@redhat.com>
Date: Mon, 8 Sep 2014 16:13:44 -0400
Subject: [ethernet] be2net: fix build dependency on VxLAN

Message-id: <1410192881-30702-22-git-send-email-ivecera@redhat.com>
Patchwork-id: 92459
O-Subject: [RHEL7.1 PATCH 21/78] be2net: fix build dependency on VxLAN
Bugzilla: 1088575 1093399 1099545
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>

BZ: #1088575
BZ: #1093399
BZ: #1099545

Upstream commit(s):
commit c5abe7c0a44ac2e8147543203de48b4aa0d4eaec
Author: Sathya Perla <sathya.perla@emulex.com>
Date:   Tue Apr 1 12:33:59 2014 +0530

    be2net: fix build dependency on VxLAN

    Introduce a CONFIG_BE2NET_VXLAN define to control be2net's build
    dependency on the VXLAN driver.

    Without this fix, the kernel build fails when VxLAN driver is
    selected to be built as a module while be2net is built-in.

    fixes: c9c47142 ("be2net: csum, tso and rss steering offload support for VxLAN")

    Signed-off-by: Sathya Perla <sathya.perla@emulex.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Ivan Vecera <ivecera@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/emulex/benet/Kconfig b/drivers/net/ethernet/emulex/benet/Kconfig
index 231129d..ea94a8e 100644
--- a/drivers/net/ethernet/emulex/benet/Kconfig
+++ b/drivers/net/ethernet/emulex/benet/Kconfig
@@ -4,3 +4,11 @@ config BE2NET
  ---help---
    This driver implements the NIC functionality for ServerEngines'
    10Gbps network adapter - BladeEngine.
+
+config BE2NET_VXLAN
+        bool "VXLAN offload support on be2net driver"
+        default y
+        depends on BE2NET && VXLAN && !(BE2NET=y && VXLAN=m)
+        ---help---
+   Say Y here if you want to enable VXLAN offload support on
+   be2net driver.
diff --git a/drivers/net/ethernet/emulex/benet/be_main.c b/drivers/net/ethernet/emulex/benet/be_main.c
index d572130..c71fdef 100644
--- a/drivers/net/ethernet/emulex/benet/be_main.c
+++ b/drivers/net/ethernet/emulex/benet/be_main.c
@@ -2868,8 +2868,11 @@ static int be_open(struct net_device *netdev)
  netif_tx_start_all_queues(netdev);
  be_roce_dev_open(adapter);
 
+#ifdef CONFIG_BE2NET_VXLAN
  if (skyhawk_chip(adapter))
   vxlan_get_rx_port(netdev);
+#endif
+
  return 0;
 err:
  be_close(adapter->netdev);
@@ -3025,6 +3028,7 @@ static void be_mac_clear(struct be_adapter *adapter)
  }
 }
 
+#ifdef CONFIG_BE2NET_VXLAN
 static void be_disable_vxlan_offloads(struct be_adapter *adapter)
 {
  if (adapter->flags & BE_FLAGS_VXLAN_OFFLOADS)
@@ -3037,6 +3041,7 @@ static void be_disable_vxlan_offloads(struct be_adapter *adapter)
  adapter->flags &= ~BE_FLAGS_VXLAN_OFFLOADS;
  adapter->vxlan_port = 0;
 }
+#endif
 
 static int be_clear(struct be_adapter *adapter)
 {
@@ -3045,8 +3050,9 @@ static int be_clear(struct be_adapter *adapter)
  if (sriov_enabled(adapter))
   be_vf_clear(adapter);
 
+#ifdef CONFIG_BE2NET_VXLAN
  be_disable_vxlan_offloads(adapter);
-
+#endif
  /* delete the primary mac along with the uc-mac list */
  be_mac_clear(adapter);
 
@@ -4173,6 +4179,7 @@ static int be_ndo_bridge_getlink(struct sk_buff *skb, u32 pid, u32 seq,
            BRIDGE_MODE_VEPA : BRIDGE_MODE_VEB);
 }
 
+#ifdef CONFIG_BE2NET_VXLAN
 static void be_add_vxlan_port(struct net_device *netdev, sa_family_t sa_family,
          __be16 port)
 {
@@ -4231,6 +4238,7 @@ static void be_del_vxlan_port(struct net_device *netdev, sa_family_t sa_family,
    "Disabled VxLAN offloads for UDP port %d\n",
    be16_to_cpu(port));
 }
+#endif
 
 static const struct net_device_ops be_netdev_ops = {
  .ndo_open  = be_open,
@@ -4256,8 +4264,10 @@ static const struct net_device_ops be_netdev_ops = {
 #ifdef CONFIG_NET_RX_BUSY_POLL
  .ndo_busy_poll  = be_busy_poll,
 #endif
+#ifdef CONFIG_BE2NET_VXLAN
  .ndo_add_vxlan_port = be_add_vxlan_port,
  .ndo_del_vxlan_port = be_del_vxlan_port,
+#endif
 };
 
 static void be_netdev_init(struct net_device *netdev)
-- 
1.7.1