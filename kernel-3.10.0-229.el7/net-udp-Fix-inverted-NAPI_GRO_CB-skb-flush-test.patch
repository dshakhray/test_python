From 225bb2c55f98ba5702ef33efbaff82f5f2a6401d Mon Sep 17 00:00:00 2001
From: Florian Westphal <fwestpha@redhat.com>
Date: Tue, 16 Sep 2014 08:49:32 -0400
Subject: [net] udp: Fix inverted NAPI_GRO_CB(skb)->flush test

Message-id: <1410857372-15798-1-git-send-email-fwestpha@redhat.com>
Patchwork-id: 95076
O-Subject: [PATCH 62/57 RHEL7.1 net] udp: Fix inverted NAPI_GRO_CB(skb)->flush test
Bugzilla: 1131999
RH-Acked-by: Jiri Benc <jbenc@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Vlad Yasevich <vyasevic@redhat.com>

BZ: 1131999

commit 2d8f7e2c8a63131828e8d4e2d98835399f27319e
Author: Scott Wood <scottwood@freescale.com>
Date:   Wed Sep 10 21:23:18 2014 -0500

    udp: Fix inverted NAPI_GRO_CB(skb)->flush test

    Commit 2abb7cdc0d ("udp: Add support for doing checksum unnecessary
    conversion") caused napi_gro_cb structs with the "flush" field zero to
    take the "udp_gro_receive" path rather than the "set flush to 1" path
    that they would previously take.  As a result I saw booting from an NFS
    root hang shortly after starting userspace, with "server not
    responding" messages.

    This change to the handling of "flush == 0" packets appears to be
    incidental to the goal of adding new code in the case where
    skb_gro_checksum_validate_zero_check() returns zero.  Based on that and
    the fact that it breaks things, I'm assuming that it is unintentional.

    Fixes: 2abb7cdc0d ("udp: Add support for doing checksum unnecessary conversion")
    Cc: Tom Herbert <therbert@google.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ipv4/udp_offload.c b/net/ipv4/udp_offload.c
index 01bdd85..4298883 100644
--- a/net/ipv4/udp_offload.c
+++ b/net/ipv4/udp_offload.c
@@ -218,7 +218,7 @@ static struct sk_buff **udp4_gro_receive(struct sk_buff **head,
   goto flush;
 
  /* Don't bother verifying checksum if we're going to flush anyway. */
- if (!NAPI_GRO_CB(skb)->flush)
+ if (NAPI_GRO_CB(skb)->flush)
   goto skip;
 
  if (skb_gro_checksum_validate_zero_check(skb, IPPROTO_UDP, uh->check,
diff --git a/net/ipv6/udp_offload.c b/net/ipv6/udp_offload.c
index ba6e0d4..015d528 100644
--- a/net/ipv6/udp_offload.c
+++ b/net/ipv6/udp_offload.c
@@ -138,7 +138,7 @@ static struct sk_buff **udp6_gro_receive(struct sk_buff **head,
   goto flush;
 
  /* Don't bother verifying checksum if we're going to flush anyway. */
- if (!NAPI_GRO_CB(skb)->flush)
+ if (NAPI_GRO_CB(skb)->flush)
   goto skip;
 
  if (skb_gro_checksum_validate_zero_check(skb, IPPROTO_UDP, uh->check,
-- 
1.7.1