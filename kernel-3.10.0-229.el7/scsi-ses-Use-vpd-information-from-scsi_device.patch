From e8937dec5d6003a89911da7e55435d92486e1a7b Mon Sep 17 00:00:00 2001
From: Ewan Milne <emilne@redhat.com>
Date: Wed, 20 Aug 2014 18:59:06 -0400
Subject: [scsi] ses: Use vpd information from scsi_device

Message-id: <1408561176-18133-28-git-send-email-emilne@redhat.com>
Patchwork-id: 88443
O-Subject: [RHEL7.1 PATCH e-stor 27/57] [SCSI] ses: Use vpd information from scsi_device
Bugzilla: 1132092
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: "Ewan D. Milne" <emilne@redhat.com>

upstream commit c38c007af04b928b5285da8cc44fbe2f4810e24e

Tested by Ewan D. Milne and Barry Donahue with a combination
of manual and automated testing.  No issues seen.

upstream commit c38c007af04b928b5285da8cc44fbe2f4810e24e
Author: Hannes Reinecke <hare@suse.de>
Date:   Sat Mar 15 09:51:51 2014 +0100

    [SCSI] ses: Use vpd information from scsi_device

    The scsi_device now has VPD page83 information attached, so
    there is no need to query it again.

    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

Signed-off-by: Ewan D. Milne <emilne@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/ses.c b/drivers/scsi/ses.c
index eba183c..80bfece 100644
--- a/drivers/scsi/ses.c
+++ b/drivers/scsi/ses.c
@@ -25,6 +25,7 @@
 #include <linux/module.h>
 #include <linux/kernel.h>
 #include <linux/enclosure.h>
+#include <asm/unaligned.h>
 
 #include <scsi/scsi.h>
 #include <scsi/scsi_cmnd.h>
@@ -448,27 +449,18 @@ static void ses_enclosure_data_process(struct enclosure_device *edev,
 static void ses_match_to_enclosure(struct enclosure_device *edev,
        struct scsi_device *sdev)
 {
- unsigned char *buf;
  unsigned char *desc;
- unsigned int vpd_len;
  struct efd efd = {
   .addr = 0,
  };
 
- buf = kmalloc(INIT_ALLOC_SIZE, GFP_KERNEL);
- if (!buf || scsi_get_vpd_page(sdev, 0x83, buf, INIT_ALLOC_SIZE))
-  goto free;
-
  ses_enclosure_data_process(edev, to_scsi_device(edev->edev.parent), 0);
 
- vpd_len = ((buf[2] << 8) | buf[3]) + 4;
- kfree(buf);
- buf = kmalloc(vpd_len, GFP_KERNEL);
- if (!buf ||scsi_get_vpd_page(sdev, 0x83, buf, vpd_len))
-  goto free;
+ if (!sdev->vpd_pg83_len)
+  return;
 
- desc = buf + 4;
- while (desc < buf + vpd_len) {
+ desc = sdev->vpd_pg83 + 4;
+ while (desc < sdev->vpd_pg83 + sdev->vpd_pg83_len) {
   enum scsi_protocol proto = desc[0] >> 4;
   u8 code_set = desc[0] & 0x0f;
   u8 piv = desc[1] & 0x80;
@@ -478,25 +470,15 @@ static void ses_match_to_enclosure(struct enclosure_device *edev,
 
   if (piv && code_set == 1 && assoc == 1
       && proto == SCSI_PROTOCOL_SAS && type == 3 && len == 8)
-   efd.addr = (u64)desc[4] << 56 |
-    (u64)desc[5] << 48 |
-    (u64)desc[6] << 40 |
-    (u64)desc[7] << 32 |
-    (u64)desc[8] << 24 |
-    (u64)desc[9] << 16 |
-    (u64)desc[10] << 8 |
-    (u64)desc[11];
+   efd.addr = get_unaligned_be64(&desc[4]);
 
   desc += len + 4;
  }
- if (!efd.addr)
-  goto free;
+ if (efd.addr) {
+  efd.dev = &sdev->sdev_gendev;
 
- efd.dev = &sdev->sdev_gendev;
-
- enclosure_for_each_device(ses_enclosure_find_by_addr, &efd);
- free:
- kfree(buf);
+  enclosure_for_each_device(ses_enclosure_find_by_addr, &efd);
+ }
 }
 
 static int ses_intf_add(struct device *cdev,
-- 
1.7.1