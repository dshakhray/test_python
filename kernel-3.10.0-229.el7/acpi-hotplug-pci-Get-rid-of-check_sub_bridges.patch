From 6c86da20491bca7be33472bdd5ea038baf8a018d Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 10 Jul 2014 01:03:39 -0400
Subject: [acpi] hotplug/pci: Get rid of check_sub_bridges()

Message-id: <20140710010339.22146.63888.stgit@gir.stowe>
Patchwork-id: 85591
O-Subject: [RHEL7.1 PATCH 052/105] ACPI / hotplug / PCI: Get rid of check_sub_bridges()
Bugzilla: 1114228
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1114228
Upstream Status: 2d8b1d566a5f4874f4d92361f5cdbb50baa396f8

commit 2d8b1d566a5f4874f4d92361f5cdbb50baa396f8
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Sat Jul 13 20:09:59 2013 +0300

    ACPI / hotplug / PCI: Get rid of check_sub_bridges()

    Now that acpiphp_check_bridge() always enumerates devices behind the
    bridge, there is no need to do that for each sub-bridge anymore like
    it is done in the current ACPI-based PCI hotplug (ACPIPHP) code.

    Given this we don't need check_sub_bridges() anymore, so drop that
    function completely.

    This also simplifies the ACPIPHP code a bit.

    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/hotplug/acpiphp_glue.c b/drivers/pci/hotplug/acpiphp_glue.c
index 8098b86..649317a 100644
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@ -787,25 +787,6 @@ static void acpiphp_sanitize_bus(struct pci_bus *bus)
  * ACPI event handlers
  */
 
-static acpi_status
-check_sub_bridges(acpi_handle handle, u32 lvl, void *context, void **rv)
-{
- struct acpiphp_bridge *bridge;
- char objname[64];
- struct acpi_buffer buffer = { .length = sizeof(objname),
-          .pointer = objname };
-
- bridge = acpiphp_handle_to_bridge(handle);
- if (bridge) {
-  acpi_get_name(handle, ACPI_FULL_PATHNAME, &buffer);
-  pr_debug("%s: re-enumerating slots under %s\n",
-   __func__, objname);
-  acpiphp_check_bridge(bridge);
-  put_bridge(bridge);
- }
- return AE_OK ;
-}
-
 void acpiphp_check_host_bridge(acpi_handle handle)
 {
  struct acpiphp_bridge *bridge;
@@ -815,9 +796,6 @@ void acpiphp_check_host_bridge(acpi_handle handle)
   acpiphp_check_bridge(bridge);
   put_bridge(bridge);
  }
-
- acpi_walk_namespace(ACPI_TYPE_DEVICE, handle,
-  ACPI_UINT32_MAX, check_sub_bridges, NULL, NULL, NULL);
 }
 
 static void hotplug_event(acpi_handle handle, u32 type, void *data)
@@ -846,9 +824,6 @@ static void hotplug_event(acpi_handle handle, u32 type, void *data)
     __func__, objname);
   if (bridge) {
    acpiphp_check_bridge(bridge);
-   acpi_walk_namespace(ACPI_TYPE_DEVICE, handle,
-         ACPI_UINT32_MAX, check_sub_bridges,
-         NULL, NULL, NULL);
   } else {
    struct acpiphp_slot *slot = func->slot;
 
-- 
1.7.1