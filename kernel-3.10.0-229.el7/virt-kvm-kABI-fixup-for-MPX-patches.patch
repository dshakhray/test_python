From 0d1e69dc851d9221fdf6286ea63f0ad5239f8aa7 Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:39:02 -0400
Subject: [virt] kvm: kABI fixup for MPX patches

Message-id: <1406040016-3289-148-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86226
O-Subject: [RHEL7 PATCH v2 147/221] kABI fixup for MPX patches
Bugzilla: 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

xsave_struct is part of kABI via task_struct, but it is only allocated
dynamically as part of union thread_xstate (via task_xstate_cachep).
So it is safe to hide the new fields from genksyms's eyes.

Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/include/asm/processor.h b/arch/x86/include/asm/processor.h
index a55c6d2..60e47ed 100644
--- a/arch/x86/include/asm/processor.h
+++ b/arch/x86/include/asm/processor.h
@@ -404,10 +404,12 @@ struct xsave_struct {
  struct i387_fxsave_struct i387;
  struct xsave_hdr_struct xsave_hdr;
  struct ymmh_struct ymmh;
+#ifndef __GENKSYMS__
  struct lwp_struct lwp;
  struct bndregs_struct bndregs;
  struct bndcsr_struct bndcsr;
  /* new processor state extensions will go here */
+#endif
 } __attribute__ ((packed, aligned (64)));
 
 union thread_xstate {
-- 
1.7.1