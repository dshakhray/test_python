From 4835cae2d3b2053baba4b3406a1c2b56aaeb3cc9 Mon Sep 17 00:00:00 2001
From: Jiri Benc <jbenc@redhat.com>
Date: Wed, 7 Jan 2015 10:56:57 -0500
Subject: [net] tcp: make tcp_cleanup_rbuf private

Message-id: <59787a8ad3f35111dd678e6e9499659c0a3b6c01.1420627472.git.jbenc@redhat.com>
Patchwork-id: 102513
O-Subject: [RHEL7.1 net PATCH 4/5] net: make tcp_cleanup_rbuf private
Bugzilla: 1173444
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Kyle McMartin <kmcmarti@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Myron Stowe <mstowe@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1173444
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=8460333

commit 3f334078567245429540e6461c81c749fce87f70
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Dec 30 17:12:07 2013 -0800

    net: make tcp_cleanup_rbuf private

    net_dma was the only external user so this can become local to tcp.c
    again.

    Cc: James Morris <jmorris@namei.org>
    Cc: Patrick McHardy <kaber@trash.net>
    Cc: Alexey Kuznetsov <kuznet@ms2.inr.ac.ru>
    Cc: Hideaki YOSHIFUJI <yoshfuji@linux-ipv6.org>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Acked-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/net/tcp.h b/include/net/tcp.h
index eb43183..c7f88f7 100644
--- a/include/net/tcp.h
+++ b/include/net/tcp.h
@@ -378,7 +378,6 @@ extern int tcp_rcv_state_process(struct sock *sk, struct sk_buff *skb,
 extern int tcp_rcv_established(struct sock *sk, struct sk_buff *skb,
           const struct tcphdr *th, unsigned int len);
 extern void tcp_rcv_space_adjust(struct sock *sk);
-extern void tcp_cleanup_rbuf(struct sock *sk, int copied);
 extern int tcp_twsk_unique(struct sock *sk, struct sock *sktw, void *twp);
 extern void tcp_twsk_destructor(struct sock *sk);
 extern ssize_t tcp_splice_read(struct socket *sk, loff_t *ppos,
diff --git a/net/ipv4/tcp.c b/net/ipv4/tcp.c
index ecb01dc..3e7062c 100644
--- a/net/ipv4/tcp.c
+++ b/net/ipv4/tcp.c
@@ -1332,7 +1332,7 @@ static int tcp_peek_sndq(struct sock *sk, struct msghdr *msg, int len)
  * calculation of whether or not we must ACK for the sake of
  * a window update.
  */
-void tcp_cleanup_rbuf(struct sock *sk, int copied)
+static void tcp_cleanup_rbuf(struct sock *sk, int copied)
 {
  struct tcp_sock *tp = tcp_sk(sk);
  bool time_to_ack = false;
-- 
1.7.1