From eb240145a046c999140c443ae3c6a385984eeffa Mon Sep 17 00:00:00 2001
From: Nigel Croxon <ncroxon@redhat.com>
Date: Wed, 16 Jul 2014 18:00:19 -0400
Subject: [acpi] Fix bug when ACPI reset register is implemented in system memory

Message-id: <1405533619-38788-1-git-send-email-ncroxon@redhat.com>
Patchwork-id: 85864
O-Subject: [RHEL7.1 PATCH 1/1] ACPI: Fix bug when ACPI reset register is implemented in system memory
Bugzilla: 1109971
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla 1109971
https://bugzilla.redhat.com/show_bug.cgi?id=1109971

Brew build: 7665332
https://brewweb.devel.redhat.com/taskinfo?taskID=7665332

I used 'git cherry-pick -x' with no merge conflicts.
The problem was found on RHEL 7.0

Tested by Randy Wright @ HP, booting the kernel and
running a couple of successful hand tests.

-Nigel Croxon
HP On-Site @ Red Hat

commit a4714a898e85205e1118ec923cde43d88eb105f6
Author: Randy Wright <rwright@hp.com>
Date:   Wed Jun 4 08:55:59 2014 -0700

ACPI: Fix bug when ACPI reset register is implemented in system memory

Use acpi_os_map_generic_address to pre-map the reset register if it is
memory mapped, thereby preventing the BUG_ON() in line 1319 of
mm/vmalloc.c from triggering during panic-triggered reboots.

Link: https://bugzilla.kernel.org/show_bug.cgi?id=77131
Signed-off-by: Randy Wright <rwright@hp.com>
Signed-off-by: David E. Box <david.e.box@linux.intel.com>
[rjw: Changelog, simplified code]
Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit a4714a898e85205e1118ec923cde43d88eb105f6)

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/acpi/osl.c b/drivers/acpi/osl.c
index 7cef868..efae386 100644
--- a/drivers/acpi/osl.c
+++ b/drivers/acpi/osl.c
@@ -1743,6 +1743,16 @@ acpi_status __init acpi_os_initialize(void)
  acpi_os_map_generic_address(&acpi_gbl_FADT.xpm1b_event_block);
  acpi_os_map_generic_address(&acpi_gbl_FADT.xgpe0_block);
  acpi_os_map_generic_address(&acpi_gbl_FADT.xgpe1_block);
+ if (acpi_gbl_FADT.flags & ACPI_FADT_RESET_REGISTER) {
+  /*
+   * Use acpi_os_map_generic_address to pre-map the reset
+   * register if it's in system memory.
+   */
+  int rv;
+
+  rv = acpi_os_map_generic_address(&acpi_gbl_FADT.reset_register);
+  pr_debug(PREFIX "%s: map reset_reg status %d\n", __func__, rv);
+ }
 
  return AE_OK;
 }
@@ -1771,6 +1781,8 @@ acpi_status acpi_os_terminate(void)
  acpi_os_unmap_generic_address(&acpi_gbl_FADT.xgpe0_block);
  acpi_os_unmap_generic_address(&acpi_gbl_FADT.xpm1b_event_block);
  acpi_os_unmap_generic_address(&acpi_gbl_FADT.xpm1a_event_block);
+ if (acpi_gbl_FADT.flags & ACPI_FADT_RESET_REGISTER)
+  acpi_os_unmap_generic_address(&acpi_gbl_FADT.reset_register);
 
  destroy_workqueue(kacpid_wq);
  destroy_workqueue(kacpi_notify_wq);
-- 
1.7.1