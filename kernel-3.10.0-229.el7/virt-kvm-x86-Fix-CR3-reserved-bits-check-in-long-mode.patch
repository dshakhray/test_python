From 6a15d985cf5b5d95c74143f77d9a0265e2b77085 Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:39:56 -0400
Subject: [virt] kvm/x86: Fix CR3 reserved bits check in long mode

Message-id: <1406040016-3289-202-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86280
O-Subject: [RHEL7 PATCH v2 201/221] KVM: x86: Fix CR3 reserved bits check in long mode
Bugzilla: 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jan Kiszka <jan.kiszka@siemens.com>

Regression of 346874c9: PAE is set in long mode, but that does not mean
we have valid PDPTRs.

Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit d9f89b88f5102ce235b75a5907838e3c7ed84b97)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index 6399301..001563f 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -703,10 +703,11 @@ int kvm_set_cr3(struct kvm_vcpu *vcpu, unsigned long cr3)
   return 0;
  }
 
- if (is_long_mode(vcpu) && (cr3 & CR3_L_MODE_RESERVED_BITS))
-  return 1;
- if (is_pae(vcpu) && is_paging(vcpu) &&
-     !load_pdptrs(vcpu, vcpu->arch.walk_mmu, cr3))
+ if (is_long_mode(vcpu)) {
+  if (cr3 & CR3_L_MODE_RESERVED_BITS)
+   return 1;
+ } else if (is_pae(vcpu) && is_paging(vcpu) &&
+     !load_pdptrs(vcpu, vcpu->arch.walk_mmu, cr3))
   return 1;
 
  vcpu->arch.cr3 = cr3;
-- 
1.7.1