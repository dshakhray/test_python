From 013ba2bc05f6d16c178bcb676b3a82a77ca5f23e Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:52:55 -0400
Subject: [tools] perf/session: Free cpu_map in perf_session__cpu_bitmap

Message-id: <1408953210-26343-288-git-send-email-jolsa@redhat.com>
Patchwork-id: 88995
O-Subject: [PATCH RHEL7.1 BZ1133083 287/322] perf session: Free cpu_map in perf_session__cpu_bitmap
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit 8bac41cbfe2efe55e2b93673b84761ed7dd75f69
Author: Stanislav Fomichev <stfomichev@yandex-team.ru>
Date: Mon Jan 20 15:39:39 2014 +0400

description
===========
This method uses a temporary struct cpu_map to figure out the cpus
present in the received cpu list in string form, but it failed to free
it after returning. Fix it.

[ Use goto + err = -1 to do the delete just once, in the normal exit path ]
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/session.c b/tools/perf/util/session.c
index 7acc03e..0b39a48 100644
--- a/tools/perf/util/session.c
+++ b/tools/perf/util/session.c
@@ -1573,7 +1573,7 @@ next:
 int perf_session__cpu_bitmap(struct perf_session *session,
         const char *cpu_list, unsigned long *cpu_bitmap)
 {
- int i;
+ int i, err = -1;
  struct cpu_map *map;
 
  for (i = 0; i < PERF_TYPE_MAX; ++i) {
@@ -1602,13 +1602,17 @@ int perf_session__cpu_bitmap(struct perf_session *session,
   if (cpu >= MAX_NR_CPUS) {
    pr_err("Requested CPU %d too large. "
           "Consider raising MAX_NR_CPUS\n", cpu);
-   return -1;
+   goto out_delete_map;
   }
 
   set_bit(cpu, cpu_bitmap);
  }
 
- return 0;
+ err = 0;
+
+out_delete_map:
+ cpu_map__delete(map);
+ return err;
 }
 
 void perf_session__fprintf_info(struct perf_session *session, FILE *fp,
-- 
1.7.1