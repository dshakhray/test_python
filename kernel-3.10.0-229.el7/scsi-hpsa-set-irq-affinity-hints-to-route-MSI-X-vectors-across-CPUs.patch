From 4e46bc67c5fc2e6a6b770e4d01aaa5004cc0a94d Mon Sep 17 00:00:00 2001
From: Tomas Henzl <thenzl@redhat.com>
Date: Mon, 8 Sep 2014 14:31:54 -0400
Subject: [scsi] hpsa: set irq affinity hints to route MSI-X vectors across CPUs

Message-id: <1410186734-19986-64-git-send-email-thenzl@redhat.com>
Patchwork-id: 92084
O-Subject: [RHEL6.6 e-stor PATCH 63/83] hpsa: set irq affinity hints to route MSI-X vectors across CPUs
Bugzilla: 1069185
RH-Acked-by: Maurizio Lombardi <mlombard@redhat.com>
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Ewan Milne <emilne@redhat.com>

Signed-off-by: Stephen M. Cameron <scameron@beardog.cce.hp.com>
Reviewed-by: Mike Miller <michael.miller@canonical.com>
Reviewed-by: Scott Teel <scott.teel@hp.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 41b3cf08cd5e7915293f3784ab649d48bb142153)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/hpsa.c b/drivers/scsi/hpsa.c
index ded008e..1df75ae 100644
--- a/drivers/scsi/hpsa.c
+++ b/drivers/scsi/hpsa.c
@@ -6641,6 +6641,17 @@ static void hpsa_free_cmd_pool(struct ctlr_info *h)
    h->ioaccel_cmd_pool, h->ioaccel_cmd_pool_dhandle);
 }
 
+static void hpsa_irq_affinity_hints(struct ctlr_info *h)
+{
+ int i, cpu, rc;
+
+ cpu = cpumask_first(cpu_online_mask);
+ for (i = 0; i < h->msix_vector; i++) {
+  rc = irq_set_affinity_hint(h->intr[i], get_cpu_mask(cpu));
+  cpu = cpumask_next(cpu, cpu_online_mask);
+ }
+}
+
 static int hpsa_request_irq(struct ctlr_info *h,
  irqreturn_t (*msixhandler)(int, void *),
  irqreturn_t (*intxhandler)(int, void *))
@@ -6660,6 +6671,7 @@ static int hpsa_request_irq(struct ctlr_info *h,
    rc = request_irq(h->intr[i], msixhandler,
      0, h->devname,
      &h->q[i]);
+  hpsa_irq_affinity_hints(h);
  } else {
   /* Use single reply pool */
   if (h->msix_vector > 0 || h->msi_vector) {
@@ -6711,12 +6723,15 @@ static void free_irqs(struct ctlr_info *h)
  if (!h->msix_vector || h->intr_mode != PERF_MODE_INT) {
   /* Single reply queue, only one irq to free */
   i = h->intr_mode;
+  irq_set_affinity_hint(h->intr[i], NULL);
   free_irq(h->intr[i], &h->q[i]);
   return;
  }
 
- for (i = 0; i < h->msix_vector; i++)
+ for (i = 0; i < h->msix_vector; i++) {
+  irq_set_affinity_hint(h->intr[i], NULL);
   free_irq(h->intr[i], &h->q[i]);
+ }
 }
 
 static void hpsa_free_irqs_and_disable_msix(struct ctlr_info *h)
-- 
1.7.1