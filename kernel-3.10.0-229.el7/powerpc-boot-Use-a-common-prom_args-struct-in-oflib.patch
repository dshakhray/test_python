From 4851a52907acde4cc2c5b8536f684cd416c875c0 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:12:07 -0400
Subject: [powerpc] boot: Use a common prom_args struct in oflib

Message-id: <1410545655-205645-499-git-send-email-dzickus@redhat.com>
Patchwork-id: 94480
O-Subject: [RHEL7 PATCH 498/626] powerpc/boot: Use a common prom_args struct in oflib
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit fed23ed7ebf0fbea17ad8fed207ff35a747fecaf
Author: Cedric Le Goater <clg@fr.ibm.com>
Date:   Thu Apr 24 09:23:26 2014 +0200

    powerpc/boot: Use a common prom_args struct in oflib

    This patch fixes warnings when the wrapper is compiled in 64bit and
    updates the boot wrapper code related to prom to converge with the
    kernel code in prom_init. This should make the review of changes easier.

    The kernel has a different number of possible arguments (10) when
    entering prom. There does not seem to be any good reason to have
    12 in the wrapper, so the patch changes this value to args[10] in
    the prom_args struct.

    Signed-off-by: Cedric Le Goater <clg@fr.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/boot/of.h b/arch/powerpc/boot/of.h
index e4c68f7..5da03d9 100644
--- a/arch/powerpc/boot/of.h
+++ b/arch/powerpc/boot/of.h
@@ -18,4 +18,6 @@ int of_setprop(const void *phandle, const char *name, const void *buf,
 /* Console functions */
 void of_console_init(void);
 
+typedef u32   __be32;
+
 #endif /* _PPC_BOOT_OF_H_ */
diff --git a/arch/powerpc/boot/oflib.c b/arch/powerpc/boot/oflib.c
index b0ec9cf..c3288a3 100644
--- a/arch/powerpc/boot/oflib.c
+++ b/arch/powerpc/boot/oflib.c
@@ -16,6 +16,15 @@
 
 #include "of.h"
 
+/* The following structure is used to communicate with open firmware.
+ * All arguments in and out are in big endian format. */
+struct prom_args {
+ __be32 service; /* Address of service name string. */
+ __be32 nargs; /* Number of input arguments. */
+ __be32 nret; /* Number of output arguments. */
+ __be32 args[10]; /* Input/output arguments. */
+};
+
 static int (*prom) (void *);
 
 void of_init(void *promptr)
@@ -23,18 +32,15 @@ void of_init(void *promptr)
  prom = (int (*)(void *))promptr;
 }
 
+#define ADDR(x)  (u32)(unsigned long)(x)
+
 int of_call_prom(const char *service, int nargs, int nret, ...)
 {
  int i;
- struct prom_args {
-  const char *service;
-  int nargs;
-  int nret;
-  unsigned int args[12];
- } args;
+ struct prom_args args;
  va_list list;
 
- args.service = service;
+ args.service = ADDR(service);
  args.nargs = nargs;
  args.nret = nret;
 
@@ -56,15 +62,10 @@ static int of_call_prom_ret(const char *service, int nargs, int nret,
        unsigned int *rets, ...)
 {
  int i;
- struct prom_args {
-  const char *service;
-  int nargs;
-  int nret;
-  unsigned int args[12];
- } args;
+ struct prom_args args;
  va_list list;
 
- args.service = service;
+ args.service = ADDR(service);
  args.nargs = nargs;
  args.nret = nret;
 
-- 
1.7.1