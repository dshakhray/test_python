From e71b71501d9bdbda4088bc0cd99a588891c57932 Mon Sep 17 00:00:00 2001
From: Jes Sorensen <Jes.Sorensen@redhat.com>
Date: Mon, 1 Sep 2014 09:26:02 -0400
Subject: [md] always set MD_RECOVERY_INTR when aborting a reshape or other "resync"

Message-id: <1409563584-9000-61-git-send-email-Jes.Sorensen@redhat.com>
Patchwork-id: 90013
O-Subject: [RHEL7.1 PATCH 60/82] md: always set MD_RECOVERY_INTR when aborting a reshape or other "resync".
Bugzilla: 1085530
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

From: NeilBrown <neilb@suse.de>

If mddev->ro is set, md_to_sync will (correctly) abort.
However in that case MD_RECOVERY_INTR isn't set.

If a RESHAPE had been requested, then ->finish_reshape() will be
called and it will think the reshape was successful even though
nothing happened.

Normally a resync will not be requested if ->ro is set, but if an
array is stopped while a reshape is on-going, then when the array is
started, the reshape will be restarted.  If the array is also set
read-only at this point, the reshape will instantly appear to success,
resulting in data corruption.

Consequently, this patch is suitable for any -stable kernel.

Cc: stable@vger.kernel.org (any)
Signed-off-by: NeilBrown <neilb@suse.de>
(cherry picked from commit 3991b31ea072b070081ca3bfa860a077eda67de5)
Signed-off-by: Jes Sorensen <Jes.Sorensen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/md.c b/drivers/md/md.c
index 760a144..8745249 100644
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@ -7381,8 +7381,10 @@ void md_do_sync(struct md_thread *thread)
  /* just incase thread restarts... */
  if (test_bit(MD_RECOVERY_DONE, &mddev->recovery))
   return;
- if (mddev->ro) /* never try to sync a read-only array */
+ if (mddev->ro) {/* never try to sync a read-only array */
+  set_bit(MD_RECOVERY_INTR, &mddev->recovery);
   return;
+ }
 
  if (test_bit(MD_RECOVERY_SYNC, &mddev->recovery)) {
   if (test_bit(MD_RECOVERY_CHECK, &mddev->recovery)) {
-- 
1.7.1