From 7ac228a6e6478a37cd569878c466a0546575198b Mon Sep 17 00:00:00 2001
From: Benjamin Tissoires <benjamin.tissoires@redhat.com>
Date: Wed, 23 Jul 2014 13:26:58 -0400
Subject: [input] synaptics: add manual min/max quirk

Message-id: <1406122030-5632-3-git-send-email-benjamin.tissoires@redhat.com>
Patchwork-id: 86347
O-Subject: [RHEL7.1 / RHEL7.0.z PATCH 02/14] Input: synaptics - add manual min/max quirk
Bugzilla: 1093449
RH-Acked-by: Aristeu S. Rozanski F. <arozansk@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Peter Hutterer <peter.hutterer@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1093449
Upstream: since v3.14, backported in stable
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7722437
Test: tested by myself on a t440s and a t410, was extensively tested in RHEL 6.6

commit 421e08c41fda1f0c2ff6af81a67b491389b653a5
Author: Benjamin Tissoires <benjamin.tissoires@redhat.com>
Date:   Fri Mar 28 00:43:00 2014 -0700

    Input: synaptics - add manual min/max quirk

    The new Lenovo Haswell series (-40's) contains a new Synaptics touchpad.
    However, these new Synaptics devices report bad axis ranges.
    Under Windows, it is not a problem because the Windows driver uses RMI4
    over SMBus to talk to the device. Under Linux, we are using the PS/2
    fallback interface and it occurs the reported ranges are wrong.

    Of course, it would be too easy to have only one range for the whole
    series, each touchpad seems to be calibrated in a different way.

    We can not use SMBus to get the actual range because I suspect the firmware
    will switch into the SMBus mode and stop talking through PS/2 (this is the
    case for hybrid HID over I2C / PS/2 Synaptics touchpads).

    So as a temporary solution (until RMI4 land into upstream), start a new
    list of quirks with the min/max manually set.

    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    CC: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/input/mouse/synaptics.c b/drivers/input/mouse/synaptics.c
index 26386f9..ef148f9 100644
--- a/drivers/input/mouse/synaptics.c
+++ b/drivers/input/mouse/synaptics.c
@@ -265,11 +265,22 @@ static int synaptics_identify(struct psmouse *psmouse)
  * Read touchpad resolution and maximum reported coordinates
  * Resolution is left zero if touchpad does not support the query
  */
+
+static const int *quirk_min_max;
+
 static int synaptics_resolution(struct psmouse *psmouse)
 {
  struct synaptics_data *priv = psmouse->private;
  unsigned char resp[3];
 
+ if (quirk_min_max) {
+  priv->x_min = quirk_min_max[0];
+  priv->x_max = quirk_min_max[1];
+  priv->y_min = quirk_min_max[2];
+  priv->y_max = quirk_min_max[3];
+  return 0;
+ }
+
  if (SYN_ID_MAJOR(priv->identity) < 4)
   return 0;
 
@@ -1485,10 +1496,46 @@ static const struct dmi_system_id olpc_dmi_table[] __initconst = {
  { }
 };
 
+static const struct dmi_system_id min_max_dmi_table[] __initconst = {
+#if defined(CONFIG_DMI)
+ {
+  /* Lenovo ThinkPad Helix */
+  .matches = {
+   DMI_MATCH(DMI_SYS_VENDOR, "LENOVO"),
+   DMI_MATCH(DMI_PRODUCT_VERSION, "ThinkPad Helix"),
+  },
+  .driver_data = (int []){1024, 5052, 2258, 4832},
+ },
+ {
+  /* Lenovo ThinkPad T440s */
+  .matches = {
+   DMI_MATCH(DMI_SYS_VENDOR, "LENOVO"),
+   DMI_MATCH(DMI_PRODUCT_VERSION, "ThinkPad T440"),
+  },
+  .driver_data = (int []){1024, 5112, 2024, 4832},
+ },
+ {
+  /* Lenovo ThinkPad T540p */
+  .matches = {
+   DMI_MATCH(DMI_SYS_VENDOR, "LENOVO"),
+   DMI_MATCH(DMI_PRODUCT_VERSION, "ThinkPad T540"),
+  },
+  .driver_data = (int []){1024, 5056, 2058, 4832},
+ },
+#endif
+ { }
+};
+
 void __init synaptics_module_init(void)
 {
+ const struct dmi_system_id *min_max_dmi;
+
  impaired_toshiba_kbc = dmi_check_system(toshiba_dmi_table);
  broken_olpc_ec = dmi_check_system(olpc_dmi_table);
+
+ min_max_dmi = dmi_first_match(min_max_dmi_table);
+ if (min_max_dmi)
+  quirk_min_max = min_max_dmi->driver_data;
 }
 
 static int __synaptics_init(struct psmouse *psmouse, bool absolute_mode)
-- 
1.7.1