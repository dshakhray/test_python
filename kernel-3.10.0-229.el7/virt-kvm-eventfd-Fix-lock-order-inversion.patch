From 5fac6274eecc0966db09476886a9cd4a61713a45 Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:37:08 -0400
Subject: [virt] kvm/eventfd: Fix lock order inversion

Message-id: <1406040016-3289-34-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86112
O-Subject: [RHEL7 PATCH v2 033/221] KVM: eventfd: Fix lock order inversion.
Bugzilla: 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Cornelia Huck <cornelia.huck@de.ibm.com>

When registering a new irqfd, we call its ->poll method to collect any
event that might have previously been pending so that we can trigger it.
This is done under the kvm->irqfds.lock, which means the eventfd's ctx
lock is taken under it.

However, if we get a POLLHUP in irqfd_wakeup, we will be called with the
ctx lock held before getting the irqfds.lock to deactivate the irqfd,
causing lockdep to complain.

Calling the ->poll method does not really need the irqfds.lock, so let's
just move it after we've given up the irqfds.lock in kvm_irqfd_assign().

Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 684a0b719ddbbafe1c7e6646b9bc239453a1773d)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/virt/kvm/eventfd.c b/virt/kvm/eventfd.c
index abe4d60..29c2a04 100644
--- a/virt/kvm/eventfd.c
+++ b/virt/kvm/eventfd.c
@@ -391,19 +391,19 @@ kvm_irqfd_assign(struct kvm *kvm, struct kvm_irqfd *args)
         lockdep_is_held(&kvm->irqfds.lock));
  irqfd_update(kvm, irqfd, irq_rt);
 
- events = f.file->f_op->poll(f.file, &irqfd->pt);
-
  list_add_tail(&irqfd->list, &kvm->irqfds.items);
 
+ spin_unlock_irq(&kvm->irqfds.lock);
+
  /*
   * Check if there was an event already pending on the eventfd
   * before we registered, and trigger it as if we didn't miss it.
   */
+ events = f.file->f_op->poll(f.file, &irqfd->pt);
+
  if (events & POLLIN)
   schedule_work(&irqfd->inject);
 
- spin_unlock_irq(&kvm->irqfds.lock);
-
  /*
   * do not drop the file until the irqfd is fully initialized, otherwise
   * we might race against the POLLHUP
-- 
1.7.1