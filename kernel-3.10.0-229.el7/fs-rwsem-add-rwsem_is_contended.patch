From bb30e396285fa7e1d211fb47ae868435498af778 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 18:59:25 -0400
Subject: [fs] rwsem: add rwsem_is_contended

Message-id: <1407179109-13714-79-git-send-email-sandeen@redhat.com>
Patchwork-id: 87049
O-Subject: [RHEL7.1 PATCH 078/422] rwsem: add rwsem_is_contended
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Josef Bacik <jbacik@fusionio.com>

commit 4a444b1f06d259ce938a47048840260f71a91c84
Author: Josef Bacik <jbacik@fusionio.com>
Date:   Fri Aug 30 10:05:22 2013 -0400

    rwsem: add rwsem_is_contended

    Btrfs needs a simple way to know if it needs to let go of it's read lock on a
    rwsem.  Introduce rwsem_is_contended to check to see if there are any waiters on
    this rwsem currently.  This is just a hueristic, it is meant to be light and not
    100% accurate and called by somebody already holding on to the rwsem in either
    read or write.  Thanks,

    Signed-off-by: Josef Bacik <jbacik@fusionio.com>
    Signed-off-by: Chris Mason <clm@fb.com>
    Acked-by: Ingo Molnar <mingo@kernel.org>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/linux/rwsem.h b/include/linux/rwsem.h
index 0616ffe..03f3b05 100644
--- a/include/linux/rwsem.h
+++ b/include/linux/rwsem.h
@@ -75,6 +75,17 @@ do {        \
 } while (0)
 
 /*
+ * This is the same regardless of which rwsem implementation that is being used.
+ * It is just a heuristic meant to be called by somebody alreadying holding the
+ * rwsem to see if somebody from an incompatible type is wanting access to the
+ * lock.
+ */
+static inline int rwsem_is_contended(struct rw_semaphore *sem)
+{
+ return !list_empty(&sem->wait_list);
+}
+
+/*
  * lock for reading
  */
 extern void down_read(struct rw_semaphore *sem);
-- 
1.7.1