From 003471e9d4dd465720490eabe199fff0dcffdae2 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:10:54 -0400
Subject: [usb] pl2303: refactor baud-rate divisor handling

Message-id: <1410887463-20674-583-git-send-email-dzickus@redhat.com>
Patchwork-id: 95482
O-Subject: [RHEL7 PATCH 582/591] USB: pl2303: refactor baud-rate divisor handling
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit c82c6d45a2fc882fedfde517ba86690b2d5ed555
Author: Johan Hovold <jhovold@gmail.com>
Date:   Sun Dec 29 19:23:13 2013 +0100

    USB: pl2303: refactor baud-rate divisor handling

    Refactor baud-rate divisor handling.

    Signed-off-by: Johan Hovold <jhovold@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/serial/pl2303.c b/drivers/usb/serial/pl2303.c
index 11d5954..3db85a9 100644
--- a/drivers/usb/serial/pl2303.c
+++ b/drivers/usb/serial/pl2303.c
@@ -341,6 +341,28 @@ static speed_t pl2303_get_supported_baud_rate(speed_t baud)
  return baud;
 }
 
+static speed_t pl2303_encode_baud_rate_divisor(unsigned char buf[4],
+        speed_t baud)
+{
+ unsigned int tmp;
+
+ /*
+  * Apparently the formula is:
+  * baudrate = 12M * 32 / (2^buf[1]) / buf[0]
+  */
+ tmp = 12000000 * 32 / baud;
+ buf[3] = 0x80;
+ buf[2] = 0;
+ buf[1] = (tmp >= 256);
+ while (tmp >= 256) {
+  tmp >>= 2;
+  buf[1] <<= 1;
+ }
+ buf[0] = tmp;
+
+ return baud;
+}
+
 static void pl2303_encode_baud_rate(struct tty_struct *tty,
      struct usb_serial_port *port,
      u8 buf[4])
@@ -364,23 +386,10 @@ static void pl2303_encode_baud_rate(struct tty_struct *tty,
   */
  baud = pl2303_get_supported_baud_rate(baud);
 
- if (baud <= 115200) {
+ if (baud <= 115200)
   put_unaligned_le32(baud, buf);
- } else {
-  /*
-   * Apparently the formula for higher speeds is:
-   * baudrate = 12M * 32 / (2^buf[1]) / buf[0]
-   */
-  unsigned tmp = 12000000 * 32 / baud;
-  buf[3] = 0x80;
-  buf[2] = 0;
-  buf[1] = (tmp >= 256);
-  while (tmp >= 256) {
-   tmp >>= 2;
-   buf[1] <<= 1;
-  }
-  buf[0] = tmp;
- }
+ else
+  baud = pl2303_encode_baud_rate_divisor(buf, baud);
 
  /* Save resulting baud rate */
  tty_encode_baud_rate(tty, baud, baud);
-- 
1.7.1