From 923b25ff764a377480d1145a830ac3f2ac83862c Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Fri, 2 May 2014 14:36:37 -0400
Subject: [misc] mei: mei_cl_link protect open_handle_count from overflow

Message-id: <1399041470-21330-5-git-send-email-prarit@redhat.com>
Patchwork-id: 79292
O-Subject: [RHEL7.1 PATCH BZ 1088953 04/77] mei: mei_cl_link protect open_handle_count from overflow
Bugzilla: 1088953
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1088953

commit caaeb09afda3a2239e02d495cea7e629136e09ee
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Mon Sep 2 03:11:00 2013 +0300

    mei: mei_cl_link protect open_handle_count from overflow

    mei_cl_link is called both from mei_open and also from
    in-kernel drivers so we need to protect open_handle_count
    from overflow

    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Cc: Dean Nelson <dnelson@redhat.com>
Cc: Stefan Assmann <sassmann@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/misc/mei/client.c b/drivers/misc/mei/client.c
index e0684b4..a82b443 100644
--- a/drivers/misc/mei/client.c
+++ b/drivers/misc/mei/client.c
@@ -287,6 +287,12 @@ int mei_cl_link(struct mei_cl *cl, int id)
   return -ENOENT;
  }
 
+ if (dev->open_handle_count >= MEI_MAX_OPEN_HANDLE_COUNT) {
+  dev_err(&dev->pdev->dev, "open_handle_count exceded %d",
+   MEI_MAX_OPEN_HANDLE_COUNT);
+  return -ENOENT;
+ }
+
  dev->open_handle_count++;
 
  cl->host_client_id = id;
-- 
1.7.1