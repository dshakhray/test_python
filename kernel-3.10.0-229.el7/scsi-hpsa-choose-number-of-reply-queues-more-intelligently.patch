From 9ebf7d4e73a814c7433d397f29ffcbde4a5c6139 Mon Sep 17 00:00:00 2001
From: Tomas Henzl <thenzl@redhat.com>
Date: Mon, 8 Sep 2014 14:31:52 -0400
Subject: [scsi] hpsa: choose number of reply queues more intelligently

Message-id: <1410186734-19986-62-git-send-email-thenzl@redhat.com>
Patchwork-id: 92088
O-Subject: [RHEL6.6 e-stor PATCH 61/83] hpsa: choose number of reply queues more intelligently.
Bugzilla: 1069185
RH-Acked-by: Maurizio Lombardi <mlombard@redhat.com>
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Ewan Milne <emilne@redhat.com>

No sense having 8 or 16 reply queues if you only have 4 cpus,
and likewise no sense limiting to 8 reply queues if you have
many more cpus.

Signed-off-by: Stephen M. Cameron <scameron@beardog.cce.hp.com>
Reviewed-by: Mike Miller <michael.miller@canonical.com>
Reviewed-by: Scott Teel <scott.teel@hp.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit f89439bc2e12a0eab57f15411e668525dc7e61ec)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/hpsa.c b/drivers/scsi/hpsa.c
index 8eb5fc4..91167a4 100644
--- a/drivers/scsi/hpsa.c
+++ b/drivers/scsi/hpsa.c
@@ -6187,6 +6187,8 @@ static void hpsa_interrupt_mode(struct ctlr_info *h)
  if (pci_find_capability(h->pdev, PCI_CAP_ID_MSIX)) {
   dev_info(&h->pdev->dev, "MSIX\n");
   h->msix_vector = MAX_REPLY_QUEUES;
+  if (h->msix_vector > num_online_cpus())
+   h->msix_vector = num_online_cpus();
   err = pci_enable_msix(h->pdev, hpsa_msix_entries,
           h->msix_vector);
   if (err > 0) {
diff --git a/drivers/scsi/hpsa_cmd.h b/drivers/scsi/hpsa_cmd.h
index db89245..104b67b 100644
--- a/drivers/scsi/hpsa_cmd.h
+++ b/drivers/scsi/hpsa_cmd.h
@@ -615,7 +615,7 @@ struct TransTable_struct {
  u32            RepQCount;
  u32            RepQCtrAddrLow32;
  u32            RepQCtrAddrHigh32;
-#define MAX_REPLY_QUEUES 8
+#define MAX_REPLY_QUEUES 64
  struct vals32  RepQAddr[MAX_REPLY_QUEUES];
 };
 
-- 
1.7.1