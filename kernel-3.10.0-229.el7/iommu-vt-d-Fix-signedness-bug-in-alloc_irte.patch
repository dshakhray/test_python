From a2851cd36314086abf94d356e2c9ef093d0317e2 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 01:33:54 -0400
Subject: [iommu] vt-d: Fix signedness bug in alloc_irte()

Message-id: <20140905013354.30867.82856.stgit@gir.stowe>
Patchwork-id: 91292
O-Subject: [RHEL7.1 PATCH 28/28] iommu/vt-d: Fix signedness bug in alloc_irte()
Bugzilla: 1129808
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Dutile <ddutile@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1129808
Upstream Status: 9f4c7448f46b881119998702530676b3400752a9

commit 9f4c7448f46b881119998702530676b3400752a9
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Jan 9 08:32:36 2014 +0300

    iommu/vt-d: Fix signedness bug in alloc_irte()

    "index" needs to be signed for the error handling to work.  I deleted a
    little bit of obsolete cruft related to "index" and "start_index" as
    well.

    Fixes: 360eb3c5687e ('iommu/vt-d: use dedicated bitmap to track remapping en

    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Joerg Roedel <joro@8bytes.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/intel_irq_remapping.c b/drivers/iommu/intel_irq_remapping.c
index f307a3f..b30b423 100644
--- a/drivers/iommu/intel_irq_remapping.c
+++ b/drivers/iommu/intel_irq_remapping.c
@@ -71,18 +71,13 @@ static int alloc_irte(struct intel_iommu *iommu, int irq, u16 count)
  struct ir_table *table = iommu->ir_table;
  struct irq_2_iommu *irq_iommu = irq_2_iommu(irq);
  struct irq_cfg *cfg = irq_get_chip_data(irq);
- u16 index, start_index;
  unsigned int mask = 0;
  unsigned long flags;
+ int index;
 
  if (!count || !irq_iommu)
   return -1;
 
- /*
-  * start the IRTE search from index 0.
-  */
- index = start_index = 0;
-
  if (count > 1) {
   count = __roundup_pow_of_two(count);
   mask = ilog2(count);
-- 
1.7.1