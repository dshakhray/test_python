From e809c291d93d6cb32a17da5ca737cb9e8950e9f9 Mon Sep 17 00:00:00 2001
From: Hannes Frederic Sowa <hannes@redhat.com>
Date: Wed, 16 Jul 2014 13:11:35 -0400
Subject: [net] ipv6: don't count addrconf generated routes against gc limit

Message-id: <2eca7b9aadf99fa06bd23cd8ac0e6996f9ca6b3d.1405516048.git.hannes@redhat.com>
Patchwork-id: 85856
O-Subject: [PATCH net RHEL7 1/2] ipv6: don't count addrconf generated routes against gc limit
Bugzilla: 1119364
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: Neil Horman <nhorman@redhat.com>
RH-Acked-by: Florian Westphal <fwestpha@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1119364
Upstream Status: a3300ef4bbb1f1e33ff0400e1e6cf7733d988f4f
Brew: http://brewweb.devel.redhat.com/brew/taskinfo?taskID=7697742
Tested: testing on x86_64 beaker and scripts to build up large routing tables

Upstream Commit:
commit a3300ef4bbb1f1e33ff0400e1e6cf7733d988f4f
Author: Hannes Frederic Sowa <hannes@stressinduktion.org>
Date:   Sat Dec 7 03:33:45 2013 +0100

    ipv6: don't count addrconf generated routes against gc limit

    Brett Ciphery reported that new ipv6 addresses failed to get installed
    because the addrconf generated dsts where counted against the dst gc
    limit. We don't need to count those routes like we currently don't count
    administratively added routes.

    Because the max_addresses check enforces a limit on unbounded address
    generation first in case someone plays with router advertisments, we
    are still safe here.

    Reported-by: Brett Ciphery <brett.ciphery@windriver.com>
    Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Hannes Frederic Sowa <hannes@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ipv6/route.c b/net/ipv6/route.c
index 0f7d448..b0c3ed9 100644
--- a/net/ipv6/route.c
+++ b/net/ipv6/route.c
@@ -2174,12 +2174,10 @@ struct rt6_info *addrconf_dst_alloc(struct inet6_dev *idev,
         bool anycast)
 {
  struct net *net = dev_net(idev->dev);
- struct rt6_info *rt = ip6_dst_alloc(net, net->loopback_dev, 0, NULL);
-
- if (!rt) {
-  net_warn_ratelimited("Maximum number of routes reached, consider increasing route/max_size\n");
+ struct rt6_info *rt = ip6_dst_alloc(net, net->loopback_dev,
+         DST_NOCOUNT, NULL);
+ if (!rt)
   return ERR_PTR(-ENOMEM);
- }
 
  in6_dev_hold(idev);
 
-- 
1.7.1