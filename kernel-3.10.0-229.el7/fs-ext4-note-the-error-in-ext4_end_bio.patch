From f74de69ea6dc4a933dca5a1a8cf6934634f9df94 Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 23 Oct 2014 09:54:58 -0400
Subject: [fs] ext4: note the error in ext4_end_bio()

Message-id: <1414058125-4183-145-git-send-email-lczerner@redhat.com>
Patchwork-id: 98220
O-Subject: [RHEL 7.1 PATCH v2 144/171] ext4: note the error in ext4_end_bio()
Bugzilla: 1150139
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Matthew Wilcox <willy@linux.intel.com>

BZ 1150139
https://bugzilla.redhat.com/show_bug.cgi?id=1150139

BREW 8142710
https://brewweb.devel.redhat.com/taskinfo?taskID=8142710

Upstream commit 9503c67c93ed0b95ba62d12d1fd09da6245dbdd6

 ext4_end_bio() currently throws away the error that it receives.  Chances
 are this is part of a spate of errors, one of which will end up getting
 the error returned to userspace somehow, but we shouldn't take that risk.
 Also print out the errno to aid in debug.

 Signed-off-by: Matthew Wilcox <matthew.r.wilcox@intel.com>
 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
 Reviewed-by: Jan Kara <jack@suse.cz>
 Cc: stable@vger.kernel.org
 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/page-io.c b/fs/ext4/page-io.c
index 999753f..003b980 100644
--- a/fs/ext4/page-io.c
+++ b/fs/ext4/page-io.c
@@ -323,13 +323,14 @@ static void ext4_end_bio(struct bio *bio, int error)
  if (error) {
   struct inode *inode = io_end->inode;
 
-  ext4_warning(inode->i_sb, "I/O error writing to inode %lu "
+  ext4_warning(inode->i_sb, "I/O error %d writing to inode %lu "
         "(offset %llu size %ld starting block %llu)",
-        inode->i_ino,
+        error, inode->i_ino,
         (unsigned long long) io_end->offset,
         (long) io_end->size,
         (unsigned long long)
         bi_sector >> (inode->i_blkbits - 9));
+  mapping_set_error(inode->i_mapping, error);
  }
 
  if (io_end->flag & EXT4_IO_END_UNWRITTEN) {
-- 
1.7.1