From 66092d1da817091f4b57e527ec996af173aeeb95 Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:24:17 -0400
Subject: [net] libceph: factor out logic from ceph_osdc_start_request()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-151-git-send-email-sweil@redhat.com>
Patchwork-id: 89636
O-Subject: [PATCH 150/303] libceph: factor out logic from ceph_osdc_start_request()
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Ilya Dryomov <ilya.dryomov@inktank.com>

Factor out logic from ceph_osdc_start_request() into a new helper,
__ceph_osdc_start_request().  ceph_osdc_start_request() now amounts to
taking locks and calling __ceph_osdc_start_request().

Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>
Reviewed-by: Sage Weil <sage@inktank.com>
(cherry picked from commit 0bbfdfe8d25fcc1d5c2edb6b060fb0c5cf66aff9)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ceph/osd_client.c b/net/ceph/osd_client.c
index 166d4c7..2aa82b6 100644
--- a/net/ceph/osd_client.c
+++ b/net/ceph/osd_client.c
@@ -1427,6 +1427,40 @@ static void __send_queued(struct ceph_osd_client *osdc)
 }
 
 /*
+ * Caller should hold map_sem for read and request_mutex.
+ */
+static int __ceph_osdc_start_request(struct ceph_osd_client *osdc,
+         struct ceph_osd_request *req,
+         bool nofail)
+{
+ int rc;
+
+ __register_request(osdc, req);
+ req->r_sent = 0;
+ req->r_got_reply = 0;
+ rc = __map_request(osdc, req, 0);
+ if (rc < 0) {
+  if (nofail) {
+   dout("osdc_start_request failed map, "
+    " will retry %lld\n", req->r_tid);
+   rc = 0;
+  } else {
+   __unregister_request(osdc, req);
+  }
+  return rc;
+ }
+
+ if (req->r_osd == NULL) {
+  dout("send_request %p no up osds in pg\n", req);
+  ceph_monc_request_next_osdmap(&osdc->client->monc);
+ } else {
+  __send_queued(osdc);
+ }
+
+ return 0;
+}
+
+/*
  * Timeout callback, called every N seconds when 1 or more osd
  * requests has been active for more than N seconds.  When this
  * happens, we ping all OSDs with requests who have timed out to
@@ -2351,34 +2385,16 @@ int ceph_osdc_start_request(struct ceph_osd_client *osdc,
        struct ceph_osd_request *req,
        bool nofail)
 {
- int rc = 0;
+ int rc;
 
  down_read(&osdc->map_sem);
  mutex_lock(&osdc->request_mutex);
- __register_request(osdc, req);
- req->r_sent = 0;
- req->r_got_reply = 0;
- rc = __map_request(osdc, req, 0);
- if (rc < 0) {
-  if (nofail) {
-   dout("osdc_start_request failed map, "
-    " will retry %lld\n", req->r_tid);
-   rc = 0;
-  } else {
-   __unregister_request(osdc, req);
-  }
-  goto out_unlock;
- }
- if (req->r_osd == NULL) {
-  dout("send_request %p no up osds in pg\n", req);
-  ceph_monc_request_next_osdmap(&osdc->client->monc);
- } else {
-  __send_queued(osdc);
- }
- rc = 0;
-out_unlock:
+
+ rc = __ceph_osdc_start_request(osdc, req, nofail);
+
  mutex_unlock(&osdc->request_mutex);
  up_read(&osdc->map_sem);
+
  return rc;
 }
 EXPORT_SYMBOL(ceph_osdc_start_request);
-- 
1.7.1