From e405c0b734842c5ded74db678c24c5563b2b926d Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:06:31 -0400
Subject: [usb] uas: Honor no-uas quirk set in usb-storage's quirks module parameter

Message-id: <1410887463-20674-320-git-send-email-dzickus@redhat.com>
Patchwork-id: 95315
O-Subject: [RHEL7 PATCH 319/591] uas: Honor no-uas quirk set in usb-storage's quirks module parameter
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 97172a660cfc744996112eb625a77282a4b627b7
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sat Nov 16 12:19:36 2013 +0100

    uas: Honor no-uas quirk set in usb-storage's quirks module parameter

    Falling back from uas to usb-storage requires coordination between uas and
    usb-storage, so use usb-storage's quirks module parameter, rather then
    requiring the user to pass a param to 2 different modules.

    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/storage/Kconfig b/drivers/usb/storage/Kconfig
index 8470e1b..5939570 100644
--- a/drivers/usb/storage/Kconfig
+++ b/drivers/usb/storage/Kconfig
@@ -202,7 +202,7 @@ config USB_STORAGE_ENE_UB6250
 
 config USB_UAS
  tristate "USB Attached SCSI"
- depends on SCSI && BROKEN
+ depends on SCSI && USB_STORAGE && BROKEN
  help
    The USB Attached SCSI protocol is supported by some USB
    storage devices.  It permits higher performance by supporting
diff --git a/drivers/usb/storage/uas-detect.h b/drivers/usb/storage/uas-detect.h
index 02bf5ec..082bde1 100644
--- a/drivers/usb/storage/uas-detect.h
+++ b/drivers/usb/storage/uas-detect.h
@@ -1,5 +1,6 @@
 #include <linux/usb.h>
 #include <linux/usb/hcd.h>
+#include "usb.h"
 
 static int uas_is_interface(struct usb_host_interface *intf)
 {
@@ -42,8 +43,11 @@ static int uas_find_uas_alt_setting(struct usb_interface *intf)
 static int uas_use_uas_driver(struct usb_interface *intf,
          const struct usb_device_id *id)
 {
+ struct usb_device *udev = interface_to_usbdev(intf);
  unsigned long flags = id->driver_info;
 
+ usb_stor_adjust_quirks(udev, &flags);
+
  if (flags & US_FL_IGNORE_UAS)
   return 0;
 
-- 
1.7.1