From 3c03af18e4a2880f84d610fc9a4b100c32aeffa3 Mon Sep 17 00:00:00 2001
From: Stefan Assmann <sassmann@redhat.com>
Date: Tue, 2 Sep 2014 13:12:58 -0400
Subject: [ethernet] i40e/i40evf: fix extension header csum logic

Message-id: <1409663591-32531-136-git-send-email-sassmann@redhat.com>
Patchwork-id: 90612
O-Subject: [RHEL7.1 PATCH 135/148] i40e/i40evf: fix extension header csum logic
Bugzilla: 1091127
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jesse Brandeburg <jesse.brandeburg@intel.com>

The hardware design requires that the driver avoid indicating
checksum offload success on some ipv6 frames with extension
headers.

The code needs to just check for the IPV6EXADD bit and if
it is set punt the checksum to the stack.  I don't know why
the code was checking TCP on inner protocol, as that code
doesn't make any sense to me but seems wrong, so remove it.

Change-ID: I10d3aacdbb1819fb60b4b0eb80e6cc67ef2c9599
Signed-off-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
Tested-By: Jim Young <jamesx.m.young@intel.com>
Tested-by: Sibai Li <sibai.li@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: Stefan Assmann <sassmann@redhat.com>
(cherry picked from commit 22d2fa1d31b74c0f18f09b11331336ca53dbb1ec)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/i40evf/i40e_txrx.c b/drivers/net/ethernet/intel/i40evf/i40e_txrx.c
index b342f21..79bf96c 100644
--- a/drivers/net/ethernet/intel/i40evf/i40e_txrx.c
+++ b/drivers/net/ethernet/intel/i40evf/i40e_txrx.c
@@ -773,8 +773,6 @@ static inline void i40e_rx_checksum(struct i40e_vsi *vsi,
 
  /* likely incorrect csum if alternate IP extension headers found */
  if (ipv6 &&
-     decoded.inner_prot == I40E_RX_PTYPE_INNER_PROT_TCP &&
-     rx_error & (1 << I40E_RX_DESC_ERROR_L4E_SHIFT) &&
      rx_status & (1 << I40E_RX_DESC_STATUS_IPV6EXADD_SHIFT))
   /* don't increment checksum err here, non-fatal err */
   return;
-- 
1.7.1