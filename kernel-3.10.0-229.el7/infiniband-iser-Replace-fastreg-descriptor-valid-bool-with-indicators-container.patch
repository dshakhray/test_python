From 48d1114da32989192e283c5161bb178e4c541b03 Mon Sep 17 00:00:00 2001
From: Amir Vadai <avadai@redhat.com>
Date: Mon, 3 Nov 2014 07:52:06 -0500
Subject: [infiniband] iser: Replace fastreg descriptor valid bool with indicators container

Message-id: <ffd2aea88fc11070f8cbeec92980024e4ff97d9e.1415000301.git.avadai@redhat.com>
Patchwork-id: 98677
O-Subject: [Patch RHEL7.1 08/37] IB/iser: Replace fastreg descriptor valid bool with indicators container
Bugzilla: 1107622
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Doug Ledford <dledford@redhat.com>

From: Sagi Grimberg <sagig@mellanox.com>

In T10-PI support we will have memory keys for protection buffers and
signature transactions.  We prefer to compact indicators rather than
keeping multiple bools.

This commit does not change any functionality.

Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
Signed-off-by: Alex Tabachnik <alext@mellanox.com>
Signed-off-by: Roland Dreier <roland@purestorage.com>
(cherry picked from commit 73bc06b7edd8ce4ccbce7ffd28978ce16b97e5d8)
Signed-off-by: Amir Vadai <amirv@mellanox.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/infiniband/ulp/iser/iscsi_iser.h b/drivers/infiniband/ulp/iser/iscsi_iser.h
index b4290f5..5660714 100644
--- a/drivers/infiniband/ulp/iser/iscsi_iser.h
+++ b/drivers/infiniband/ulp/iser/iscsi_iser.h
@@ -280,13 +280,17 @@ struct iser_device {
            enum iser_data_dir cmd_dir);
 };
 
+enum iser_reg_indicator {
+ ISER_DATA_KEY_VALID = 1 << 0,
+};
+
 struct fast_reg_descriptor {
  struct list_head    list;
  /* For fast registration - FRWR */
  struct ib_mr    *data_mr;
  struct ib_fast_reg_page_list     *data_frpl;
- /* Valid for fast registration flag */
- bool      valid;
+ /* registration indicators container */
+ u8      reg_indicators;
 };
 
 struct iser_conn {
diff --git a/drivers/infiniband/ulp/iser/iser_memory.c b/drivers/infiniband/ulp/iser/iser_memory.c
index d25587e..a7a0d3e 100644
--- a/drivers/infiniband/ulp/iser/iser_memory.c
+++ b/drivers/infiniband/ulp/iser/iser_memory.c
@@ -479,7 +479,7 @@ static int iser_fast_reg_mr(struct iscsi_iser_task *iser_task,
   return -EINVAL;
  }
 
- if (!desc->valid) {
+ if (!(desc->reg_indicators & ISER_DATA_KEY_VALID)) {
   memset(&inv_wr, 0, sizeof(inv_wr));
   inv_wr.wr_id = ISER_FASTREG_LI_WRID;
   inv_wr.opcode = IB_WR_LOCAL_INV;
@@ -514,7 +514,7 @@ static int iser_fast_reg_mr(struct iscsi_iser_task *iser_task,
   iser_err("fast registration failed, ret:%d\n", ret);
   return ret;
  }
- desc->valid = false;
+ desc->reg_indicators &= ~ISER_DATA_KEY_VALID;
 
  sge->lkey = desc->data_mr->lkey;
  sge->addr = desc->data_frpl->page_list[0] + offset;
diff --git a/drivers/infiniband/ulp/iser/iser_verbs.c b/drivers/infiniband/ulp/iser/iser_verbs.c
index 95fcfca..6a5f424 100644
--- a/drivers/infiniband/ulp/iser/iser_verbs.c
+++ b/drivers/infiniband/ulp/iser/iser_verbs.c
@@ -296,7 +296,7 @@ iser_create_fastreg_desc(struct ib_device *ib_device, struct ib_pd *pd,
  }
  iser_info("Create fr_desc %p page_list %p\n",
     desc, desc->data_frpl->page_list);
- desc->valid = true;
+ desc->reg_indicators |= ISER_DATA_KEY_VALID;
 
  return 0;
 
-- 
1.7.1