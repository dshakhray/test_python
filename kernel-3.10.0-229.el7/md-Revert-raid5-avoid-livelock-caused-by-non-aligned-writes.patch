From 415eb57067ce917ca1595b8ee957f9dd0497fa70 Mon Sep 17 00:00:00 2001
From: Jes Sorensen <Jes.Sorensen@redhat.com>
Date: Mon, 26 Jan 2015 19:26:48 -0500
Subject: [md] Revert: raid5: avoid livelock caused by non-aligned writes

Message-id: <1422300409-394-2-git-send-email-Jes.Sorensen@redhat.com>
Patchwork-id: 103569
O-Subject: [RHEL7.1 PATCH 1/2] Revert "[md] raid5: avoid livelock caused by non-aligned writes"
Bugzilla: 1153796
RH-Acked-by: Jonathan E Brassow <jbrassow@redhat.com>
RH-Acked-by: Heinz Mauelshagen <heinzm@redhat.com>
RH-Acked-by: Mike Snitzer <snitzer@redhat.com>

From: Jes Sorensen <Jes.Sorensen@redhat.com>

This reverts commit 00fdf6ab071ad70f833369302b085f89ddc7833f.

This is a temporary revert until this issue is resolved with
upstream. The reason is that the reconstruct write optimization in MD
raid5, function fetch_block causes livelocks in LVM raid4/5 tests.

Test scenarios:
The tests wait for full initial array resynchronization before making
a filesystem on the raid4/5 logical volume, mounting it, writing to
the filesystem and failing one physical volume holding a raiddev.

In short, we're seeing livelocks on fully synchronized raid4/5 arrays
with a failed device.

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/raid5.c b/drivers/md/raid5.c
index f689d21..fd8095b 100644
--- a/drivers/md/raid5.c
+++ b/drivers/md/raid5.c
@@ -2926,7 +2926,7 @@ static int fetch_block(struct stripe_head *sh, struct stripe_head_state *s,
        (!test_bit(R5_Insync, &dev->flags) || test_bit(STRIPE_PREREAD_ACTIVE, &sh->state)) &&
        !test_bit(R5_OVERWRITE, &fdev[0]->flags)) ||
       (sh->raid_conf->level == 6 && s->failed && s->to_write &&
-       s->to_write - s->non_overwrite < sh->raid_conf->raid_disks - 2 &&
+       s->to_write < sh->raid_conf->raid_disks - 2 &&
        (!test_bit(R5_Insync, &dev->flags) || test_bit(STRIPE_PREREAD_ACTIVE, &sh->state))))) {
   /* we would like to get this block, possibly by computing it,
    * otherwise read it if the backing disk is insync
-- 
1.7.1