From a0d5e12d0ece29e2419bdac28f28e4b288c7793b Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:26:33 -0400
Subject: [block] rbd: use rbd_segment_name_free() instead of kfree()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-287-git-send-email-sweil@redhat.com>
Patchwork-id: 89717
O-Subject: [PATCH 286/303] rbd: use rbd_segment_name_free() instead of kfree()
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Himangi Saraogi <himangi774@gmail.com>

Free memory allocated using kmem_cache_zalloc using kmem_cache_free
rather than kfree. The helper rbd_segment_name_free does the job here.
Its position is shifted above the calling function.

The Coccinelle semantic patch that detects this change is as follows:

// <smpl>
@@
expression x,E,c;
@@

 x = \(kmem_cache_alloc\|kmem_cache_zalloc\|kmem_cache_alloc_node\)(c,...)
 ... when != x = E
     when != &x
?-kfree(x)
+kmem_cache_free(c,x)
// </smpl>

Signed-off-by: Himangi Saraogi <himangi774@gmail.com>
Acked-by: Julia Lawall <julia.lawall@lip6.fr>
Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>
(cherry picked from commit 7d5079aa8bc9ca25e61576820d07503b2a558f9b)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/block/rbd.c b/drivers/block/rbd.c
index b68003e..5fe3baf 100644
--- a/drivers/block/rbd.c
+++ b/drivers/block/rbd.c
@@ -1123,6 +1123,13 @@ static void rbd_dev_mapping_clear(struct rbd_device *rbd_dev)
  rbd_dev->mapping.features = 0;
 }
 
+static void rbd_segment_name_free(const char *name)
+{
+ /* The explicit cast here is needed to drop the const qualifier */
+
+ kmem_cache_free(rbd_segment_name_cache, (void *)name);
+}
+
 static const char *rbd_segment_name(struct rbd_device *rbd_dev, u64 offset)
 {
  char *name;
@@ -1142,20 +1149,13 @@ static const char *rbd_segment_name(struct rbd_device *rbd_dev, u64 offset)
  if (ret < 0 || ret > CEPH_MAX_OID_NAME_LEN) {
   pr_err("error formatting segment name for #%llu (%d)\n",
    segment, ret);
-  kfree(name);
+  rbd_segment_name_free(name);
   name = NULL;
  }
 
  return name;
 }
 
-static void rbd_segment_name_free(const char *name)
-{
- /* The explicit cast here is needed to drop the const qualifier */
-
- kmem_cache_free(rbd_segment_name_cache, (void *)name);
-}
-
 static u64 rbd_segment_offset(struct rbd_device *rbd_dev, u64 offset)
 {
  u64 segment_size = (u64) 1 << rbd_dev->header.obj_order;
-- 
1.7.1