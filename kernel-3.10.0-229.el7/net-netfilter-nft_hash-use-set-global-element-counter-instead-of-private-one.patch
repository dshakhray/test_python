From 54e177e2d24f63494e7e2749b7ca55e1ffe2deb2 Mon Sep 17 00:00:00 2001
From: Marcelo Leitner <mleitner@redhat.com>
Date: Tue, 21 Oct 2014 16:17:06 -0400
Subject: [net] netfilter: nft_hash: use set global element counter instead of private one

Message-id: <20141021161706.22888.54003.stgit@localhost.localdomain>
Patchwork-id: 97929
O-Subject: [RHEL7 net PATCH 032/124] netfilter: nft_hash: use set global element counter instead of private one
Bugzilla: 1148041 1155088
RH-Acked-by: Florian Westphal <fwestpha@redhat.com>

Backport of upstream commit: 2c96c25d114083c7661936ad4d27e6a2c46c527d

 commit 2c96c25d114083c7661936ad4d27e6a2c46c527d
 Author: Patrick McHardy <kaber@trash.net>
 Date:   Fri Mar 28 10:19:48 2014 +0000

    netfilter: nft_hash: use set global element counter instead of private one

    Now that nf_tables performs global accounting of set elements, it is not
    needed in the hash type anymore.

    Signed-off-by: Patrick McHardy <kaber@trash.net>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

Signed-off-by: Marcelo Ricardo Leitner <mleitner@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/netfilter/nft_hash.c b/net/netfilter/nft_hash.c
index 01884b3..1dfeb67 100644
--- a/net/netfilter/nft_hash.c
+++ b/net/netfilter/nft_hash.c
@@ -28,7 +28,6 @@ struct nft_hash {
 
 struct nft_hash_table {
  unsigned int   size;
- unsigned int   elements;
  struct nft_hash_elem __rcu *buckets[];
 };
 
@@ -167,7 +166,6 @@ static int nft_hash_tbl_expand(const struct nft_set *set, struct nft_hash *priv)
    break;
   }
  }
- ntbl->elements = tbl->elements;
 
  /* Publish new table */
  rcu_assign_pointer(priv->tbl, ntbl);
@@ -207,7 +205,6 @@ static int nft_hash_tbl_shrink(const struct nft_set *set, struct nft_hash *priv)
    ;
   RCU_INIT_POINTER(*pprev, tbl->buckets[i + ntbl->size]);
  }
- ntbl->elements = tbl->elements;
 
  /* Publish new table */
  rcu_assign_pointer(priv->tbl, ntbl);
@@ -243,10 +240,9 @@ static int nft_hash_insert(const struct nft_set *set,
  h = nft_hash_data(&he->key, tbl->size, set->klen);
  RCU_INIT_POINTER(he->next, tbl->buckets[h]);
  rcu_assign_pointer(tbl->buckets[h], he);
- tbl->elements++;
 
  /* Expand table when exceeding 75% load */
- if (tbl->elements > tbl->size / 4 * 3)
+ if (set->nelems + 1 > tbl->size / 4 * 3)
   nft_hash_tbl_expand(set, priv);
 
  return 0;
@@ -274,10 +270,9 @@ static void nft_hash_remove(const struct nft_set *set,
  RCU_INIT_POINTER(*pprev, he->next);
  synchronize_rcu();
  kfree(he);
- tbl->elements--;
 
  /* Shrink table beneath 30% load */
- if (tbl->elements < tbl->size * 3 / 10 &&
+ if (set->nelems - 1 < tbl->size * 3 / 10 &&
      tbl->size > NFT_HASH_MIN_SIZE)
   nft_hash_tbl_shrink(set, priv);
 }
-- 
1.7.1