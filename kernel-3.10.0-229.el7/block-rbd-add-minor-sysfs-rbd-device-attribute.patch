From 8e44a24dd321018242024e165ec81b76760cdd9b Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:23:17 -0400
Subject: [block] rbd: add 'minor' sysfs rbd device attribute
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-91-git-send-email-sweil@redhat.com>
Patchwork-id: 89695
O-Subject: [PATCH 090/303] rbd: add 'minor' sysfs rbd device attribute
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Ilya Dryomov <ilya.dryomov@inktank.com>

Introduce /sys/bus/rbd/devices/<id>/minor sysfs attribute for exporting
rbd whole disk minor numbers.  This is a step towards single-major
device number allocation scheme, but also a good thing on its own.

Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>
Reviewed-by: Alex Elder <elder@linaro.org>
Reviewed-by: Josh Durgin <josh.durgin@inktank.com>
(cherry picked from commit dd82fff1e8e7b486887dd88981776bb44e370848)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/Documentation/ABI/testing/sysfs-bus-rbd b/Documentation/ABI/testing/sysfs-bus-rbd
index 0a30647..17b119c 100644
--- a/Documentation/ABI/testing/sysfs-bus-rbd
+++ b/Documentation/ABI/testing/sysfs-bus-rbd
@@ -33,6 +33,10 @@ major
 
  The block device major number.
 
+minor
+
+ The block device minor number.  (December 2013, since 3.14.)
+
 name
 
  The name of the rbd image.
diff --git a/drivers/block/rbd.c b/drivers/block/rbd.c
index b03919d..d5c3587 100644
--- a/drivers/block/rbd.c
+++ b/drivers/block/rbd.c
@@ -323,6 +323,7 @@ struct rbd_device {
  int   dev_id;  /* blkdev unique id */
 
  int   major;  /* blkdev assigned major */
+ int   minor;
  struct gendisk  *disk;  /* blkdev's gendisk and rq */
 
  u32   image_format; /* Either 1 or 2 */
@@ -3393,7 +3394,7 @@ static int rbd_init_disk(struct rbd_device *rbd_dev)
  snprintf(disk->disk_name, sizeof(disk->disk_name), RBD_DRV_NAME "%d",
    rbd_dev->dev_id);
  disk->major = rbd_dev->major;
- disk->first_minor = 0;
+ disk->first_minor = rbd_dev->minor;
  disk->fops = &rbd_bd_ops;
  disk->private_data = rbd_dev;
 
@@ -3465,7 +3466,14 @@ static ssize_t rbd_major_show(struct device *dev,
   return sprintf(buf, "%d\n", rbd_dev->major);
 
  return sprintf(buf, "(none)\n");
+}
+
+static ssize_t rbd_minor_show(struct device *dev,
+         struct device_attribute *attr, char *buf)
+{
+ struct rbd_device *rbd_dev = dev_to_rbd_dev(dev);
 
+ return sprintf(buf, "%d\n", rbd_dev->minor);
 }
 
 static ssize_t rbd_client_id_show(struct device *dev,
@@ -3587,6 +3595,7 @@ static ssize_t rbd_image_refresh(struct device *dev,
 static DEVICE_ATTR(size, S_IRUGO, rbd_size_show, NULL);
 static DEVICE_ATTR(features, S_IRUGO, rbd_features_show, NULL);
 static DEVICE_ATTR(major, S_IRUGO, rbd_major_show, NULL);
+static DEVICE_ATTR(minor, S_IRUGO, rbd_minor_show, NULL);
 static DEVICE_ATTR(client_id, S_IRUGO, rbd_client_id_show, NULL);
 static DEVICE_ATTR(pool, S_IRUGO, rbd_pool_show, NULL);
 static DEVICE_ATTR(pool_id, S_IRUGO, rbd_pool_id_show, NULL);
@@ -3600,6 +3609,7 @@ static struct attribute *rbd_attrs[] = {
  &dev_attr_size.attr,
  &dev_attr_features.attr,
  &dev_attr_major.attr,
+ &dev_attr_minor.attr,
  &dev_attr_client_id.attr,
  &dev_attr_pool.attr,
  &dev_attr_pool_id.attr,
@@ -4844,6 +4854,7 @@ static int rbd_dev_device_setup(struct rbd_device *rbd_dev)
  if (ret < 0)
   goto err_out_id;
  rbd_dev->major = ret;
+ rbd_dev->minor = 0;
 
  /* Set up the blkdev mapping. */
 
-- 
1.7.1