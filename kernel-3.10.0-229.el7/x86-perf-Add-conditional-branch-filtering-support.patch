From 630b31064ee91c516cb75e7a796b16d4ad6fb7d0 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:04:36 -0400
Subject: [x86] perf: Add conditional branch filtering support

Message-id: <1410181752-25631-32-git-send-email-jolsa@redhat.com>
Patchwork-id: 91706
O-Subject: [PATCH RHEL7.1 BZ1134356 031/307] perf/x86: Add conditional branch filtering support
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit 37548914fbfcd56e1955a9b7e55dc3b84a3e9e25
Author: Anshuman Khandual <khandual@linux.vnet.ibm.com>
Date: Thu May 22 12:50:09 2014 +0530

description
===========
This patch adds conditional branch filtering support,
enabling it for PERF_SAMPLE_BRANCH_COND in perf branch
stack sampling framework by utilizing an available
software filter X86_BR_JCC.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kernel/cpu/perf_event_intel_lbr.c b/arch/x86/kernel/cpu/perf_event_intel_lbr.c
index 90ee6c1..cc3decd 100644
--- a/arch/x86/kernel/cpu/perf_event_intel_lbr.c
+++ b/arch/x86/kernel/cpu/perf_event_intel_lbr.c
@@ -384,6 +384,9 @@ static void intel_pmu_setup_sw_lbr_filter(struct perf_event *event)
  if (br_type & PERF_SAMPLE_BRANCH_NO_TX)
   mask |= X86_BR_NO_TX;
 
+ if (br_type & PERF_SAMPLE_BRANCH_COND)
+  mask |= X86_BR_JCC;
+
  /*
   * stash actual user request into reg, it may
   * be used by fixup code for some CPU
@@ -678,6 +681,7 @@ static const int nhm_lbr_sel_map[PERF_SAMPLE_BRANCH_MAX] = {
   * NHM/WSM erratum: must include IND_JMP to capture IND_CALL
   */
  [PERF_SAMPLE_BRANCH_IND_CALL] = LBR_IND_CALL | LBR_IND_JMP,
+ [PERF_SAMPLE_BRANCH_COND]     = LBR_JCC,
 };
 
 static const int snb_lbr_sel_map[PERF_SAMPLE_BRANCH_MAX] = {
@@ -689,6 +693,7 @@ static const int snb_lbr_sel_map[PERF_SAMPLE_BRANCH_MAX] = {
  [PERF_SAMPLE_BRANCH_ANY_CALL] = LBR_REL_CALL | LBR_IND_CALL
      | LBR_FAR,
  [PERF_SAMPLE_BRANCH_IND_CALL] = LBR_IND_CALL,
+ [PERF_SAMPLE_BRANCH_COND]       = LBR_JCC,
 };
 
 /* core */
-- 
1.7.1