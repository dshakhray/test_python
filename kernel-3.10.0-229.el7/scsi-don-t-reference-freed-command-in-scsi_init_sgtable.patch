From c6c541e2f53f43040c0cb94b6256a5c5666940c4 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Fri, 13 Jun 2014 14:37:13 -0400
Subject: [scsi] don't reference freed command in scsi_init_sgtable

Message-id: <1402670238-13916-146-git-send-email-snitzer@redhat.com>
Patchwork-id: 83896
O-Subject: [RHEL7.1 PATCH 145/150] scsi: don't reference freed command in scsi_init_sgtable
Bugzilla: 1105204
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Paolo Bonzini <pbonzini@redhat.com>

BZ: 1105204

Upstream commit 5e012aad85f2ee31d7de5c21d63ccd2702d63db2
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Apr 15 12:24:55 2014 +0200

    [SCSI] don't reference freed command in scsi_init_sgtable

    Patch

    commit 0479633686d370303e3430256ace4bd5f7f138dc
    Author: Christoph Hellwig <hch@infradead.org>
    Date:   Thu Feb 20 14:20:55 2014 -0800

        [SCSI] do not manipulate device reference counts in scsi_get/put_command

    Introduced a use after free: when scsi_init_io fails we have to release our
    device reference, but we do this trying to reference the just freed command.
    Add a local scsi_device pointer to fix this.

    Fixes: 0479633686d370303e3430256ace4bd5f7f138dc
    Reported-by: Sander Eikelenboom <linux@eikelenboom.it>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/scsi_lib.c b/drivers/scsi/scsi_lib.c
index e6641bd..a512af7 100644
--- a/drivers/scsi/scsi_lib.c
+++ b/drivers/scsi/scsi_lib.c
@@ -1067,6 +1067,7 @@ static int scsi_init_sgtable(struct request *req, struct scsi_data_buffer *sdb,
  */
 int scsi_init_io(struct scsi_cmnd *cmd, gfp_t gfp_mask)
 {
+ struct scsi_device *sdev = cmd->device;
  struct request *rq = cmd->request;
 
  int error = scsi_init_sgtable(rq, &cmd->sdb, gfp_mask);
@@ -1114,7 +1115,7 @@ err_exit:
  scsi_release_buffers(cmd);
  cmd->request->special = NULL;
  scsi_put_command(cmd);
- put_device(&cmd->device->sdev_gendev);
+ put_device(&sdev->sdev_gendev);
  return error;
 }
 EXPORT_SYMBOL(scsi_init_io);
-- 
1.7.1