From 2d109e5b9dd0e5249ec58f62bdb88a40c4bcdd8d Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:21:38 -0400
Subject: [cpufreq] Fix misplaced call to cpufreq_update_policy()

Message-id: <1409235879-1283-5-git-send-email-prarit@redhat.com>
Patchwork-id: 89352
O-Subject: [RHEL7.1 PATCH BZ 1134639 004/185] cpufreq: Fix misplaced call to cpufreq_update_policy()
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit 23d328994b548d6822b88fe7e1903652afc354e0
Author: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
Date:   Tue Jul 30 04:23:56 2013 +0530

    cpufreq: Fix misplaced call to cpufreq_update_policy()

    The call to cpufreq_update_policy() is placed in the CPU hotplug callback
    of cpufreq_stats, which has a higher priority than the CPU hotplug callback
    of cpufreq-core. As a result, during CPU_ONLINE/CPU_ONLINE_FROZEN, we end up
    calling cpufreq_update_policy() *before* calling cpufreq_add_dev() !
    And for uninitialized CPUs, it just returns silently, not doing anything.

    To add to that, cpufreq_stats is not even the right place to call
    cpufreq_update_policy() to begin with. The cpufreq core ought to handle
    this in its own callback, from an elegance/relevance perspective.

    So move the invocation of cpufreq_update_policy() to cpufreq_cpu_callback,
    and place it *after* cpufreq_add_dev().

    Signed-off-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/cpufreq.c b/drivers/cpufreq/cpufreq.c
index 23b3de9..d82d3db 100644
--- a/drivers/cpufreq/cpufreq.c
+++ b/drivers/cpufreq/cpufreq.c
@@ -1902,6 +1902,7 @@ static int cpufreq_cpu_callback(struct notifier_block *nfb,
   case CPU_ONLINE:
   case CPU_ONLINE_FROZEN:
    cpufreq_add_dev(dev, NULL);
+   cpufreq_update_policy(cpu);
    break;
   case CPU_DOWN_PREPARE:
   case CPU_DOWN_PREPARE_FROZEN:
diff --git a/drivers/cpufreq/cpufreq_stats.c b/drivers/cpufreq/cpufreq_stats.c
index f775a02..1242c4c 100644
--- a/drivers/cpufreq/cpufreq_stats.c
+++ b/drivers/cpufreq/cpufreq_stats.c
@@ -349,10 +349,6 @@ static int cpufreq_stat_cpu_callback(struct notifier_block *nfb,
  unsigned int cpu = (unsigned long)hcpu;
 
  switch (action) {
- case CPU_ONLINE:
- case CPU_ONLINE_FROZEN:
-  cpufreq_update_policy(cpu);
-  break;
  case CPU_DOWN_PREPARE:
  case CPU_DOWN_PREPARE_FROZEN:
   cpufreq_stats_free_sysfs(cpu);
@@ -391,8 +387,6 @@ static int __init cpufreq_stats_init(void)
   return ret;
 
  register_hotcpu_notifier(&cpufreq_stat_cpu_notifier);
- for_each_online_cpu(cpu)
-  cpufreq_update_policy(cpu);
 
  ret = cpufreq_register_notifier(&notifier_trans_block,
     CPUFREQ_TRANSITION_NOTIFIER);
-- 
1.7.1