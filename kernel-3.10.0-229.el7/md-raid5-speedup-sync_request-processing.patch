From 5bf6bba81563e068e617b9b59263b7dee9b14be3 Mon Sep 17 00:00:00 2001
From: Jes Sorensen <Jes.Sorensen@redhat.com>
Date: Mon, 1 Sep 2014 09:26:11 -0400
Subject: [md] raid5: speedup sync_request processing

Message-id: <1409563584-9000-70-git-send-email-Jes.Sorensen@redhat.com>
Patchwork-id: 89999
O-Subject: [RHEL7.1 PATCH 69/82] raid5: speedup sync_request processing
Bugzilla: 1085530
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

From: Eivind Sarto <eivindsarto@gmail.com>

The raid5 sync_request() processing calls handle_stripe() within the context of
the resync-thread.  The resync-thread issues the first set of read requests
and this adds execution latency and slows down the scheduling of the next
sync_request().
The current rebuild/resync speed of raid5 is not much faster than what
rotational HDDs can sustain.
Testing the following patch on a 6-drive array, I can increase the rebuild
speed from 100 MB/s to 175 MB/s.
The sync_request() now just sets STRIPE_HANDLE and releases the stripe.  This
creates some more parallelism between the resync-thread and raid5 kernel daemon.

Signed-off-by: Eivind Sarto <esarto@fusionio.com>
Signed-off-by: NeilBrown <neilb@suse.de>
(cherry picked from commit 053f5b6525ae32da397e6c47721961f800d2c924)
Signed-off-by: Jes Sorensen <Jes.Sorensen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/raid5.c b/drivers/md/raid5.c
index 5528e3f..b9e17fb 100644
--- a/drivers/md/raid5.c
+++ b/drivers/md/raid5.c
@@ -5075,8 +5075,8 @@ static inline sector_t sync_request(struct mddev *mddev, sector_t sector_nr, int
  bitmap_start_sync(mddev->bitmap, sector_nr, &sync_blocks, still_degraded);
 
  set_bit(STRIPE_SYNC_REQUESTED, &sh->state);
+ set_bit(STRIPE_HANDLE, &sh->state);
 
- handle_stripe(sh);
  release_stripe(sh);
 
  return STRIPE_SECTORS;
-- 
1.7.1