From 0b42c05112d2cb198d5f94116384b57f07af6314 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:10:23 -0400
Subject: [usb] core: check for valid id_table when using the RefId feature

Message-id: <1410887463-20674-552-git-send-email-dzickus@redhat.com>
Patchwork-id: 95533
O-Subject: [RHEL7 PATCH 551/591] usb: core: check for valid id_table when using the RefId feature
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 1b9fb31f7db7882d475bdc8b335403e8eaabf1ef
Author: Wolfram Sang <wsa@the-dreams.de>
Date:   Mon Jan 13 11:29:23 2014 +0100

    usb: core: check for valid id_table when using the RefId feature

    When implementing the RefId feature, it was missed that id_tables can be
    NULL under special circumstances. Bail out in that case.

    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/core/driver.c b/drivers/usb/core/driver.c
index f94ab7c..aa01a3d 100644
--- a/drivers/usb/core/driver.c
+++ b/drivers/usb/core/driver.c
@@ -70,6 +70,9 @@ ssize_t usb_store_new_id(struct usb_dynids *dynids,
  if (fields > 4) {
   const struct usb_device_id *id = id_table;
 
+  if (!id)
+   return -ENODEV;
+
   for (; id->match_flags; id++)
    if (id->idVendor == refVendor && id->idProduct == refProduct)
     break;
-- 
1.7.1