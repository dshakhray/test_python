From af06c50591129c2c3df6f07ccca3e878e8d54046 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 27 Jan 2015 15:35:33 -0500
Subject: [fs] coredump: add new %P variable in core_pattern

Message-id: <1422372933-14768-1-git-send-email-jolsa@redhat.com>
Patchwork-id: 103657
O-Subject: [PATCH RHEL7.1 BZ1186360] coredump: add new %P variable in core_pattern
Bugzilla: 1186360
RH-Acked-by: Oleg Nesterov <oleg@redhat.com>
RH-Acked-by: Dave Anderson <anderson@redhat.com>

From: Stephane Graber <stgraber@ubuntu.com>

Bugzilla: 1186360
https://bugzilla.redhat.com/show_bug.cgi?id=1186360

upstream
========
commit 65aafb1e7484b7434a0c1d4c593191ebe5776a2f
Author: Stephane Graber <stgraber@ubuntu.com>
Date:   Wed Sep 11 14:24:32 2013 -0700

description
===========
Add a new %P variable to be used in core_pattern.  This variable contains
the global PID (PID in the init namespace) as %p contains the PID in the
current namespace which isn't always what we want.

The main use for this is to make it easier to handle crashes that happened
within a container.  With that new variables it's possible to have the
crashes dumped into the container or forwarded to the host with the right
PID (from the host's point of view).

Cc: Jakub Filak <jfilak@redhat.com>
Cc: Oleg Nesterov <oleg@redhat.com>
Cc: Prarit Bhargava <prarit@redhat.com>
Cc: Tony Camuso <tcamuso@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/Documentation/sysctl/kernel.txt b/Documentation/sysctl/kernel.txt
index ec0ca33..04a405e 100644
--- a/Documentation/sysctl/kernel.txt
+++ b/Documentation/sysctl/kernel.txt
@@ -184,6 +184,7 @@ core_pattern is used to specify a core dumpfile pattern name.
  %<NUL> '%' is dropped
  %% output one '%'
  %p pid
+ %P global pid (init PID namespace)
  %u uid
  %g gid
  %d dump mode, matches PR_SET_DUMPABLE and
diff --git a/fs/coredump.c b/fs/coredump.c
index dafafba..997b967 100644
--- a/fs/coredump.c
+++ b/fs/coredump.c
@@ -186,6 +186,11 @@ static int format_corename(struct core_name *cn, struct coredump_params *cprm)
     err = cn_printf(cn, "%d",
            task_tgid_vnr(current));
     break;
+   /* global pid */
+   case 'P':
+    err = cn_printf(cn, "%d",
+           task_tgid_nr(current));
+    break;
    /* uid */
    case 'u':
     err = cn_printf(cn, "%d", cred->uid);
-- 
1.7.1