From 16754aa66c3a8b87dd57feef5202738a31be8482 Mon Sep 17 00:00:00 2001
From: Michal Schmidt <mschmidt@redhat.com>
Date: Wed, 4 Jun 2014 12:29:56 -0400
Subject: [ethernet] bnx2x: Adapter not recovery from EEH error injection

Message-id: <1401884997-10095-2-git-send-email-mschmidt@redhat.com>
Patchwork-id: 82434
O-Subject: [RHEL7.1 PATCH 1/2] bnx2x: Adapter not recovery from EEH error injection
Bugzilla: 1067154
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

BZ: https://bugzilla.redhat.com/show_bug.cgi?id=1067154

This fixes a bug where the adapter is enable to recover from EEH errors
on POWER and is made unusable until reboot or DLPAR re-plug.

Upstream commit:
commit 0c0e63410a393aae4b615849625f539db775d586
Author: wenxiong@linux.vnet.ibm.com <wenxiong@linux.vnet.ibm.com>
Date:   Tue Jun 3 14:14:45 2014 -0500

    bnx2x: Adapter not recovery from EEH error injection

    When injecting EEH error to bnx2x adapter, adapter couldn't be recovery
    and caused recursive EEH errors. The patch fixes the issue.

    Signed-off-by: Wen Xiong <wenxiong@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Additional explanation by Wendy:
    From kernel backtrace after inject EEH error, we got recursive EEH
    errors from bnx2x_period_task(). This means driver still kept processing
    period_task during bnx2x EEH recovery. Add _sync calls,  driver is
    going to cancel a delayed work and wait for them to finish in
    bnx2x_io_error_detected() routine.

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c
index 7d43822..66e145b 100644
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c
@@ -13139,8 +13139,8 @@ static int bnx2x_eeh_nic_unload(struct bnx2x *bp)
  netdev_reset_tc(bp->dev);
 
  del_timer_sync(&bp->timer);
- cancel_delayed_work(&bp->sp_task);
- cancel_delayed_work(&bp->period_task);
+ cancel_delayed_work_sync(&bp->sp_task);
+ cancel_delayed_work_sync(&bp->period_task);
 
  spin_lock_bh(&bp->stats_lock);
  bp->stats_state = STATS_STATE_DISABLED;
-- 
1.7.1