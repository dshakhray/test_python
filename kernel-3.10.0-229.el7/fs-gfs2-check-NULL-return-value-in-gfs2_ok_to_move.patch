From 6e13af442fc96f269ff7a5170432ea203dc1ea1b Mon Sep 17 00:00:00 2001
From: Abhijith Das <adas@redhat.com>
Date: Tue, 13 May 2014 04:34:02 -0400
Subject: [fs] gfs2: check NULL return value in gfs2_ok_to_move

Message-id: <1399955642-33123-1-git-send-email-adas@redhat.com>
Patchwork-id: 79777
O-Subject: [RHEL7.1 PATCH] GFS2: check NULL return value in gfs2_ok_to_move
Bugzilla: 1097042
RH-Acked-by: Andrew Price <anprice@redhat.com>
RH-Acked-by: Steven Whitehouse <swhiteho@redhat.com>

gfs2_lookupi() can return NULL if the path to the root is broken by
another rename/rmdir. In this case gfs2_ok_to_move() must check for
this NULL pointer and return error.

This patch is already upstream:
https://git.kernel.org/cgit/linux/kernel/git/steve/gfs2-3.0-nmw.git/commit/fs/gfs2/inode.c?id=48f8f711edf3868fe4faa28a19f07acb43532c4a

Resolves: rhbz#1097042
Signed-off-by: Abhi Das <adas@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/gfs2/inode.c b/fs/gfs2/inode.c
index bb81ecc..2a329ec 100644
--- a/fs/gfs2/inode.c
+++ b/fs/gfs2/inode.c
@@ -1219,6 +1219,10 @@ static int gfs2_ok_to_move(struct gfs2_inode *this, struct gfs2_inode *to)
   }
 
   tmp = gfs2_lookupi(dir, &gfs2_qdotdot, 1);
+  if (!tmp) {
+   error = -ENOENT;
+   break;
+  }
   if (IS_ERR(tmp)) {
    error = PTR_ERR(tmp);
    break;
-- 
1.7.1