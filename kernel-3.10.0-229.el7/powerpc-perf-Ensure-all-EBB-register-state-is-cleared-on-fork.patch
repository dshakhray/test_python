From f19b5384ed01a13169999e6da2b57964015bffc9 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:13:12 -0400
Subject: [powerpc] perf: Ensure all EBB register state is cleared on fork()

Message-id: <1410545655-205645-564-git-send-email-dzickus@redhat.com>
Patchwork-id: 94427
O-Subject: [RHEL7 PATCH 563/626] powerpc/perf: Ensure all EBB register state is cleared on fork()
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 3df48c981d5a9610e02e9270b1bc4274fb536710
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Jun 10 16:46:21 2014 +1000

    powerpc/perf: Ensure all EBB register state is cleared on fork()

    In commit 330a1eb "Core EBB support for 64-bit book3s" I messed up
    clear_task_ebb(). It clears some but not all of the task's Event Based
    Branch (EBB) registers when we duplicate a task struct.

    That allows a child task to observe the EBBHR & EBBRR of its parent,
    which it should not be able to do.

    Fix it by clearing EBBHR & EBBRR.

    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Cc: stable@vger.kernel.org [v3.11+]
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/switch_to.h b/arch/powerpc/include/asm/switch_to.h
index e98c3a7..a5dbef3 100644
--- a/arch/powerpc/include/asm/switch_to.h
+++ b/arch/powerpc/include/asm/switch_to.h
@@ -83,6 +83,8 @@ static inline void clear_task_ebb(struct task_struct *t)
 {
 #ifdef CONFIG_PPC_BOOK3S_64
     /* EBB perf events are not inherited, so clear all EBB state. */
+    t->thread.ebbrr = 0;
+    t->thread.ebbhr = 0;
     t->thread.bescr = 0;
     t->thread.mmcr2 = 0;
     t->thread.mmcr0 = 0;
-- 
1.7.1