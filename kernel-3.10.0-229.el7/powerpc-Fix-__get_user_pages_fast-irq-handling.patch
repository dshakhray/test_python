From e6b5381e8af23ae3ecbdb01e0af49ee4645a653f Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:06:59 -0400
Subject: [powerpc] Fix __get_user_pages_fast() irq handling

Message-id: <1410545655-205645-191-git-send-email-dzickus@redhat.com>
Patchwork-id: 94366
O-Subject: [RHEL7 PATCH 190/626] powerpc: Fix __get_user_pages_fast() irq handling
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 95f715b08fa4a953771398d20cbe35a6803ea41d
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Thu Nov 14 15:01:43 2013 +1100

    powerpc: Fix __get_user_pages_fast() irq handling

    __get_user_pages_fast() may be called with interrupts disabled (see e.g.
    get_futex_key() in kernel/futex.c) and therefore should use local_irq_save()
    and local_irq_restore() instead of local_irq_disable()/enable().

    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    CC: <stable@vger.kernel.org> [v3.12]
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/mm/gup.c b/arch/powerpc/mm/gup.c
index 6936547..c5f734e 100644
--- a/arch/powerpc/mm/gup.c
+++ b/arch/powerpc/mm/gup.c
@@ -123,6 +123,7 @@ int __get_user_pages_fast(unsigned long start, int nr_pages, int write,
  struct mm_struct *mm = current->mm;
  unsigned long addr, len, end;
  unsigned long next;
+ unsigned long flags;
  pgd_t *pgdp;
  int nr = 0;
 
@@ -156,7 +157,7 @@ int __get_user_pages_fast(unsigned long start, int nr_pages, int write,
   * So long as we atomically load page table pointers versus teardown,
   * we can follow the address down to the the page and take a ref on it.
   */
- local_irq_disable();
+ local_irq_save(flags);
 
  pgdp = pgd_offset(mm, addr);
  do {
@@ -179,7 +180,7 @@ int __get_user_pages_fast(unsigned long start, int nr_pages, int write,
    break;
  } while (pgdp++, addr = next, addr != end);
 
- local_irq_enable();
+ local_irq_restore(flags);
 
  return nr;
 }
-- 
1.7.1