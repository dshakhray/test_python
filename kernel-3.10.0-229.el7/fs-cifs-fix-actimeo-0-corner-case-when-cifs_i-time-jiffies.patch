From 8ed1ae9f78879d248d8c06a8993d24746b417818 Mon Sep 17 00:00:00 2001
From: Sachin Prabhu <sprabhu@redhat.com>
Date: Mon, 28 Jul 2014 12:16:49 -0400
Subject: [fs] cifs: fix actimeo=0 corner case when cifs_i->time == jiffies

Message-id: <1406549822-10376-57-git-send-email-sprabhu@redhat.com>
Patchwork-id: 86753
O-Subject: [RHEL7.1 PATCH 56/69] [bz1082049]cifs: fix actimeo=0 corner case when cifs_i->time == jiffies
Bugzilla: 1082049
RH-Acked-by: J. Bruce Fields <bfields@redhat.com>
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Jeff Layton <jlayton@redhat.com>

actimeo=0 is supposed to be a special case that ensures that inode
attributes are always refetched from the server instead of trusting the
cache. The cifs code however uses time_in_range() to determine whether
the attributes have timed out. In the case where cifs_i->time equals
jiffies, this leads to the cifs code not refetching the inode attributes
when it should.

Fix this by explicitly testing for actimeo=0, and handling it as a
special case.

Reported-and-tested-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Signed-off-by: Jeff Layton <jlayton@redhat.com>
Signed-off-by: Steve French <smfrench@gmail.com>
(cherry picked from commit a87c9ad956676d84d459739fc14ec5a3c3565717)
Signed-off-by: Sachin Prabhu <sprabhu@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/cifs/inode.c b/fs/cifs/inode.c
index 3e6104a..10b29a1 100644
--- a/fs/cifs/inode.c
+++ b/fs/cifs/inode.c
@@ -1737,6 +1737,9 @@ cifs_inode_needs_reval(struct inode *inode)
  if (cifs_i->time == 0)
   return true;
 
+ if (!cifs_sb->actimeo)
+  return true;
+
  if (!time_in_range(jiffies, cifs_i->time,
     cifs_i->time + cifs_sb->actimeo))
   return true;
-- 
1.7.1