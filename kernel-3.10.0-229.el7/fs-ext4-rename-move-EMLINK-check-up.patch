From 96bd1d9f7f47335f74e1bd7a5c166dbebc9837f6 Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 23 Oct 2014 09:54:52 -0400
Subject: [fs] ext4: rename: move EMLINK check up

Message-id: <1414058125-4183-139-git-send-email-lczerner@redhat.com>
Patchwork-id: 98262
O-Subject: [RHEL 7.1 PATCH v2 138/171] ext4: rename: move EMLINK check up
Bugzilla: 1150139
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Miklos Szeredi <mszeredi@suse.cz>

BZ 1150139
https://bugzilla.redhat.com/show_bug.cgi?id=1150139

BREW 8142710
https://brewweb.devel.redhat.com/taskinfo?taskID=8142710

Upstream commit 0d7d5d678bf9e07dffe22b018cf035d511d9e86e

 Move checking i_nlink from after ext4_get_first_dir_block() to before.  The
 check doesn't rely on the result of that function and the function only
 fails on fs corruption, so the order shouldn't matter.

 Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
 Reviewed-by: Jan Kara <jack@suse.cz>
 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/namei.c b/fs/ext4/namei.c
index 9cf35c0..263ff6a 100644
--- a/fs/ext4/namei.c
+++ b/fs/ext4/namei.c
@@ -3041,6 +3041,10 @@ static int ext4_rename(struct inode *old_dir, struct dentry *old_dentry,
    retval = -ENOTEMPTY;
    if (!empty_dir(new.inode))
     goto end_rename;
+  } else {
+   retval = -EMLINK;
+   if (new.dir != old.dir && EXT4_DIR_LINK_MAX(new.dir))
+    goto end_rename;
   }
   retval = -EIO;
   old.dir_bh = ext4_get_first_dir_block(handle, old.inode,
@@ -3050,10 +3054,6 @@ static int ext4_rename(struct inode *old_dir, struct dentry *old_dentry,
    goto end_rename;
   if (le32_to_cpu(old.parent_de->inode) != old.dir->i_ino)
    goto end_rename;
-  retval = -EMLINK;
-  if (!new.inode && new.dir != old.dir &&
-      EXT4_DIR_LINK_MAX(new.dir))
-   goto end_rename;
   BUFFER_TRACE(old.dir_bh, "get_write_access");
   retval = ext4_journal_get_write_access(handle, old.dir_bh);
   if (retval)
-- 
1.7.1