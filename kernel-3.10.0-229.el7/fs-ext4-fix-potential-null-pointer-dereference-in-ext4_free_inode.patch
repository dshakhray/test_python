From 43b9367868049f776542c2dd08a8278c51d46eb5 Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Wed, 29 Oct 2014 16:34:05 -0400
Subject: [fs] ext4: fix potential null pointer dereference in ext4_free_inode

Message-id: <1414600485-1929-16-git-send-email-lczerner@redhat.com>
Patchwork-id: 98531
O-Subject: [RHEL 7.1 PATCH v2 15/55] ext4: fix potential null pointer dereference in ext4_free_inode
Bugzilla: 1156096
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Namjae Jeon <namjae.jeon@samsung.com>

BZ 1156096
https://bugzilla.redhat.com/show_bug.cgi?id=1156096

BREW 8169722
https://brewweb.devel.redhat.com/taskinfo?taskID=8169722

Upstream commit bf40c92635d63fcc574c52649f7cda13e0418ac1

 Fix potential null pointer dereferencing problem caused by e43bb4e612
 ("ext4: decrement free clusters/inodes counters when block group declared bad")

 Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
 Signed-off-by: Namjae Jeon <namjae.jeon@samsung.com>
 Signed-off-by: Ashish Sangwan <a.sangwan@samsung.com>
 Signed-off-by: Theodore Ts'o <tytso@mit.edu>
 Reviewed-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/ialloc.c b/fs/ext4/ialloc.c
index 0840bf3..5b87fc3 100644
--- a/fs/ext4/ialloc.c
+++ b/fs/ext4/ialloc.c
@@ -338,7 +338,7 @@ out:
    fatal = err;
  } else {
   ext4_error(sb, "bit already cleared for inode %lu", ino);
-  if (!EXT4_MB_GRP_IBITMAP_CORRUPT(grp)) {
+  if (gdp && !EXT4_MB_GRP_IBITMAP_CORRUPT(grp)) {
    int count;
    count = ext4_free_inodes_count(sb, gdp);
    percpu_counter_sub(&sbi->s_freeinodes_counter,
-- 
1.7.1