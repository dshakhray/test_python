From c08c67815cc761244710a79c91a7a3ccfd480cb8 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Fri, 16 May 2014 20:13:25 -0400
Subject: [md] dm-thin: simplify pool_is_congested

Message-id: <1400271213-25480-2-git-send-email-snitzer@redhat.com>
Patchwork-id: 79870
O-Subject: [RHEL7.1 PATCH 1/9] dm thin: simplify pool_is_congested
Bugzilla: 1098643
RH-Acked-by: Joe Thornber <thornber@redhat.com>
RH-Acked-by: Mikulas Patocka <mpatocka@redhat.com>

BZ: 1098643

Upstream commit 760fe67e539b2f1a95dbb4c9700140eccdb1c0c1
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Thu Mar 20 08:36:47 2014 -0400

    dm thin: simplify pool_is_congested

    The pool is congested if the pool is in PM_OUT_OF_DATA_SPACE mode.  This
    is more explicit/clear/efficient than inferring whether or not the pool
    is congested by checking if retry_on_resume_list is empty.

    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Acked-by: Joe Thornber <ejt@redhat.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/dm-thin.c b/drivers/md/dm-thin.c
index c560952..45cd238 100644
--- a/drivers/md/dm-thin.c
+++ b/drivers/md/dm-thin.c
@@ -1751,20 +1751,14 @@ static int thin_bio_map(struct dm_target *ti, struct bio *bio)
 
 static int pool_is_congested(struct dm_target_callbacks *cb, int bdi_bits)
 {
- int r;
- unsigned long flags;
  struct pool_c *pt = container_of(cb, struct pool_c, callbacks);
+ struct request_queue *q;
 
- spin_lock_irqsave(&pt->pool->lock, flags);
- r = !bio_list_empty(&pt->pool->retry_on_resume_list);
- spin_unlock_irqrestore(&pt->pool->lock, flags);
+ if (get_pool_mode(pt->pool) == PM_OUT_OF_DATA_SPACE)
+  return 1;
 
- if (!r) {
-  struct request_queue *q = bdev_get_queue(pt->data_dev->bdev);
-  r = bdi_congested(&q->backing_dev_info, bdi_bits);
- }
-
- return r;
+ q = bdev_get_queue(pt->data_dev->bdev);
+ return bdi_congested(&q->backing_dev_info, bdi_bits);
 }
 
 static void __requeue_bios(struct pool *pool)
-- 
1.7.1