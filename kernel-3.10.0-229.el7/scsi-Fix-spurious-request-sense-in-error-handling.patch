From c08c3f0d5de6117b5d8d23beb42862a3aeef4e40 Mon Sep 17 00:00:00 2001
From: Ewan Milne <emilne@redhat.com>
Date: Tue, 24 Jun 2014 18:38:09 -0400
Subject: [scsi] Fix spurious request sense in error handling

Message-id: <1403635094-26187-2-git-send-email-emilne@redhat.com>
Patchwork-id: 84676
O-Subject: [RHEL7.0 PATCH 1/6] [SCSI] Fix spurious request sense in error handling
Bugzilla: 1103881
RH-Acked-by: Bryn M. Reeves <bmr@redhat.com>
RH-Acked-by: Rob Evers <revers@redhat.com>
RH-Acked-by: David Milburn <dmilburn@redhat.com>

We unconditionally execute scsi_eh_get_sense() to make sure all failed
commands that should have sense attached, do.  However, the routine forgets
that some commands, because of the way they fail, will not have any sense code
... we should not bother them with a REQUEST_SENSE command.  Fix this by
testing to see if we actually got a CHECK_CONDITION return and skip asking for
sense if we don't.

Tested-by: Alan Stern <stern@rowland.harvard.edu>
Signed-off-by: James Bottomley <JBottomley@Parallels.com>
(cherry picked from commit d555a2abf3481f81303d835046a5ec2c4fb3ca8e)
Signed-off-by: Ewan D. Milne <emilne@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/scsi_error.c b/drivers/scsi/scsi_error.c
index c5f49cf..e3a8a8c 100644
--- a/drivers/scsi/scsi_error.c
+++ b/drivers/scsi/scsi_error.c
@@ -1157,6 +1157,15 @@ int scsi_eh_get_sense(struct list_head *work_q,
           __func__));
    break;
   }
+  if (status_byte(scmd->result) != CHECK_CONDITION)
+   /*
+    * don't request sense if there's no check condition
+    * status because the error we're processing isn't one
+    * that has a sense code (and some devices get
+    * confused by sense requests out of the blue)
+    */
+   continue;
+
   SCSI_LOG_ERROR_RECOVERY(2, scmd_printk(KERN_INFO, scmd,
         "%s: requesting sense\n",
         current->comm));
-- 
1.7.1