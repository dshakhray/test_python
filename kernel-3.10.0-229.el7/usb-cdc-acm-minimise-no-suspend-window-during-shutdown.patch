From 54d99c3a43e232667322900d4ccc816edee033d4 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:09:11 -0400
Subject: [usb] cdc-acm: minimise no-suspend window during shutdown

Message-id: <1410887463-20674-480-git-send-email-dzickus@redhat.com>
Patchwork-id: 95619
O-Subject: [RHEL7 PATCH 479/591] USB: cdc-acm: minimise no-suspend window during shutdown
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit b1d42efc217fdc1a6a704b344fd902ae52a012c8
Author: Johan Hovold <jhovold@gmail.com>
Date:   Mon May 26 19:23:48 2014 +0200

    USB: cdc-acm: minimise no-suspend window during shutdown

    Now that acm_set_control() handles runtime PM properly, the only
    remaining reason for the PM operations in shutdown is to clear the
    needs_remote_wakeup flag before the final put.

    Note that this also means that we now need to grab the write_lock to
    prevent racing with resume.

    Signed-off-by: Johan Hovold <jhovold@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/class/cdc-acm.c b/drivers/usb/class/cdc-acm.c
index 91fdc29..f038f39 100644
--- a/drivers/usb/class/cdc-acm.c
+++ b/drivers/usb/class/cdc-acm.c
@@ -590,13 +590,22 @@ static void acm_port_shutdown(struct tty_port *port)
  struct urb *urb;
  struct acm_wb *wb;
  int i;
- int pm_err;
 
  dev_dbg(&acm->control->dev, "%s\n", __func__);
 
- pm_err = usb_autopm_get_interface(acm->control);
  acm_set_control(acm, acm->ctrlout = 0);
 
+ /*
+  * Need to grab write_lock to prevent race with resume, but no need to
+  * hold it due to the tty-port initialised flag.
+  */
+ spin_lock_irq(&acm->write_lock);
+ spin_unlock_irq(&acm->write_lock);
+
+ usb_autopm_get_interface_no_resume(acm->control);
+ acm->control->needs_remote_wakeup = 0;
+ usb_autopm_put_interface(acm->control);
+
  for (;;) {
   urb = usb_get_from_anchor(&acm->delayed);
   if (!urb)
@@ -611,10 +620,6 @@ static void acm_port_shutdown(struct tty_port *port)
   usb_kill_urb(acm->wb[i].urb);
  for (i = 0; i < acm->rx_buflimit; i++)
   usb_kill_urb(acm->read_urbs[i]);
-
- acm->control->needs_remote_wakeup = 0;
- if (!pm_err)
-  usb_autopm_put_interface(acm->control);
 }
 
 static void acm_tty_cleanup(struct tty_struct *tty)
-- 
1.7.1