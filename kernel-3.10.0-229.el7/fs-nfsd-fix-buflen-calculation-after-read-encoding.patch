From c9695c8a4ab1e71937fed295c02aa96a3ad6ea6b Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Mon, 23 Jun 2014 21:51:08 -0400
Subject: [fs] nfsd: fix buflen calculation after read encoding

Message-id: <1403560314-32525-127-git-send-email-bfields@redhat.com>
Patchwork-id: 84567
O-Subject: [Patch RHEL7 126/172] nfsd4: fix buflen calculation after read encoding
Bugzilla: 1111719
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

We don't necessarily want to assume that the buflen is the same
as the number of bytes available in the pages.  We may have some reason
to set it to something less (for example, later patches will use a
smaller buflen to enforce session limits).

So, calculate the buflen relative to the previous buflen instead of
recalculating it from scratch.

Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: 30596768b31069a3ae08fc305f394efb8c42b473
Bugzilla: 1111719
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4xdr.c b/fs/nfsd/nfs4xdr.c
index 0eeba21..1278d98 100644
--- a/fs/nfsd/nfs4xdr.c
+++ b/fs/nfsd/nfs4xdr.c
@@ -3053,6 +3053,7 @@ nfsd4_encode_read(struct nfsd4_compoundres *resp, __be32 nfserr,
  unsigned long maxcount; 
  struct xdr_stream *xdr = &resp->xdr;
  int starting_len = xdr->buf->len;
+ int space_left;
  long len;
  __be32 *p;
 
@@ -3117,7 +3118,6 @@ nfsd4_encode_read(struct nfsd4_compoundres *resp, __be32 nfserr,
  resp->xdr.buf->page_len = maxcount;
  xdr->buf->len += maxcount;
  xdr->page_ptr += v;
- xdr->buf->buflen = maxcount + PAGE_SIZE - 2 * RPC_MAX_AUTH_SIZE;
  xdr->iov = xdr->buf->tail;
 
  /* Use rest of head for padding and remaining ops: */
@@ -3130,6 +3130,12 @@ nfsd4_encode_read(struct nfsd4_compoundres *resp, __be32 nfserr,
   resp->xdr.buf->tail[0].iov_len = 4 - (maxcount&3);
   xdr->buf->len -= (maxcount&3);
  }
+
+ space_left = min_t(int, (void *)xdr->end - (void *)xdr->p,
+    xdr->buf->buflen - xdr->buf->len);
+ xdr->buf->buflen = xdr->buf->len + space_left;
+ xdr->end = (__be32 *)((void *)xdr->end + space_left);
+
  return 0;
 }
 
-- 
1.7.1