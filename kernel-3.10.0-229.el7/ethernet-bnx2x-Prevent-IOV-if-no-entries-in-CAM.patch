From 79cd99273d66a1d8263b89fd1639d86a0b6ee2b7 Mon Sep 17 00:00:00 2001
From: Michal Schmidt <mschmidt@redhat.com>
Date: Fri, 5 Sep 2014 19:50:06 -0400
Subject: [ethernet] bnx2x: Prevent IOV if no entries in CAM

Message-id: <1409946615-5862-62-git-send-email-mschmidt@redhat.com>
Patchwork-id: 91596
O-Subject: [RHEL7.1 PATCH 61/70] bnx2x: Prevent IOV if no entries in CAM
Bugzilla: 1089402
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

BZ: https://bugzilla.redhat.com/show_bug.cgi?id=1089402

Upstream commit:
commit 0d8de80f5cea004568af8775fd0a0933d5166759
Author: Yuval Mintz <Yuval.Mintz@qlogic.com>
Date:   Sun Aug 17 16:47:48 2014 +0300

    bnx2x: Prevent IOV if no entries in CAM

    It's possible there's a bad chip configuration which will result with
    PCIe IOV capabilities, but with no available interrupts for VFs.

    In such case, we want to gracefully prevent the PF from initializing its
    IOV capabilities rather than encounter difficulties further along the way.

    Signed-off-by: Yuval Mintz <Yuval.Mintz@qlogic.com>
    Signed-off-by: Ariel Elior <Ariel.Elior@qlogic.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_sriov.c b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_sriov.c
index cea86cb..df61286 100644
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_sriov.c
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_sriov.c
@@ -1125,7 +1125,7 @@ static int bnx2x_ari_enabled(struct pci_dev *dev)
  return dev->bus->self && dev->bus->self->ari_enabled;
 }
 
-static void
+static int
 bnx2x_get_vf_igu_cam_info(struct bnx2x *bp)
 {
  int sb_id;
@@ -1150,6 +1150,7 @@ bnx2x_get_vf_igu_cam_info(struct bnx2x *bp)
      GET_FIELD((val), IGU_REG_MAPPING_MEMORY_VECTOR));
  }
  DP(BNX2X_MSG_IOV, "vf_sbs_pool is %d\n", BP_VFDB(bp)->vf_sbs_pool);
+ return BP_VFDB(bp)->vf_sbs_pool;
 }
 
 static void __bnx2x_iov_free_vfdb(struct bnx2x *bp)
@@ -1314,7 +1315,11 @@ int bnx2x_iov_init_one(struct bnx2x *bp, int int_mode_param,
  }
 
  /* re-read the IGU CAM for VFs - index and abs_vfid must be set */
- bnx2x_get_vf_igu_cam_info(bp);
+ if (!bnx2x_get_vf_igu_cam_info(bp)) {
+  BNX2X_ERR("No entries in IGU CAM for vfs\n");
+  err = -EINVAL;
+  goto failed;
+ }
 
  /* allocate the queue arrays for all VFs */
  bp->vfdb->vfqs = kzalloc(
-- 
1.7.1