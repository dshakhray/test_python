From 504c5a6b05c9df324d19b59f104599e5388e78f3 Mon Sep 17 00:00:00 2001
From: Rob Clark <rclark@redhat.com>
Date: Wed, 17 Dec 2014 21:39:12 -0500
Subject: [drm] i915: Do a dummy DPCD read before the actual read

Message-id: <1418852380-13061-62-git-send-email-rclark@redhat.com>
Patchwork-id: 102192
O-Subject: [RHEL7 drm 61/89] drm/i915: Do a dummy DPCD read before the actual read
Bugzilla: 1173317
RH-Acked-by: Jerome Glisse <jglisse@redhat.com>
RH-Acked-by: Dave Airlie <airlied@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1173317
Upstream: since drm-intel-fixes-2014-10-30

commit f6a1906674005377b64ee5431c1418077c1b2425

Author:     Ville Syrjala <ville.syrjala@linux.intel.com>
AuthorDate: Thu Oct 16 20:46:09 2014 +0300
Commit:     Rob Clark <rclark@redhat.com>
CommitDate: Mon Dec 15 14:05:52 2014 -0500

    drm/i915: Do a dummy DPCD read before the actual read

    Sometimes we seem to get utter garbage from DPCD reads. The resulting
    buffer is filled with the same byte, and the operation completed without
    errors. My HP ZR24w monitor seems particularly susceptible to this
    problem once it's gone into a sleep mode.

    The issue seems to happen only for the first AUX message that wakes the
    sink up. But as the first AUX read we often do is the DPCD receiver
    cap it does wreak a bit of havoc with subsequent link training etc. when
    the receiver cap bw/lane/etc. information is garbage.

    A sufficient workaround seems to be to perform a single byte dummy read
    before reading the actual data. I suppose that just wakes up the sink
    sufficiently and we can just throw away the returned data in case it's
    crap. DP_DPCD_REV seems like a sufficiently safe location to read here.

    Signed-off-by: Ville Syrjala <ville.syrjala@linux.intel.com>
    Reviewed-by: Todd Previte <tprevite@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>

Signed-off-by: Rob Clark <rclark@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/gpu/drm/i915/intel_dp.c b/drivers/gpu/drm/i915/intel_dp.c
index 7ad5f0e..a679a4e 100644
--- a/drivers/gpu/drm/i915/intel_dp.c
+++ b/drivers/gpu/drm/i915/intel_dp.c
@@ -2167,6 +2167,13 @@ intel_dp_dpcd_read_wake(struct drm_dp_aux *aux, unsigned int offset,
  ssize_t ret;
  int i;
 
+ /*
+  * Sometime we just get the same incorrect byte repeated
+  * over the entire buffer. Doing just one throw away read
+  * initially seems to "solve" it.
+  */
+ drm_dp_dpcd_read(aux, DP_DPCD_REV, buffer, 1);
+
  for (i = 0; i < 3; i++) {
   ret = drm_dp_dpcd_read(aux, offset, buffer, size);
   if (ret == size)
-- 
1.7.1