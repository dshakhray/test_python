From 1e5e25b6c412aca1f645525ff85b1d04bbbe833b Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:02:40 -0400
Subject: [usb] ehci: fix sparse errors

Message-id: <1410887463-20674-89-git-send-email-dzickus@redhat.com>
Patchwork-id: 95118
O-Subject: [RHEL7 PATCH 088/591] USB: EHCI: fix sparse errors
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 4a71f242e51767e75c7ecdba890debab2c0dceaf
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Fri Oct 18 11:15:14 2013 -0400

    USB: EHCI: fix sparse errors

    This patch fixes several sparse errors in ehci-hcd introduced by
    commit 3d091a6f7039 (USB: EHCI: AMD periodic frame list table quirk).
    Although the problem fixed by that commit affects only little-endian
    systems, the source code has to use types appropriate for big-endian
    too.

    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/host/ehci-mem.c b/drivers/usb/host/ehci-mem.c
index 52a7773..c0fb6a8 100644
--- a/drivers/usb/host/ehci-mem.c
+++ b/drivers/usb/host/ehci-mem.c
@@ -224,11 +224,11 @@ static int ehci_mem_init (struct ehci_hcd *ehci, gfp_t flags)
   hw->hw_next = EHCI_LIST_END(ehci);
   hw->hw_qtd_next = EHCI_LIST_END(ehci);
   hw->hw_alt_next = EHCI_LIST_END(ehci);
-  hw->hw_token &= ~QTD_STS_ACTIVE;
   ehci->dummy->hw = hw;
 
   for (i = 0; i < ehci->periodic_size; i++)
-   ehci->periodic[i] = ehci->dummy->qh_dma;
+   ehci->periodic[i] = cpu_to_hc32(ehci,
+     ehci->dummy->qh_dma);
  } else {
   for (i = 0; i < ehci->periodic_size; i++)
    ehci->periodic[i] = EHCI_LIST_END(ehci);
diff --git a/drivers/usb/host/ehci-sched.c b/drivers/usb/host/ehci-sched.c
index fbeb82e..e113fd7 100644
--- a/drivers/usb/host/ehci-sched.c
+++ b/drivers/usb/host/ehci-sched.c
@@ -103,7 +103,7 @@ static void periodic_unlink (struct ehci_hcd *ehci, unsigned frame, void *ptr)
   *hw_p = *shadow_next_periodic(ehci, &here,
     Q_NEXT_TYPE(ehci, *hw_p));
  else
-  *hw_p = ehci->dummy->qh_dma;
+  *hw_p = cpu_to_hc32(ehci, ehci->dummy->qh_dma);
 }
 
 /*-------------------------------------------------------------------------*/
@@ -2446,7 +2446,8 @@ restart:
         q.itd->hw_next != EHCI_LIST_END(ehci))
      *hw_p = q.itd->hw_next;
     else
-     *hw_p = ehci->dummy->qh_dma;
+     *hw_p = cpu_to_hc32(ehci,
+       ehci->dummy->qh_dma);
     type = Q_NEXT_TYPE(ehci, q.itd->hw_next);
     wmb();
     modified = itd_complete (ehci, q.itd);
@@ -2481,7 +2482,8 @@ restart:
         q.sitd->hw_next != EHCI_LIST_END(ehci))
      *hw_p = q.sitd->hw_next;
     else
-     *hw_p = ehci->dummy->qh_dma;
+     *hw_p = cpu_to_hc32(ehci,
+       ehci->dummy->qh_dma);
     type = Q_NEXT_TYPE(ehci, q.sitd->hw_next);
     wmb();
     modified = sitd_complete (ehci, q.sitd);
-- 
1.7.1