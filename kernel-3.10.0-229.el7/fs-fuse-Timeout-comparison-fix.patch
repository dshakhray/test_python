From 7574585377f6639cb696f62dae7e4d2959785663 Mon Sep 17 00:00:00 2001
From: Carlos Maiolino <cmaiolino@redhat.com>
Date: Thu, 9 Oct 2014 19:15:26 -0400
Subject: [fs] fuse: Timeout comparison fix

Message-id: <1412882126-19214-1-git-send-email-cmaiolino@redhat.com>
Patchwork-id: 97302
O-Subject: [RHEL7 PATCH 1/2] fuse: timeout comparison fix V2
Bugzilla: 1128802
RH-Acked-by: Brian Foster <bfoster@redhat.com>

From: Miklos Szeredi <mszeredi@suse.cz>

BZ: 1128802
upstream: 126b9d4365b110c157bc4cbc32540dfa66c9c85a

As suggested by checkpatch.pl, use time_before64() instead of direct
comparison of jiffies64 values.

Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
Cc: <stable@vger.kernel.org>

V2: Backport the whole upstream patch, and not only the fuse_dentry_revalidate()
part

Signed-off-by: Carlos Maiolino <cmaiolino@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/fuse/dir.c b/fs/fuse/dir.c
index 1151267..60037f0 100644
--- a/fs/fuse/dir.c
+++ b/fs/fuse/dir.c
@@ -187,7 +187,7 @@ static int fuse_dentry_revalidate(struct dentry *entry, unsigned int flags)
  inode = ACCESS_ONCE(entry->d_inode);
  if (inode && is_bad_inode(inode))
   goto invalid;
- else if (fuse_dentry_time(entry) < get_jiffies_64()) {
+ else if (time_before64(fuse_dentry_time(entry), get_jiffies_64())) {
   int err;
   struct fuse_entry_out outarg;
   struct fuse_req *req;
@@ -940,7 +940,7 @@ int fuse_update_attributes(struct inode *inode, struct kstat *stat,
  int err;
  bool r;
 
- if (fi->i_time < get_jiffies_64()) {
+ if (time_before64(fi->i_time, get_jiffies_64())) {
   r = true;
   err = fuse_do_getattr(inode, stat, file);
  } else {
@@ -1124,7 +1124,7 @@ static int fuse_permission(struct inode *inode, int mask)
      ((mask & MAY_EXEC) && S_ISREG(inode->i_mode))) {
   struct fuse_inode *fi = get_fuse_inode(inode);
 
-  if (fi->i_time < get_jiffies_64()) {
+  if (time_before64(fi->i_time, get_jiffies_64())) {
    refreshed = true;
 
    err = fuse_perm_getattr(inode, mask);
-- 
1.7.1