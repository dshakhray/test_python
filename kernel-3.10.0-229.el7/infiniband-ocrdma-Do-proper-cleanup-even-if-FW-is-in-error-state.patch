From 3beb0364a0321db452fe2bc2ca5f4b734fde19fa Mon Sep 17 00:00:00 2001
From: Doug Ledford <dledford@redhat.com>
Date: Wed, 24 Sep 2014 15:22:06 -0400
Subject: [infiniband] ocrdma: Do proper cleanup even if FW is in error state

Message-id: <f509a8ec6ae2f2a7a03b5edf96207817eca291d1.1411571481.git.dledford@redhat.com>
Patchwork-id: 96637
O-Subject: [Patch RHEL7 31/48] RDMA/ocrdma: Do proper cleanup even if FW is in error state
Bugzilla: 1081067 1088577
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Mitesh Ahuja <mitesh.ahuja@emulex.Com>

If any mailbox command reports timeout, save the state in the driver,
to prevent issuing any more commands to the HW.  Do proper cleanup
even if FW is in error state.

Signed-off-by: Mitesh Ahuja <mitesh.ahuja@emulex.Com>
Signed-off-by: Selvin Xavier <selvin.xavier@emulex.com>
Signed-off-by: Roland Dreier <roland@purestorage.com>
(cherry picked from commit 6dab02648c4c8bb58b35efccf29291d7970aeb68)
Signed-off-by: Doug Ledford <dledford@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/infiniband/hw/ocrdma/ocrdma.h b/drivers/infiniband/hw/ocrdma/ocrdma.h
index 5cd65c2..fc27378 100644
--- a/drivers/infiniband/hw/ocrdma/ocrdma.h
+++ b/drivers/infiniband/hw/ocrdma/ocrdma.h
@@ -137,6 +137,7 @@ struct mqe_ctx {
  u16 cqe_status;
  u16 ext_status;
  bool cmd_done;
+ bool fw_error_state;
 };
 
 struct ocrdma_hw_mr {
diff --git a/drivers/infiniband/hw/ocrdma/ocrdma_hw.c b/drivers/infiniband/hw/ocrdma/ocrdma_hw.c
index 55308b6..5b6e9d9 100644
--- a/drivers/infiniband/hw/ocrdma/ocrdma_hw.c
+++ b/drivers/infiniband/hw/ocrdma/ocrdma_hw.c
@@ -966,8 +966,12 @@ static int ocrdma_wait_mqe_cmpl(struct ocrdma_dev *dev)
         msecs_to_jiffies(30000));
  if (status)
   return 0;
- else
+ else {
+  dev->mqe_ctx.fw_error_state = true;
+  pr_err("%s(%d) mailbox timeout: fw not responding\n",
+         __func__, dev->id);
   return -1;
+ }
 }
 
 /* issue a mailbox command on the MQ */
@@ -979,6 +983,8 @@ static int ocrdma_mbx_cmd(struct ocrdma_dev *dev, struct ocrdma_mqe *mqe)
  struct ocrdma_mbx_rsp *rsp = NULL;
 
  mutex_lock(&dev->mqe_ctx.lock);
+ if (dev->mqe_ctx.fw_error_state)
+  goto mbx_err;
  ocrdma_post_mqe(dev, mqe);
  status = ocrdma_wait_mqe_cmpl(dev);
  if (status)
diff --git a/drivers/infiniband/hw/ocrdma/ocrdma_verbs.c b/drivers/infiniband/hw/ocrdma/ocrdma_verbs.c
index 7f54d24..8cd16a1 100644
--- a/drivers/infiniband/hw/ocrdma/ocrdma_verbs.c
+++ b/drivers/infiniband/hw/ocrdma/ocrdma_verbs.c
@@ -329,7 +329,10 @@ static int ocrdma_dealloc_ucontext_pd(struct ocrdma_ucontext *uctx)
  struct ocrdma_pd *pd = uctx->cntxt_pd;
  struct ocrdma_dev *dev = get_ocrdma_dev(pd->ibpd.device);
 
- BUG_ON(uctx->pd_in_use);
+ if (uctx->pd_in_use) {
+  pr_err("%s(%d) Freeing in use pdid=0x%x.\n",
+         __func__, dev->id, pd->id);
+ }
  uctx->cntxt_pd = NULL;
  status = _ocrdma_dealloc_pd(dev, pd);
  return status;
@@ -844,6 +847,13 @@ int ocrdma_dereg_mr(struct ib_mr *ib_mr)
  if (mr->umem)
   ib_umem_release(mr->umem);
  kfree(mr);
+
+ /* Don't stop cleanup, in case FW is unresponsive */
+ if (dev->mqe_ctx.fw_error_state) {
+  status = 0;
+  pr_err("%s(%d) fw not responding.\n",
+         __func__, dev->id);
+ }
  return status;
 }
 
-- 
1.7.1