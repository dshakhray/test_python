From 849a86af3ec648b1cace1bc7ae327448487c7054 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:08:36 -0400
Subject: [usb] usb_wwan: fix urb leak in write error path

Message-id: <1410887463-20674-445-git-send-email-dzickus@redhat.com>
Patchwork-id: 95602
O-Subject: [RHEL7 PATCH 444/591] USB: usb_wwan: fix urb leak in write error path
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit db0904737947d509844e171c9863ecc5b4534005
Author: xiao jin <jin.xiao@intel.com>
Date:   Mon May 26 19:23:13 2014 +0200

    USB: usb_wwan: fix urb leak in write error path

    When enable usb serial for modem data, sometimes the tty is blocked
    in tty_wait_until_sent because portdata->out_busy always is set and
    have no chance to be cleared.

    We find a bug in write error path. usb_wwan_write set portdata->out_busy
    firstly, then try autopm async with error. No out urb submit and no
    usb_wwan_outdat_callback to this write, portdata->out_busy can't be
    cleared.

    This patch clear portdata->out_busy if usb_wwan_write try autopm async
    with error.

    Fixes: 383cedc3bb43 ("USB: serial: full autosuspend support for the
    option driver")

    Signed-off-by: xiao jin <jin.xiao@intel.com>
    Signed-off-by: Zhang, Qi1 <qi1.zhang@intel.com>
    Reviewed-by: David Cohen <david.a.cohen@linux.intel.com>
    Cc: <stable@vger.kernel.org> # v2.6.32
    Signed-off-by: Johan Hovold <jhovold@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/serial/usb_wwan.c b/drivers/usb/serial/usb_wwan.c
index b078440..47ad755 100644
--- a/drivers/usb/serial/usb_wwan.c
+++ b/drivers/usb/serial/usb_wwan.c
@@ -228,8 +228,10 @@ int usb_wwan_write(struct tty_struct *tty, struct usb_serial_port *port,
    usb_pipeendpoint(this_urb->pipe), i);
 
   err = usb_autopm_get_interface_async(port->serial->interface);
-  if (err < 0)
+  if (err < 0) {
+   clear_bit(i, &portdata->out_busy);
    break;
+  }
 
   /* send the data */
   memcpy(this_urb->transfer_buffer, buf, todo);
-- 
1.7.1