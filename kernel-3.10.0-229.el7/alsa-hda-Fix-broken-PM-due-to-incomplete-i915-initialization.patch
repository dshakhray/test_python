From d4775b99aa69fda4b09942c0983f1bda0be65475 Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <jkysela@redhat.com>
Date: Wed, 3 Sep 2014 07:38:55 -0400
Subject: [alsa] hda: Fix broken PM due to incomplete i915 initialization

Message-id: <140972823573-389-patchset-jkysela@redhat.com>
Patchwork-id: 91085
O-Subject: [RHEL 7.1 PATCH 388/442] ALSA: hda - Fix broken PM due to incomplete i915 initialization
Bugzilla: 1112200
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>

When the initialization of Intel HDMI controller fails due to missing
i915 kernel symbols (e.g. HD-audio is built in while i915 is module),
the driver discontinues the probe.  However, since the probe was done
asynchronously, the driver object still remains, thus the relevant PM
ops are still called at suspend/resume. This results in the bad access
to the incomplete audio card object, eventually leads to Oops or stall
at PM.

This patch adds the missing checks of chip->init_failed flag at each
PM callback in order to fix the problem above.

Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=79561
Cc: <stable@vger.kernel.org>
Signed-off-by: Takashi Iwai <tiwai@suse.de>

(picked from kernel: 4da63c6fc426023d1a20e45508c47d7d68c6a53d)
rhbz#1112200
Signed-off-by: Jaroslav Kysela <jkysela@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/sound/pci/hda/hda_intel.c b/sound/pci/hda/hda_intel.c
index 3c868b1..4288cc4 100644
--- a/sound/pci/hda/hda_intel.c
+++ b/sound/pci/hda/hda_intel.c
@@ -775,7 +775,7 @@ static int azx_suspend(struct device *dev)
  struct azx *chip = card->private_data;
  struct azx_pcm *p;
 
- if (chip->disabled)
+ if (chip->disabled || chip->init_failed)
   return 0;
 
  snd_power_change_state(card, SNDRV_CTL_POWER_D3hot);
@@ -807,7 +807,7 @@ static int azx_resume(struct device *dev)
  struct snd_card *card = dev_get_drvdata(dev);
  struct azx *chip = card->private_data;
 
- if (chip->disabled)
+ if (chip->disabled || chip->init_failed)
   return 0;
 
  if (chip->driver_caps & AZX_DCAPS_I915_POWERWELL) {
@@ -844,7 +844,7 @@ static int azx_runtime_suspend(struct device *dev)
  struct snd_card *card = dev_get_drvdata(dev);
  struct azx *chip = card->private_data;
 
- if (chip->disabled)
+ if (chip->disabled || chip->init_failed)
   return 0;
 
  if (!(chip->driver_caps & AZX_DCAPS_PM_RUNTIME))
@@ -871,7 +871,7 @@ static int azx_runtime_resume(struct device *dev)
  struct hda_codec *codec;
  int status;
 
- if (chip->disabled)
+ if (chip->disabled || chip->init_failed)
   return 0;
 
  if (!(chip->driver_caps & AZX_DCAPS_PM_RUNTIME))
@@ -908,7 +908,7 @@ static int azx_runtime_idle(struct device *dev)
  struct snd_card *card = dev_get_drvdata(dev);
  struct azx *chip = card->private_data;
 
- if (chip->disabled)
+ if (chip->disabled || chip->init_failed)
   return 0;
 
  if (!power_save_controller ||
-- 
1.7.1