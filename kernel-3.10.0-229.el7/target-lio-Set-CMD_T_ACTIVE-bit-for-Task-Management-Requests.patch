From 929b6f6b3dade541b33a1a15ef6036652ea9a65e Mon Sep 17 00:00:00 2001
From: Andy Grover <agrover@redhat.com>
Date: Fri, 5 Sep 2014 16:36:20 -0400
Subject: [target] lio: Set CMD_T_ACTIVE bit for Task Management Requests

Message-id: <1409934989-29941-23-git-send-email-agrover@redhat.com>
Patchwork-id: 91485
O-Subject: [RHEL7.1 PATCH e-stor 22/31] target: Set CMD_T_ACTIVE bit for Task Management Requests
Bugzilla: 1129387
RH-Acked-by: Chris Leech <cleech@redhat.com>
RH-Acked-by: Rob Evers <revers@redhat.com>

From: Nicholas Bellinger <nab@linux-iscsi.org>

commit f15e9cd910c4d9da7de43f2181f362082fc45f0f upstream.

This patch fixes a bug where se_cmd descriptors associated with a
Task Management Request (TMR) where not setting CMD_T_ACTIVE before
being dispatched into target_tmr_work() process context.

This is required in order for transport_generic_free_cmd() ->
transport_wait_for_tasks() to wait on se_cmd->t_transport_stop_comp
if a session reset event occurs while an ABORT_TASK is outstanding
waiting for another I/O to complete.

Cc: Thomas Glanzmann <thomas@glanzmann.de>
Cc: Charalampos Pournaris <charpour@gmail.com>
Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/target/target_core_transport.c b/drivers/target/target_core_transport.c
index 305cd33..44f6fc1 100644
--- a/drivers/target/target_core_transport.c
+++ b/drivers/target/target_core_transport.c
@@ -2879,6 +2879,12 @@ static void target_tmr_work(struct work_struct *work)
 int transport_generic_handle_tmr(
  struct se_cmd *cmd)
 {
+ unsigned long flags;
+
+ spin_lock_irqsave(&cmd->t_state_lock, flags);
+ cmd->transport_state |= CMD_T_ACTIVE;
+ spin_unlock_irqrestore(&cmd->t_state_lock, flags);
+
  INIT_WORK(&cmd->work, target_tmr_work);
  queue_work(cmd->se_dev->tmr_wq, &cmd->work);
  return 0;
-- 
1.7.1