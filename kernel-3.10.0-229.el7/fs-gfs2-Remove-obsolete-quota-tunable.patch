From 7b0dc46c1b6320b16e4c4f680c3cc9bf948cb2eb Mon Sep 17 00:00:00 2001
From: Abhijith Das <adas@redhat.com>
Date: Fri, 15 Aug 2014 19:56:28 -0400
Subject: [fs] gfs2: Remove obsolete quota tunable

Message-id: <1408132603-52384-3-git-send-email-adas@redhat.com>
Patchwork-id: 87821
O-Subject: [RHEL7.1 PATCH 02/17] GFS2: Remove obsolete quota tunable
Bugzilla: 1026406
RH-Acked-by: Robert S Peterson <rpeterso@redhat.com>
RH-Acked-by: Steven Whitehouse <swhiteho@redhat.com>

There is no need for a paramater which relates to the internals
of quota to be exposed to users. The only possible use would be
to turn it up so large that the memory allocation fails. So lets
remove it and set it to a sensible value which ensures that we
don't ask for multipage allocations.

Currently the size of struct gfs2_holder means that the caluclated
value is identical to the previous default value, so there should
be no functional change.

Resolves: rhbz#1026406
Signed-off-by: Steven Whitehouse <swhiteho@redhat.com>
Cc: Abhijith Das <adas@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/gfs2/incore.h b/fs/gfs2/incore.h
index eab62b2..05fecff 100644
--- a/fs/gfs2/incore.h
+++ b/fs/gfs2/incore.h
@@ -542,7 +542,6 @@ struct gfs2_tune {
 
  unsigned int gt_logd_secs;
 
- unsigned int gt_quota_simul_sync; /* Max quotavals to sync at once */
  unsigned int gt_quota_warn_period; /* Secs between quota warn msgs */
  unsigned int gt_quota_scale_num; /* Numerator */
  unsigned int gt_quota_scale_den; /* Denominator */
diff --git a/fs/gfs2/ops_fstype.c b/fs/gfs2/ops_fstype.c
index cf6501f..67d8168 100644
--- a/fs/gfs2/ops_fstype.c
+++ b/fs/gfs2/ops_fstype.c
@@ -51,7 +51,6 @@ static void gfs2_tune_init(struct gfs2_tune *gt)
 {
  spin_lock_init(&gt->gt_spin);
 
- gt->gt_quota_simul_sync = 64;
  gt->gt_quota_warn_period = 10;
  gt->gt_quota_scale_num = 1;
  gt->gt_quota_scale_den = 1;
diff --git a/fs/gfs2/quota.c b/fs/gfs2/quota.c
index e3e75c2..649fd8a 100644
--- a/fs/gfs2/quota.c
+++ b/fs/gfs2/quota.c
@@ -1137,7 +1137,7 @@ int gfs2_quota_sync(struct super_block *sb, int type)
 {
  struct gfs2_sbd *sdp = sb->s_fs_info;
  struct gfs2_quota_data **qda;
- unsigned int max_qd = gfs2_tune_get(sdp, gt_quota_simul_sync);
+ unsigned int max_qd = PAGE_SIZE/sizeof(struct gfs2_holder);
  unsigned int num_qd;
  unsigned int x;
  int error = 0;
diff --git a/fs/gfs2/sys.c b/fs/gfs2/sys.c
index 70d3a3d..351fd3d 100644
--- a/fs/gfs2/sys.c
+++ b/fs/gfs2/sys.c
@@ -590,7 +590,6 @@ TUNE_ATTR(max_readahead, 0);
 TUNE_ATTR(complain_secs, 0);
 TUNE_ATTR(statfs_slow, 0);
 TUNE_ATTR(new_files_jdata, 0);
-TUNE_ATTR(quota_simul_sync, 1);
 TUNE_ATTR(statfs_quantum, 1);
 TUNE_ATTR_3(quota_scale, quota_scale_show, quota_scale_store);
 
@@ -600,7 +599,6 @@ static struct attribute *tune_attrs[] = {
  &tune_attr_max_readahead.attr,
  &tune_attr_complain_secs.attr,
  &tune_attr_statfs_slow.attr,
- &tune_attr_quota_simul_sync.attr,
  &tune_attr_statfs_quantum.attr,
  &tune_attr_quota_scale.attr,
  &tune_attr_new_files_jdata.attr,
-- 
1.7.1