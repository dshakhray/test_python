From a3debdb0f1eec9bc65feacd373187fef76892c1c Mon Sep 17 00:00:00 2001
From: Maurizio Lombardi <mlombard@redhat.com>
Date: Mon, 8 Sep 2014 12:13:50 -0400
Subject: [scsi] bnx2fc: fix incorrect DMA memory mapping in bnx2fc_unmap_sg_list()

Message-id: <1410178430-17999-1-git-send-email-mlombard@redhat.com>
Patchwork-id: 91660
O-Subject: [RHEL7.1 e-stor PATCH] bnx2fc: fix incorrect DMA memory mapping in bnx2fc_unmap_sg_list()
Bugzilla: 1102526
RH-Acked-by: Tomas Henzl <thenzl@redhat.com>
RH-Acked-by: Ewan Milne <emilne@redhat.com>

From: Chad Dupuis <chad.dupuis@qlogic.com>

tested by QLogic

This patch is based on a problem and solution from Maurizio Lombardi
where bnx2fc isn't consistent in which device struct we using for DMA
map and unmap operations.  Make them consistent by using dma_sg_unmap
in bnx2fc_unmap_sg_list like bnx2fc_map_sg.

Reviewed-by: Eddie Wai <eddie.wai@broadcom.com>
Signed-off-by: Chad Dupuis <chad.dupuis@qlogic.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit bcda9facc6a752a2a1fa1a8c80518ed8c7d368e3)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/bnx2fc/bnx2fc_io.c b/drivers/scsi/bnx2fc/bnx2fc_io.c
index 7ae142e..edf34d4 100644
--- a/drivers/scsi/bnx2fc/bnx2fc_io.c
+++ b/drivers/scsi/bnx2fc/bnx2fc_io.c
@@ -1654,6 +1654,10 @@ static int bnx2fc_map_sg(struct bnx2fc_cmd *io_req)
  u64 addr;
  int i;
 
+ /*
+  * Use dma_map_sg directly to ensure we're using the correct
+  * dev struct off of pcidev.
+  */
  sg_count = dma_map_sg(&hba->pcidev->dev, scsi_sglist(sc),
          scsi_sg_count(sc), sc->sc_data_direction);
  scsi_for_each_sg(sc, sg, sg_count, i) {
@@ -1703,9 +1707,16 @@ static int bnx2fc_build_bd_list_from_sg(struct bnx2fc_cmd *io_req)
 static void bnx2fc_unmap_sg_list(struct bnx2fc_cmd *io_req)
 {
  struct scsi_cmnd *sc = io_req->sc_cmd;
+ struct bnx2fc_interface *interface = io_req->port->priv;
+ struct bnx2fc_hba *hba = interface->hba;
 
- if (io_req->bd_tbl->bd_valid && sc) {
-  scsi_dma_unmap(sc);
+ /*
+  * Use dma_unmap_sg directly to ensure we're using the correct
+  * dev struct off of pcidev.
+  */
+ if (io_req->bd_tbl->bd_valid && sc && scsi_sg_count(sc)) {
+  dma_unmap_sg(&hba->pcidev->dev, scsi_sglist(sc),
+      scsi_sg_count(sc), sc->sc_data_direction);
   io_req->bd_tbl->bd_valid = 0;
  }
 }
-- 
1.7.1