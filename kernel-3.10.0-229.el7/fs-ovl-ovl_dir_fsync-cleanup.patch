From 8500e7abead17899bbfc2a87a142ccc6a5d89dbf Mon Sep 17 00:00:00 2001
From: David Howells <dhowells@redhat.com>
Date: Thu, 27 Nov 2014 11:47:05 -0500
Subject: [fs] ovl: ovl_dir_fsync() cleanup

Message-id: <20141127114705.9170.70744.stgit@warthog.procyon.org.uk>
Patchwork-id: 100990
O-Subject: [RHEL7 PATCH 7/7] ovl: ovl_dir_fsync() cleanup
Bugzilla: 985875
RH-Acked-by: Alexander Viro <aviro@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

From: Miklos Szeredi <mszeredi@suse.cz>

Check against !OVL_PATH_LOWER instead of OVL_PATH_MERGE.  For a copied up
directory the two are currently equivalent.

Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
Original-commit: 7676895f4736421ebafc48de5078e25ea69e88ee
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/overlayfs/readdir.c b/fs/overlayfs/readdir.c
index 1e50e59..cde192e 100644
--- a/fs/overlayfs/readdir.c
+++ b/fs/overlayfs/readdir.c
@@ -467,10 +467,10 @@ static int ovl_dir_fsync(struct file *file, loff_t start, loff_t end,
  /*
   * Need to check if we started out being a lower dir, but got copied up
   */
- if (!od->is_upper && ovl_path_type(dentry) == OVL_PATH_MERGE) {
+ if (!od->is_upper && ovl_path_type(dentry) != OVL_PATH_LOWER) {
   struct inode *inode = file_inode(file);
 
-  realfile =lockless_dereference(od->upperfile);
+  realfile = lockless_dereference(od->upperfile);
   if (!realfile) {
    struct path upperpath;
 
-- 
1.7.1