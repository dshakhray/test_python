From 55d80eb3d51694d6fc568487349bddbe0c05b8c5 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:04:33 -0400
Subject: [powerpc] ppc64: Rename SOFT_DISABLE_INTS with RECONCILE_IRQ_STATE

Message-id: <1410545655-205645-45-git-send-email-dzickus@redhat.com>
Patchwork-id: 94139
O-Subject: [RHEL7 PATCH 044/626] powerpc/ppc64: Rename SOFT_DISABLE_INTS with RECONCILE_IRQ_STATE
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit de021bb79c7636df24864fa2dbb958121303663b
Author: Tiejun Chen <tiejun.chen@windriver.com>
Date:   Tue Jul 16 11:09:30 2013 +0800

    powerpc/ppc64: Rename SOFT_DISABLE_INTS with RECONCILE_IRQ_STATE

    The SOFT_DISABLE_INTS seems an odd name for something that updates the
    software state to be consistent with interrupts being hard disabled, so
    rename SOFT_DISABLE_INTS with RECONCILE_IRQ_STATE to avoid this confusion.

    Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/include/asm/exception-64s.h b/arch/powerpc/include/asm/exception-64s.h
index fe5e523..cca12f0 100644
--- a/arch/powerpc/include/asm/exception-64s.h
+++ b/arch/powerpc/include/asm/exception-64s.h
@@ -480,7 +480,7 @@ label##_relon_hv:       \
  */
 
 /* Exception addition: Hard disable interrupts */
-#define DISABLE_INTS SOFT_DISABLE_INTS(r10,r11)
+#define DISABLE_INTS RECONCILE_IRQ_STATE(r10,r11)
 
 #define ADD_NVGPRS    \
  bl .save_nvgprs
diff --git a/arch/powerpc/include/asm/irqflags.h b/arch/powerpc/include/asm/irqflags.h
index 6f9b6e2..f51a558 100644
--- a/arch/powerpc/include/asm/irqflags.h
+++ b/arch/powerpc/include/asm/irqflags.h
@@ -40,9 +40,10 @@
 #define TRACE_DISABLE_INTS TRACE_WITH_FRAME_BUFFER(.trace_hardirqs_off)
 
 /*
- * This is used by assembly code to soft-disable interrupts
+ * This is used by assembly code to soft-disable interrupts first and
+ * reconcile irq state.
  */
-#define SOFT_DISABLE_INTS(__rA, __rB)  \
+#define RECONCILE_IRQ_STATE(__rA, __rB)  \
  lbz __rA,PACASOFTIRQEN(r13); \
  lbz __rB,PACAIRQHAPPENED(r13); \
  cmpwi cr0,__rA,0;   \
@@ -58,7 +59,7 @@
 #define TRACE_ENABLE_INTS
 #define TRACE_DISABLE_INTS
 
-#define SOFT_DISABLE_INTS(__rA, __rB)  \
+#define RECONCILE_IRQ_STATE(__rA, __rB)  \
  lbz __rA,PACAIRQHAPPENED(r13); \
  li __rB,0;    \
  ori __rA,__rA,PACA_IRQ_HARD_DIS; \
diff --git a/arch/powerpc/kernel/entry_64.S b/arch/powerpc/kernel/entry_64.S
index a1eb6a6..fe60ec4 100644
--- a/arch/powerpc/kernel/entry_64.S
+++ b/arch/powerpc/kernel/entry_64.S
@@ -748,9 +748,9 @@ resume_kernel:
 
  /*
   * Here we are preempting the current task. We want to make
-  * sure we are soft-disabled first
+  * sure we are soft-disabled first and reconcile irq state.
   */
- SOFT_DISABLE_INTS(r3,r4)
+ RECONCILE_IRQ_STATE(r3,r4)
 1: bl .preempt_schedule_irq
 
  /* Re-test flags and eventually loop */
diff --git a/arch/powerpc/kernel/exceptions-64e.S b/arch/powerpc/kernel/exceptions-64e.S
index 645170a..2d06704 100644
--- a/arch/powerpc/kernel/exceptions-64e.S
+++ b/arch/powerpc/kernel/exceptions-64e.S
@@ -198,9 +198,9 @@ exc_##n##_common:           \
 /* This second version is meant for exceptions that don't immediately
  * hard-enable. We set a bit in paca->irq_happened to ensure that
  * a subsequent call to arch_local_irq_restore() will properly
- * hard-enable and avoid the fast-path
+ * hard-enable and avoid the fast-path, and then reconcile irq state.
  */
-#define INTS_DISABLE SOFT_DISABLE_INTS(r3,r4)
+#define INTS_DISABLE RECONCILE_IRQ_STATE(r3,r4)
 
 /* This is called by exceptions that used INTS_KEEP (that did not touch
  * irq indicators in the PACA). This will restore MSR:EE to it's previous
-- 
1.7.1