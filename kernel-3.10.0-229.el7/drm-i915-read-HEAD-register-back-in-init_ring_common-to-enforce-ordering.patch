From e13c472ead613702aa13473f283285d358dae64d Mon Sep 17 00:00:00 2001
From: Rob Clark <rclark@redhat.com>
Date: Wed, 17 Dec 2014 21:38:28 -0500
Subject: [drm] i915: read HEAD register back in init_ring_common() to enforce ordering

Message-id: <1418852380-13061-18-git-send-email-rclark@redhat.com>
Patchwork-id: 102146
O-Subject: [RHEL7 drm 17/89] drm/i915: read HEAD register back in init_ring_common() to enforce ordering
Bugzilla: 1153301
RH-Acked-by: Jerome Glisse <jglisse@redhat.com>
RH-Acked-by: Dave Airlie <airlied@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1153301
Upstream: since v3.16.4

commit 2e7c20830d15cb87350d4d2d3b1eb745c5763f6e

Author:     Jiri Kosina <jkosina@suse.cz>
AuthorDate: Thu Aug 7 16:29:53 2014 +0200
Commit:     Rob Clark <rclark@redhat.com>
CommitDate: Wed Dec 10 17:13:07 2014 -0500

    drm/i915: read HEAD register back in init_ring_common() to enforce ordering

    commit ece4a17d237a79f63fbfaf3f724a12b6d500555c upstream.

    Withtout this, ring initialization fails reliabily during resume with

     [drm:init_ring_common] *ERROR* render ring initialization failed ctl 0001f001 head ffffff8804 tail 00000000 start 000e4000

    This is not a complete fix, but it is verified to make the ring
    initialization failures during resume much less likely.

    We were not able to root-cause this bug (likely HW-specific to Gen4 chips)
    yet. This is therefore used as a ducttape before problem is fully
    understood and proper fix created, so that people don't suffer from
    completely unusable systems in the meantime.

    The discussion and debugging is happening at

     https://bugs.freedesktop.org/show_bug.cgi?id=76554

    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Signed-off-by: Rob Clark <rclark@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/gpu/drm/i915/intel_ringbuffer.c b/drivers/gpu/drm/i915/intel_ringbuffer.c
index 279488a..7add7ee 100644
--- a/drivers/gpu/drm/i915/intel_ringbuffer.c
+++ b/drivers/gpu/drm/i915/intel_ringbuffer.c
@@ -517,6 +517,9 @@ static int init_ring_common(struct intel_engine_cs *ring)
  else
   ring_setup_phys_status_page(ring);
 
+ /* Enforce ordering by reading HEAD register back */
+ I915_READ_HEAD(ring);
+
  /* Initialize the ring. This must happen _after_ we've cleared the ring
   * registers with the above sequence (the readback of the HEAD registers
   * also enforces ordering), otherwise the hw might lose the new ring
-- 
1.7.1