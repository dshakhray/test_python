From ccbe8da750d170ec04b65ba57585d261f53a9deb Mon Sep 17 00:00:00 2001
From: Rik van Riel <riel@redhat.com>
Date: Fri, 5 Sep 2014 14:16:59 -0400
Subject: [kernel] seqcount: Provide raw_read_seqcount()

Message-id: <1409926623-25929-4-git-send-email-riel@redhat.com>
Patchwork-id: 91455
O-Subject: [RHEL7 PATCH 3/7] seqcount: Provide raw_read_seqcount()
Bugzilla: 1120307
RH-Acked-by: Larry Woodman <lwoodman@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stanislaw Gruszka <sgruszka@redhat.com>

From: Thomas Gleixner <tglx@linutronix.de>

Fixes bug 1120307

commit 0ea5a520f73ca31abc4c10b6d5bc14a884a0641b
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Jul 16 21:05:20 2014 +0000

    seqcount: Provide raw_read_seqcount()

    raw_read_seqcount opens a read critical section of the given seqcount
    without any lockdep checking and without checking or masking the
    LSB. Calling code is responsible for handling that.

    Preparatory patch to provide a NMI safe clock monotonic accessor
    function.

    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Signed-off-by: John Stultz <john.stultz@linaro.org>

Signed-off-by: Rik van Riel <riel@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/linux/seqlock.h b/include/linux/seqlock.h
index 2c61a24..0a2cf98 100644
--- a/include/linux/seqlock.h
+++ b/include/linux/seqlock.h
@@ -76,6 +76,22 @@ repeat:
 }
 
 /**
+ * raw_read_seqcount - Read the raw seqcount
+ * @s: pointer to seqcount_t
+ * Returns: count to be passed to read_seqcount_retry
+ *
+ * raw_read_seqcount opens a read critical section of the given
+ * seqcount without any lockdep checking and without checking or
+ * masking the LSB. Calling code is responsible for handling that.
+ */
+static inline unsigned raw_read_seqcount(const seqcount_t *s)
+{
+ unsigned ret = ACCESS_ONCE(s->sequence);
+ smp_rmb();
+ return ret;
+}
+
+/**
  * read_seqcount_begin - begin a seq-read critical section
  * @s: pointer to seqcount_t
  * Returns: count to be passed to read_seqcount_retry
-- 
1.7.1