From 1b17b68a8e875c392d60779dfeb6d09eea224f3d Mon Sep 17 00:00:00 2001
From: Rich Bono <rbono@redhat.com>
Date: Thu, 20 Nov 2014 21:23:40 -0500
Subject: [scsi] pm8001: Fix invalid return when request_irq() failed

Message-id: <1416518623-7080-20-git-send-email-rbono@redhat.com>
Patchwork-id: 100408
O-Subject: [RHEL7.1 e-stor PATCH V3 19/22] pm8001: Fix invalid return when request_irq() failed
Bugzilla: 1110943
RH-Acked-by: Rob Evers <revers@redhat.com>
RH-Acked-by: Tomas Henzl <thenzl@redhat.com>

From: Alexander Gordeev <agordeev@redhat.com>

When a call to request_irq() failed pm8001_setup_msix()
still returns the success. This udate fixes the described
misbehaviour.

Signed-off-by: Alexander Gordeev <agordeev@redhat.com>
Acked-by: Jack Wang <xjtuwjp@gmail.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 5607de73dbdaeeef67aaae69c769424c638cf3d9)

Signed-off-by: Rich Bono <rbono@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/pm8001/pm8001_init.c b/drivers/scsi/pm8001/pm8001_init.c
index e18e70f..352efa5 100644
--- a/drivers/scsi/pm8001/pm8001_init.c
+++ b/drivers/scsi/pm8001/pm8001_init.c
@@ -765,9 +765,10 @@ static u32 pm8001_setup_msix(struct pm8001_hba_info *pm8001_ha)
    pm8001_ha->irq_vector[i].irq_id = i;
    pm8001_ha->irq_vector[i].drv_inst = pm8001_ha;
 
-   if (request_irq(pm8001_ha->msix_entries[i].vector,
+   rc = request_irq(pm8001_ha->msix_entries[i].vector,
     pm8001_interrupt_handler_msix, flag,
-    intr_drvname[i], &(pm8001_ha->irq_vector[i]))) {
+    intr_drvname[i], &(pm8001_ha->irq_vector[i]));
+   if (rc) {
     for (j = 0; j < i; j++)
      free_irq(
      pm8001_ha->msix_entries[j].vector,
-- 
1.7.1