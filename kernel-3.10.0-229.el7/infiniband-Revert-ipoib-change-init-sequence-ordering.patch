From 7c5ef8e02724bc7bc68c2c316530d175f2e50502 Mon Sep 17 00:00:00 2001
From: Doug Ledford <dledford@redhat.com>
Date: Wed, 28 Jan 2015 23:10:33 -0500
Subject: [infiniband] Revert: ipoib: change init sequence ordering

Message-id: <fae8dda7cb6946de3b83f25e4eeb669446660fb9.1422486318.git.dledford@redhat.com>
Patchwork-id: 103869
O-Subject: [Patch RHEL7 4/8] Revert "[infiniband] ipoib: change init sequence ordering"
Bugzilla: 1179740
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

This reverts commit b2ec940c5b4e5ff8e923cc8cdcee8eb852e627ab.

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/infiniband/ulp/ipoib/ipoib_main.c b/drivers/infiniband/ulp/ipoib/ipoib_main.c
index 226ff21..4989c7d 100644
--- a/drivers/infiniband/ulp/ipoib/ipoib_main.c
+++ b/drivers/infiniband/ulp/ipoib/ipoib_main.c
@@ -1262,13 +1262,15 @@ int ipoib_dev_init(struct net_device *dev, struct ib_device *ca, int port)
 {
  struct ipoib_dev_priv *priv = netdev_priv(dev);
 
+ if (ipoib_neigh_hash_init(priv) < 0)
+  goto out;
  /* Allocate RX/TX "rings" to hold queued skbs */
  priv->rx_ring = kzalloc(ipoib_recvq_size * sizeof *priv->rx_ring,
     GFP_KERNEL);
  if (!priv->rx_ring) {
   printk(KERN_WARNING "%s: failed to allocate RX ring (%d entries)\n",
          ca->name, ipoib_recvq_size);
-  goto out;
+  goto out_neigh_hash_cleanup;
  }
 
  priv->tx_ring = vzalloc(ipoib_sendq_size * sizeof *priv->tx_ring);
@@ -1283,24 +1285,16 @@ int ipoib_dev_init(struct net_device *dev, struct ib_device *ca, int port)
  if (ipoib_ib_dev_init(dev, ca, port))
   goto out_tx_ring_cleanup;
 
- /*
-  * Must be after ipoib_ib_dev_init so we can allocate a per
-  * device wq there and use it here
-  */
- if (ipoib_neigh_hash_init(priv) < 0)
-  goto out_dev_uninit;
-
  return 0;
 
-out_dev_uninit:
- ipoib_ib_dev_cleanup();
-
 out_tx_ring_cleanup:
  vfree(priv->tx_ring);
 
 out_rx_ring_cleanup:
  kfree(priv->rx_ring);
 
+out_neigh_hash_cleanup:
+ ipoib_neigh_hash_uninit(dev);
 out:
  return -ENOMEM;
 }
@@ -1323,12 +1317,6 @@ void ipoib_dev_cleanup(struct net_device *dev)
  }
  unregister_netdevice_many(&head);
 
- /*
-  * Must be before ipoib_ib_dev_cleanup or we delete an in use
-  * work queue
-  */
- ipoib_neigh_hash_uninit(dev);
-
  ipoib_ib_dev_cleanup(dev);
 
  kfree(priv->rx_ring);
@@ -1336,6 +1324,8 @@ void ipoib_dev_cleanup(struct net_device *dev)
 
  priv->rx_ring = NULL;
  priv->tx_ring = NULL;
+
+ ipoib_neigh_hash_uninit(dev);
 }
 
 static const struct header_ops ipoib_header_ops = {
-- 
1.7.1