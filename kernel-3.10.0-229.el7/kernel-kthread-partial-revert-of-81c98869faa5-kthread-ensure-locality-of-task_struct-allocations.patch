From e96ff140cab5968c323ef2e15adf3eb77a8e74b4 Mon Sep 17 00:00:00 2001
From: Gustavo Duarte <gduarte@redhat.com>
Date: Tue, 9 Dec 2014 20:01:39 -0500
Subject: [kernel] kthread: partial revert of 81c98869faa5 ("kthread: ensure locality of task_struct allocations")

Message-id: <1418155299-17945-6-git-send-email-gduarte@redhat.com>
Patchwork-id: 101208
O-Subject: [RHEL7.1 PATCH BZ 953583 5/5] kernel/kthread.c: partial revert of 81c98869faa5 ("kthread: ensure locality of task_struct allocations")
Bugzilla: 953583
RH-Acked-by: David Gibson <dgibson@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>

BZ 953583
Upstream Status: 109228389a943edd7e5c6ae94a7fda119691baec

commit 109228389a943edd7e5c6ae94a7fda119691baec
Author: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>
Date:   Thu Oct 9 15:26:18 2014 -0700

    kernel/kthread.c: partial revert of 81c98869faa5 ("kthread: ensure locality of task_struct allocations")

    After discussions with Tejun, we don't want to spread the use of
    cpu_to_mem() (and thus knowledge of allocators/NUMA topology details) into
    callers, but would rather ensure the callees correctly handle memoryless
    nodes.  With the previous patches ("topology: add support for
    node_to_mem_node() to determine the fallback node" and "slub: fallback to
    node_to_mem_node() node if allocating on memoryless node") adding and
    using node_to_mem_node(), we can safely undo part of the change to the
    kthread logic from 81c98869faa5.

    Signed-off-by: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Han Pingtian <hanpt@linux.vnet.ibm.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Anton Blanchard <anton@samba.org>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: Wanpeng Li <liwanp@linux.vnet.ibm.com>
    Cc: Tejun Heo <tj@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/kernel/kthread.c b/kernel/kthread.c
index 35cbf29..310519a 100644
--- a/kernel/kthread.c
+++ b/kernel/kthread.c
@@ -332,7 +332,7 @@ struct task_struct *kthread_create_on_cpu(int (*threadfn)(void *data),
 {
  struct task_struct *p;
 
- p = kthread_create_on_node(threadfn, data, cpu_to_mem(cpu), namefmt,
+ p = kthread_create_on_node(threadfn, data, cpu_to_node(cpu), namefmt,
        cpu);
  if (IS_ERR(p))
   return p;
-- 
1.7.1