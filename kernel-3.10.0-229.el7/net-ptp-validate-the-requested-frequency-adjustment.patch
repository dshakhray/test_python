From 52baa0ae41a6145091be79b4ec27a91e6789c81f Mon Sep 17 00:00:00 2001
From: Jiri Benc <jbenc@redhat.com>
Date: Mon, 5 May 2014 11:37:08 -0400
Subject: [net] ptp: validate the requested frequency adjustment

Message-id: <65b27fa84453735bd98fe3f9002aa04d98c7290a.1399289820.git.jbenc@redhat.com>
Patchwork-id: 79382
O-Subject: [RHEL7.1 net PATCH] ptp: validate the requested frequency adjustment.
Bugzilla: 1092969
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Florian Westphal <fwestpha@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1092969
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7411552
Tested: using Documentation/ptp/testptp.c

commit (net-next) d39a743511cdb80884b4b9cd506fe84b6b08e66e
Author: Richard Cochran <richardcochran@gmail.com>
Date:   Sun Apr 27 15:01:27 2014 +0200

    ptp: validate the requested frequency adjustment.

    PTP Hardware Clock drivers specify a maximum frequency adjustment that
    their clocks can accommodate. Normally, user space programs will want to
    respect the advertised limits. However, no kernel or driver code checks
    that the dialed frequency offset is within the bounds, and out of range
    values can lead to surprising results.

    This patch fixes the issue by rejecting bad values.

    Signed-off-by: Richard Cochran <richardcochran@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/ptp/ptp_clock.c b/drivers/ptp/ptp_clock.c
index a8319b2..96d5e82 100644
--- a/drivers/ptp/ptp_clock.c
+++ b/drivers/ptp/ptp_clock.c
@@ -142,7 +142,10 @@ static int ptp_clock_adjtime(struct posix_clock *pc, struct timex *tx)
   delta = ktime_to_ns(kt);
   err = ops->adjtime(ops, delta);
  } else if (tx->modes & ADJ_FREQUENCY) {
-  err = ops->adjfreq(ops, scaled_ppm_to_ppb(tx->freq));
+  s32 ppb = scaled_ppm_to_ppb(tx->freq);
+  if (ppb > ops->max_adj || ppb < -ops->max_adj)
+   return -ERANGE;
+  err = ops->adjfreq(ops, ppb);
   ptp->dialed_frequency = tx->freq;
  } else if (tx->modes == 0) {
   tx->freq = ptp->dialed_frequency;
-- 
1.7.1