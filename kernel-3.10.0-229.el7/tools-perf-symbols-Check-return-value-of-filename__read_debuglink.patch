From bd8e814b89c067f49f1c27563f462693c9a7d9d3 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:05:29 -0400
Subject: [tools] perf/symbols: Check return value of filename__read_debuglink()

Message-id: <1410181752-25631-85-git-send-email-jolsa@redhat.com>
Patchwork-id: 91745
O-Subject: [PATCH RHEL7.1 BZ1134356 084/307] perf symbols: Check return value of filename__read_debuglink()
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit 0d3dc5e8b85a144aaeb5dc26f7f2113e4c4e7e81
Author: Stephane Eranian <eranian@google.com>
Date: Thu Feb 20 10:32:55 2014 +0900

description
===========
When dso__read_binary_type_filename() called, it doesn't check the
return value of filename__read_debuglink() so that it'll try to open the
debuglink file even if it doesn't exist.

Also fix return value of the filename__read_debuglink() as it always
return -1 regardless of the result.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/dso.c b/tools/perf/util/dso.c
index 4045d08..64453d6 100644
--- a/tools/perf/util/dso.c
+++ b/tools/perf/util/dso.c
@@ -45,8 +45,8 @@ int dso__read_binary_type_filename(const struct dso *dso,
    debuglink--;
   if (*debuglink == '/')
    debuglink++;
-  filename__read_debuglink(dso->long_name, debuglink,
-      size - (debuglink - filename));
+  ret = filename__read_debuglink(dso->long_name, debuglink,
+            size - (debuglink - filename));
   }
   break;
  case DSO_BINARY_TYPE__BUILD_ID_CACHE:
diff --git a/tools/perf/util/symbol-elf.c b/tools/perf/util/symbol-elf.c
index 516d19f..3b7dbf5 100644
--- a/tools/perf/util/symbol-elf.c
+++ b/tools/perf/util/symbol-elf.c
@@ -506,6 +506,8 @@ int filename__read_debuglink(const char *filename, char *debuglink,
  /* the start of this section is a zero-terminated string */
  strncpy(debuglink, data->d_buf, size);
 
+ err = 0;
+
 out_elf_end:
  elf_end(elf);
 out_close:
-- 
1.7.1