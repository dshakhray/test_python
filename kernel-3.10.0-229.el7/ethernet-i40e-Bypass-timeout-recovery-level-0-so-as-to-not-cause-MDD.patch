From f5b19e4f3f2177a050206d6177b158d233582dc2 Mon Sep 17 00:00:00 2001
From: Stefan Assmann <sassmann@redhat.com>
Date: Tue, 2 Sep 2014 11:39:28 -0400
Subject: [ethernet] i40e: Bypass timeout recovery level 0 so as to not cause MDD

Message-id: <1409658042-22689-208-git-send-email-sassmann@redhat.com>
Patchwork-id: 90407
O-Subject: [RHEL7.1 PATCH 207/281] i40e: Bypass timeout recovery level 0 so as to not cause MDD
Bugzilla: 1091126
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Anjali Singhai Jain <anjali.singhai@intel.com>

When a Tx hang happens, usually the Tx queue disable fails. At
this point if we try to recover by a VSI reinit the HW gets
unhappy and we get a Malicious Driver Detect (MDD) event.
HW expects a PF reset if a queue disable fails, if we don't do a PF
reset and restart the queue we get an MDD.  This patch makes sure we
do a PF reset on Tx hang and that way we avoid any MDD because of Tx
queue disable failure.

Change-ID: I665ab6223577c788da857ee2132e733dc9a451e4
Signed-off-by: Anjali Singhai Jain <anjali.singhai@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: Stefan Assmann <sassmann@redhat.com>
(cherry picked from commit 327fe04bfb32642eee237e1cc1eaef16d6a4a0f5)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/i40e/i40e_main.c b/drivers/net/ethernet/intel/i40e/i40e_main.c
index c989ca3..b1f7896 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_main.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_main.c
@@ -278,7 +278,7 @@ static void i40e_tx_timeout(struct net_device *netdev)
  pf->tx_timeout_count++;
 
  if (time_after(jiffies, (pf->tx_timeout_last_recovery + HZ*20)))
-  pf->tx_timeout_recovery_level = 0;
+  pf->tx_timeout_recovery_level = 1;
  pf->tx_timeout_last_recovery = jiffies;
  netdev_info(netdev, "tx_timeout recovery level %d\n",
       pf->tx_timeout_recovery_level);
@@ -6826,6 +6826,8 @@ static int i40e_sw_init(struct i40e_pf *pf)
  pf->irq_pile->num_entries = pf->hw.func_caps.num_msix_vectors;
  pf->irq_pile->search_hint = 0;
 
+ pf->tx_timeout_recovery_level = 1;
+
  mutex_init(&pf->switch_mutex);
 
 sw_init_done:
-- 
1.7.1