From e2fcf51c10d626c642605cc71d282e2989208748 Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:23:25 -0400
Subject: [cpufreq] intel_pstate: remove unneeded sample buffers

Message-id: <1409235879-1283-112-git-send-email-prarit@redhat.com>
Patchwork-id: 89457
O-Subject: [RHEL7.1 PATCH BZ 1134639 111/185] intel_pstate: remove unneeded sample buffers
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit d37e2b764499e092ebc493d6f980827feb952e23
Author: Dirk Brandewie <dirk.j.brandewie@intel.com>
Date:   Wed Feb 12 10:01:04 2014 -0800

    intel_pstate: remove unneeded sample buffers

    Remove unneeded sample buffers, intel_pstate operates on the most
    recent sample only.  This save some memory and make the code more
    readable.

    Signed-off-by: Dirk Brandewie <dirk.j.brandewie@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
Cc: Tony Camuso <tcamuso@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/intel_pstate.c b/drivers/cpufreq/intel_pstate.c
index 7af5bcb..34b8d67 100644
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@ -99,8 +99,7 @@ struct cpudata {
  u64 prev_aperf;
  u64 prev_mperf;
  unsigned long long prev_tsc;
- int sample_ptr;
- struct sample samples[SAMPLE_COUNT];
+ struct sample sample;
 };
 
 static struct cpudata **all_cpu_data;
@@ -586,15 +585,14 @@ static inline void intel_pstate_sample(struct cpudata *cpu)
  mperf = mperf >> FRAC_BITS;
  tsc = tsc >> FRAC_BITS;
 
- cpu->sample_ptr = (cpu->sample_ptr + 1) % SAMPLE_COUNT;
- cpu->samples[cpu->sample_ptr].aperf = aperf;
- cpu->samples[cpu->sample_ptr].mperf = mperf;
- cpu->samples[cpu->sample_ptr].tsc = tsc;
- cpu->samples[cpu->sample_ptr].aperf -= cpu->prev_aperf;
- cpu->samples[cpu->sample_ptr].mperf -= cpu->prev_mperf;
- cpu->samples[cpu->sample_ptr].tsc -= cpu->prev_tsc;
+ cpu->sample.aperf = aperf;
+ cpu->sample.mperf = mperf;
+ cpu->sample.tsc = tsc;
+ cpu->sample.aperf -= cpu->prev_aperf;
+ cpu->sample.mperf -= cpu->prev_mperf;
+ cpu->sample.tsc -= cpu->prev_tsc;
 
- intel_pstate_calc_busy(cpu, &cpu->samples[cpu->sample_ptr]);
+ intel_pstate_calc_busy(cpu, &cpu->sample);
 
  cpu->prev_aperf = aperf;
  cpu->prev_mperf = mperf;
@@ -614,7 +612,7 @@ static inline int32_t intel_pstate_get_scaled_busy(struct cpudata *cpu)
 {
  int32_t core_busy, max_pstate, current_pstate;
 
- core_busy = cpu->samples[cpu->sample_ptr].core_pct_busy;
+ core_busy = cpu->sample.core_pct_busy;
  max_pstate = int_tofp(cpu->pstate.max_pstate);
  current_pstate = int_tofp(cpu->pstate.current_pstate);
  core_busy = mul_fp(core_busy, div_fp(max_pstate, current_pstate));
@@ -648,7 +646,7 @@ static void intel_pstate_timer_func(unsigned long __data)
 
  intel_pstate_sample(cpu);
 
- sample = &cpu->samples[cpu->sample_ptr];
+ sample = &cpu->sample;
 
  intel_pstate_adjust_busy_pstate(cpu);
 
@@ -732,7 +730,7 @@ static unsigned int intel_pstate_get(unsigned int cpu_num)
  cpu = all_cpu_data[cpu_num];
  if (!cpu)
   return 0;
- sample = &cpu->samples[cpu->sample_ptr];
+ sample = &cpu->sample;
  return sample->freq;
 }
 
-- 
1.7.1