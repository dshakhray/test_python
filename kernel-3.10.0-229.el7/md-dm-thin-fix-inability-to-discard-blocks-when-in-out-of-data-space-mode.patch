From 52b0ea1a2295bd9b91ab8b57eb9b35560196f321 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Thu, 11 Dec 2014 16:33:21 -0500
Subject: [md] dm-thin: fix inability to discard blocks when in out-of-data-space mode

Message-id: <1418315602-11579-1-git-send-email-snitzer@redhat.com>
Patchwork-id: 101669
O-Subject: [RHEL7.1 PATCH 1/2] dm thin: fix inability to discard blocks when in out-of-data-space mode
Bugzilla: 1173181
RH-Acked-by: Joe Thornber <thornber@redhat.com>
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

BZ: 1173181

Upstream linux-dm.git commit d22ed3f2928b17c6600598f24eba17f623fc4fca
Author: Joe Thornber <ejt@redhat.com>
Date:   Wed Dec 10 17:06:57 2014 +0000

    dm thin: fix inability to discard blocks when in out-of-data-space mode

    When the pool was in PM_OUT_OF_SPACE mode its process_prepared_discard
    function pointer was incorrectly being set to
    process_prepared_discard_passdown rather than process_prepared_discard.

    This incorrect function pointer meant the discard was being passed down,
    but not effecting the mapping.  As such any discard that was issued, in
    an attempt to reclaim blocks, would not successfully free data space.

    Reported-by: Eric Sandeen <sandeen@redhat.com>
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Cc: stable@vger.kernel.org

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/dm-thin.c b/drivers/md/dm-thin.c
index 06ceecf..246c128 100644
--- a/drivers/md/dm-thin.c
+++ b/drivers/md/dm-thin.c
@@ -2149,7 +2149,7 @@ static void set_pool_mode(struct pool *pool, enum pool_mode new_mode)
   pool->process_cell = process_cell_read_only;
   pool->process_discard_cell = process_discard_cell;
   pool->process_prepared_mapping = process_prepared_mapping;
-  pool->process_prepared_discard = process_prepared_discard_passdown;
+  pool->process_prepared_discard = process_prepared_discard;
 
   if (!pool->pf.error_if_no_space && no_space_timeout)
    queue_delayed_work(pool->wq, &pool->no_space_timeout, no_space_timeout);
-- 
1.7.1