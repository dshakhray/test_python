From 157fc9e9cf8b2279651d4ccbdfc1647751a2fb22 Mon Sep 17 00:00:00 2001
From: Oleg Nesterov <oleg@redhat.com>
Date: Mon, 16 Jun 2014 16:01:43 -0400
Subject: [kernel] uprobes: Emulate relative conditional "near" jmp's

Message-id: <20140616160143.GA15453@redhat.com>
Patchwork-id: 84096
O-Subject: [PATCH RHEL7 BZ 1073627 15/36] uprobes/x86: Emulate relative conditional "near" jmp's
Bugzilla: 1073627
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

RHBZ: 1073627

Change branch_setup_xol_ops() to simply use opc1 = OPCODE2(insn) - 0x10
if OPCODE1() == 0x0f; this matches the "short" jmp which checks the same
condition.

Thanks to lib/insn.c, it does the rest correctly. branch->ilen/offs are
correct no matter if this jmp is "near" or "short".

Reported-by: Jonathan Lebon <jlebon@redhat.com>
Signed-off-by: Oleg Nesterov <oleg@redhat.com>
Reviewed-by: Jim Keniston <jkenisto@us.ibm.com>
(cherry picked from commit 6cc5e7ff2c38641060f20786a5caf2815edbca5f)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kernel/uprobes.c b/arch/x86/kernel/uprobes.c
index 0460d04..ace2291 100644
--- a/arch/x86/kernel/uprobes.c
+++ b/arch/x86/kernel/uprobes.c
@@ -599,6 +599,14 @@ static int branch_setup_xol_ops(struct arch_uprobe *auprobe, struct insn *insn)
   branch_clear_offset(auprobe, insn);
   break;
 
+ case 0x0f:
+  if (insn->opcode.nbytes != 2)
+   return -ENOSYS;
+  /*
+   * If it is a "near" conditional jmp, OPCODE2() - 0x10 matches
+   * OPCODE1() of the "short" jmp which checks the same condition.
+   */
+  opc1 = OPCODE2(insn) - 0x10;
  default:
   if (!is_cond_jmp_opcode(opc1))
    return -ENOSYS;
-- 
1.7.1