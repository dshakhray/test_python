From 18328b94bb045ccb1a5b818df881f0f0b66a0f2c Mon Sep 17 00:00:00 2001
From: Rui Wang <ruwang@redhat.com>
Date: Fri, 22 Aug 2014 03:51:59 -0400
Subject: [trace] pci/aer: Fix severity usage in aer trace event

Message-id: <1408679528-32070-2-git-send-email-ruwang@redhat.com>
Patchwork-id: 88690
O-Subject: [PATCH RHEL7.1 BZ1085141 01/10] PCI, AER: Fix severity usage in aer trace event
Bugzilla: 1085141
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

From: "Chen, Gong" <gong.chen@linux.intel.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1085141

Backport of:
Original commit: 545104dd2ba0feb62544284ee1d6c98fe6ef8245
Original Author: Rui Wang <ruiv.wang@gmail.com>
Original Date: Sun, 8 Dec 2013 12:17:53 +0800

 There's inconsistency between dmesg and the trace event output.
 When dmesg says "severity=Corrected", the trace event says
 "severity=Fatal". What happens is that HW_EVENT_ERR_CORRECTED is
 defined in edac.h:

 enum hw_event_mc_err_type {
  HW_EVENT_ERR_CORRECTED,
  HW_EVENT_ERR_UNCORRECTED,
  HW_EVENT_ERR_FATAL,
  HW_EVENT_ERR_INFO,
 };

 while aer_print_error() uses aer_error_severity_string[] defined as:

 static const char *aer_error_severity_string[] = {
  "Uncorrected (Non-Fatal)",
  "Uncorrected (Fatal)",
  "Corrected"
 };

 In this case dmesg is correct because info->severity is assigned in
 aer_isr_one_error() using the definitions in include/linux/ras.h:

Signed-off-by: Chen, Gong <gong.chen@linux.intel.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/trace/events/ras.h b/include/trace/events/ras.h
index 88b8783..1c875ad 100644
--- a/include/trace/events/ras.h
+++ b/include/trace/events/ras.h
@@ -5,7 +5,7 @@
 #define _TRACE_AER_H
 
 #include <linux/tracepoint.h>
-#include <linux/edac.h>
+#include <linux/aer.h>
 
 
 /*
@@ -63,10 +63,10 @@ TRACE_EVENT(aer_event,
 
  TP_printk("%s PCIe Bus Error: severity=%s, %s\n",
   __get_str(dev_name),
-  __entry->severity == HW_EVENT_ERR_CORRECTED ? "Corrected" :
-   __entry->severity == HW_EVENT_ERR_FATAL ?
-   "Fatal" : "Uncorrected",
-  __entry->severity == HW_EVENT_ERR_CORRECTED ?
+  __entry->severity == AER_CORRECTABLE ? "Corrected" :
+   __entry->severity == AER_FATAL ?
+   "Fatal" : "Uncorrected, non-fatal",
+  __entry->severity == AER_CORRECTABLE ?
   __print_flags(__entry->status, "|", aer_correctable_errors) :
   __print_flags(__entry->status, "|", aer_uncorrectable_errors))
 );
-- 
1.7.1