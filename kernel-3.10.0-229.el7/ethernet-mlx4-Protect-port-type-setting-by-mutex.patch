From ef21de941218a26edcf435867ff8d54aae172b35 Mon Sep 17 00:00:00 2001
From: Amir Vadai <avadai@redhat.com>
Date: Thu, 6 Nov 2014 08:34:14 -0500
Subject: [ethernet] mlx4: Protect port type setting by mutex

Message-id: <fc69662d74fd0d8d75c2d14b4727776d81ff8a06.1415262817.git.avadai@redhat.com>
Patchwork-id: 99438
O-Subject: [Patch RHEL7.1] net/mlx4_core: Protect port type setting by mutex
Bugzilla: 1095345
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Doug Ledford <dledford@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>

From: Amir Vadai <amirv@mellanox.com>

We need to protect set_port_type() for concurrency, as the sysfs code could
call it from mutliple contexts in parallel.

The port_mutex is not enough because we need to protect from concurrent
modification of 'info' and stopping of the port sensing work.

Signed-off-by: Amir Vadai <amirv@mellanox.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0a98455666ec87378148a1dde97f1ce5baf75a64)

Bugzilla: 1095345
Brew: 8202630
Tested at Mellanox lab

Signed-off-by: Amir Vadai <avadai@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/mellanox/mlx4/main.c b/drivers/net/ethernet/mellanox/mlx4/main.c
index f736554..cb6a36e 100644
--- a/drivers/net/ethernet/mellanox/mlx4/main.c
+++ b/drivers/net/ethernet/mellanox/mlx4/main.c
@@ -844,9 +844,12 @@ static ssize_t set_port_type(struct device *dev,
  struct mlx4_priv *priv = mlx4_priv(mdev);
  enum mlx4_port_type types[MLX4_MAX_PORTS];
  enum mlx4_port_type new_types[MLX4_MAX_PORTS];
+ static DEFINE_MUTEX(set_port_type_mutex);
  int i;
  int err = 0;
 
+ mutex_lock(&set_port_type_mutex);
+
  if (!strcmp(buf, "ib\n"))
   info->tmp_type = MLX4_PORT_TYPE_IB;
  else if (!strcmp(buf, "eth\n"))
@@ -855,7 +858,8 @@ static ssize_t set_port_type(struct device *dev,
   info->tmp_type = MLX4_PORT_TYPE_AUTO;
  else {
   mlx4_err(mdev, "%s is not supported port type\n", buf);
-  return -EINVAL;
+  err = -EINVAL;
+  goto err_out;
  }
 
  mlx4_stop_sense(mdev);
@@ -901,6 +905,9 @@ static ssize_t set_port_type(struct device *dev,
 out:
  mlx4_start_sense(mdev);
  mutex_unlock(&priv->port_mutex);
+err_out:
+ mutex_unlock(&set_port_type_mutex);
+
  return err ? err : count;
 }
 
-- 
1.7.1