From ff3f5eba015c6527c98d2ec87a40e3ebe9ca1086 Mon Sep 17 00:00:00 2001
From: Florian Westphal <fwestpha@redhat.com>
Date: Sat, 14 Jun 2014 22:58:21 -0400
Subject: [net] Revert: introduce netif_skb_dev_features

Message-id: <1402786701-27071-7-git-send-email-fwestpha@redhat.com>
Patchwork-id: 83975
O-Subject: [PATCH 6/6] [RHEL7.1 net] Revert "net: core: introduce netif_skb_dev_features"
Bugzilla: 1109214
RH-Acked-by: Vlad Yasevich <vyasevic@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>

BZ: 1109214

[ generated via 'git revert 2594265aa' ]

commit c1e756bfcbcac838a86a23f3e4501b556a961e3c
Author: Florian Westphal <fw@strlen.de>
Date:   Mon May 5 15:00:44 2014 +0200

    Revert "net: core: introduce netif_skb_dev_features"

    This reverts commit d206940319c41df4299db75ed56142177bb2e5f6,
    there are no more callers.

    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/linux/netdevice.h b/include/linux/netdevice.h
index 8f16c2d..73eb8cd 100644
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -2905,12 +2905,7 @@ void netdev_change_features(struct net_device *dev);
 void netif_stacked_transfer_operstate(const struct net_device *rootdev,
      struct net_device *dev);
 
-netdev_features_t netif_skb_dev_features(struct sk_buff *skb,
-      const struct net_device *dev);
-static inline netdev_features_t netif_skb_features(struct sk_buff *skb)
-{
- return netif_skb_dev_features(skb, skb->dev);
-}
+netdev_features_t netif_skb_features(struct sk_buff *skb);
 
 static inline bool net_gso_ok(netdev_features_t features, int gso_type)
 {
diff --git a/net/core/dev.c b/net/core/dev.c
index 0cfb6a9..026897e 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -2373,7 +2373,7 @@ EXPORT_SYMBOL(netdev_rx_csum_fault);
  * 2. No high memory really exists on this machine.
  */
 
-static int illegal_highdma(const struct net_device *dev, struct sk_buff *skb)
+static int illegal_highdma(struct net_device *dev, struct sk_buff *skb)
 {
 #ifdef CONFIG_HIGHMEM
  int i;
@@ -2448,36 +2448,34 @@ static int dev_gso_segment(struct sk_buff *skb, netdev_features_t features)
 }
 
 static netdev_features_t harmonize_features(struct sk_buff *skb,
-         const struct net_device *dev,
-         netdev_features_t features)
+ netdev_features_t features)
 {
  if (skb->ip_summed != CHECKSUM_NONE &&
      !can_checksum_protocol(features, skb_network_protocol(skb))) {
   features &= ~NETIF_F_ALL_CSUM;
- } else if (illegal_highdma(dev, skb)) {
+ } else if (illegal_highdma(skb->dev, skb)) {
   features &= ~NETIF_F_SG;
  }
 
  return features;
 }
 
-netdev_features_t netif_skb_dev_features(struct sk_buff *skb,
-      const struct net_device *dev)
+netdev_features_t netif_skb_features(struct sk_buff *skb)
 {
  __be16 protocol = skb->protocol;
- netdev_features_t features = dev->features;
+ netdev_features_t features = skb->dev->features;
 
- if (skb_shinfo(skb)->gso_segs > dev->gso_max_segs)
+ if (skb_shinfo(skb)->gso_segs > skb->dev->gso_max_segs)
   features &= ~NETIF_F_GSO_MASK;
 
  if (protocol == htons(ETH_P_8021Q) || protocol == htons(ETH_P_8021AD)) {
   struct vlan_ethhdr *veh = (struct vlan_ethhdr *)skb->data;
   protocol = veh->h_vlan_encapsulated_proto;
  } else if (!vlan_tx_tag_present(skb)) {
-  return harmonize_features(skb, dev, features);
+  return harmonize_features(skb, features);
  }
 
- features &= (dev->vlan_features | NETIF_F_HW_VLAN_CTAG_TX |
+ features &= (skb->dev->vlan_features | NETIF_F_HW_VLAN_CTAG_TX |
             NETIF_F_HW_VLAN_STAG_TX);
 
  if (protocol == htons(ETH_P_8021Q) || protocol == htons(ETH_P_8021AD))
@@ -2485,9 +2483,9 @@ netdev_features_t netif_skb_dev_features(struct sk_buff *skb,
     NETIF_F_GEN_CSUM | NETIF_F_HW_VLAN_CTAG_TX |
     NETIF_F_HW_VLAN_STAG_TX;
 
- return harmonize_features(skb, dev, features);
+ return harmonize_features(skb, features);
 }
-EXPORT_SYMBOL(netif_skb_dev_features);
+EXPORT_SYMBOL(netif_skb_features);
 
 /*
  * Returns true if either:
-- 
1.7.1