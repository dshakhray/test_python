From 295a70d37440d3d8ba7076bc2767b814796f33fb Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 25 Aug 2014 07:52:33 -0400
Subject: [tools] perf/hists: Convert hist entry functions to use struct he_stat

Message-id: <1408953210-26343-266-git-send-email-jolsa@redhat.com>
Patchwork-id: 89034
O-Subject: [PATCH RHEL7.1 BZ1133083 265/322] perf hists: Convert hist entry functions to use struct he_stat
Bugzilla: 1133083
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1133083
https://bugzilla.redhat.com/show_bug.cgi?id=1133083

upstream
========
commit f39056f9c3275e648e2fb353561aeb377dd351f7
Author: Namhyung Kim <namhyung@kernel.org>
Date: Tue Jan 14 14:25:37 2014 +0900

description
===========
The hist_entry__add_cpumode_period() and hist_entry__decay() functions
are dealing with hist_entry's stat fields only.

Make them he_stat methods then.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/perf/util/hist.c b/tools/perf/util/hist.c
index 4ed3e88..e4e6249 100644
--- a/tools/perf/util/hist.c
+++ b/tools/perf/util/hist.c
@@ -181,21 +181,21 @@ void hists__output_recalc_col_len(struct hists *hists, int max_rows)
  }
 }
 
-static void hist_entry__add_cpumode_period(struct hist_entry *he,
-        unsigned int cpumode, u64 period)
+static void he_stat__add_cpumode_period(struct he_stat *he_stat,
+     unsigned int cpumode, u64 period)
 {
  switch (cpumode) {
  case PERF_RECORD_MISC_KERNEL:
-  he->stat.period_sys += period;
+  he_stat->period_sys += period;
   break;
  case PERF_RECORD_MISC_USER:
-  he->stat.period_us += period;
+  he_stat->period_us += period;
   break;
  case PERF_RECORD_MISC_GUEST_KERNEL:
-  he->stat.period_guest_sys += period;
+  he_stat->period_guest_sys += period;
   break;
  case PERF_RECORD_MISC_GUEST_USER:
-  he->stat.period_guest_us += period;
+  he_stat->period_guest_us += period;
   break;
  default:
   break;
@@ -222,10 +222,10 @@ static void he_stat__add_stat(struct he_stat *dest, struct he_stat *src)
  dest->weight  += src->weight;
 }
 
-static void hist_entry__decay(struct hist_entry *he)
+static void he_stat__decay(struct he_stat *he_stat)
 {
- he->stat.period = (he->stat.period * 7) / 8;
- he->stat.nr_events = (he->stat.nr_events * 7) / 8;
+ he_stat->period = (he_stat->period * 7) / 8;
+ he_stat->nr_events = (he_stat->nr_events * 7) / 8;
  /* XXX need decay for weight too? */
 }
 
@@ -236,7 +236,7 @@ static bool hists__decay_entry(struct hists *hists, struct hist_entry *he)
  if (prev_period == 0)
   return true;
 
- hist_entry__decay(he);
+ he_stat__decay(&he->stat);
 
  if (!he->filtered)
   hists->stats.total_period -= prev_period - he->stat.period;
@@ -402,7 +402,7 @@ static struct hist_entry *add_hist_entry(struct hists *hists,
  rb_link_node(&he->rb_node_in, parent, p);
  rb_insert_color(&he->rb_node_in, hists->entries_in);
 out:
- hist_entry__add_cpumode_period(he, al->cpumode, period);
+ he_stat__add_cpumode_period(&he->stat, al->cpumode, period);
  return he;
 }
 
-- 
1.7.1