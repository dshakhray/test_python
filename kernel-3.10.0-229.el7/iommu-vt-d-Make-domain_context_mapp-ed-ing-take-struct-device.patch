From 2bedbedc8e786c72c284395c89ce7318637d38c2 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 01:50:01 -0400
Subject: [iommu] vt-d: Make domain_context_mapp{ed, ing}() take struct device

Message-id: <20140905015001.31297.61774.stgit@gir.stowe>
Patchwork-id: 91335
O-Subject: [RHEL7.1 PATCH 42/65] iommu/vt-d: Make domain_context_mapp{ed, ing}() take struct device
Bugzilla: 1129880 1087643
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1087643
Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1129880
Upstream Status: e1f167f3fd69d794b570fc4d3159191568ff9b70

commit e1f167f3fd69d794b570fc4d3159191568ff9b70
Author: David Woodhouse <David.Woodhouse@intel.com>
Date:   Sun Mar 9 15:24:46 2014 -0700

    iommu/vt-d: Make domain_context_mapp{ed,ing}() take struct device

    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c
index cfc5eef..949aa29 100644
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@ -1840,24 +1840,25 @@ static int domain_context_mapping_one(struct dmar_domain *domain,
 }
 
 static int
-domain_context_mapping(struct dmar_domain *domain, struct pci_dev *pdev,
-   int translation)
+domain_context_mapping(struct dmar_domain *domain, struct device *dev,
+         int translation)
 {
  int ret;
- struct pci_dev *tmp, *parent;
+ struct pci_dev *pdev, *tmp, *parent;
  struct intel_iommu *iommu;
  u8 bus, devfn;
 
- iommu = device_to_iommu(&pdev->dev, &bus, &devfn);
+ iommu = device_to_iommu(dev, &bus, &devfn);
  if (!iommu)
   return -ENODEV;
 
  ret = domain_context_mapping_one(domain, iommu, bus, devfn,
       translation);
- if (ret)
+ if (ret || !dev_is_pci(dev))
   return ret;
 
  /* dependent device mapping */
+ pdev = to_pci_dev(dev);
  tmp = pci_find_upstream_pcie_bridge(pdev);
  if (!tmp)
   return 0;
@@ -1882,21 +1883,23 @@ domain_context_mapping(struct dmar_domain *domain, struct pci_dev *pdev,
         translation);
 }
 
-static int domain_context_mapped(struct pci_dev *pdev)
+static int domain_context_mapped(struct device *dev)
 {
  int ret;
- struct pci_dev *tmp, *parent;
+ struct pci_dev *pdev, *tmp, *parent;
  struct intel_iommu *iommu;
  u8 bus, devfn;
 
- iommu = device_to_iommu(&pdev->dev, &bus, &devfn);
+ iommu = device_to_iommu(dev, &bus, &devfn);
  if (!iommu)
   return -ENODEV;
 
  ret = device_context_mapped(iommu, bus, devfn);
- if (!ret)
+ if (!ret || !dev_is_pci(dev))
   return ret;
+
  /* dependent device mapping */
+ pdev = to_pci_dev(dev);
  tmp = pci_find_upstream_pcie_bridge(pdev);
  if (!tmp)
   return ret;
@@ -2361,7 +2364,7 @@ static int iommu_prepare_identity_map(struct pci_dev *pdev,
   goto error;
 
  /* context entry init */
- ret = domain_context_mapping(domain, pdev, CONTEXT_TT_MULTI_LEVEL);
+ ret = domain_context_mapping(domain, &pdev->dev, CONTEXT_TT_MULTI_LEVEL);
  if (ret)
   goto error;
 
@@ -2485,7 +2488,7 @@ static int domain_add_dev_info(struct dmar_domain *domain,
  if (ndomain != domain)
   return -EBUSY;
 
- ret = domain_context_mapping(domain, pdev, translation);
+ ret = domain_context_mapping(domain, &pdev->dev, translation);
  if (ret) {
   domain_remove_one_dev_info(domain, pdev);
   return ret;
@@ -2870,8 +2873,8 @@ static struct dmar_domain *__get_valid_domain_for_dev(struct pci_dev *pdev)
  }
 
  /* make sure context mapping is ok */
- if (unlikely(!domain_context_mapped(pdev))) {
-  ret = domain_context_mapping(domain, pdev,
+ if (unlikely(!domain_context_mapped(&pdev->dev))) {
+  ret = domain_context_mapping(domain, &pdev->dev,
           CONTEXT_TT_MULTI_LEVEL);
   if (ret) {
    printk(KERN_ERR
@@ -4159,7 +4162,7 @@ static int intel_iommu_attach_device(struct iommu_domain *domain,
  u8 bus, devfn;
 
  /* normally pdev is not mapped */
- if (unlikely(domain_context_mapped(pdev))) {
+ if (unlikely(domain_context_mapped(&pdev->dev))) {
   struct dmar_domain *old_domain;
 
   old_domain = find_domain(dev);
-- 
1.7.1