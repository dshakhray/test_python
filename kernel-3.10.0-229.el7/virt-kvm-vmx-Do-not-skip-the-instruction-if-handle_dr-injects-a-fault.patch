From 14127461bdee627ef4078bbdde7d95e002668351 Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:38:34 -0400
Subject: [virt] kvm/vmx: Do not skip the instruction if handle_dr injects a fault

Message-id: <1406040016-3289-120-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86198
O-Subject: [RHEL7 PATCH v2 119/221] KVM: VMX: Do not skip the instruction if handle_dr injects a fault
Bugzilla: 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jan Kiszka <jan.kiszka@siemens.com>

If kvm_get_dr or kvm_set_dr reports that it raised a fault, we must not
advance the instruction pointer. Otherwise the exception will hit the
wrong instruction.

Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 4c4d563b49830a66537c3f51070dad74d7a81d3a)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index fc37d77..4e467d9 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -5137,10 +5137,14 @@ static int handle_dr(struct kvm_vcpu *vcpu)
  reg = DEBUG_REG_ACCESS_REG(exit_qualification);
  if (exit_qualification & TYPE_MOV_FROM_DR) {
   unsigned long val;
-  if (!kvm_get_dr(vcpu, dr, &val))
-   kvm_register_write(vcpu, reg, val);
+
+  if (kvm_get_dr(vcpu, dr, &val))
+   return 1;
+  kvm_register_write(vcpu, reg, val);
  } else
-  kvm_set_dr(vcpu, dr, vcpu->arch.regs[reg]);
+  if (kvm_set_dr(vcpu, dr, vcpu->arch.regs[reg]))
+   return 1;
+
  skip_emulated_instruction(vcpu);
  return 1;
 }
-- 
1.7.1