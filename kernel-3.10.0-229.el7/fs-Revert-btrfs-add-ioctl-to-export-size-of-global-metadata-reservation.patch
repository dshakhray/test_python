From 559e2275567cd23271f07feaf03c197458d18e57 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:00:42 -0400
Subject: [fs] Revert: btrfs: add ioctl to export size of global metadata reservation

Message-id: <1407179109-13714-156-git-send-email-sandeen@redhat.com>
Patchwork-id: 87089
O-Subject: [RHEL7.1 PATCH 155/422] Revert "btrfs: add ioctl to export size of global metadata reservation"
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Chris Mason <clm@fb.com>

commit 11bcac89c0d73dea42f1cb8646b532035796a5d6
Author: Chris Mason <clm@fb.com>
Date:   Fri Feb 14 13:42:13 2014 -0800

    Revert "btrfs: add ioctl to export size of global metadata reservation"

    This reverts commit 01e219e8069516cdb98594d417b8bb8d906ed30d.

    David Sterba found a different way to provide these features without adding a new
    ioctl.  We haven't released any progs with this ioctl yet, so I'm taking this out
    for now until we finalize things.

    Signed-off-by: Chris Mason <clm@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.cz>
    CC: Jeff Mahoney <jeffm@suse.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/ioctl.c b/fs/btrfs/ioctl.c
index 383ab45..a6d8efa 100644
--- a/fs/btrfs/ioctl.c
+++ b/fs/btrfs/ioctl.c
@@ -3537,20 +3537,6 @@ out:
  return ret;
 }
 
-static long btrfs_ioctl_global_rsv(struct btrfs_root *root, void __user *arg)
-{
- struct btrfs_block_rsv *block_rsv = &root->fs_info->global_block_rsv;
- u64 reserved;
-
- spin_lock(&block_rsv->lock);
- reserved = block_rsv->reserved;
- spin_unlock(&block_rsv->lock);
-
- if (arg && copy_to_user(arg, &reserved, sizeof(reserved)))
-  return -EFAULT;
- return 0;
-}
-
 /*
  * there are many ways the trans_start and trans_end ioctls can lead
  * to deadlocks.  They should only be used by applications that
@@ -4757,8 +4743,6 @@ long btrfs_ioctl(struct file *file, unsigned int
   return btrfs_ioctl_logical_to_ino(root, argp);
  case BTRFS_IOC_SPACE_INFO:
   return btrfs_ioctl_space_info(root, argp);
- case BTRFS_IOC_GLOBAL_RSV:
-  return btrfs_ioctl_global_rsv(root, argp);
  case BTRFS_IOC_SYNC: {
   int ret;
 
diff --git a/include/uapi/linux/btrfs.h b/include/uapi/linux/btrfs.h
index 1b8a0f4..b4d6909 100644
--- a/include/uapi/linux/btrfs.h
+++ b/include/uapi/linux/btrfs.h
@@ -558,7 +558,6 @@ static inline char *btrfs_err_str(enum btrfs_err_code err_code)
 #define BTRFS_IOC_DEFAULT_SUBVOL _IOW(BTRFS_IOCTL_MAGIC, 19, __u64)
 #define BTRFS_IOC_SPACE_INFO _IOWR(BTRFS_IOCTL_MAGIC, 20, \
         struct btrfs_ioctl_space_args)
-#define BTRFS_IOC_GLOBAL_RSV _IOR(BTRFS_IOCTL_MAGIC, 20, __u64)
 #define BTRFS_IOC_START_SYNC _IOR(BTRFS_IOCTL_MAGIC, 24, __u64)
 #define BTRFS_IOC_WAIT_SYNC  _IOW(BTRFS_IOCTL_MAGIC, 22, __u64)
 #define BTRFS_IOC_SNAP_CREATE_V2 _IOW(BTRFS_IOCTL_MAGIC, 23, \
-- 
1.7.1