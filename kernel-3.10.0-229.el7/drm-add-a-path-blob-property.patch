From d68bb91eca0c259ae3daf2b3d4a9b219c6a565ea Mon Sep 17 00:00:00 2001
From: Dave Airlie <airlied@redhat.com>
Date: Fri, 12 Sep 2014 01:56:43 -0400
Subject: [drm] add a path blob property

Message-id: <1410487019-24661-6-git-send-email-airlied@redhat.com>
Patchwork-id: 93917
O-Subject: [RHEL7.1 BZ1140440 PATCH 05/21] drm: add a path blob property
Bugzilla: 1140440
RH-Acked-by: Jerome Glisse <jglisse@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Rob Clark <rclark@redhat.com>

bugzilla: 1140440
upstream: 43aba7eb0dc052d84e88f3569ea3f030868d49b2

This property will be used by the MST code to provide userspace
with a path to parse so it can recognise connectors around hotplugs.

Signed-off-by: Dave Airlie <airlied@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/gpu/drm/drm_crtc.c b/drivers/gpu/drm/drm_crtc.c
index f3fe38d..e41e43f 100644
--- a/drivers/gpu/drm/drm_crtc.c
+++ b/drivers/gpu/drm/drm_crtc.c
@@ -1214,6 +1214,7 @@ static int drm_mode_create_standard_connector_properties(struct drm_device *dev)
 {
  struct drm_property *edid;
  struct drm_property *dpms;
+ struct drm_property *dev_path;
 
  /*
   * Standard properties (apply to all connectors)
@@ -1228,6 +1229,12 @@ static int drm_mode_create_standard_connector_properties(struct drm_device *dev)
        ARRAY_SIZE(drm_dpms_enum_list));
  dev->mode_config.dpms_property = dpms;
 
+ dev_path = drm_property_create(dev,
+           DRM_MODE_PROP_BLOB |
+           DRM_MODE_PROP_IMMUTABLE,
+           "PATH", 0);
+ dev->mode_config.path_property = dev_path;
+
  return 0;
 }
 
@@ -3712,6 +3719,25 @@ done:
  return ret;
 }
 
+int drm_mode_connector_set_path_property(struct drm_connector *connector,
+      char *path)
+{
+ struct drm_device *dev = connector->dev;
+ int ret, size;
+ size = strlen(path) + 1;
+
+ connector->path_blob_ptr = drm_property_create_blob(connector->dev,
+           size, path);
+ if (!connector->path_blob_ptr)
+  return -EINVAL;
+
+ ret = drm_object_property_set_value(&connector->base,
+         dev->mode_config.path_property,
+         connector->path_blob_ptr->base.id);
+ return ret;
+}
+EXPORT_SYMBOL(drm_mode_connector_set_path_property);
+
 /**
  * drm_mode_connector_update_edid_property - update the edid property of a connector
  * @connector: drm connector
diff --git a/include/drm/drm_crtc.h b/include/drm/drm_crtc.h
index 35346d2..474b37a 100644
--- a/include/drm/drm_crtc.h
+++ b/include/drm/drm_crtc.h
@@ -524,6 +524,8 @@ struct drm_connector {
  struct drm_property_blob *edid_blob_ptr;
  struct drm_object_properties properties;
 
+ struct drm_property_blob *path_blob_ptr;
+
  uint8_t polled; /* DRM_CONNECTOR_POLL_* */
 
  /* requested DPMS state */
@@ -801,6 +803,7 @@ struct drm_mode_config {
  struct drm_property *edid_property;
  struct drm_property *dpms_property;
  struct drm_property *plane_type_property;
+ struct drm_property *path_property;
 
  /* DVI-I properties */
  struct drm_property *dvi_i_subconnector_property;
@@ -947,6 +950,8 @@ extern void drm_mode_config_init(struct drm_device *dev);
 extern void drm_mode_config_reset(struct drm_device *dev);
 extern void drm_mode_config_cleanup(struct drm_device *dev);
 
+extern int drm_mode_connector_set_path_property(struct drm_connector *connector,
+      char *path);
 extern int drm_mode_connector_update_edid_property(struct drm_connector *connector,
       struct edid *edid);
 
-- 
1.7.1