From 7b0e9cb5f5c4d4a4a182212c359ee758334d451f Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:02:51 -0400
Subject: [fs] btrfs: fix unlock in __start_delalloc_inodes()

Message-id: <1407179109-13714-285-git-send-email-sandeen@redhat.com>
Patchwork-id: 87170
O-Subject: [RHEL7.1 PATCH 284/422] Btrfs: fix unlock in __start_delalloc_inodes()
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Wang Shilong <wangsl.fnst@cn.fujitsu.com>

commit a1ecaabbf90cf4e93eb2b50aef3d07ab630c6fb1
Author: Wang Shilong <wangsl.fnst@cn.fujitsu.com>
Date:   Wed Apr 2 19:53:32 2014 +0800

    Btrfs: fix unlock in __start_delalloc_inodes()

    This patch fix a regression caused by the following patch:
    Btrfs: don't flush all delalloc inodes when we doesn't get s_umount lock

    break while loop will make us call @spin_unlock() without
    calling @spin_lock() before, fix it.

    Signed-off-by: Wang Shilong <wangsl.fnst@cn.fujitsu.com>
    Reviewed-by: David Sterba <dsterba@suse.cz>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/inode.c b/fs/btrfs/inode.c
index 3ff5075..12d6f94 100644
--- a/fs/btrfs/inode.c
+++ b/fs/btrfs/inode.c
@@ -8515,19 +8515,20 @@ static int __start_delalloc_inodes(struct btrfs_root *root, int delay_iput,
    else
     iput(inode);
    ret = -ENOMEM;
-   break;
+   goto out;
   }
   list_add_tail(&work->list, &works);
   btrfs_queue_work(root->fs_info->flush_workers,
      &work->work);
   ret++;
   if (nr != -1 && ret >= nr)
-   break;
+   goto out;
   cond_resched();
   spin_lock(&root->delalloc_lock);
  }
  spin_unlock(&root->delalloc_lock);
 
+out:
  list_for_each_entry_safe(work, next, &works, list) {
   list_del_init(&work->list);
   btrfs_wait_and_free_delalloc_work(work);
-- 
1.7.1