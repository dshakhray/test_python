From 50502ec6aa08e71f8d35fcdfcfaff4ce2e88b47f Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Mon, 23 Jun 2014 21:49:43 -0400
Subject: [fs] nfsd: decrease nfsd4_encode_fattr stack usage

Message-id: <1403560314-32525-42-git-send-email-bfields@redhat.com>
Patchwork-id: 84473
O-Subject: [Patch RHEL7 041/172] nfsd4: decrease nfsd4_encode_fattr stack usage
Bugzilla: 1111719
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

A struct svc_fh is 320 bytes on x86_64, it'd be better not to have these
on the stack.

kmalloc'ing them probably isn't ideal either, but this is the simplest
thing to do.  If it turns out to be a problem in the readdir case then
we could add a svc_fh to nfsd4_readdir and pass that in.

Acked-by: Jeff Layton <jlayton@redhat.com>
Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: d50e61361c68a05a9cd7d54617522f99f278ac8a
Bugzilla: 1111719
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4xdr.c b/fs/nfsd/nfs4xdr.c
index 8198ecf..63f2395 100644
--- a/fs/nfsd/nfs4xdr.c
+++ b/fs/nfsd/nfs4xdr.c
@@ -2058,7 +2058,7 @@ nfsd4_encode_fattr(struct svc_fh *fhp, struct svc_export *exp,
  u32 bmval1 = bmval[1];
  u32 bmval2 = bmval[2];
  struct kstat stat;
- struct svc_fh tempfh;
+ struct svc_fh *tempfh = NULL;
  struct kstatfs statfs;
  int buflen = count << 2;
  __be32 *attrlenp;
@@ -2105,11 +2105,15 @@ nfsd4_encode_fattr(struct svc_fh *fhp, struct svc_export *exp,
    goto out_nfserr;
  }
  if ((bmval0 & (FATTR4_WORD0_FILEHANDLE | FATTR4_WORD0_FSID)) && !fhp) {
-  fh_init(&tempfh, NFS4_FHSIZE);
-  status = fh_compose(&tempfh, exp, dentry, NULL);
+  tempfh = kmalloc(sizeof(struct svc_fh), GFP_KERNEL);
+  status = nfserr_jukebox;
+  if (!tempfh)
+   goto out;
+  fh_init(tempfh, NFS4_FHSIZE);
+  status = fh_compose(tempfh, exp, dentry, NULL);
   if (status)
    goto out;
-  fhp = &tempfh;
+  fhp = tempfh;
  }
  if (bmval0 & (FATTR4_WORD0_ACL | FATTR4_WORD0_ACLSUPPORT
    | FATTR4_WORD0_SUPPORTED_ATTRS)) {
@@ -2495,8 +2499,8 @@ out:
   security_release_secctx(context, contextlen);
 #endif /* CONFIG_NFSD_V4_SECURITY_LABEL */
  kfree(acl);
- if (fhp == &tempfh)
-  fh_put(&tempfh);
+ if (tempfh)
+  fh_put(tempfh);
  return status;
 out_nfserr:
  status = nfserrno(err);
-- 
1.7.1