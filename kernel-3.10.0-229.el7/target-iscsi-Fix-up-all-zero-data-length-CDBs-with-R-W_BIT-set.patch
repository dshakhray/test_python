From cab6164596cfb13bd0be88323c3084480ab74905 Mon Sep 17 00:00:00 2001
From: Andy Grover <agrover@redhat.com>
Date: Fri, 5 Sep 2014 16:36:05 -0400
Subject: [target] iscsi: Fix-up all zero data-length CDBs with R/W_BIT set

Message-id: <1409934989-29941-8-git-send-email-agrover@redhat.com>
Patchwork-id: 91469
O-Subject: [RHEL7.1 PATCH e-stor 07/31] iscsi-target: Fix-up all zero data-length CDBs with R/W_BIT set
Bugzilla: 1129387
RH-Acked-by: Chris Leech <cleech@redhat.com>
RH-Acked-by: Rob Evers <revers@redhat.com>

From: Nicholas Bellinger <nab@linux-iscsi.org>

commit 4454b66cb67f14c33cd70ddcf0ff4985b26324b7 upstream.

This patch changes special case handling for ISCSI_OP_SCSI_CMD
where an initiator sends a zero length Expected Data Transfer
Length (EDTL), but still sets the WRITE and/or READ flag bits
when no payload transfer is requested.

Many, many moons ago two special cases where added for an ancient
version of ESX that has long since been fixed, so instead of adding
a new special case for the reported bug with a Broadcom 57800 NIC,
go ahead and always strip off the incorrect WRITE + READ flag bits.

Also, avoid sending a reject here, as RFC-3720 does mandate this
case be handled without protocol error.

Reported-by: Witold Bazakbal <865perl@wp.pl>
Tested-by: Witold Bazakbal <865perl@wp.pl>
Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/target/iscsi/iscsi_target.c b/drivers/target/iscsi/iscsi_target.c
index 7df3a16..96b52b4 100644
--- a/drivers/target/iscsi/iscsi_target.c
+++ b/drivers/target/iscsi/iscsi_target.c
@@ -847,24 +847,22 @@ int iscsit_setup_scsi_cmd(struct iscsi_conn *conn, struct iscsi_cmd *cmd,
  if (((hdr->flags & ISCSI_FLAG_CMD_READ) ||
       (hdr->flags & ISCSI_FLAG_CMD_WRITE)) && !hdr->data_length) {
   /*
-   * Vmware ESX v3.0 uses a modified Cisco Initiator (v3.4.2)
-   * that adds support for RESERVE/RELEASE.  There is a bug
-   * add with this new functionality that sets R/W bits when
-   * neither CDB carries any READ or WRITE datapayloads.
+   * From RFC-3720 Section 10.3.1:
+   *
+   * "Either or both of R and W MAY be 1 when either the
+   *  Expected Data Transfer Length and/or Bidirectional Read
+   *  Expected Data Transfer Length are 0"
+   *
+   * For this case, go ahead and clear the unnecssary bits
+   * to avoid any confusion with ->data_direction.
    */
-  if ((hdr->cdb[0] == 0x16) || (hdr->cdb[0] == 0x17)) {
-   hdr->flags &= ~ISCSI_FLAG_CMD_READ;
-   hdr->flags &= ~ISCSI_FLAG_CMD_WRITE;
-   goto done;
-  }
+  hdr->flags &= ~ISCSI_FLAG_CMD_READ;
+  hdr->flags &= ~ISCSI_FLAG_CMD_WRITE;
 
-  pr_err("ISCSI_FLAG_CMD_READ or ISCSI_FLAG_CMD_WRITE"
+  pr_warn("ISCSI_FLAG_CMD_READ or ISCSI_FLAG_CMD_WRITE"
    " set when Expected Data Transfer Length is 0 for"
-   " CDB: 0x%02x. Bad iSCSI Initiator.\n", hdr->cdb[0]);
-  return iscsit_add_reject_cmd(cmd,
-          ISCSI_REASON_BOOKMARK_INVALID, buf);
+   " CDB: 0x%02x, Fixing up flags\n", hdr->cdb[0]);
  }
-done:
 
  if (!(hdr->flags & ISCSI_FLAG_CMD_READ) &&
      !(hdr->flags & ISCSI_FLAG_CMD_WRITE) && (hdr->data_length != 0)) {
-- 
1.7.1