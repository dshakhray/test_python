From 19a965cfac533561a2847ffe4a29555a0267fbc8 Mon Sep 17 00:00:00 2001
From: Marcelo Leitner <mleitner@redhat.com>
Date: Tue, 21 Oct 2014 16:19:08 -0400
Subject: [net] netfilter: nft_log: request explicit logger when loading rules

Message-id: <20141021161908.22888.20000.stgit@localhost.localdomain>
Patchwork-id: 97972
O-Subject: [RHEL7 net PATCH 075/124] netfilter: nft_log: request explicit logger when loading rules
Bugzilla: 1148041 1155088
RH-Acked-by: Florian Westphal <fwestpha@redhat.com>

Backport of upstream commit: 85d30e24166e86686aa2d805e2ef1fa8d770852c

 commit 85d30e24166e86686aa2d805e2ef1fa8d770852c
 Author: Pablo Neira Ayuso <pablo@netfilter.org>
 Date:   Wed Jun 25 13:29:15 2014 +0200

    netfilter: nft_log: request explicit logger when loading rules

    This includes the special handling for NFPROTO_INET. There is
    no real inet logger since we don't see packets of this family.
    However, rules are loaded using this special family type. So
    let's just request both IPV4 and IPV6 loggers.

    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

Signed-off-by: Marcelo Ricardo Leitner <mleitner@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/netfilter/nft_log.c b/net/netfilter/nft_log.c
index 10cfb15..55d4297 100644
--- a/net/netfilter/nft_log.c
+++ b/net/netfilter/nft_log.c
@@ -50,6 +50,7 @@ static int nft_log_init(const struct nft_ctx *ctx,
  struct nft_log *priv = nft_expr_priv(expr);
  struct nf_loginfo *li = &priv->loginfo;
  const struct nlattr *nla;
+ int ret;
 
  nla = tb[NFTA_LOG_PREFIX];
  if (nla != NULL) {
@@ -71,16 +72,37 @@ static int nft_log_init(const struct nft_ctx *ctx,
    ntohs(nla_get_be16(tb[NFTA_LOG_QTHRESHOLD]));
  }
 
- return 0;
+ if (ctx->afi->family == NFPROTO_INET) {
+  ret = nf_logger_find_get(NFPROTO_IPV4, li->type);
+  if (ret < 0)
+   return ret;
+
+  ret = nf_logger_find_get(NFPROTO_IPV6, li->type);
+  if (ret < 0) {
+   nf_logger_put(NFPROTO_IPV4, li->type);
+   return ret;
+  }
+  return 0;
+ }
+
+ return nf_logger_find_get(ctx->afi->family, li->type);
 }
 
 static void nft_log_destroy(const struct nft_ctx *ctx,
        const struct nft_expr *expr)
 {
  struct nft_log *priv = nft_expr_priv(expr);
+ struct nf_loginfo *li = &priv->loginfo;
 
  if (priv->prefix != nft_log_null_prefix)
   kfree(priv->prefix);
+
+ if (ctx->afi->family == NFPROTO_INET) {
+  nf_logger_put(NFPROTO_IPV4, li->type);
+  nf_logger_put(NFPROTO_IPV6, li->type);
+ } else {
+  nf_logger_put(ctx->afi->family, li->type);
+ }
 }
 
 static int nft_log_dump(struct sk_buff *skb, const struct nft_expr *expr)
-- 
1.7.1