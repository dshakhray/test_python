From 5b49764cdedf10786d37b58419d8057bf36d797c Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:11:18 -0400
Subject: [powerpc] powernv: Use ssize_t for sysparam return values

Message-id: <1410545655-205645-450-git-send-email-dzickus@redhat.com>
Patchwork-id: 94537
O-Subject: [RHEL7 PATCH 449/626] powerpc/powernv: Use ssize_t for sysparam return values
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit b8569d230416c490065098684adf13c1751cb830
Author: Joel Stanley <joel@jms.id.au>
Date:   Thu Apr 24 16:55:34 2014 +0930

    powerpc/powernv: Use ssize_t for sysparam return values

    The OPAL calls are returning int64_t values, which the sysparam code
    stores in an int, and the sysfs callback returns ssize_t. Make code a
    easier to read by consistently using ssize_t.

    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/platforms/powernv/opal-sysparam.c b/arch/powerpc/platforms/powernv/opal-sysparam.c
index a51ea18..0675e1a 100644
--- a/arch/powerpc/platforms/powernv/opal-sysparam.c
+++ b/arch/powerpc/platforms/powernv/opal-sysparam.c
@@ -39,10 +39,11 @@ struct param_attr {
  struct kobj_attribute kobj_attr;
 };
 
-static int opal_get_sys_param(u32 param_id, u32 length, void *buffer)
+static ssize_t opal_get_sys_param(u32 param_id, u32 length, void *buffer)
 {
  struct opal_msg msg;
- int ret, token;
+ ssize_t ret;
+ int token;
 
  token = opal_async_get_token_interruptible();
  if (token < 0) {
@@ -59,7 +60,7 @@ static int opal_get_sys_param(u32 param_id, u32 length, void *buffer)
 
  ret = opal_async_wait_response(token, &msg);
  if (ret) {
-  pr_err("%s: Failed to wait for the async response, %d\n",
+  pr_err("%s: Failed to wait for the async response, %zd\n",
     __func__, ret);
   goto out_token;
  }
@@ -111,7 +112,7 @@ static ssize_t sys_param_show(struct kobject *kobj,
 {
  struct param_attr *attr = container_of(kobj_attr, struct param_attr,
    kobj_attr);
- int ret;
+ ssize_t ret;
 
  mutex_lock(&opal_sysparam_mutex);
  ret = opal_get_sys_param(attr->param_id, attr->param_size,
@@ -132,7 +133,7 @@ static ssize_t sys_param_store(struct kobject *kobj,
 {
  struct param_attr *attr = container_of(kobj_attr, struct param_attr,
    kobj_attr);
- int ret;
+ ssize_t ret;
 
  mutex_lock(&opal_sysparam_mutex);
  memcpy(param_data_buf, buf, count);
-- 
1.7.1