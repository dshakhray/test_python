From ae15f508f93a355ddf482c3073934cbd07be2154 Mon Sep 17 00:00:00 2001
From: Steve Dickson <SteveD@redhat.com>
Date: Tue, 2 Dec 2014 18:21:52 -0500
Subject: [fs] NFSv4: Ensure that we call FREE_STATEID when NFSv4.x stateids are revoked

Message-id: <1417544515-7381-3-git-send-email-steved@redhat.com>
Patchwork-id: 101082
O-Subject: [RHEL7.1 PATCH 2/5] NFSv4: Ensure that we call FREE_STATEID when NFSv4.x stateids are revoked
Bugzilla: 1166845
RH-Acked-by: Benjamin Coddington <bcodding@redhat.com>
RH-Acked-by: J. Bruce Fields <bfields@redhat.com>

From: Trond Myklebust <trond.myklebust@primarydata.com>

NFSv4.x (x>0) requires us to call TEST_STATEID+FREE_STATEID if a stateid is
revoked. We will currently fail to do this if the stateid is a delegation.

http://lkml.kernel.org/r/CAN-5tyHwG=Cn2Q9KsHWadewjpTTy_K26ee+UnSvHvG4192p-Xw@mail.gmail.com
Cc: stable@vger.kernel.org
Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
Upstream Id: c606bb8857921d3ecf4d353942d6cc7e116cc75a
Bugzilla: 1166845
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfs/filelayout/filelayout.c b/fs/nfs/filelayout/filelayout.c
index 9097807..d18b18b 100644
--- a/fs/nfs/filelayout/filelayout.c
+++ b/fs/nfs/filelayout/filelayout.c
@@ -145,9 +145,6 @@ static int filelayout_async_handle_error(struct rpc_task *task,
  case -NFS4ERR_DELEG_REVOKED:
  case -NFS4ERR_ADMIN_REVOKED:
  case -NFS4ERR_BAD_STATEID:
-  if (state == NULL)
-   break;
-  nfs_remove_bad_delegation(state->inode);
  case -NFS4ERR_OPENMODE:
   if (state == NULL)
    break;
diff --git a/fs/nfs/nfs4proc.c b/fs/nfs/nfs4proc.c
index fdb6d78..25ab2b6 100644
--- a/fs/nfs/nfs4proc.c
+++ b/fs/nfs/nfs4proc.c
@@ -360,11 +360,6 @@ static int nfs4_handle_exception(struct nfs_server *server, int errorcode, struc
   case -NFS4ERR_DELEG_REVOKED:
   case -NFS4ERR_ADMIN_REVOKED:
   case -NFS4ERR_BAD_STATEID:
-   if (inode != NULL && nfs4_have_delegation(inode, FMODE_READ)) {
-    nfs_remove_bad_delegation(inode);
-    exception->retry = 1;
-    break;
-   }
    if (state == NULL)
     break;
    ret = nfs4_schedule_stateid_recovery(server, state);
@@ -4849,9 +4844,6 @@ nfs4_async_handle_error(struct rpc_task *task, const struct nfs_server *server,
   case -NFS4ERR_DELEG_REVOKED:
   case -NFS4ERR_ADMIN_REVOKED:
   case -NFS4ERR_BAD_STATEID:
-   if (state == NULL)
-    break;
-   nfs_remove_bad_delegation(state->inode);
   case -NFS4ERR_OPENMODE:
    if (state == NULL)
     break;
-- 
1.7.1