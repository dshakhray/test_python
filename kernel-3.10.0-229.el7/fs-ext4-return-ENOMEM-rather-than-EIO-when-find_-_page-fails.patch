From f6a230696f7d0287f6d1dfa4acde65fa0c434fa6 Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 23 Oct 2014 09:55:01 -0400
Subject: [fs] ext4: return ENOMEM rather than EIO when find_###_page() fails

Message-id: <1414058125-4183-148-git-send-email-lczerner@redhat.com>
Patchwork-id: 98244
O-Subject: [RHEL 7.1 PATCH v2 147/171] ext4: return ENOMEM rather than EIO when find_###_page() fails
Bugzilla: 1150139
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Younger Liu <younger.liucn@gmail.com>

BZ 1150139
https://bugzilla.redhat.com/show_bug.cgi?id=1150139

BREW 8142710
https://brewweb.devel.redhat.com/taskinfo?taskID=8142710

Upstream commit c57ab39b9658315a742b6e61fdc86bb4d20cf566

 Return ENOMEM rather than EIO when find_get_page() fails in
 ext4_mb_get_buddy_page_lock() and find_or_create_page() fails in
 ext4_mb_load_buddy().

 Signed-off-by: Younger Liu <younger.liucn@gmail.com>
 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/mballoc.c b/fs/ext4/mballoc.c
index a888cac..73ccbb3 100644
--- a/fs/ext4/mballoc.c
+++ b/fs/ext4/mballoc.c
@@ -989,7 +989,7 @@ static int ext4_mb_get_buddy_page_lock(struct super_block *sb,
  poff = block % blocks_per_page;
  page = find_or_create_page(inode->i_mapping, pnum, GFP_NOFS);
  if (!page)
-  return -EIO;
+  return -ENOMEM;
  BUG_ON(page->mapping != inode->i_mapping);
  e4b->bd_bitmap_page = page;
  e4b->bd_bitmap = page_address(page) + (poff * sb->s_blocksize);
@@ -1003,7 +1003,7 @@ static int ext4_mb_get_buddy_page_lock(struct super_block *sb,
  pnum = block / blocks_per_page;
  page = find_or_create_page(inode->i_mapping, pnum, GFP_NOFS);
  if (!page)
-  return -EIO;
+  return -ENOMEM;
  BUG_ON(page->mapping != inode->i_mapping);
  e4b->bd_buddy_page = page;
  return 0;
@@ -1168,7 +1168,11 @@ ext4_mb_load_buddy(struct super_block *sb, ext4_group_t group,
    unlock_page(page);
   }
  }
- if (page == NULL || !PageUptodate(page)) {
+ if (page == NULL) {
+  ret = -ENOMEM;
+  goto err;
+ }
+ if (!PageUptodate(page)) {
   ret = -EIO;
   goto err;
  }
@@ -1197,7 +1201,11 @@ ext4_mb_load_buddy(struct super_block *sb, ext4_group_t group,
    unlock_page(page);
   }
  }
- if (page == NULL || !PageUptodate(page)) {
+ if (page == NULL) {
+  ret = -ENOMEM;
+  goto err;
+ }
+ if (!PageUptodate(page)) {
   ret = -EIO;
   goto err;
  }
-- 
1.7.1