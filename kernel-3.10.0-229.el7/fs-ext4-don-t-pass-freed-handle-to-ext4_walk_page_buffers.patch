From f1cea69ed4bb73cf249916cb7477276da796d710 Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 23 Oct 2014 09:54:13 -0400
Subject: [fs] ext4: don't pass freed handle to ext4_walk_page_buffers

Message-id: <1414058125-4183-100-git-send-email-lczerner@redhat.com>
Patchwork-id: 98165
O-Subject: [RHEL 7.1 PATCH v2 099/171] ext4: don't pass freed handle to ext4_walk_page_buffers
Bugzilla: 1150139
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Theodore Ts'o <tytso@mit.edu>

BZ 1150139
https://bugzilla.redhat.com/show_bug.cgi?id=1150139

BREW 8142710
https://brewweb.devel.redhat.com/taskinfo?taskID=8142710

Upstream commit 8c9367fd9bf252b57c6d4f8e1a7f9de809d8b862

 This is harmless, since ext4_walk_page_buffers only passes the handle
 onto the callback function, and in this call site the function in
 question, bput_one(), doesn't actually use the handle.  But there's no
 point passing in an invalid handle, and it creates a Coverity warning,
 so let's just clean it up.

 Addresses-Coverity-Id: #1091168

 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/inode.c b/fs/ext4/inode.c
index 9e43d56..53a0874 100644
--- a/fs/ext4/inode.c
+++ b/fs/ext4/inode.c
@@ -1769,7 +1769,7 @@ static int __ext4_journalled_writepage(struct page *page,
   ret = err;
 
  if (!ext4_has_inline_data(inode))
-  ext4_walk_page_buffers(handle, page_bufs, 0, len,
+  ext4_walk_page_buffers(NULL, page_bufs, 0, len,
            NULL, bput_one);
  ext4_set_inode_state(inode, EXT4_STATE_JDATA);
 out:
-- 
1.7.1