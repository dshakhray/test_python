From 11317773edf58b0998c00850bb1569206831db0d Mon Sep 17 00:00:00 2001
From: Motohiro Kosaki <mkosaki@redhat.com>
Date: Wed, 10 Sep 2014 16:15:56 -0400
Subject: [x86] srat: Print Hot-Pluggable Field in SRAT

Message-id: <1410365775-5132-2-git-send-email-mkosaki@redhat.com>
Patchwork-id: 93486
O-Subject: [RHEL7 PATCH 01/20] ACPI / x86: Print Hot-Pluggable Field in SRAT.
Bugzilla: 810042
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Larry Woodman <lwoodman@redhat.com>
RH-Acked-by: Rik van Riel <riel@redhat.com>

From: KOSAKI Motohiro <mkosaki@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=810042
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7914549
target RHEL version: 7.1
upstream status: merged
changes from upstream: none

commit d7b2c3d8fb6f53a370696572ef3578a7f8723147
Author: Tang Chen <tangchen@cn.fujitsu.com>
Date:   Wed Aug 14 17:37:06 2013 +0800

    ACPI / x86: Print Hot-Pluggable Field in SRAT.

    The Hot-Pluggable field in SRAT suggests if the memory could be
    hotplugged while the system is running. Print it as well when
    parsing SRAT will help users to know which memory is hotpluggable.

    Signed-off-by: Tang Chen <tangchen@cn.fujitsu.com>
    Reviewed-by: Wanpeng Li <liwanp@linux.vnet.ibm.com>
    Reviewed-by: Zhang Yanfei <zhangyanfei@cn.fujitsu.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Signed-off-by: KOSAKI Motohiro <mkosaki@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/mm/srat.c b/arch/x86/mm/srat.c
index 7bc5342..5ecf651 100644
--- a/arch/x86/mm/srat.c
+++ b/arch/x86/mm/srat.c
@@ -156,6 +156,7 @@ int __init
 acpi_numa_memory_affinity_init(struct acpi_srat_mem_affinity *ma)
 {
  u64 start, end;
+ u32 hotpluggable;
  int node, pxm;
 
  if (srat_disabled())
@@ -164,7 +165,8 @@ acpi_numa_memory_affinity_init(struct acpi_srat_mem_affinity *ma)
   goto out_err_bad_srat;
  if ((ma->flags & ACPI_SRAT_MEM_ENABLED) == 0)
   goto out_err;
- if ((ma->flags & ACPI_SRAT_MEM_HOT_PLUGGABLE) && !save_add_info())
+ hotpluggable = ma->flags & ACPI_SRAT_MEM_HOT_PLUGGABLE;
+ if (hotpluggable && !save_add_info())
   goto out_err;
 
  start = ma->base_address;
@@ -184,9 +186,10 @@ acpi_numa_memory_affinity_init(struct acpi_srat_mem_affinity *ma)
 
  node_set(node, numa_nodes_parsed);
 
- printk(KERN_INFO "SRAT: Node %u PXM %u [mem %#010Lx-%#010Lx]\n",
-        node, pxm,
-        (unsigned long long) start, (unsigned long long) end - 1);
+ pr_info("SRAT: Node %u PXM %u [mem %#010Lx-%#010Lx]%s\n",
+  node, pxm,
+  (unsigned long long) start, (unsigned long long) end - 1,
+  hotpluggable ? " hotplug" : "");
 
  return 0;
 out_err_bad_srat:
-- 
1.7.1