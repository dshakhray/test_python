From 300169cf2fc4accc2b6cf27d28a742efa2a24212 Mon Sep 17 00:00:00 2001
From: Stefan Assmann <sassmann@redhat.com>
Date: Tue, 2 Sep 2014 11:39:14 -0400
Subject: [ethernet] i40e/i40evf: modify debug prints to avoid seg faults

Message-id: <1409658042-22689-194-git-send-email-sassmann@redhat.com>
Patchwork-id: 90387
O-Subject: [RHEL7.1 PATCH 193/281] i40e/i40evf: modify debug prints to avoid seg faults
Bugzilla: 1091126
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Kamil Krawczyk <kamil.krawczyk@intel.com>

Some AQ debug prints needs be moved around or do additional checks so they
will not cause our tool applications to cause segmentation faults.
The tools run in user space and we need to correctly reference kernel
space memory.

Change-ID: Ia2ac4076f576b805f350453fd50ad69c2a91ab9a
Signed-off-by: Kamil Krawczyk <kamil.krawczyk@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: Stefan Assmann <sassmann@redhat.com>
(cherry picked from commit 66d90e7d1654f3ed2e66d90f82dbc9daa62f534c)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/i40e/i40e_adminq.c b/drivers/net/ethernet/intel/i40e/i40e_adminq.c
index 40381ab..95aab70 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_adminq.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_adminq.c
@@ -850,6 +850,7 @@ i40e_status i40e_asq_send_command(struct i40e_hw *hw,
  }
 
  /* bump the tail */
+ i40e_debug(hw, I40E_DEBUG_AQ_MESSAGE, "AQTX: desc and buffer:\n");
  i40e_debug_aq(hw, I40E_DEBUG_AQ_COMMAND, (void *)desc_on_ring, buff);
  (hw->aq.asq.next_to_use)++;
  if (hw->aq.asq.next_to_use == hw->aq.asq.count)
@@ -887,6 +888,7 @@ i40e_status i40e_asq_send_command(struct i40e_hw *hw,
        I40E_DEBUG_AQ_MESSAGE,
        "AQTX: Command completed with error 0x%X.\n",
        retval);
+
    /* strip off FW internal code */
    retval &= 0xff;
   }
@@ -901,6 +903,12 @@ i40e_status i40e_asq_send_command(struct i40e_hw *hw,
  if (i40e_is_nvm_update_op(desc))
   hw->aq.nvm_busy = true;
 
+ if (le16_to_cpu(desc->datalen) == buff_size) {
+  i40e_debug(hw, I40E_DEBUG_AQ_MESSAGE,
+      "AQTX: desc and buffer writeback:\n");
+  i40e_debug_aq(hw, I40E_DEBUG_AQ_COMMAND, (void *)desc, buff);
+ }
+
  /* update the error if time out occurred */
  if ((!cmd_completed) &&
      (!details->async && !details->postpone)) {
@@ -972,10 +980,6 @@ i40e_status i40e_clean_arq_element(struct i40e_hw *hw,
  /* now clean the next descriptor */
  desc = I40E_ADMINQ_DESC(hw->aq.arq, ntc);
  desc_idx = ntc;
- i40e_debug_aq(hw,
-        I40E_DEBUG_AQ_COMMAND,
-        (void *)desc,
-        hw->aq.arq.r.arq_bi[desc_idx].va);
 
  flags = le16_to_cpu(desc->flags);
  if (flags & I40E_AQ_FLAG_ERR) {
@@ -998,6 +1002,9 @@ i40e_status i40e_clean_arq_element(struct i40e_hw *hw,
  if (i40e_is_nvm_update_op(&e->desc))
   hw->aq.nvm_busy = false;
 
+ i40e_debug(hw, I40E_DEBUG_AQ_MESSAGE, "AQRX: desc and buffer:\n");
+ i40e_debug_aq(hw, I40E_DEBUG_AQ_COMMAND, (void *)desc, e->msg_buf);
+
  /* Restore the original datalen and buffer address in the desc,
   * FW updates datalen to indicate the event message
   * size
-- 
1.7.1