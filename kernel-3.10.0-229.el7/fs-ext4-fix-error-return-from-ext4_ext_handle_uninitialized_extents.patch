From 7c7506622ad2f45def6484a007e13536ec7a79de Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 23 Oct 2014 09:54:26 -0400
Subject: [fs] ext4: fix error return from ext4_ext_handle_uninitialized_extents()

Message-id: <1414058125-4183-113-git-send-email-lczerner@redhat.com>
Patchwork-id: 98195
O-Subject: [RHEL 7.1 PATCH v2 112/171] ext4: fix error return from ext4_ext_handle_uninitialized_extents()
Bugzilla: 1150139
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Eric Whitney <enwlinux@gmail.com>

BZ 1150139
https://bugzilla.redhat.com/show_bug.cgi?id=1150139

BREW 8142710
https://brewweb.devel.redhat.com/taskinfo?taskID=8142710

Upstream commit ce37c42919608e96ade3748fe23c3062a0a966c5

 Commit 3779473246 breaks the return of error codes from
 ext4_ext_handle_uninitialized_extents() in ext4_ext_map_blocks().  A
 portion of the patch assigns that function's signed integer return
 value to an unsigned int.  Consequently, negatively valued error codes
 are lost and can be treated as a bogus allocated block count.

 Signed-off-by: Eric Whitney <enwlinux@gmail.com>
 Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
 Cc: stable@vger.kernel.org
 Signed-off-by: Lukas Czerner <lczerner@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/extents.c b/fs/ext4/extents.c
index 7b7b412..3f81707 100644
--- a/fs/ext4/extents.c
+++ b/fs/ext4/extents.c
@@ -4128,7 +4128,7 @@ int ext4_ext_map_blocks(handle_t *handle, struct inode *inode,
  struct ext4_extent newex, *ex, *ex2;
  struct ext4_sb_info *sbi = EXT4_SB(inode->i_sb);
  ext4_fsblk_t newblock = 0;
- int free_on_err = 0, err = 0, depth;
+ int free_on_err = 0, err = 0, depth, ret;
  unsigned int allocated = 0, offset = 0;
  unsigned int allocated_clusters = 0;
  struct ext4_allocation_request ar;
@@ -4189,9 +4189,13 @@ int ext4_ext_map_blocks(handle_t *handle, struct inode *inode,
    if (!ext4_ext_is_uninitialized(ex))
     goto out;
 
-   allocated = ext4_ext_handle_uninitialized_extents(
+   ret = ext4_ext_handle_uninitialized_extents(
     handle, inode, map, path, flags,
     allocated, newblock);
+   if (ret < 0)
+    err = ret;
+   else
+    allocated = ret;
    goto out3;
   }
  }
-- 
1.7.1