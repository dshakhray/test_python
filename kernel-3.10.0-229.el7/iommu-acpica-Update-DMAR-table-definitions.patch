From 44fd3552b1456c5732c6c2df81c724dc3754110a Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 01:31:16 -0400
Subject: [iommu] acpica: Update DMAR table definitions

Message-id: <20140905013115.30867.38805.stgit@gir.stowe>
Patchwork-id: 91265
O-Subject: [RHEL7.1 PATCH 01/28] ACPICA: Update DMAR table definitions.
Bugzilla: 1129808
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Dutile <ddutile@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1129808
Upstream Status: fa5f508f942faaf73ae5020db7a4189d5ca88d2a

commit fa5f508f942faaf73ae5020db7a4189d5ca88d2a
Author: Lv Zheng <lv.zheng@intel.com>
Date:   Thu Oct 31 09:30:22 2013 +0800

    ACPICA: Update DMAR table definitions.

    This patch updates DMAR table header definitions as such enhancement
    has been made in ACPICA upstream already.  It ports that change to
    the Linux source to reduce source code differences between Linux and
    ACPICA upstream.

    Build test done on x86-64 machine with the following configs enabled:
      CONFIG_DMAR_TABLE
      CONFIG_IRQ_REMAP
      CONFIG_INTEL_IOMMU

    This patch does not affect the generation of the Linux kernel binary.

    [rjw: Changelog]
    Signed-off-by: Lv Zheng <lv.zheng@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/dmar.c b/drivers/iommu/dmar.c
index 41a526b..fda1e8e 100644
--- a/drivers/iommu/dmar.c
+++ b/drivers/iommu/dmar.c
@@ -88,7 +88,7 @@ static int __init dmar_parse_one_dev_scope(struct acpi_dmar_device_scope *scope,
    pr_warn("Device scope bus [%d] not found\n", scope->bus);
    break;
   }
-  pdev = pci_get_slot(bus, PCI_DEVFN(path->dev, path->fn));
+  pdev = pci_get_slot(bus, PCI_DEVFN(path->device, path->function));
   if (!pdev) {
    /* warning will be printed below */
    break;
@@ -99,7 +99,7 @@ static int __init dmar_parse_one_dev_scope(struct acpi_dmar_device_scope *scope,
  }
  if (!pdev) {
   pr_warn("Device scope device [%04x:%02x:%02x.%02x] not found\n",
-   segment, scope->bus, path->dev, path->fn);
+   segment, scope->bus, path->device, path->function);
   *dev = NULL;
   return 0;
  }
diff --git a/drivers/iommu/intel_irq_remapping.c b/drivers/iommu/intel_irq_remapping.c
index b97d70b..bab10b1 100644
--- a/drivers/iommu/intel_irq_remapping.c
+++ b/drivers/iommu/intel_irq_remapping.c
@@ -687,12 +687,12 @@ static void ir_parse_one_hpet_scope(struct acpi_dmar_device_scope *scope,
    * Access PCI directly due to the PCI
    * subsystem isn't initialized yet.
    */
-  bus = read_pci_config_byte(bus, path->dev, path->fn,
+  bus = read_pci_config_byte(bus, path->device, path->function,
         PCI_SECONDARY_BUS);
   path++;
  }
  ir_hpet[ir_hpet_num].bus   = bus;
- ir_hpet[ir_hpet_num].devfn = PCI_DEVFN(path->dev, path->fn);
+ ir_hpet[ir_hpet_num].devfn = PCI_DEVFN(path->device, path->function);
  ir_hpet[ir_hpet_num].iommu = iommu;
  ir_hpet[ir_hpet_num].id    = scope->enumeration_id;
  ir_hpet_num++;
@@ -715,13 +715,13 @@ static void ir_parse_one_ioapic_scope(struct acpi_dmar_device_scope *scope,
    * Access PCI directly due to the PCI
    * subsystem isn't initialized yet.
    */
-  bus = read_pci_config_byte(bus, path->dev, path->fn,
+  bus = read_pci_config_byte(bus, path->device, path->function,
         PCI_SECONDARY_BUS);
   path++;
  }
 
  ir_ioapic[ir_ioapic_num].bus   = bus;
- ir_ioapic[ir_ioapic_num].devfn = PCI_DEVFN(path->dev, path->fn);
+ ir_ioapic[ir_ioapic_num].devfn = PCI_DEVFN(path->device, path->function);
  ir_ioapic[ir_ioapic_num].iommu = iommu;
  ir_ioapic[ir_ioapic_num].id    = scope->enumeration_id;
  ir_ioapic_num++;
diff --git a/include/acpi/actbl2.h b/include/acpi/actbl2.h
index ffaac0e..40f7ed1 100644
--- a/include/acpi/actbl2.h
+++ b/include/acpi/actbl2.h
@@ -444,8 +444,8 @@ enum acpi_dmar_scope_type {
 };
 
 struct acpi_dmar_pci_path {
- u8 dev;
- u8 fn;
+ u8 device;
+ u8 function;
 };
 
 /*
-- 
1.7.1