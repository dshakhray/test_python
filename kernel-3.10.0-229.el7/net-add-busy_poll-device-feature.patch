From 45ebb833039e1009800ffc92e3af34900fea2a20 Mon Sep 17 00:00:00 2001
From: Jiri Pirko <jpirko@redhat.com>
Date: Wed, 9 Apr 2014 06:30:50 -0400
Subject: [net] add busy_poll device feature

Message-id: <1397025050-12953-1-git-send-email-jpirko@redhat.com>
Patchwork-id: 78837
O-Subject: [patch rhel7.1 net] net: add busy_poll device feature
Bugzilla: 1080093
RH-Acked-by: Jesper Brouer <jbrouer@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>
RH-Acked-by: Thomas Graf <tgraf@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Daniel Borkmann <dborkman@redhat.com>

BZ1080093
https://brewweb.devel.redhat.com/taskinfo?taskID=7317616
Tested on wsfd-netdev5.lab.bos.redhat.com

upstream (net) commit d0290214de712150b118a532ded378a29255893b
Author: Jiri Pirko <jiri@resnulli.us>
Date:   Wed Apr 2 23:09:31 2014 +0200

    net: add busy_poll device feature

    Currently there is no way how to find out if a device supports busy
    polling. So add a feature and make it dependent on ndo_busy_poll
    existence.

Signed-off-by: Jiri Pirko <jpirko@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/linux/netdev_features.h b/include/linux/netdev_features.h
index b05a4b5..044fc3e 100644
--- a/include/linux/netdev_features.h
+++ b/include/linux/netdev_features.h
@@ -62,6 +62,7 @@ enum {
  NETIF_F_HW_VLAN_STAG_TX_BIT, /* Transmit VLAN STAG HW acceleration */
  NETIF_F_HW_VLAN_STAG_RX_BIT, /* Receive VLAN STAG HW acceleration */
  NETIF_F_HW_VLAN_STAG_FILTER_BIT,/* Receive filtering on VLAN STAGs */
+ NETIF_F_BUSY_POLL_BIT,  /* Busy poll */
 
  /*
   * Add your fresh new feature above and remember to update
@@ -116,6 +117,7 @@ enum {
 #define NETIF_F_HW_VLAN_STAG_FILTER __NETIF_F(HW_VLAN_STAG_FILTER)
 #define NETIF_F_HW_VLAN_STAG_RX __NETIF_F(HW_VLAN_STAG_RX)
 #define NETIF_F_HW_VLAN_STAG_TX __NETIF_F(HW_VLAN_STAG_TX)
+#define NETIF_F_BUSY_POLL __NETIF_F(BUSY_POLL)
 
 /* Features valid for ethtool to change */
 /* = all defined minus driver/device-class-related */
diff --git a/net/core/dev.c b/net/core/dev.c
index cd1d9d1..fd8276c 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -5136,6 +5136,13 @@ static netdev_features_t netdev_fix_features(struct net_device *dev,
   }
  }
 
+#ifdef CONFIG_NET_RX_BUSY_POLL
+ if (dev->netdev_ops->ndo_busy_poll)
+  features |= NETIF_F_BUSY_POLL;
+ else
+#endif
+  features &= ~NETIF_F_BUSY_POLL;
+
  return features;
 }
 
diff --git a/net/core/ethtool.c b/net/core/ethtool.c
index de51302..1bd5533 100644
--- a/net/core/ethtool.c
+++ b/net/core/ethtool.c
@@ -96,6 +96,7 @@ static const char netdev_features_strings[NETDEV_FEATURE_COUNT][ETH_GSTRING_LEN]
  [NETIF_F_LOOPBACK_BIT] =         "loopback",
  [NETIF_F_RXFCS_BIT] =            "rx-fcs",
  [NETIF_F_RXALL_BIT] =            "rx-all",
+ [NETIF_F_BUSY_POLL_BIT] =        "busy-poll",
 };
 
 static int ethtool_get_features(struct net_device *dev, void __user *useraddr)
-- 
1.7.1