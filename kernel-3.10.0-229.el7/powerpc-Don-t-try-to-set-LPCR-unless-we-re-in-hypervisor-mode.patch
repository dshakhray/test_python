From ef5f62093cd597a5015821414da5c793ef08ef61 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Fri, 12 Sep 2014 18:10:31 -0400
Subject: [powerpc] Don't try to set LPCR unless we're in hypervisor mode

Message-id: <1410545655-205645-403-git-send-email-dzickus@redhat.com>
Patchwork-id: 94221
O-Subject: [RHEL7 PATCH 402/626] powerpc: Don't try to set LPCR unless we're in hypervisor mode
Bugzilla: 1127366
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: David Gibson <dgibson@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1127366

commit 18aa0da33e18cb2037932f7ad5c7d51f22e012f5
Author: Paul Mackerras <paulus@samba.org>
Date:   Fri Apr 11 16:43:35 2014 +1000

    powerpc: Don't try to set LPCR unless we're in hypervisor mode

    Commit 8f619b5429d9 ("powerpc/ppc64: Do not turn AIL (reloc-on
    interrupts) too early") added code to set the AIL bit in the LPCR
    without checking whether the kernel is running in hypervisor mode.  The
    result is that when the kernel is running as a guest (i.e., under
    PowerKVM or PowerVM), the processor takes a privileged instruction
    interrupt at that point, causing a panic.  The visible result is that
    the kernel hangs after printing "returning from prom_init".

    This fixes it by checking for hypervisor mode being available before
    setting LPCR.  If we are not in hypervisor mode, we enable relocation-on
    interrupts later in pSeries_setup_arch using the H_SET_MODE hcall.

    Signed-off-by: Paul Mackerras <paulus@samba.org>
    Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/powerpc/kernel/setup_64.c b/arch/powerpc/kernel/setup_64.c
index 485916b..7a46dd8 100644
--- a/arch/powerpc/kernel/setup_64.c
+++ b/arch/powerpc/kernel/setup_64.c
@@ -168,7 +168,8 @@ static void cpu_ready_for_interrupts(void)
  get_paca()->kernel_msr = MSR_KERNEL;
 
  /* Enable AIL if supported */
- if (cpu_has_feature(CPU_FTR_ARCH_207S)) {
+ if (cpu_has_feature(CPU_FTR_HVMODE) &&
+     cpu_has_feature(CPU_FTR_ARCH_207S)) {
   unsigned long lpcr = mfspr(SPRN_LPCR);
   mtspr(SPRN_LPCR, lpcr | LPCR_AIL_3);
  }
-- 
1.7.1