From 78ad65bbd10710b5c07fe4709899e95d85630140 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Fri, 5 Sep 2014 01:48:18 -0400
Subject: [iommu] vt-d: Allocate space for ACPI devices

Message-id: <20140905014818.31297.64344.stgit@gir.stowe>
Patchwork-id: 91318
O-Subject: [RHEL7.1 PATCH 25/65] iommu/vt-d: Allocate space for ACPI devices
Bugzilla: 1129880 1087643
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1087643
Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1129880
Upstream Status: 07cb52ff6aadac0ad68b29be2ef73dba3111c5ec

commit 07cb52ff6aadac0ad68b29be2ef73dba3111c5ec
Author: David Woodhouse <David.Woodhouse@intel.com>
Date:   Fri Mar 7 14:39:27 2014 +0000

    iommu/vt-d: Allocate space for ACPI devices

    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/iommu/dmar.c b/drivers/iommu/dmar.c
index a6c86b0..4db36a6 100644
--- a/drivers/iommu/dmar.c
+++ b/drivers/iommu/dmar.c
@@ -84,7 +84,8 @@ void *dmar_alloc_dev_scope(void *start, void *end, int *cnt)
  *cnt = 0;
  while (start < end) {
   scope = start;
-  if (scope->entry_type == ACPI_DMAR_SCOPE_TYPE_ENDPOINT ||
+  if (scope->entry_type == ACPI_DMAR_SCOPE_TYPE_ACPI ||
+      scope->entry_type == ACPI_DMAR_SCOPE_TYPE_ENDPOINT ||
       scope->entry_type == ACPI_DMAR_SCOPE_TYPE_BRIDGE)
    (*cnt)++;
   else if (scope->entry_type != ACPI_DMAR_SCOPE_TYPE_IOAPIC &&
@@ -342,21 +343,18 @@ dmar_parse_one_drhd(struct acpi_dmar_header *header)
  dmaru->reg_base_addr = drhd->address;
  dmaru->segment = drhd->segment;
  dmaru->include_all = drhd->flags & 0x1; /* BIT0: INCLUDE_ALL */
- if (!dmaru->include_all) {
-  dmaru->devices = dmar_alloc_dev_scope((void *)(drhd + 1),
-     ((void *)drhd) + drhd->header.length,
-     &dmaru->devices_cnt);
-  if (dmaru->devices_cnt && dmaru->devices == NULL) {
-   kfree(dmaru);
-   return -ENOMEM;
-  }
+ dmaru->devices = dmar_alloc_dev_scope((void *)(drhd + 1),
+           ((void *)drhd) + drhd->header.length,
+           &dmaru->devices_cnt);
+ if (dmaru->devices_cnt && dmaru->devices == NULL) {
+  kfree(dmaru);
+  return -ENOMEM;
  }
 
  ret = alloc_iommu(dmaru);
  if (ret) {
-  if (!dmaru->include_all)
-   dmar_free_dev_scope(&dmaru->devices,
-         &dmaru->devices_cnt);
+  dmar_free_dev_scope(&dmaru->devices,
+        &dmaru->devices_cnt);
   kfree(dmaru);
   return ret;
  }
-- 
1.7.1