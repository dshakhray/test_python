From db4372d950b6f4edc97df940aaae9c8de59053d4 Mon Sep 17 00:00:00 2001
From: Chad Dupuis <cdupuis@redhat.com>
Date: Thu, 21 Aug 2014 13:07:00 -0400
Subject: [ethernet] qlcnic: Set driver version before registering netdev

Message-id: <1408626422-3941-137-git-send-email-cdupuis@redhat.com>
Patchwork-id: 88660
O-Subject: [PATCH RHEL 7.1 136/138] qlcnic: Set driver version before registering netdev
Bugzilla: 1089352
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Rajesh Borundia <rajesh.borundia@qlogic.com>

Bug 1089352 (https://bugzilla.redhat.com/show_bug.cgi?id=1089352)

net commit id bf63014f108aaff49e4382b7adc7d0a2b6365744

o Earlier, set_drv_version was getting called after register_netdev.
  This was resulting in a race between set_drv_version and FLR called
  from open(). Moving set_drv_version before register_netdev avoids
  the race.

o Log response code in error message on CDRP failure.

Signed-off-by: Rajesh Borundia <rajesh.borundia@qlogic.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_ctx.c b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_ctx.c
index 304e247..ffbae29 100644
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_ctx.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_ctx.c
@@ -136,7 +136,7 @@ int qlcnic_82xx_issue_cmd(struct qlcnic_adapter *adapter,
  rsp = qlcnic_poll_rsp(adapter);
 
  if (rsp == QLCNIC_CDRP_RSP_TIMEOUT) {
-  dev_err(&pdev->dev, "card response timeout.\n");
+  dev_err(&pdev->dev, "command timeout, response = 0x%x\n", rsp);
   cmd->rsp.arg[0] = QLCNIC_RCODE_TIMEOUT;
  } else if (rsp == QLCNIC_CDRP_RSP_FAIL) {
   cmd->rsp.arg[0] = QLCRD32(adapter, QLCNIC_CDRP_ARG(1), &err);
diff --git a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
index fbf8613..983e1dc 100644
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
@@ -2620,13 +2620,13 @@ qlcnic_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
  if (err)
   goto err_out_disable_mbx_intr;
 
+ if (adapter->portnum == 0)
+  qlcnic_set_drv_version(adapter);
+
  err = qlcnic_setup_netdev(adapter, netdev, pci_using_dac);
  if (err)
   goto err_out_disable_mbx_intr;
 
- if (adapter->portnum == 0)
-  qlcnic_set_drv_version(adapter);
-
  pci_set_drvdata(pdev, adapter);
 
  if (qlcnic_82xx_check(adapter))
-- 
1.7.1