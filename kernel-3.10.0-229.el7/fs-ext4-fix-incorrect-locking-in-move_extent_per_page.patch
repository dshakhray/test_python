From 091e2d054a66ffc3fef145566688dcc89b929d6f Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Wed, 29 Oct 2014 16:34:13 -0400
Subject: [fs] ext4: fix incorrect locking in move_extent_per_page

Message-id: <1414600485-1929-24-git-send-email-lczerner@redhat.com>
Patchwork-id: 98552
O-Subject: [RHEL 7.1 PATCH v2 23/55] ext4: fix incorrect locking in move_extent_per_page
Bugzilla: 1156096
RH-Acked-by: Eric Sandeen <sandeen@redhat.com>

From: Dmitry Monakhov <dmonakhov@openvz.org>

BZ 1156096
https://bugzilla.redhat.com/show_bug.cgi?id=1156096

BREW 8169722
https://brewweb.devel.redhat.com/taskinfo?taskID=8169722

Upstream commit 6e2631463f3a2ce430a295c68aead3ff228ca3cf

 If we have to copy data we must drop i_data_sem because of
 get_blocks() will be called inside mext_page_mkuptodate(), but later we must
 reacquire it again because we are about to change extent's tree

 Signed-off-by: Dmitry Monakhov <dmonakhov@openvz.org>
 Signed-off-by: Theodore Ts'o <tytso@mit.edu>
 Reviewed-by: Jan Kara <jack@suse.cz>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/ext4/move_extent.c b/fs/ext4/move_extent.c
index 1b809fe..8d9f02c 100644
--- a/fs/ext4/move_extent.c
+++ b/fs/ext4/move_extent.c
@@ -1012,10 +1012,11 @@ data_copy:
   *err = -EBUSY;
   goto unlock_pages;
  }
-
+ ext4_double_down_write_data_sem(orig_inode, donor_inode);
  replaced_count = mext_replace_branches(handle, orig_inode, donor_inode,
             orig_blk_offset,
             block_len_in_page, err);
+ ext4_double_up_write_data_sem(orig_inode, donor_inode);
  if (*err) {
   if (replaced_count) {
    block_len_in_page = replaced_count;
-- 
1.7.1