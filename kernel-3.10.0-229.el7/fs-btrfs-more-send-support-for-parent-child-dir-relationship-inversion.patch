From 9fc5062c6cf42f28283b78b7c86dde9d515f9b71 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 19:00:56 -0400
Subject: [fs] btrfs: more send support for parent/child dir relationship inversion

Message-id: <1407179109-13714-170-git-send-email-sandeen@redhat.com>
Patchwork-id: 87095
O-Subject: [RHEL7.1 PATCH 169/422] Btrfs: more send support for parent/child dir relationship inversion
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Filipe David Borba Manana <fdmanana@gmail.com>

commit 5ed7f9ff15e6ea56bcb78f69e9503dc1a587caf0
Author: Filipe David Borba Manana <fdmanana@gmail.com>
Date:   Sat Feb 1 02:02:16 2014 +0000

    Btrfs: more send support for parent/child dir relationship inversion

    The commit titled "Btrfs: fix infinite path build loops in incremental send"
    didn't cover a particular case where the parent-child relationship inversion
    of directories doesn't imply a rename of the new parent directory. This was
    due to a simple logic mistake, a logical and instead of a logical or.

    Steps to reproduce:

      $ mkfs.btrfs -f /dev/sdb3
      $ mount /dev/sdb3 /mnt/btrfs
      $ mkdir -p /mnt/btrfs/a/b/bar1/bar2/bar3/bar4
      $ btrfs subvol snapshot -r /mnt/btrfs /mnt/btrfs/snap1
      $ mv /mnt/btrfs/a/b/bar1/bar2/bar3/bar4 /mnt/btrfs/a/b/k44
      $ mv /mnt/btrfs/a/b/bar1/bar2/bar3 /mnt/btrfs/a/b/k44
      $ mv /mnt/btrfs/a/b/bar1/bar2 /mnt/btrfs/a/b/k44/bar3
      $ mv /mnt/btrfs/a/b/bar1 /mnt/btrfs/a/b/k44/bar3/bar2/k11
      $ btrfs subvol snapshot -r /mnt/btrfs /mnt/btrfs/snap2
      $ btrfs send -p /mnt/btrfs/snap1 /mnt/btrfs/snap2 > /tmp/incremental.send

    A patch to update the test btrfs/030 from xfstests, so that it covers
    this case, will be submitted soon.

    Signed-off-by: Filipe David Borba Manana <fdmanana@gmail.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/send.c b/fs/btrfs/send.c
index 8bd0505..154a717 100644
--- a/fs/btrfs/send.c
+++ b/fs/btrfs/send.c
@@ -3053,8 +3053,8 @@ static int wait_for_parent_move(struct send_ctx *sctx,
 
  len1 = fs_path_len(path_before);
  len2 = fs_path_len(path_after);
- if ((parent_ino_before != parent_ino_after) && (len1 != len2 ||
-      memcmp(path_before->start, path_after->start, len1))) {
+ if (parent_ino_before != parent_ino_after || len1 != len2 ||
+      memcmp(path_before->start, path_after->start, len1)) {
   ret = 1;
   goto out;
  }
-- 
1.7.1