From 59631e58acfce2b9cdbf2f9abe535dadc659cc66 Mon Sep 17 00:00:00 2001
From: Rob Evers <revers@redhat.com>
Date: Mon, 23 Jun 2014 21:42:01 -0400
Subject: [scsi] lpfc: Add iotag memory barrier

Message-id: <1403559726-20488-20-git-send-email-revers@redhat.com>
Patchwork-id: 84437
O-Subject: [RHEL7.1 e-stor PATCH 19/24] scsi: lpfc: Add iotag memory barrier
Bugzilla: 1088574
RH-Acked-by: Ewan Milne <emilne@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Dick Kennedy <rkennedy@Emulex.Com>

Submitted by James Smart James.Smart@emulex.com

Prior patch still had a whitespace error. This should be the good one.

http://marc.info/?l=linux-scsi&m=140050827429370&w=2
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/lpfc/lpfc_sli.c b/drivers/scsi/lpfc/lpfc_sli.c
index 85952bd..34ba7aa 100644
--- a/drivers/scsi/lpfc/lpfc_sli.c
+++ b/drivers/scsi/lpfc/lpfc_sli.c
@@ -265,6 +265,16 @@ lpfc_sli4_eq_get(struct lpfc_queue *q)
   return NULL;
 
  q->hba_index = idx;
+
+ /*
+  * insert barrier for instruction interlock : data from the hardware
+  * must have the valid bit checked before it can be copied and acted
+  * upon. Given what was seen in lpfc_sli4_cq_get() of speculative
+  * instructions allowing action on content before valid bit checked,
+  * add barrier here as well. May not be needed as "content" is a
+  * single 32-bit entity here (vs multi word structure for cq's).
+  */
+ mb();
  return eqe;
 }
 
@@ -370,6 +380,17 @@ lpfc_sli4_cq_get(struct lpfc_queue *q)
 
  cqe = q->qe[q->hba_index].cqe;
  q->hba_index = idx;
+
+ /*
+  * insert barrier for instruction interlock : data from the hardware
+  * must have the valid bit checked before it can be copied and acted
+  * upon. Speculative instructions were allowing a bcopy at the start
+  * of lpfc_sli4_fp_handle_wcqe(), which is called immediately
+  * after our return, to copy data before the valid bit check above
+  * was done. As such, some of the copied data was stale. The barrier
+  * ensures the check is before any data is copied.
+  */
+ mb();
  return cqe;
 }
 
-- 
1.7.1