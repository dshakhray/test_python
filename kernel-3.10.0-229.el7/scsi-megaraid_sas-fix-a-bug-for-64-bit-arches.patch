From f44562f197296bb66e39926097c4ac4acb7f6173 Mon Sep 17 00:00:00 2001
From: Tomas Henzl <thenzl@redhat.com>
Date: Thu, 18 Sep 2014 14:14:01 -0400
Subject: [scsi] megaraid_sas: fix a bug for 64 bit arches

Message-id: <1411049668-28841-2-git-send-email-thenzl@redhat.com>
Patchwork-id: 96159
O-Subject: [RHEL7.1 e-stor PATCH 01/28] megaraid_sas: fix a bug for 64 bit arches
Bugzilla: 1088523
RH-Acked-by: Ewan Milne <emilne@redhat.com>
RH-Acked-by: Rob Evers <revers@redhat.com>

On 64 bit then -1UL and -1U are not equal, so these conditions don't
work as intended and it breaks error handling.

Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
Acked-by: Sumit Saxena <sumit.saxena@lsi.com>
Signed-off-by: James Bottomley <JBottomley@Parallels.com>
(cherry picked from commit fec3c1b4575431e2020c5c6502d18b281925ca45)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/megaraid/megaraid_sas_fp.c b/drivers/scsi/megaraid/megaraid_sas_fp.c
index f45127e..2f3bd55 100644
--- a/drivers/scsi/megaraid/megaraid_sas_fp.c
+++ b/drivers/scsi/megaraid/megaraid_sas_fp.c
@@ -595,7 +595,7 @@ u8 get_arm(struct megasas_instance *instance, u32 ld, u8 span, u64 stripe,
  case 1:
   /* start with logical arm */
   arm = get_arm_from_strip(instance, ld, stripe, map);
-  if (arm != -1UL)
+  if (arm != -1U)
    arm *= 2;
   break;
  }
@@ -647,7 +647,7 @@ static u8 mr_spanset_get_phy_params(struct megasas_instance *instance, u32 ld,
 
  if (raid->level == 6) {
   logArm = get_arm_from_strip(instance, ld, stripRow, map);
-  if (logArm == -1UL)
+  if (logArm == -1U)
    return FALSE;
   rowMod = mega_mod64(row, SPAN_ROW_SIZE(map, ld, span));
   armQ = SPAN_ROW_SIZE(map, ld, span) - 1 - rowMod;
-- 
1.7.1