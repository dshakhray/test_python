From d93275583458974188bde4aacc333e912dfafa69 Mon Sep 17 00:00:00 2001
From: Jeff Moyer <jmoyer@redhat.com>
Date: Fri, 10 Oct 2014 21:03:13 -0400
Subject: [block] blk-mq: don't allow merges if turned off for the queue

Message-id: <1412975015-5370-13-git-send-email-jmoyer@redhat.com>
Patchwork-id: 97455
O-Subject: [RHEL7 PATCH 12/34] blk-mq: don't allow merges if turned off for the queue
Bugzilla: 1146660
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Mike Snitzer <snitzer@redhat.com>

This is a backport of the following commit.  This resolves bug
1146660.

  commit 274a5843ff2f08a89464589d90c64eb65f2c0847
  Author: Jens Axboe <axboe@fb.com>
  Date:   Fri Aug 15 12:44:08 2014 -0600

    blk-mq: don't allow merges if turned off for the queue

    blk-mq uses BLK_MQ_F_SHOULD_MERGE, as set by the driver at init time,
    to determine whether it should merge IO or not. However, this could
    also be disabled by the admin, if merging is switched off through
    sysfs. So check the general queue state as well before attempting
    to merge IO.

    Reported-by: Rob Elliott <Elliott@hp.com>
    Tested-by: Rob Elliott <Elliott@hp.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>

Signed-off-by: Jeff Moyer <jmoyer@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/block/blk-mq.c b/block/blk-mq.c
index 1db9565..67a877f 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -1077,13 +1077,17 @@ static void blk_mq_bio_to_request(struct request *rq, struct bio *bio)
   blk_account_io_start(rq, 1);
 }
 
+static inline bool hctx_allow_merges(struct blk_mq_hw_ctx *hctx)
+{
+ return (hctx->flags & BLK_MQ_F_SHOULD_MERGE) &&
+  !blk_queue_nomerges(hctx->queue);
+}
+
 static inline bool blk_mq_merge_queue_io(struct blk_mq_hw_ctx *hctx,
       struct blk_mq_ctx *ctx,
       struct request *rq, struct bio *bio)
 {
- struct request_queue *q = hctx->queue;
-
- if (!(hctx->flags & BLK_MQ_F_SHOULD_MERGE)) {
+ if (!hctx_allow_merges(hctx)) {
   blk_mq_bio_to_request(rq, bio);
   spin_lock(&ctx->lock);
 insert_rq:
@@ -1091,6 +1095,8 @@ insert_rq:
   spin_unlock(&ctx->lock);
   return false;
  } else {
+  struct request_queue *q = hctx->queue;
+
   spin_lock(&ctx->lock);
   if (!blk_mq_attempt_merge(q, ctx, bio)) {
    blk_mq_bio_to_request(rq, bio);
-- 
1.7.1