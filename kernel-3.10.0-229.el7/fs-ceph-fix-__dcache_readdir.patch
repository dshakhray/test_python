From c3980f26ede2612510ee5dd28aaf40941f7e8b27 Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:24:22 -0400
Subject: [fs] ceph: fix __dcache_readdir()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-156-git-send-email-sweil@redhat.com>
Patchwork-id: 89760
O-Subject: [PATCH 155/303] ceph: fix __dcache_readdir()
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: "Yan, Zheng" <zheng.z.yan@intel.com>

If directory is fragmented, readdir() read its dirfrags one by one.
After reading all dirfrags, the corresponding dentries are sorted in
(frag_t, off) order in the dcache. If dentries of a directory are all
cached, __dcache_readdir() can use the cached dentries to satisfy
readdir syscall. But when checking if a given dentry is after the
position of readdir, __dcache_readdir() compares numerical value of
frag_t directly. This is wrong, it should use ceph_frag_compare().

Signed-off-by: Yan, Zheng <zheng.z.yan@intel.com>
(cherry picked from commit 4d5f5df673ee673851986b5a492a9752fbb39dc5)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

Conflicts:

 fs/ceph/dir.c
---

diff --git a/fs/ceph/dir.c b/fs/ceph/dir.c
index e9a0fd2..bb5a702 100644
--- a/fs/ceph/dir.c
+++ b/fs/ceph/dir.c
@@ -100,6 +100,14 @@ static unsigned fpos_off(loff_t p)
  return p & 0xffffffff;
 }
 
+static int fpos_cmp(loff_t l, loff_t r)
+{
+ int v = ceph_frag_compare(fpos_frag(l), fpos_frag(r));
+ if (v)
+  return v;
+ return (int)(fpos_off(l) - fpos_off(r));
+}
+
 /*
  * When possible, we try to satisfy a readdir by peeking at the
  * dcache.  We make this work by carefully ordering dentries on
@@ -157,7 +165,7 @@ more:
   if (!d_unhashed(dentry) && dentry->d_inode &&
       ceph_snap(dentry->d_inode) != CEPH_SNAPDIR &&
       ceph_ino(dentry->d_inode) != CEPH_INO_CEPH &&
-      filp->f_pos <= di->offset)
+      fpos_cmp(filp->f_pos, di->offset) <= 0)
    break;
   dout(" skipping %p %.*s at %llu (%llu)%s%s\n", dentry,
        dentry->d_name.len, dentry->d_name.name, di->offset,
-- 
1.7.1