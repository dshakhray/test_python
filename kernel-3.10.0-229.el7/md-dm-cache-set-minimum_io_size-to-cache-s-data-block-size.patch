From 1f74b3185bf48cb32ac1d0bb136d123a76f2f3f6 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Mon, 21 Jul 2014 13:18:06 -0400
Subject: [md] dm-cache: set minimum_io_size to cache's data block size

Message-id: <20140721131806.GB28259@redhat.com>
Patchwork-id: 86053
O-Subject: [RHEL7.1 PATCH 42/40] dm cache: set minimum_io_size to cache's data block size
Bugzilla: 1117872
RH-Acked-by: Heinz Mauelshagen <heinzm@redhat.com>
RH-Acked-by: Joe Thornber <thornber@redhat.com>

BZ: 1117872

Upstream linux-dm.git commit 9d24c637d4b572be3f97643f78e5f6f0a12882d2
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Sat Jul 19 13:25:46 2014 -0400

    dm cache: set minimum_io_size to cache's data block size

    Before, if the block layer's limit stacking didn't establish an
    optimal_io_size that was compatible with the cache's data block size
    we'd set optimal_io_size to the data block size and minimum_io_size to 0
    (which the block layer adjusts to be physical_block_size).

    Update cache_io_hints() to set both minimum_io_size and optimal_io_size
    to the cache's data block size.  This fixes an issue where mkfs.xfs
    would create more XFS Allocation Groups on cache volumes than on a
    normal linear LV of comparable size.

    Signed-off-by: Mike Snitzer <snitzer@redhat.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/dm-cache-target.c b/drivers/md/dm-cache-target.c
index 32e224a..ff60ab6 100644
--- a/drivers/md/dm-cache-target.c
+++ b/drivers/md/dm-cache-target.c
@@ -3094,7 +3094,7 @@ static void cache_io_hints(struct dm_target *ti, struct queue_limits *limits)
   */
  if (io_opt_sectors < cache->sectors_per_block ||
      do_div(io_opt_sectors, cache->sectors_per_block)) {
-  blk_limits_io_min(limits, 0);
+  blk_limits_io_min(limits, cache->sectors_per_block << SECTOR_SHIFT);
   blk_limits_io_opt(limits, cache->sectors_per_block << SECTOR_SHIFT);
  }
  set_discard_limits(cache, limits);
-- 
1.7.1