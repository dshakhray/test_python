From 60ea604f3810d488bd0dd82af8e06e8d8eaa6930 Mon Sep 17 00:00:00 2001
From: Florian Westphal <fwestpha@redhat.com>
Date: Mon, 17 Nov 2014 16:53:29 -0500
Subject: [ethernet] mlx4: Don't attempt to TX offload the outer UDP checksum for VXLAN

Message-id: <1416243211-29973-2-git-send-email-fwestpha@redhat.com>
Patchwork-id: 100060
O-Subject: [PATCH 1/3] [RHEL7.1 net] net/mlx4_en: Don't attempt to TX offload the outer UDP checksum for VXLAN
Bugzilla: 1097478
RH-Acked-by: Daniel Borkmann <dborkman@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

commit a4f2dacbf2a5045e34b98a35d9a3857800f25a7b
Author: Or Gerlitz <ogerlitz@mellanox.com>
Date:   Thu Oct 30 15:59:27 2014 +0200

    net/mlx4_en: Don't attempt to TX offload the outer UDP checksum for VXLAN

    For VXLAN/NVGRE encapsulation, the current HW doesn't support offloading
    both the outer UDP TX checksum and the inner TCP/UDP TX checksum.

    The driver doesn't advertize SKB_GSO_UDP_TUNNEL_CSUM, however we are wrongly
    telling the HW to offload the outer UDP checksum for encapsulated packets,
    fix that.

    Fixes: 837052d0ccc5 ('net/mlx4_en: Add netdev support for TCP/IP
           offloads of vxlan tunneling')
    Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/mellanox/mlx4/en_tx.c b/drivers/net/ethernet/mellanox/mlx4/en_tx.c
index 6efaabd..9e26183 100644
--- a/drivers/net/ethernet/mellanox/mlx4/en_tx.c
+++ b/drivers/net/ethernet/mellanox/mlx4/en_tx.c
@@ -807,8 +807,11 @@ netdev_tx_t mlx4_en_xmit(struct sk_buff *skb, struct net_device *dev)
  tx_desc->ctrl.fence_size = (real_size / 16) & 0x3f;
  tx_desc->ctrl.srcrb_flags = priv->ctrl_flags;
  if (likely(skb->ip_summed == CHECKSUM_PARTIAL)) {
-  tx_desc->ctrl.srcrb_flags |= cpu_to_be32(MLX4_WQE_CTRL_IP_CSUM |
-        MLX4_WQE_CTRL_TCP_UDP_CSUM);
+  if (!skb->encapsulation)
+   tx_desc->ctrl.srcrb_flags |= cpu_to_be32(MLX4_WQE_CTRL_IP_CSUM |
+         MLX4_WQE_CTRL_TCP_UDP_CSUM);
+  else
+   tx_desc->ctrl.srcrb_flags |= cpu_to_be32(MLX4_WQE_CTRL_IP_CSUM);
   ring->tx_csum++;
  }
 
-- 
1.7.1