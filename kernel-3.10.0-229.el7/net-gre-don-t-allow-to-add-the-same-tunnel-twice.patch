From ba5a471064694890ac6c6176374fbc647e609e0e Mon Sep 17 00:00:00 2001
From: Florian Westphal <fwestpha@redhat.com>
Date: Thu, 24 Apr 2014 09:07:28 -0400
Subject: [net] gre: don't allow to add the same tunnel twice

Message-id: <1398330448-12581-1-git-send-email-fwestpha@redhat.com>
Patchwork-id: 79077
O-Subject: [PATCH RHEL 7.1 net] gre: don't allow to add the same tunnel twice
Bugzilla: 1086498
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>

Upstream: 5a4552752d8f7f4cef1d98775ece7adb7616fde2
Bz: 1086498
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7380397
Tested: 2nd ip link command from commit message no longer works

commit 5a4552752d8f7f4cef1d98775ece7adb7616fde2
Author: Nicolas Dichtel <nicolas.dichtel@6wind.com>
Date:   Fri Apr 11 15:51:18 2014 +0200

    gre: don't allow to add the same tunnel twice

    Before the patch, it was possible to add two times the same tunnel:
    ip l a gre1 type gre remote 10.16.0.121 local 10.16.0.249
    ip l a gre2 type gre remote 10.16.0.121 local 10.16.0.249

    It was possible, because ip_tunnel_newlink() calls ip_tunnel_find() with the
    argument dev->type, which was set only later (when calling ndo_init handler
    in register_netdevice()). Let's set this type in the setup handler, which is
    called before newlink handler.

    Introduced by commit c54419321455 ("GRE: Refactor GRE tunneling code.").

    CC: Pravin B Shelar <pshelar@nicira.com>
    Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Florian Westphal <fwestpha@redhat.com>
Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ipv4/ip_gre.c b/net/ipv4/ip_gre.c
index 8d6939e..0c67c7d 100644
--- a/net/ipv4/ip_gre.c
+++ b/net/ipv4/ip_gre.c
@@ -462,6 +462,7 @@ static const struct net_device_ops ipgre_netdev_ops = {
 static void ipgre_tunnel_setup(struct net_device *dev)
 {
  dev->netdev_ops  = &ipgre_netdev_ops;
+ dev->type  = ARPHRD_IPGRE;
  ip_tunnel_setup(dev, ipgre_net_id);
 }
 
@@ -500,7 +501,6 @@ static int ipgre_tunnel_init(struct net_device *dev)
  memcpy(dev->dev_addr, &iph->saddr, 4);
  memcpy(dev->broadcast, &iph->daddr, 4);
 
- dev->type  = ARPHRD_IPGRE;
  dev->flags  = IFF_NOARP;
  dev->priv_flags  &= ~IFF_XMIT_DST_RELEASE;
  dev->addr_len  = 4;
-- 
1.7.1