From c25eca805b517a8d7d48b6bdaa6e10d8cf0f1402 Mon Sep 17 00:00:00 2001
From: Chad Dupuis <cdupuis@redhat.com>
Date: Thu, 21 Aug 2014 13:05:12 -0400
Subject: [ethernet] qlcnic: Firmware dump collection when auto recovery is disabled

Message-id: <1408626422-3941-29-git-send-email-cdupuis@redhat.com>
Patchwork-id: 88569
O-Subject: [PATCH RHEL 7.1 028/138] qlcnic: Firmware dump collection when auto recovery is disabled.
Bugzilla: 1089352
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Pratik Pujar <pratik.pujar@qlogic.com>

Bug 1089352 (https://bugzilla.redhat.com/show_bug.cgi?id=1089352)

net commit id 891e71b1bc7a09c4bceb1a11e5529f55a379a4c7

o Allow collecting the firmware dump of halted firmware when auto
  recovery is disabled.

Signed-off-by: Pratik Pujar <pratik.pujar@qlogic.com>
Signed-off-by: Himanshu Madhani <himanshu.madhani@qlogic.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_init.c b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_init.c
index f09e787..d303fab 100644
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_init.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_init.c
@@ -818,6 +818,7 @@ static int qlcnic_83xx_idc_ready_state(struct qlcnic_adapter *adapter)
  struct qlcnic_hardware_context *ahw = adapter->ahw;
  struct qlcnic_mailbox *mbx = ahw->mailbox;
  int ret = 0;
+ u32 owner;
  u32 val;
 
  /* Perform NIC configuration based ready state entry actions */
@@ -846,6 +847,10 @@ static int qlcnic_83xx_idc_ready_state(struct qlcnic_adapter *adapter)
    clear_bit(QLC_83XX_MBX_READY, &mbx->status);
    set_bit(__QLCNIC_RESETTING, &adapter->state);
    qlcnic_83xx_idc_enter_need_reset_state(adapter, 1);
+  }  else {
+   owner = qlcnic_83xx_idc_find_reset_owner_id(adapter);
+   if (ahw->pci_func == owner)
+    qlcnic_dump_fw(adapter);
   }
   return -EIO;
  }
@@ -1058,6 +1063,12 @@ void qlcnic_83xx_idc_poll_dev_state(struct work_struct *work)
  adapter->ahw->idc.prev_state = adapter->ahw->idc.curr_state;
  qlcnic_83xx_periodic_tasks(adapter);
 
+ /* Do not reschedule if firmaware is in hanged state and auto
+  * recovery is disabled
+  */
+ if ((adapter->flags & QLCNIC_FW_HANG) && !qlcnic_auto_fw_reset)
+  return;
+
  /* Re-schedule the function */
  if (test_bit(QLC_83XX_MODULE_LOADED, &adapter->ahw->idc.status))
   qlcnic_schedule_work(adapter, qlcnic_83xx_idc_poll_dev_state,
diff --git a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
index 7ee653b..c0cc6f7 100644
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
@@ -3348,6 +3348,8 @@ done:
 static int
 qlcnic_check_health(struct qlcnic_adapter *adapter)
 {
+ struct qlcnic_hardware_context *ahw = adapter->ahw;
+ struct qlcnic_fw_dump *fw_dump = &ahw->fw_dump;
  u32 state = 0, heartbeat;
  u32 peg_status;
  int err = 0;
@@ -3372,7 +3374,7 @@ qlcnic_check_health(struct qlcnic_adapter *adapter)
   if (adapter->need_fw_reset)
    goto detach;
 
-  if (adapter->ahw->reset_context && qlcnic_auto_fw_reset)
+  if (ahw->reset_context && qlcnic_auto_fw_reset)
    qlcnic_reset_hw_context(adapter);
 
   return 0;
@@ -3415,6 +3417,9 @@ detach:
 
   qlcnic_schedule_work(adapter, qlcnic_detach_work, 0);
   QLCDB(adapter, DRV, "fw recovery scheduled.\n");
+ } else if (!qlcnic_auto_fw_reset && fw_dump->enable &&
+     adapter->flags & QLCNIC_FW_RESET_OWNER) {
+  qlcnic_dump_fw(adapter);
  }
 
  return 1;
-- 
1.7.1