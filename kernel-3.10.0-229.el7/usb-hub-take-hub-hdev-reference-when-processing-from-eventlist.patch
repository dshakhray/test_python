From 3dc6b960d7556c423c86e9a53b6f216bdf607311 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 4 Nov 2014 16:59:31 -0500
Subject: [usb] hub: take hub->hdev reference when processing from eventlist

Message-id: <1415120371-197190-3-git-send-email-dzickus@redhat.com>
Patchwork-id: 99385
O-Subject: [RHEL7 PATCH 2/2] usb: hub: take hub->hdev reference when processing from eventlist
Bugzilla: 1151508
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Jes Sorensen <Jes.Sorensen@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1151508

commit c605f3cdff53a743f6d875b76956b239deca1272
Author: Joe Lawrence <joe.lawrence@stratus.com>
Date:   Wed Sep 10 15:07:50 2014 -0400

    usb: hub: take hub->hdev reference when processing from eventlist

    During surprise device hotplug removal tests, it was observed that
    hub_events may try to call usb_lock_device on a device that has already
    been freed. Protect the usb_device by taking out a reference (under the
    hub_event_lock) when hub_events pulls it off the list, returning the
    reference after hub_events is finished using it.

    Signed-off-by: Joe Lawrence <joe.lawrence@stratus.com>
    Suggested-by: David Bulkow <david.bulkow@stratus.com> for using kref
    Suggested-by: Alan Stern <stern@rowland.harvard.edu> for placement
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/core/hub.c b/drivers/usb/core/hub.c
index 4ae2748..222d311 100644
--- a/drivers/usb/core/hub.c
+++ b/drivers/usb/core/hub.c
@@ -4949,9 +4949,10 @@ static void hub_events(void)
 
   hub = list_entry(tmp, struct usb_hub, event_list);
   kref_get(&hub->kref);
+  hdev = hub->hdev;
+  usb_get_dev(hdev);
   spin_unlock_irq(&hub_event_lock);
 
-  hdev = hub->hdev;
   hub_dev = hub->intfdev;
   intf = to_usb_interface(hub_dev);
   dev_dbg(hub_dev, "state %d ports %d chg %04x evt %04x\n",
@@ -5064,6 +5065,7 @@ static void hub_events(void)
   usb_autopm_put_interface(intf);
  loop_disconnected:
   usb_unlock_device(hdev);
+  usb_put_dev(hdev);
   kref_put(&hub->kref, hub_release);
 
  } /* end while (1) */
-- 
1.7.1