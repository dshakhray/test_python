From c51f21a3628af8b23deb5b2e6824e62b437a3855 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 18:59:57 -0400
Subject: [fs] btrfs: unlock inodes in correct order in clone ioctl

Message-id: <1407179109-13714-111-git-send-email-sandeen@redhat.com>
Patchwork-id: 87070
O-Subject: [RHEL7.1 PATCH 110/422] Btrfs: unlock inodes in correct order in clone ioctl
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Filipe David Borba Manana <fdmanana@gmail.com>

commit c57c2b3ed248b3f1712e4172eb85b361199582f2
Author: Filipe David Borba Manana <fdmanana@gmail.com>
Date:   Sat Jan 11 21:31:25 2014 +0000

    Btrfs: unlock inodes in correct order in clone ioctl

    In the clone ioctl, when the source and target inodes are different,
    we can acquire their mutexes in 2 possible different orders. After
    we're done cloning, we were releasing the mutexes always in the same
    order - the most correct way of doing it is to release them by the
    reverse order they were acquired.

    Signed-off-by: Filipe David Borba Manana <fdmanana@gmail.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/ioctl.c b/fs/btrfs/ioctl.c
index 1c33a9c..b19d3eb 100644
--- a/fs/btrfs/ioctl.c
+++ b/fs/btrfs/ioctl.c
@@ -3241,9 +3241,17 @@ static noinline long btrfs_ioctl_clone(struct file *file, unsigned long srcfd,
 
  unlock_extent(&BTRFS_I(src)->io_tree, off, off + len - 1);
 out_unlock:
- mutex_unlock(&src->i_mutex);
- if (!same_inode)
-  mutex_unlock(&inode->i_mutex);
+ if (!same_inode) {
+  if (inode < src) {
+   mutex_unlock(&src->i_mutex);
+   mutex_unlock(&inode->i_mutex);
+  } else {
+   mutex_unlock(&inode->i_mutex);
+   mutex_unlock(&src->i_mutex);
+  }
+ } else {
+  mutex_unlock(&src->i_mutex);
+ }
 out_fput:
  fdput(src_file);
 out_drop_write:
-- 
1.7.1