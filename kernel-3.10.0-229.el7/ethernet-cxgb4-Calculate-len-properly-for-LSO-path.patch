From f2b8a5365134d495265d6ed5409a4c928136a807 Mon Sep 17 00:00:00 2001
From: Sai Vemuri <svemuri@redhat.com>
Date: Thu, 11 Sep 2014 22:42:39 -0400
Subject: [ethernet] cxgb4: Calculate len properly for LSO path

Message-id: <1410475447-94392-21-git-send-email-svemuri@redhat.com>
Patchwork-id: 93834
O-Subject: [RHEL7.1 PATCH BZ 1124947 020/108] cxgb4: Calculate len properly for LSO path
Bugzilla: 1124947
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Commit 0034b29 ("cxgb4: Don't assume LSO only uses SGL path in t4_eth_xmit()")
introduced a regression where-in length was calculated wrongly for LSO path,
causing chip hangs.
So, correct the calculation of len.

Fixes: 0034b29 ("cxgb4: Don't assume LSO only uses SGL path in t4_eth_xmit()")
Signed-off-by: Kumar Sanghvi <kumaras@chelsio.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ca71de6ba7c18a3a1576e04f7ed8d8508ceba4c9)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/chelsio/cxgb4/sge.c b/drivers/net/ethernet/chelsio/cxgb4/sge.c
index ffb6e11..a0a53e6 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/sge.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/sge.c
@@ -1051,7 +1051,6 @@ out_free: dev_kfree_skb(skb);
  end = (u64 *)wr + flits;
 
  len = immediate ? skb->len : 0;
- len += sizeof(*cpl);
  ssi = skb_shinfo(skb);
  if (ssi->gso_size) {
   struct cpl_tx_pkt_lso *lso = (void *)wr;
@@ -1079,6 +1078,7 @@ out_free: dev_kfree_skb(skb);
   q->tso++;
   q->tx_cso += ssi->gso_segs;
  } else {
+  len += sizeof(*cpl);
   wr->op_immdlen = htonl(FW_WR_OP(FW_ETH_TX_PKT_WR) |
            FW_WR_IMMDLEN(len));
   cpl = (void *)(wr + 1);
-- 
1.7.1