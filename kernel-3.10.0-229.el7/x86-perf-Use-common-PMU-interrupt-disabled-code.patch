From d59ae60960390f63adf6e5affa56c23d7deeb102 Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Mon, 8 Sep 2014 13:04:34 -0400
Subject: [x86] perf: Use common PMU interrupt disabled code

Message-id: <1410181752-25631-30-git-send-email-jolsa@redhat.com>
Patchwork-id: 91721
O-Subject: [PATCH RHEL7.1 BZ1134356 029/307] perf/x86: Use common PMU interrupt disabled code
Bugzilla: 1134356
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1134356
https://bugzilla.redhat.com/show_bug.cgi?id=1134356

upstream
========
commit c184c980de30dc5f6fec4b281928aa6743708da9
Author: Vince Weaver <vincent.weaver@maine.edu>
Date: Fri May 16 17:18:07 2014 -0400

description
===========
Make the x86 perf code use the new common PMU interrupt disabled code.

Typically most x86 machines have working PMU interrupts, although
some older p6-class machines had this problem.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kernel/cpu/perf_event.c b/arch/x86/kernel/cpu/perf_event.c
index 91f4422..eab5b35 100644
--- a/arch/x86/kernel/cpu/perf_event.c
+++ b/arch/x86/kernel/cpu/perf_event.c
@@ -303,15 +303,6 @@ int x86_setup_perfctr(struct perf_event *event)
   hwc->sample_period = x86_pmu.max_period;
   hwc->last_period = hwc->sample_period;
   local64_set(&hwc->period_left, hwc->sample_period);
- } else {
-  /*
-   * If we have a PMU initialized but no APIC
-   * interrupts, we cannot sample hardware
-   * events (user-space has to fall back and
-   * sample via a hrtimer based software event):
-   */
-  if (!x86_pmu.apic)
-   return -EOPNOTSUPP;
  }
 
  if (attr->type == PERF_TYPE_RAW)
@@ -1364,6 +1355,15 @@ static void __init pmu_check_apic(void)
  x86_pmu.apic = 0;
  pr_info("no APIC, boot with the \"lapic\" boot parameter to force-enable it.\n");
  pr_info("no hardware sampling interrupt available.\n");
+
+ /*
+  * If we have a PMU initialized but no APIC
+  * interrupts, we cannot sample hardware
+  * events (user-space has to fall back and
+  * sample via a hrtimer based software event):
+  */
+ pmu.capabilities |= PERF_PMU_CAP_NO_INTERRUPT;
+
 }
 
 static struct attribute_group x86_pmu_format_group = {
-- 
1.7.1