From acca96b87dce0f9cdfad066a5677047dd824442d Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:06:23 -0400
Subject: [usb] xhci: xhci_mem_cleanup - make sure cmd_ring_reserved_trbs really is 0

Message-id: <1410887463-20674-312-git-send-email-dzickus@redhat.com>
Patchwork-id: 95442
O-Subject: [RHEL7 PATCH 311/591] xhci: xhci_mem_cleanup: make sure cmd_ring_reserved_trbs really is 0
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 127329d76b8534fb58c207db1f172d8468b828ff
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Nov 7 08:19:45 2013 +0100

    xhci: xhci_mem_cleanup: make sure cmd_ring_reserved_trbs really is 0

    cmd_ring_reserved_trbs gets decremented by xhci_free_stream_info(), so set it
    to 0 after freeing all rings, otherwise it wraps around to a very large value
    when rings with streams are free-ed.

    Before this patch the wrap-around could be triggered when xhci_resume
    calls xhci_mem_cleanup if the controller resume fails.

    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/host/xhci-mem.c b/drivers/usb/host/xhci-mem.c
index bac8cb9..6854c20 100644
--- a/drivers/usb/host/xhci-mem.c
+++ b/drivers/usb/host/xhci-mem.c
@@ -1812,7 +1812,6 @@ void xhci_mem_cleanup(struct xhci_hcd *xhci)
 
  if (xhci->lpm_command)
   xhci_free_command(xhci, xhci->lpm_command);
- xhci->cmd_ring_reserved_trbs = 0;
  if (xhci->cmd_ring)
   xhci_ring_free(xhci, xhci->cmd_ring);
  xhci->cmd_ring = NULL;
@@ -1877,6 +1876,7 @@ void xhci_mem_cleanup(struct xhci_hcd *xhci)
  }
 
 no_bw:
+ xhci->cmd_ring_reserved_trbs = 0;
  xhci->num_usb2_ports = 0;
  xhci->num_usb3_ports = 0;
  xhci->num_active_eps = 0;
-- 
1.7.1