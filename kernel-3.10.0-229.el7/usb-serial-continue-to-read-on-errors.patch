From 95daaf08d88a081e0ed891435151a35d388f3317 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:07:08 -0400
Subject: [usb] serial: continue to read on errors

Message-id: <1410887463-20674-357-git-send-email-dzickus@redhat.com>
Patchwork-id: 95559
O-Subject: [RHEL7 PATCH 356/591] USB: serial: continue to read on errors
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit fc11efe2800f2f9ba2ccb268321642b7e9f73a65
Author: Johan Hovold <jhovold@gmail.com>
Date:   Wed Mar 12 19:09:39 2014 +0100

    USB: serial: continue to read on errors

    Make sure to try to resubmit the read urb on errors.

    Currently a recoverable error would lead to reduced throughput as only
    one urb will be used until the port is closed and reopened (or
    resumed or unthrottled).

    Also upgrade error messages from debug to error log level.

    Signed-off-by: Johan Hovold <jhovold@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <greg@kroah.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/serial/generic.c b/drivers/usb/serial/generic.c
index b63ce02..d7f39ea 100644
--- a/drivers/usb/serial/generic.c
+++ b/drivers/usb/serial/generic.c
@@ -359,16 +359,29 @@ void usb_serial_generic_read_bulk_callback(struct urb *urb)
 
  dev_dbg(&port->dev, "%s - urb %d, len %d\n", __func__, i,
        urb->actual_length);
-
- if (urb->status) {
-  dev_dbg(&port->dev, "%s - non-zero urb status: %d\n",
-   __func__, urb->status);
+ switch (urb->status) {
+ case 0:
+  break;
+ case -ENOENT:
+ case -ECONNRESET:
+ case -ESHUTDOWN:
+  dev_dbg(&port->dev, "%s - urb stopped: %d\n",
+       __func__, urb->status);
+  return;
+ case -EPIPE:
+  dev_err(&port->dev, "%s - urb stopped: %d\n",
+       __func__, urb->status);
   return;
+ default:
+  dev_err(&port->dev, "%s - nonzero urb status: %d\n",
+       __func__, urb->status);
+  goto resubmit;
  }
 
  usb_serial_debug_data(&port->dev, __func__, urb->actual_length, data);
  port->serial->type->process_read_urb(urb);
 
+resubmit:
  /* Throttle the device if requested by tty */
  spin_lock_irqsave(&port->lock, flags);
  port->throttled = port->throttle_req;
-- 
1.7.1