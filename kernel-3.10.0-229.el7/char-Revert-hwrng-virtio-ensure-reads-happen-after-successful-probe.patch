From 7b60f0782a92cdd3afbed311a841653d3e07e4e6 Mon Sep 17 00:00:00 2001
From: Amit Shah <amit.shah@redhat.com>
Date: Tue, 12 Aug 2014 11:30:59 -0400
Subject: [char] Revert: hwrng: virtio - ensure reads happen after successful probe

Message-id: <57fecd08d1201956fa427f39555734dd582c9fe2.1407842211.git.amit.shah@redhat.com>
Patchwork-id: 87656
O-Subject: [RHEL7.1 kernel PATCH 9/9] Revert "hwrng: virtio - ensure reads happen after successful probe"
Bugzilla: 1119299
RH-Acked-by: Amos Kong <akong@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Herbert Xu <herbert.xu@redhat.com>

This reverts commit e052dbf554610e2104c5a7518c4d8374bed701bb.

Now that we use the virtio ->scan() function to register with the hwrng
core, we will not get read requests till probe is successfully finished.

So revert the workaround we had in place to refuse read requests while
we were not yet setup completely.

Signed-off-by: Amit Shah <amit.shah@redhat.com>
Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
(cherry picked from commit eeec626366ffe558fc3d5685bd2b49a962acf57d)
Signed-off-by: Amit Shah <amit.shah@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/char/hw_random/core.c b/drivers/char/hw_random/core.c
index ec12890..74ee3bd 100644
--- a/drivers/char/hw_random/core.c
+++ b/drivers/char/hw_random/core.c
@@ -69,12 +69,6 @@ static void add_early_randomness(struct hwrng *rng)
  unsigned char bytes[16];
  int bytes_read;
 
- /*
-  * Currently only virtio-rng cannot return data during device
-  * probe, and that's handled in virtio-rng.c itself.  If there
-  * are more such devices, this call to rng_get_data can be
-  * made conditional here instead of doing it per-device.
-  */
  bytes_read = rng_get_data(rng, bytes, sizeof(bytes), 1);
  if (bytes_read > 0)
   add_device_randomness(bytes, bytes_read);
diff --git a/drivers/char/hw_random/virtio-rng.c b/drivers/char/hw_random/virtio-rng.c
index 91d18e1..5bf8a55 100644
--- a/drivers/char/hw_random/virtio-rng.c
+++ b/drivers/char/hw_random/virtio-rng.c
@@ -39,7 +39,6 @@ struct virtrng_info {
  bool hwrng_register_done;
 };
 
-static bool probe_done;
 
 static void random_recv_done(struct virtqueue *vq)
 {
@@ -70,13 +69,6 @@ static int virtio_read(struct hwrng *rng, void *buf, size_t size, bool wait)
  int ret;
  struct virtrng_info *vi = (struct virtrng_info *)rng->priv;
 
- /*
-  * Don't ask host for data till we're setup.  This call can
-  * happen during hwrng_register(), after commit d9e7972619.
-  */
- if (unlikely(!probe_done))
-  return 0;
-
  if (!vi->busy) {
   vi->busy = true;
   init_completion(&vi->have_data);
@@ -138,7 +130,6 @@ static int probe_common(struct virtio_device *vdev)
   return err;
  }
 
- probe_done = true;
  return 0;
 }
 
-- 
1.7.1