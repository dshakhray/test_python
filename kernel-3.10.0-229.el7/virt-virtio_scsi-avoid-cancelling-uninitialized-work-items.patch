From 71daccc1f916642291e008332c2de11ab8758e9f Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Thu, 11 Sep 2014 20:14:54 -0400
Subject: [virt] virtio_scsi: avoid cancelling uninitialized work items

Message-id: <1410466495-19013-1-git-send-email-pbonzini@redhat.com>
Patchwork-id: 93783
O-Subject: [RHEL7 PATCH] virtio-scsi: avoid cancelling uninitialized work items
Bugzilla: 1050834
RH-Acked-by: Jason Wang <jasowang@redhat.com>
RH-Acked-by: Fam Zheng <famz@redhat.com>
RH-Acked-by: Stefan Hajnoczi <stefanha@redhat.com>
RH-Acked-by: Ewan Milne <emilne@redhat.com>

Bugzilla: 1050834

Brew build: 7941686

Calling the workqueue interface on uninitialized work items isn't a
good idea even if they're zeroed. It's not failing catastrophically only
through happy accidents.

Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit cdda0e5acbb78f7b777049f8c27899e5c5bb368f)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/virtio_scsi.c b/drivers/scsi/virtio_scsi.c
index 2b9e987..bddf5ea 100644
--- a/drivers/scsi/virtio_scsi.c
+++ b/drivers/scsi/virtio_scsi.c
@@ -301,6 +301,8 @@ static void virtscsi_ctrl_done(struct virtqueue *vq)
  virtscsi_vq_done(vscsi, &vscsi->ctrl_vq, virtscsi_complete_free);
 };
 
+static void virtscsi_handle_event(struct work_struct *work);
+
 static int virtscsi_kick_event(struct virtio_scsi *vscsi,
           struct virtio_scsi_event_node *event_node)
 {
@@ -308,6 +310,7 @@ static int virtscsi_kick_event(struct virtio_scsi *vscsi,
  struct scatterlist sg;
  unsigned long flags;
 
+ INIT_WORK(&event_node->work, virtscsi_handle_event);
  sg_init_one(&sg, &event_node->event, sizeof(struct virtio_scsi_event));
 
  spin_lock_irqsave(&vscsi->event_vq.vq_lock, flags);
@@ -425,7 +428,6 @@ static void virtscsi_complete_event(struct virtio_scsi *vscsi, void *buf)
 {
  struct virtio_scsi_event_node *event_node = buf;
 
- INIT_WORK(&event_node->work, virtscsi_handle_event);
  schedule_work(&event_node->work);
 }
 
-- 
1.7.1