From 5f50fbd5c50063a10723826e8ba421ab8e2207b1 Mon Sep 17 00:00:00 2001
From: J. Bruce Fields <bfields@redhat.com>
Date: Mon, 23 Jun 2014 21:50:46 -0400
Subject: [fs] nfsd: reserve head space for krb5 integ/priv info

Message-id: <1403560314-32525-105-git-send-email-bfields@redhat.com>
Patchwork-id: 84510
O-Subject: [Patch RHEL7 104/172] nfsd4: reserve head space for krb5 integ/priv info
Bugzilla: 1111719
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

Currently if the nfs-level part of a reply would be too large, we'll
return an error to the client.  But if the nfs-level part fits and
leaves no room for krb5p or krb5i stuff, then we just drop the request
entirely.

That's no good.  Instead, reserve some slack space at the end of the
buffer and make sure we fail outright if we'd come close.

The slack space here is a massive overstimate of what's required, we
should probably try for a tighter limit at some point.

Signed-off-by: J. Bruce Fields <bfields@redhat.com>
Upstream: 1802a67894fab3ff90a3ef4f484e97a5b4515426
Bugzilla: 1111719
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/nfsd/nfs4proc.c b/fs/nfsd/nfs4proc.c
index 7d09498..259e5f5 100644
--- a/fs/nfsd/nfs4proc.c
+++ b/fs/nfsd/nfs4proc.c
@@ -1261,7 +1261,7 @@ static void svcxdr_init_encode(struct svc_rqst *rqstp,
 
  xdr->buf = buf;
  xdr->p   = head->iov_base + head->iov_len;
- xdr->end = head->iov_base + PAGE_SIZE;
+ xdr->end = head->iov_base + PAGE_SIZE - 2 * RPC_MAX_AUTH_SIZE;
 }
 
 /*
-- 
1.7.1