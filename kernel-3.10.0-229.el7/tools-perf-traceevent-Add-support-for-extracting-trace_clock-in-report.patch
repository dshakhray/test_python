From 4a66d98b29fa19df75873333f08bc0cbccafe0df Mon Sep 17 00:00:00 2001
From: Jiri Olsa <jolsa@redhat.com>
Date: Tue, 19 Aug 2014 15:27:05 -0400
Subject: [tools] perf/traceevent: Add support for extracting trace_clock in report

Message-id: <1408462094-14194-257-git-send-email-jolsa@redhat.com>
Patchwork-id: 88216
O-Subject: [PATCH RHEL7.1 BZ1131394 256/325] tools lib traceevent: Add support for extracting trace_clock in report
Bugzilla: 1131394
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Jiri Olsa <jolsa@kernel.org>

Bugzilla: 1131394
https://bugzilla.redhat.com/show_bug.cgi?id=1131394

upstream
========
commit 1b372ca52a02cc97520c13d79bdfb0a7ff81b772
Author: Yoshihiro YUNOMAE <yoshihiro.yunomae.ez@hitachi.com>
Date: Fri Nov 1 17:53:53 2013 -0400

description
===========
If trace-cmd extracts trace_clock, trace-cmd reads trace_clock data from
the trace.dat and switches outputting format of timestamp for each
trace_clock.
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/tools/lib/traceevent/event-parse.c b/tools/lib/traceevent/event-parse.c
index d1c2a6a..deedff9 100644
--- a/tools/lib/traceevent/event-parse.c
+++ b/tools/lib/traceevent/event-parse.c
@@ -305,6 +305,11 @@ int pevent_register_comm(struct pevent *pevent, const char *comm, int pid)
  return 0;
 }
 
+void pevent_register_trace_clock(struct pevent *pevent, char *trace_clock)
+{
+ pevent->trace_clock = trace_clock;
+}
+
 struct func_map {
  unsigned long long  addr;
  char    *func;
@@ -4443,8 +4448,21 @@ void pevent_event_info(struct trace_seq *s, struct event_format *event,
  trace_seq_terminate(s);
 }
 
+static bool is_timestamp_in_us(char *trace_clock, bool use_trace_clock)
+{
+ if (!use_trace_clock)
+  return true;
+
+ if (!strcmp(trace_clock, "local") || !strcmp(trace_clock, "global")
+     || !strcmp(trace_clock, "uptime") || !strcmp(trace_clock, "perf"))
+  return true;
+
+ /* trace_clock is setting in tsc or counter mode */
+ return false;
+}
+
 void pevent_print_event(struct pevent *pevent, struct trace_seq *s,
-   struct pevent_record *record)
+   struct pevent_record *record, bool use_trace_clock)
 {
  static const char *spaces = "                    "; /* 20 spaces */
  struct event_format *event;
@@ -4457,9 +4475,14 @@ void pevent_print_event(struct pevent *pevent, struct trace_seq *s,
  int pid;
  int len;
  int p;
+ bool use_usec_format;
 
- secs = record->ts / NSECS_PER_SEC;
- nsecs = record->ts - secs * NSECS_PER_SEC;
+ use_usec_format = is_timestamp_in_us(pevent->trace_clock,
+       use_trace_clock);
+ if (use_usec_format) {
+  secs = record->ts / NSECS_PER_SEC;
+  nsecs = record->ts - secs * NSECS_PER_SEC;
+ }
 
  if (record->size < 0) {
   do_warning("ug! negative record size %d", record->size);
@@ -4484,15 +4507,20 @@ void pevent_print_event(struct pevent *pevent, struct trace_seq *s,
  } else
   trace_seq_printf(s, "%16s-%-5d [%03d]", comm, pid, record->cpu);
 
- if (pevent->flags & PEVENT_NSEC_OUTPUT) {
-  usecs = nsecs;
-  p = 9;
- } else {
-  usecs = (nsecs + 500) / NSECS_PER_USEC;
-  p = 6;
- }
+ if (use_usec_format) {
+  if (pevent->flags & PEVENT_NSEC_OUTPUT) {
+   usecs = nsecs;
+   p = 9;
+  } else {
+   usecs = (nsecs + 500) / NSECS_PER_USEC;
+   p = 6;
+  }
 
- trace_seq_printf(s, " %5lu.%0*lu: %s: ", secs, p, usecs, event->name);
+  trace_seq_printf(s, " %5lu.%0*lu: %s: ",
+     secs, p, usecs, event->name);
+ } else
+  trace_seq_printf(s, " %12llu: %s: ",
+     record->ts, event->name);
 
  /* Space out the event names evenly. */
  len = strlen(event->name);
diff --git a/tools/lib/traceevent/event-parse.h b/tools/lib/traceevent/event-parse.h
index c37b202..7503edf 100644
--- a/tools/lib/traceevent/event-parse.h
+++ b/tools/lib/traceevent/event-parse.h
@@ -20,6 +20,7 @@
 #ifndef _PARSE_EVENTS_H
 #define _PARSE_EVENTS_H
 
+#include <stdbool.h>
 #include <stdarg.h>
 #include <regex.h>
 
@@ -450,6 +451,8 @@ struct pevent {
 
  /* cache */
  struct event_format *last_event;
+
+ char *trace_clock;
 };
 
 static inline void pevent_set_flag(struct pevent *pevent, int flag)
@@ -527,6 +530,7 @@ enum trace_flag_type {
 };
 
 int pevent_register_comm(struct pevent *pevent, const char *comm, int pid);
+void pevent_register_trace_clock(struct pevent *pevent, char *trace_clock);
 int pevent_register_function(struct pevent *pevent, char *name,
         unsigned long long addr, char *mod);
 int pevent_register_print_string(struct pevent *pevent, char *fmt,
@@ -534,7 +538,7 @@ int pevent_register_print_string(struct pevent *pevent, char *fmt,
 int pevent_pid_is_registered(struct pevent *pevent, int pid);
 
 void pevent_print_event(struct pevent *pevent, struct trace_seq *s,
-   struct pevent_record *record);
+   struct pevent_record *record, bool use_trace_clock);
 
 int pevent_parse_header_page(struct pevent *pevent, char *buf, unsigned long size,
         int long_size);
-- 
1.7.1