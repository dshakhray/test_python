From e04dd7b6f17c944c44cada77b83196704f0fe524 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Wed, 6 Aug 2014 03:50:08 -0400
Subject: [pci] Check IORESOURCE_UNSET before updating BAR

Message-id: <20140806035008.1438.91931.stgit@gir.stowe>
Patchwork-id: 87465
O-Subject: [RHEL7.1 PATCH 56/69] PCI: Check IORESOURCE_UNSET before updating BAR
Bugzilla: 1110896
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1110896
Upstream Status: cd8a4d3657c3f2cf9ce3780707be1debb8fea6e2

commit cd8a4d3657c3f2cf9ce3780707be1debb8fea6e2
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Wed Feb 26 11:25:59 2014 -0700

    PCI: Check IORESOURCE_UNSET before updating BAR

    Check to make sure we don't update a BAR with an address we haven't
    assigned.

    If we haven't assigned an address to a resource, we shouldn't write it to a
    BAR.  This isn't a problem for the usual path via pci_assign_resource(),
    which clears IORESOURCE_UNSET before calling pci_update_resource(), but
    paths like pci_restore_bars() can call this for resources we haven't
    assigned.

    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/pci/setup-res.c b/drivers/pci/setup-res.c
index 725d5b2..7f76521 100644
--- a/drivers/pci/setup-res.c
+++ b/drivers/pci/setup-res.c
@@ -44,6 +44,9 @@ void pci_update_resource(struct pci_dev *dev, int resno)
  if (!res->flags)
   return;
 
+ if (res->flags & IORESOURCE_UNSET)
+  return;
+
  /*
   * Ignore non-moveable resources.  This might be legacy resources for
   * which no functional BAR register exists or another important
-- 
1.7.1