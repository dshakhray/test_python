From 78252900f5c5ad538a696844dbfb1ec1a01a9038 Mon Sep 17 00:00:00 2001
From: Rob Clark <rclark@redhat.com>
Date: Wed, 17 Dec 2014 21:38:17 -0500
Subject: [drm] ttm: fix handling of TTM_PL_FLAG_TOPDOWN

Message-id: <1418852380-13061-7-git-send-email-rclark@redhat.com>
Patchwork-id: 102142
O-Subject: [RHEL7 drm 06/89] drm/ttm: fix handling of TTM_PL_FLAG_TOPDOWN v2
Bugzilla: 1173317
RH-Acked-by: Jerome Glisse <jglisse@redhat.com>
RH-Acked-by: Dave Airlie <airlied@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1173317
Upstream: since v3.16.4

commit fc065a4cecb9d4936afc5d1d083c061a56dc37b4

Author:     Christian Koenig <christian.koenig@amd.com>
AuthorDate: Thu Jul 3 09:02:23 2014 +0200
Commit:     Rob Clark <rclark@redhat.com>
CommitDate: Wed Dec 10 17:06:25 2014 -0500

    drm/ttm: fix handling of TTM_PL_FLAG_TOPDOWN v2

    commit e3f202798aaa808e7a38faa8c3a9f0aa93b85cc0 upstream.

    bo->mem.placement is not initialized when ttm_bo_man_get_node is called,
    so the flag had no effect at all.

    v2: change nouveau and vmwgfx as well

    Signed-off-by: Christian Koenig <christian.koenig@amd.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Signed-off-by: Rob Clark <rclark@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nouveau_ttm.c b/drivers/gpu/drm/nouveau/nouveau_ttm.c
index ab0228f..7e185c1 100644
--- a/drivers/gpu/drm/nouveau/nouveau_ttm.c
+++ b/drivers/gpu/drm/nouveau/nouveau_ttm.c
@@ -76,6 +76,7 @@ static int
 nouveau_vram_manager_new(struct ttm_mem_type_manager *man,
     struct ttm_buffer_object *bo,
     struct ttm_placement *placement,
+    uint32_t flags,
     struct ttm_mem_reg *mem)
 {
  struct nouveau_drm *drm = nouveau_bdev(man->bdev);
@@ -162,6 +163,7 @@ static int
 nouveau_gart_manager_new(struct ttm_mem_type_manager *man,
     struct ttm_buffer_object *bo,
     struct ttm_placement *placement,
+    uint32_t flags,
     struct ttm_mem_reg *mem)
 {
  struct nouveau_drm *drm = nouveau_bdev(bo->bdev);
@@ -242,6 +244,7 @@ static int
 nv04_gart_manager_new(struct ttm_mem_type_manager *man,
         struct ttm_buffer_object *bo,
         struct ttm_placement *placement,
+        uint32_t flags,
         struct ttm_mem_reg *mem)
 {
  struct nouveau_mem *node;
diff --git a/drivers/gpu/drm/ttm/ttm_bo.c b/drivers/gpu/drm/ttm/ttm_bo.c
index 4ab9f71..a13a100 100644
--- a/drivers/gpu/drm/ttm/ttm_bo.c
+++ b/drivers/gpu/drm/ttm/ttm_bo.c
@@ -784,7 +784,7 @@ static int ttm_bo_mem_force_space(struct ttm_buffer_object *bo,
  int ret;
 
  do {
-  ret = (*man->func->get_node)(man, bo, placement, mem);
+  ret = (*man->func->get_node)(man, bo, placement, 0, mem);
   if (unlikely(ret != 0))
    return ret;
   if (mem->mm_node)
@@ -897,7 +897,8 @@ int ttm_bo_mem_space(struct ttm_buffer_object *bo,
 
   if (man->has_type && man->use_type) {
    type_found = true;
-   ret = (*man->func->get_node)(man, bo, placement, mem);
+   ret = (*man->func->get_node)(man, bo, placement,
+           cur_flags, mem);
    if (unlikely(ret))
     return ret;
   }
@@ -937,7 +938,6 @@ int ttm_bo_mem_space(struct ttm_buffer_object *bo,
   ttm_flag_masked(&cur_flags, placement->busy_placement[i],
     ~TTM_PL_MASK_MEMTYPE);
 
-
   if (mem_type == TTM_PL_SYSTEM) {
    mem->mem_type = mem_type;
    mem->placement = cur_flags;
diff --git a/drivers/gpu/drm/ttm/ttm_bo_manager.c b/drivers/gpu/drm/ttm/ttm_bo_manager.c
index bd850c9..9e103a4 100644
--- a/drivers/gpu/drm/ttm/ttm_bo_manager.c
+++ b/drivers/gpu/drm/ttm/ttm_bo_manager.c
@@ -50,6 +50,7 @@ struct ttm_range_manager {
 static int ttm_bo_man_get_node(struct ttm_mem_type_manager *man,
           struct ttm_buffer_object *bo,
           struct ttm_placement *placement,
+          uint32_t flags,
           struct ttm_mem_reg *mem)
 {
  struct ttm_range_manager *rman = (struct ttm_range_manager *) man->priv;
@@ -67,7 +68,7 @@ static int ttm_bo_man_get_node(struct ttm_mem_type_manager *man,
  if (!node)
   return -ENOMEM;
 
- if (bo->mem.placement & TTM_PL_FLAG_TOPDOWN)
+ if (flags & TTM_PL_FLAG_TOPDOWN)
   aflags = DRM_MM_CREATE_TOP;
 
  spin_lock(&rman->lock);
diff --git a/drivers/gpu/drm/vmwgfx/vmwgfx_gmrid_manager.c b/drivers/gpu/drm/vmwgfx/vmwgfx_gmrid_manager.c
index b1273e8..26f8bdd 100644
--- a/drivers/gpu/drm/vmwgfx/vmwgfx_gmrid_manager.c
+++ b/drivers/gpu/drm/vmwgfx/vmwgfx_gmrid_manager.c
@@ -47,6 +47,7 @@ struct vmwgfx_gmrid_man {
 static int vmw_gmrid_man_get_node(struct ttm_mem_type_manager *man,
       struct ttm_buffer_object *bo,
       struct ttm_placement *placement,
+      uint32_t flags,
       struct ttm_mem_reg *mem)
 {
  struct vmwgfx_gmrid_man *gman =
diff --git a/include/drm/ttm/ttm_bo_driver.h b/include/drm/ttm/ttm_bo_driver.h
index a5183da..f2fcd3e 100644
--- a/include/drm/ttm/ttm_bo_driver.h
+++ b/include/drm/ttm/ttm_bo_driver.h
@@ -182,6 +182,7 @@ struct ttm_mem_type_manager_func {
   * @man: Pointer to a memory type manager.
   * @bo: Pointer to the buffer object we're allocating space for.
   * @placement: Placement details.
+  * @flags: Additional placement flags.
   * @mem: Pointer to a struct ttm_mem_reg to be filled in.
   *
   * This function should allocate space in the memory type managed
@@ -206,6 +207,7 @@ struct ttm_mem_type_manager_func {
  int  (*get_node)(struct ttm_mem_type_manager *man,
     struct ttm_buffer_object *bo,
     struct ttm_placement *placement,
+    uint32_t flags,
     struct ttm_mem_reg *mem);
 
  /**
-- 
1.7.1