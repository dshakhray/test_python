From d20e02c96baf51ac550158db80d56e064090a89e Mon Sep 17 00:00:00 2001
From: Richard Guy Briggs <rgb@redhat.com>
Date: Tue, 23 Sep 2014 03:59:05 -0400
Subject: [kernel] sched: declare pid_alive as inline

Message-id: <c2656f9f1ef2954a432d3134d7475cc1c82ca0a1.1411415193.git.rgb@redhat.com>
Patchwork-id: 96451
O-Subject: [RHEL7 PATCH 2/5] sched: declare pid_alive as inline
Bugzilla: 1010455
RH-Acked-by: Paul Moore <pmoore@redhat.com>

We accidentally declared pid_alive without any extern/inline connotation.
Some platforms were fine with this, some like ia64 and mips were very angry.
If the function is inline, the prototype should be inline!

on ia64:
include/linux/sched.h:1718: warning: 'pid_alive' declared inline after
being called

Upstream: 80e0b6e
Signed-off-by: Richard Guy Briggs <rgb@redhat.com>
Signed-off-by: Eric Paris <eparis@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/linux/sched.h b/include/linux/sched.h
index 1b2696e..ec3d137 100644
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -1621,7 +1621,7 @@ static inline pid_t task_tgid_vnr(struct task_struct *tsk)
 }
 
 
-static int pid_alive(const struct task_struct *p);
+static inline int pid_alive(const struct task_struct *p);
 static inline pid_t task_ppid_nr_ns(const struct task_struct *tsk, struct pid_namespace *ns)
 {
  pid_t pid = 0;
-- 
1.7.1