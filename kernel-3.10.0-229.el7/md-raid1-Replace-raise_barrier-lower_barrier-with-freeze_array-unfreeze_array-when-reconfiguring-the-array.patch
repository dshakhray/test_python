From c4cfbda5b136f644227a9bc2eb7e7e2bd059e3f8 Mon Sep 17 00:00:00 2001
From: Jes Sorensen <Jes.Sorensen@redhat.com>
Date: Mon, 1 Sep 2014 09:25:30 -0400
Subject: [md] raid1: Replace raise_barrier/lower_barrier with freeze_array/unfreeze_array when reconfiguring the array

Message-id: <1409563584-9000-29-git-send-email-Jes.Sorensen@redhat.com>
Patchwork-id: 89967
O-Subject: [RHEL7.1 PATCH 28/82] raid1: Replace raise_barrier/lower_barrier with freeze_array/unfreeze_array when reconfiguring the array.
Bugzilla: 1085530
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

From: majianpeng <majianpeng@gmail.com>

We used to use raise_barrier to suspend normal IO while we reconfigure
the array.  However raise_barrier will soon only suspend some normal
IO, not all.  So we need something else.
Change it to use freeze_array.
But freeze_array not only suspends normal io, it also suspends
resync io.
For the place where call raise_barrier for reconfigure, it isn't a
problem.

Signed-off-by: Jianpeng Ma <majianpeng@gmail.com>
Signed-off-by: NeilBrown <neilb@suse.de>
(cherry picked from commit 07169fd478ed2fbb3c894d524be9400658f16747)
Signed-off-by: Jes Sorensen <Jes.Sorensen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/md/raid1.c b/drivers/md/raid1.c
index 49c7040..35bb864 100644
--- a/drivers/md/raid1.c
+++ b/drivers/md/raid1.c
@@ -2870,8 +2870,8 @@ static int stop(struct mddev *mddev)
       atomic_read(&bitmap->behind_writes) == 0);
  }
 
- raise_barrier(conf);
- lower_barrier(conf);
+ freeze_array(conf, 0);
+ unfreeze_array(conf);
 
  md_unregister_thread(&mddev->thread);
  if (conf->r1bio_pool)
@@ -3030,10 +3030,10 @@ static void raid1_quiesce(struct mddev *mddev, int state)
   wake_up(&conf->wait_barrier);
   break;
  case 1:
-  raise_barrier(conf);
+  freeze_array(conf, 0);
   break;
  case 0:
-  lower_barrier(conf);
+  unfreeze_array(conf);
   break;
  }
 }
@@ -3050,7 +3050,8 @@ static void *raid1_takeover(struct mddev *mddev)
   mddev->new_chunk_sectors = 0;
   conf = setup_conf(mddev);
   if (!IS_ERR(conf))
-   conf->barrier = 1;
+   /* Array must appear to be quiesced */
+   conf->array_frozen = 1;
   return conf;
  }
  return ERR_PTR(-EINVAL);
-- 
1.7.1