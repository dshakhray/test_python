From ddfd4f25c7360be8420c86eb076972f1ec2ec6d5 Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Tue, 22 Jul 2014 14:40:11 -0400
Subject: [virt] kvm: fix wrong address when writing Hyper-V tsc page

Message-id: <1406040016-3289-217-git-send-email-pbonzini@redhat.com>
Patchwork-id: 86295
O-Subject: [RHEL7 PATCH v2 216/221] kvm: fix wrong address when writing Hyper-V tsc page
Bugzilla: 1116936
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Xiaoming Gao <newtongao@tencent.com>

When kvm_write_guest writes the tsc_ref structure to the guest, or it will lead
the low HV_X64_MSR_TSC_REFERENCE_ADDRESS_SHIFT bits of the TSC page address
must be cleared, or the guest can see a non-zero sequence number.

Otherwise Windows guests would not be able to get a correct clocksource
(QueryPerformanceCounter will always return 0) which causes serious chaos.

Signed-off-by: Xiaoming Gao <newtongao@tencnet.com>
Cc: stable@vger.kernel.org
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit e1fa108d24697b78348fd4e5a531029a50d0d36d)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index 660a25c..e31649c 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -1898,7 +1898,7 @@ static int set_msr_hyperv_pw(struct kvm_vcpu *vcpu, u32 msr, u64 data)
   if (!(data & HV_X64_MSR_TSC_REFERENCE_ENABLE))
    break;
   gfn = data >> HV_X64_MSR_TSC_REFERENCE_ADDRESS_SHIFT;
-  if (kvm_write_guest(kvm, data,
+  if (kvm_write_guest(kvm, gfn << HV_X64_MSR_TSC_REFERENCE_ADDRESS_SHIFT,
    &tsc_ref, sizeof(tsc_ref)))
    return 1;
   mark_page_dirty(kvm, gfn);
-- 
1.7.1