From ecae320331f273d921ecff22fbbeb4be43d31d5d Mon Sep 17 00:00:00 2001
From: Prarit Bhargava <prarit@redhat.com>
Date: Thu, 28 Aug 2014 14:22:53 -0400
Subject: [cpufreq] conservative: fix requested_freq reduction issue

Message-id: <1409235879-1283-80-git-send-email-prarit@redhat.com>
Patchwork-id: 89510
O-Subject: [RHEL7.1 PATCH BZ 1134639 079/185] cpufreq: conservative: fix requested_freq reduction issue
Bugzilla: 1134369
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Mark Langsdorf <mlangsdo@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1134639

commit 3baa976ae644f76f5cdb5be0fb26754c3bfb32cb
Author: Xiaoguang Chen <chenxg@marvell.com>
Date:   Thu Nov 7 10:28:50 2013 +0800

    cpufreq: conservative: fix requested_freq reduction issue

    When decreasing frequency, requested_freq may be less than
    freq_target, So requested_freq minus freq_target may be negative,
    But reqested_freq's unit is unsigned int, then the negative result
    will be one larger interger which may be even higher than
    requested_freq.

    This patch is to fix such issue. when result becomes negative,
    set requested_freq as the min value of policy.

    Signed-off-by: Xiaoguang Chen <chenxg@marvell.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Cc: Lenny Szubowicz <lszubowi@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/cpufreq/cpufreq_conservative.c b/drivers/cpufreq/cpufreq_conservative.c
index b72919b..27c332a 100644
--- a/drivers/cpufreq/cpufreq_conservative.c
+++ b/drivers/cpufreq/cpufreq_conservative.c
@@ -80,13 +80,18 @@ static void cs_check_cpu(int cpu, unsigned int load)
 
  /* Check for frequency decrease */
  if (load < cs_tuners->down_threshold) {
+  unsigned int freq_target;
   /*
    * if we cannot reduce the frequency anymore, break out early
    */
   if (policy->cur == policy->min)
    return;
 
-  dbs_info->requested_freq -= get_freq_target(cs_tuners, policy);
+  freq_target = get_freq_target(cs_tuners, policy);
+  if (dbs_info->requested_freq > freq_target)
+   dbs_info->requested_freq -= freq_target;
+  else
+   dbs_info->requested_freq = policy->min;
 
   __cpufreq_driver_target(policy, dbs_info->requested_freq,
     CPUFREQ_RELATION_L);
-- 
1.7.1