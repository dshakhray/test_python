From 35d65e5fdcdfea9af6dd4c62fd8a09c702f06f58 Mon Sep 17 00:00:00 2001
From: Jiri Benc <jbenc@redhat.com>
Date: Fri, 8 Aug 2014 21:25:05 -0400
Subject: [net] rtnetlink: fix VF info size

Message-id: <3caa3bc04e6cd051f10112ffccbf342201d3aa70.1407533078.git.jbenc@redhat.com>
Patchwork-id: 87564
O-Subject: [RHEL7.1 net PATCH] rtnetlink: fix VF info size
Bugzilla: 1128267
RH-Acked-by: Flavio Leitner <fbl@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Jiri Pirko <jpirko@redhat.com>
RH-Acked-by: Daniel Borkmann <dborkman@redhat.com>
RH-Acked-by: Hannes Frederic Sowa <hannes@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1128267
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7810722
Tested: only the RHEL6 version but RHEL7 patch is the same

commit 945a36761fd7877660f630bbdeb4ff9ff80d1935
Author: Jiri Benc <jbenc@redhat.com>
Date:   Fri Aug 8 16:44:32 2014 +0200

    rtnetlink: fix VF info size

    Commit 1d8faf48c74b8 ("net/core: Add VF link state control") added new
    attribute to IFLA_VF_INFO group in rtnl_fill_ifinfo but did not adjust size
    of the allocated memory in if_nlmsg_size/rtnl_vfinfo_size. As the result, we
    may trigger warnings in rtnl_getlink and similar functions when many VF
    links are enabled, as the information does not fit into the allocated skb.

    Fixes: 1d8faf48c74b8 ("net/core: Add VF link state control")
    Reported-by: Yulong Pei <ypei@redhat.com>
    Signed-off-by: Jiri Benc <jbenc@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Jiri Benc <jbenc@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/core/rtnetlink.c b/net/core/rtnetlink.c
index f90db39..188722b 100644
--- a/net/core/rtnetlink.c
+++ b/net/core/rtnetlink.c
@@ -708,7 +708,8 @@ static inline int rtnl_vfinfo_size(const struct net_device *dev,
    (nla_total_size(sizeof(struct ifla_vf_mac)) +
     nla_total_size(sizeof(struct ifla_vf_vlan)) +
     nla_total_size(sizeof(struct ifla_vf_tx_rate)) +
-    nla_total_size(sizeof(struct ifla_vf_spoofchk)));
+    nla_total_size(sizeof(struct ifla_vf_spoofchk)) +
+    nla_total_size(sizeof(struct ifla_vf_link_state)));
   return size;
  } else
   return 0;
-- 
1.7.1