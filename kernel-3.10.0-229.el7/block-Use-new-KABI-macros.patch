From cc2fdf1cd031422ee74a56d71bf8d135cc027729 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 2 Dec 2014 21:03:29 -0500
Subject: [block] Use new KABI macros

Message-id: <1417554215-238434-5-git-send-email-dzickus@redhat.com>
Patchwork-id: 101093
O-Subject: [RHEL7 PATCH 04/10] kabi, block: Use new KABI macros
Bugzilla: 1164383
RH-Acked-by: Jiri Benc <jbenc@redhat.com>
RH-Acked-by: Jarod Wilson <jarod@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1164383
Upstream: RHEL only

Convert some of the block GENKSYMS usage to use the new kabi macros.

Reviewed-by: Jeff Moyer <jmoyer@redhat.com>
Signed-off-by: Don Zickus <dzickus@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/block/blk-cgroup.h b/block/blk-cgroup.h
index 6843d4d..6075c68 100644
--- a/block/blk-cgroup.h
+++ b/block/blk-cgroup.h
@@ -20,6 +20,8 @@
 #include <linux/blkdev.h>
 #include <linux/atomic.h>
 
+#include <linux/rh_kabi.h>
+
 /* Max limits for throttle policy */
 #define THROTL_IOPS_MAX  UINT_MAX
 
@@ -111,12 +113,7 @@ struct blkcg_gq {
   * module should be touching it. So it should be safe to use
   * __GENKSYMS__ trick.
   */
-#ifndef __GENKSYMS__
- /* reference count */
- atomic_t   refcnt;
-#else
- int    refcnt;
-#endif
+ RH_KABI_CHANGE_TYPE(int refcnt, atomic_t refcnt)
 
  /* is this blkg online? protected by both blkcg and q locks */
  bool    online;
diff --git a/block/blk-mq.h b/block/blk-mq.h
index d221fb6..f711f40 100644
--- a/block/blk-mq.h
+++ b/block/blk-mq.h
@@ -1,6 +1,8 @@
 #ifndef INT_BLK_MQ_H
 #define INT_BLK_MQ_H
 
+#include <linux/rh_kabi.h>
+
 struct blk_mq_tag_set;
 
 struct blk_mq_ctx {
@@ -12,11 +14,8 @@ struct blk_mq_ctx {
  unsigned int  cpu;
  unsigned int  index_hw;
 
-#ifdef __GENKSYMS__
- unsigned int  ipi_redirect;
-#else
- unsigned int  last_tag ____cacheline_aligned_in_smp;
-#endif
+ RH_KABI_REPLACE(unsigned int ipi_redirect,
+          unsigned int last_tag ____cacheline_aligned_in_smp)
 
  /* incremented at dispatch time */
  unsigned long  rq_dispatched[2];
-- 
1.7.1