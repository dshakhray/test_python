From 66c9f75505022861f2894958a6da6888463543f2 Mon Sep 17 00:00:00 2001
From: Ewan Milne <emilne@redhat.com>
Date: Wed, 20 Aug 2014 18:59:29 -0400
Subject: [scsi] scsi_debug: fix false positive logical block reference tag check fail

Message-id: <1408561176-18133-51-git-send-email-emilne@redhat.com>
Patchwork-id: 88472
O-Subject: [RHEL7.1 PATCH e-stor 50/57] [SCSI] scsi_debug: fix false positive logical block reference tag check fail
Bugzilla: 1132100
RH-Acked-by: David Milburn <dmilburn@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: "Ewan D. Milne" <emilne@redhat.com>

upstream commit c45eabec08776d462c34802d3e5bad295bda628e

Tested by Ewan D. Milne and Barry Donahue with a combination
of manual and automated testing.  No issues seen.

upstream commit c45eabec08776d462c34802d3e5bad295bda628e
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Wed Feb 26 22:56:58 2014 +0900

    [SCSI] scsi_debug: fix false positive logical block reference tag check fail

    Reading partially unwritten sectors generates a false positive logical
    block reference tag check failure when DIF is enabled.

    This bug is caused by missing ei_lba increment in loop of dif_verify()
    when unwritten sector is skipped.

    Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com>
    Acked-by: Martin K. Petersen <martin.petersen@oracle.com>
    Reviewed-by: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

Signed-off-by: Ewan D. Milne <emilne@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/scsi/scsi_debug.c b/drivers/scsi/scsi_debug.c
index 2decc64..bdfb9be 100644
--- a/drivers/scsi/scsi_debug.c
+++ b/drivers/scsi/scsi_debug.c
@@ -1832,7 +1832,7 @@ static int prot_verify_read(struct scsi_cmnd *SCpnt, sector_t start_sec,
  struct sd_dif_tuple *sdt;
  sector_t sector;
 
- for (i = 0; i < sectors; i++) {
+ for (i = 0; i < sectors; i++, ei_lba++) {
   int ret;
 
   sector = start_sec + i;
@@ -1846,8 +1846,6 @@ static int prot_verify_read(struct scsi_cmnd *SCpnt, sector_t start_sec,
    dif_errors++;
    return ret;
   }
-
-  ei_lba++;
  }
 
  dif_copy_prot(SCpnt, start_sec, sectors, true);
-- 
1.7.1