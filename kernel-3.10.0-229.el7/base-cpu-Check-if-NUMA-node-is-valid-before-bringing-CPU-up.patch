From 1eb56f9bb052f8ad09e2669bb6c5208dbc2b225a Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 10 Jul 2014 01:04:10 -0400
Subject: [base] cpu: Check if NUMA node is valid before bringing CPU up

Message-id: <20140710010410.22146.8415.stgit@gir.stowe>
Patchwork-id: 85596
O-Subject: [RHEL7.1 PATCH 057/105] driver core / cpu: Check if NUMA node is valid before bringing CPU up
Bugzilla: 1114228
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1114228
Upstream Status: c7991b0b720efa5e0a590f6359d36e09bd187b76

commit c7991b0b720efa5e0a590f6359d36e09bd187b76
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Aug 13 02:39:30 2013 +0200

    driver core / cpu: Check if NUMA node is valid before bringing CPU up

    There is a potential race condition between cpu_subsys_online()
    and either acpi_processor_remove() or remove_memory() that execute
    try_offline_node().  Namely, it is possible that cpu_subsys_online()
    will run right after the CPUs NUMA node has been put offline and
    cpu_to_node() executed by it will return NUMA_NO_NODE (-1).  In
    that case the CPU is gone and it doesn't make sense to call cpu_up()
    for it, so make cpu_subsys_online() return -ENODEV then.

    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Acked-by: Toshi Kani <toshi.kani@hp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/base/cpu.c b/drivers/base/cpu.c
index 1d110dc..ac93414 100644
--- a/drivers/base/cpu.c
+++ b/drivers/base/cpu.c
@@ -43,11 +43,14 @@ static int __ref cpu_subsys_online(struct device *dev)
  struct cpu *cpu = container_of(dev, struct cpu, dev);
  int cpuid = dev->id;
  int from_nid, to_nid;
- int ret;
+ int ret = -ENODEV;
 
  cpu_hotplug_driver_lock();
 
  from_nid = cpu_to_node(cpuid);
+ if (from_nid == NUMA_NO_NODE)
+  goto out;
+
  ret = cpu_up(cpuid);
  /*
   * When hot adding memory to memoryless node and enabling a cpu
@@ -57,6 +60,7 @@ static int __ref cpu_subsys_online(struct device *dev)
  if (from_nid != to_nid)
   change_cpu_under_node(cpu, from_nid, to_nid);
 
+ out:
  cpu_hotplug_driver_unlock();
  return ret;
 }
-- 
1.7.1