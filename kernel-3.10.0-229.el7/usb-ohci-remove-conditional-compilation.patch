From 8ea8463377180773ac8baefaf93495afb7a15863 Mon Sep 17 00:00:00 2001
From: Don Zickus <dzickus@redhat.com>
Date: Tue, 16 Sep 2014 17:04:24 -0400
Subject: [usb] ohci: remove conditional compilation

Message-id: <1410887463-20674-193-git-send-email-dzickus@redhat.com>
Patchwork-id: 95299
O-Subject: [RHEL7 PATCH 192/591] ohci: remove conditional compilation
Bugzilla: 1110939
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1110939

commit 5c2a18014f906d81ae83484801831650f0fa07fe
Author: Oliver Neukum <oneukum@suse.de>
Date:   Mon Nov 18 13:22:57 2013 +0100

    ohci: remove conditional compilation

    Conditional compilation for debugging is removed in favor of
    dynamic debugging. To do so

    1. the support for debugfs is always compiled
    2. the support for the ancient print_urb debugging aid is removed

    Signed-off-by: Oliver Neukum <oneukum@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/usb/host/ohci-dbg.c b/drivers/usb/host/ohci-dbg.c
index 31b81f9..24fb31a 100644
--- a/drivers/usb/host/ohci-dbg.c
+++ b/drivers/usb/host/ohci-dbg.c
@@ -9,8 +9,6 @@
 
 /*-------------------------------------------------------------------------*/
 
-#ifdef DEBUG
-
 #define edstring(ed_type) ({ char *temp; \
  switch (ed_type) { \
  case PIPE_CONTROL: temp = "ctrl"; break; \
@@ -20,57 +18,6 @@
  }; temp;})
 #define pipestring(pipe) edstring(usb_pipetype(pipe))
 
-/* debug| print the main components of an URB
- * small: 0) header + data packets 1) just header
- */
-static void __maybe_unused
-urb_print(struct urb * urb, char * str, int small, int status)
-{
- unsigned int pipe= urb->pipe;
-
- if (!urb->dev || !urb->dev->bus) {
-  printk(KERN_DEBUG "%s URB: no dev\n", str);
-  return;
- }
-
-#ifndef OHCI_VERBOSE_DEBUG
- if (status != 0)
-#endif
- printk(KERN_DEBUG "%s %p dev=%d ep=%d%s-%s flags=%x len=%d/%d stat=%d\n",
-      str,
-      urb,
-      usb_pipedevice (pipe),
-      usb_pipeendpoint (pipe),
-      usb_pipeout (pipe)? "out" : "in",
-      pipestring (pipe),
-      urb->transfer_flags,
-      urb->actual_length,
-      urb->transfer_buffer_length,
-      status);
-
-#ifdef OHCI_VERBOSE_DEBUG
- if (!small) {
-  int i, len;
-
-  if (usb_pipecontrol (pipe)) {
-   printk (KERN_DEBUG "%s: setup(8):", __FILE__);
-   for (i = 0; i < 8 ; i++)
-    printk (" %02x", ((__u8 *) urb->setup_packet) [i]);
-   printk ("\n");
-  }
-  if (urb->transfer_buffer_length > 0 && urb->transfer_buffer) {
-   printk (KERN_DEBUG "%s: data(%d/%d):", __FILE__,
-    urb->actual_length,
-    urb->transfer_buffer_length);
-   len = usb_pipeout (pipe)?
-      urb->transfer_buffer_length: urb->actual_length;
-   for (i = 0; i < 16 && i < len; i++)
-    printk (" %02x", ((__u8 *) urb->transfer_buffer) [i]);
-   printk ("%s stat:%d\n", i < len? "...": "", status);
-  }
- }
-#endif
-}
 
 #define ohci_dbg_sw(ohci, next, size, format, arg...) \
  do { \
@@ -407,22 +354,8 @@ ohci_dump_ed (const struct ohci_hcd *ohci, const char *label,
  }
 }
 
-#else
-static inline void ohci_dump (struct ohci_hcd *controller, int verbose) {}
-
-#undef OHCI_VERBOSE_DEBUG
-
-#endif /* DEBUG */
-
 /*-------------------------------------------------------------------------*/
 
-#ifdef STUB_DEBUG_FILES
-
-static inline void create_debug_files (struct ohci_hcd *bus) { }
-static inline void remove_debug_files (struct ohci_hcd *bus) { }
-
-#else
-
 static int debug_async_open(struct inode *, struct file *);
 static int debug_periodic_open(struct inode *, struct file *);
 static int debug_registers_open(struct inode *, struct file *);
@@ -871,7 +804,5 @@ static inline void remove_debug_files (struct ohci_hcd *ohci)
  debugfs_remove(ohci->debug_dir);
 }
 
-#endif
-
 /*-------------------------------------------------------------------------*/
 
diff --git a/drivers/usb/host/ohci-hcd.c b/drivers/usb/host/ohci-hcd.c
index db48b27..13b8ccd 100644
--- a/drivers/usb/host/ohci-hcd.c
+++ b/drivers/usb/host/ohci-hcd.c
@@ -127,10 +127,6 @@ static int ohci_urb_enqueue (
  unsigned long flags;
  int  retval = 0;
 
-#ifdef OHCI_VERBOSE_DEBUG
- urb_print(urb, "SUB", usb_pipein(pipe), -EINPROGRESS);
-#endif
-
  /* every endpoint has a ed, locate and maybe (re)initialize it */
  if (! (ed = ed_get (ohci, urb->ep, urb->dev, pipe, urb->interval)))
   return -ENOMEM;
@@ -284,10 +280,6 @@ static int ohci_urb_dequeue(struct usb_hcd *hcd, struct urb *urb, int status)
  unsigned long  flags;
  int   rc;
 
-#ifdef OHCI_VERBOSE_DEBUG
- urb_print(urb, "UNLINK", 1, status);
-#endif
-
  spin_lock_irqsave (&ohci->lock, flags);
  rc = usb_hcd_check_unlink_urb(hcd, urb, status);
  if (rc) {
diff --git a/drivers/usb/host/ohci-q.c b/drivers/usb/host/ohci-q.c
index e7f577e..182eaa2 100644
--- a/drivers/usb/host/ohci-q.c
+++ b/drivers/usb/host/ohci-q.c
@@ -68,10 +68,6 @@ __acquires(ohci->lock)
   break;
  }
 
-#ifdef OHCI_VERBOSE_DEBUG
- urb_print(urb, "RET", usb_pipeout (urb->pipe), status);
-#endif
-
  /* urb->complete() can reenter this HCD */
  usb_hcd_unlink_urb_from_ep(ohci_to_hcd(ohci), urb);
  spin_unlock (&ohci->lock);
diff --git a/drivers/usb/host/ohci.h b/drivers/usb/host/ohci.h
index e2e5faa..ea02722 100644
--- a/drivers/usb/host/ohci.h
+++ b/drivers/usb/host/ohci.h
@@ -415,12 +415,11 @@ struct ohci_hcd {
  struct ed  *ed_to_check;
  unsigned  zf_delay;
 
-#ifdef DEBUG
  struct dentry  *debug_dir;
  struct dentry  *debug_async;
  struct dentry  *debug_periodic;
  struct dentry  *debug_registers;
-#endif
+
  /* platform-specific data -- must come last */
  unsigned long           priv[0] __aligned(sizeof(s64));
 
@@ -474,10 +473,6 @@ static inline struct usb_hcd *ohci_to_hcd (const struct ohci_hcd *ohci)
 
 /*-------------------------------------------------------------------------*/
 
-#ifndef DEBUG
-#define STUB_DEBUG_FILES
-#endif /* DEBUG */
-
 #define ohci_dbg(ohci, fmt, args...) \
  dev_dbg (ohci_to_hcd(ohci)->self.controller , fmt , ## args )
 #define ohci_err(ohci, fmt, args...) \
-- 
1.7.1