From 547a8e420d11d79cfc6339728011a4e2716117ca Mon Sep 17 00:00:00 2001
From: John Greene <jogreene@redhat.com>
Date: Mon, 8 Sep 2014 15:07:56 -0400
Subject: [ethernet] ixgbevf: Change ixgbe_read_reg to ixgbevf_read_reg

Message-id: <1410188883-6595-42-git-send-email-jogreene@redhat.com>
Patchwork-id: 92359
O-Subject: [RHEL7.1 PATCH 41/48] ixgbevf: Change ixgbe_read_reg to ixgbevf_read_reg
Bugzilla: 1091124
RH-Acked-by: Neil Horman <nhorman@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: John Linville <linville@redhat.com>

BZ: 1091124
Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=7919168
Tested: In beaker. See BZ for details

Change the ixgbe_read_reg function name to ixgbevf_read_reg to
avoid a namespace clash with the ixgbe driver. This will allow
ixgbe to take its register read function out-of-line to reduce
memory footprint.

Signed-off-by: Mark Rustad <mark.d.rustad@intel.com>
Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 32c74949b4e37f80ab74d9b497ffb3749cfcb85a)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/intel/ixgbevf/ethtool.c b/drivers/net/ethernet/intel/ixgbevf/ethtool.c
index 5f0bcba..5576ff9 100644
--- a/drivers/net/ethernet/intel/ixgbevf/ethtool.c
+++ b/drivers/net/ethernet/intel/ixgbevf/ethtool.c
@@ -591,10 +591,10 @@ static bool reg_pattern_test(struct ixgbevf_adapter *adapter, u64 *data,
   return true;
  }
  for (pat = 0; pat < ARRAY_SIZE(register_test_patterns); pat++) {
-  before = ixgbe_read_reg(&adapter->hw, reg);
+  before = ixgbevf_read_reg(&adapter->hw, reg);
   ixgbe_write_reg(&adapter->hw, reg,
     register_test_patterns[pat] & write);
-  val = ixgbe_read_reg(&adapter->hw, reg);
+  val = ixgbevf_read_reg(&adapter->hw, reg);
   if (val != (register_test_patterns[pat] & write & mask)) {
    hw_dbg(&adapter->hw,
           "pattern test reg %04X failed: got 0x%08X expected 0x%08X\n",
@@ -618,9 +618,9 @@ static bool reg_set_and_check(struct ixgbevf_adapter *adapter, u64 *data,
   *data = 1;
   return true;
  }
- before = ixgbe_read_reg(&adapter->hw, reg);
+ before = ixgbevf_read_reg(&adapter->hw, reg);
  ixgbe_write_reg(&adapter->hw, reg, write & mask);
- val = ixgbe_read_reg(&adapter->hw, reg);
+ val = ixgbevf_read_reg(&adapter->hw, reg);
  if ((write & mask) != (val & mask)) {
   pr_err("set/check reg %04X test failed: got 0x%08X expected 0x%08X\n",
          reg, (val & mask), write & mask);
diff --git a/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c b/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
index f2c58f7..a74b1ba 100644
--- a/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
+++ b/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
@@ -124,12 +124,12 @@ static void ixgbevf_check_remove(struct ixgbe_hw *hw, u32 reg)
   ixgbevf_remove_adapter(hw);
   return;
  }
- value = ixgbe_read_reg(hw, IXGBE_VFSTATUS);
+ value = ixgbevf_read_reg(hw, IXGBE_VFSTATUS);
  if (value == IXGBE_FAILED_READ_REG)
   ixgbevf_remove_adapter(hw);
 }
 
-u32 ixgbe_read_reg(struct ixgbe_hw *hw, u32 reg)
+u32 ixgbevf_read_reg(struct ixgbe_hw *hw, u32 reg)
 {
  u8 __iomem *reg_addr = ACCESS_ONCE(hw->hw_addr);
  u32 value;
diff --git a/drivers/net/ethernet/intel/ixgbevf/vf.h b/drivers/net/ethernet/intel/ixgbevf/vf.h
index 096d33a..3061d18 100644
--- a/drivers/net/ethernet/intel/ixgbevf/vf.h
+++ b/drivers/net/ethernet/intel/ixgbevf/vf.h
@@ -186,8 +186,8 @@ static inline void ixgbe_write_reg(struct ixgbe_hw *hw, u32 reg, u32 value)
 }
 #define IXGBE_WRITE_REG(h, r, v) ixgbe_write_reg(h, r, v)
 
-u32 ixgbe_read_reg(struct ixgbe_hw *hw, u32 reg);
-#define IXGBE_READ_REG(h, r) ixgbe_read_reg(h, r)
+u32 ixgbevf_read_reg(struct ixgbe_hw *hw, u32 reg);
+#define IXGBE_READ_REG(h, r) ixgbevf_read_reg(h, r)
 
 static inline void ixgbe_write_reg_array(struct ixgbe_hw *hw, u32 reg,
        u32 offset, u32 value)
@@ -199,7 +199,7 @@ static inline void ixgbe_write_reg_array(struct ixgbe_hw *hw, u32 reg,
 static inline u32 ixgbe_read_reg_array(struct ixgbe_hw *hw, u32 reg,
      u32 offset)
 {
- return ixgbe_read_reg(hw, reg + (offset << 2));
+ return ixgbevf_read_reg(hw, reg + (offset << 2));
 }
 #define IXGBE_READ_REG_ARRAY(h, r, o) ixgbe_read_reg_array(h, r, o)
 
-- 
1.7.1