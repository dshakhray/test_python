From 5baaff6489385ea0c0ef3687713fa8d48288c5ab Mon Sep 17 00:00:00 2001
From: Steve Best <sbest@redhat.com>
Date: Wed, 27 Aug 2014 20:12:50 -0400
Subject: [tty] hvc_opal: Kick the HVC thread on OPAL console events

Message-id: <20140827201250.3410.51097.sendpatchset@ibm-p7r2-01.lab.bos.redhat.com>
Patchwork-id: 89283
O-Subject: [PATCH RHEL7.1 BZ1123045 1/2] tty/hvc_opal: Kick the HVC thread on OPAL console events
Bugzilla: 1123045
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

RHBZ#:
------
https://bugzilla.redhat.com/show_bug.cgi?id=1123045

Description:
------------
The firmware can notify us when new input data is available, so
let's make sure we wakeup the HVC thread in that case.

Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

RHEL Version Found:
-------------------
7.0

Upstream Status:
----------------
http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=32b941b79394435c1b6d688abfe762c5b3c82afa

----------------
Steve Best

Proposed Patch:
---------------

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/tty/hvc/hvc_opal.c b/drivers/tty/hvc/hvc_opal.c
index cd69b48..27e8719 100644
--- a/drivers/tty/hvc/hvc_opal.c
+++ b/drivers/tty/hvc/hvc_opal.c
@@ -61,6 +61,7 @@ static struct hvc_opal_priv *hvc_opal_privs[MAX_NR_HVC_CONSOLES];
 /* For early boot console */
 static struct hvc_opal_priv hvc_opal_boot_priv;
 static u32 hvc_opal_boot_termno;
+static bool hvc_opal_event_registered;
 
 static const struct hv_ops hvc_opal_raw_ops = {
  .get_chars = opal_get_chars,
@@ -161,6 +162,18 @@ static const struct hv_ops hvc_opal_hvsi_ops = {
  .tiocmset = hvc_opal_hvsi_tiocmset,
 };
 
+static int hvc_opal_console_event(struct notifier_block *nb,
+      unsigned long events, void *change)
+{
+ if (events & OPAL_EVENT_CONSOLE_INPUT)
+  hvc_kick();
+ return 0;
+}
+
+static struct notifier_block hvc_opal_console_nb = {
+ .notifier_call = hvc_opal_console_event,
+};
+
 static int hvc_opal_probe(struct platform_device *dev)
 {
  const struct hv_ops *ops;
@@ -170,6 +183,7 @@ static int hvc_opal_probe(struct platform_device *dev)
  unsigned int termno, boot = 0;
  const __be32 *reg;
 
+
  if (of_device_is_compatible(dev->dev.of_node, "ibm,opal-console-raw")) {
   proto = HV_PROTOCOL_RAW;
   ops = &hvc_opal_raw_ops;
@@ -213,12 +227,18 @@ static int hvc_opal_probe(struct platform_device *dev)
   dev->dev.of_node->full_name,
   boot ? " (boot console)" : "");
 
- /* We don't do IRQ yet */
+ /* We don't do IRQ ... */
  hp = hvc_alloc(termno, 0, ops, MAX_VIO_PUT_CHARS);
  if (IS_ERR(hp))
   return PTR_ERR(hp);
  dev_set_drvdata(&dev->dev, hp);
 
+ /* ...  but we use OPAL event to kick the console */
+ if (!hvc_opal_event_registered) {
+  opal_notifier_register(&hvc_opal_console_nb);
+  hvc_opal_event_registered = true;
+ }
+
  return 0;
 }
 
-- 
1.7.1