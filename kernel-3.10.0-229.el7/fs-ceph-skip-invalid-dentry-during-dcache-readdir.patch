From 53444746e81f90b7724af86a78b4fa5dbbe3c060 Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:25:38 -0400
Subject: [fs] ceph: skip invalid dentry during dcache readdir
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-232-git-send-email-sweil@redhat.com>
Patchwork-id: 89753
O-Subject: [PATCH 231/303] ceph: skip invalid dentry during dcache readdir
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: "Yan, Zheng" <zheng.z.yan@intel.com>

skip dentries that were added before MDS issued FILE_SHARED to
client.

Signed-off-by: Yan, Zheng <zheng.z.yan@intel.com>
Reviewed-by: Sage Weil <sage@inktank.com>
(cherry picked from commit a30be7cb2ccb995ad5e67fd4b548f11fe37fc8b1)
Signed-off-by: Jarod Wilson <jarod@redhat.com>

Conflicts:

 fs/ceph/dir.c
---

diff --git a/fs/ceph/dir.c b/fs/ceph/dir.c
index 8ac502a..47dc829 100644
--- a/fs/ceph/dir.c
+++ b/fs/ceph/dir.c
@@ -120,7 +120,8 @@ static int fpos_cmp(loff_t l, loff_t r)
  * the MDS if/when the directory is modified).
  */
 static int __dcache_readdir(struct file *filp,
-       void *dirent, filldir_t filldir)
+       void *dirent, filldir_t filldir,
+       u32 shared_gen)
 {
  struct ceph_file_info *fi = filp->private_data;
  struct dentry *parent = filp->f_dentry;
@@ -134,8 +135,8 @@ static int __dcache_readdir(struct file *filp,
  last = fi->dentry;
  fi->dentry = NULL;
 
- dout("__dcache_readdir %p at %llu (last %p)\n", dir, filp->f_pos,
-      last);
+ dout("__dcache_readdir %p v%u at %llu (last %p)\n", dir, shared_gen,
+      filp->f_pos, last);
 
  spin_lock(&parent->d_lock);
 
@@ -162,7 +163,8 @@ more:
    goto out_unlock;
   }
   spin_lock_nested(&dentry->d_lock, DENTRY_D_LOCK_NESTED);
-  if (!d_unhashed(dentry) && dentry->d_inode &&
+  if (di->lease_shared_gen == shared_gen &&
+      !d_unhashed(dentry) && dentry->d_inode &&
       ceph_snap(dentry->d_inode) != CEPH_SNAPDIR &&
       ceph_ino(dentry->d_inode) != CEPH_INO_CEPH &&
       fpos_cmp(filp->f_pos, di->offset) <= 0)
@@ -292,8 +294,9 @@ static int ceph_readdir(struct file *filp, void *dirent, filldir_t filldir)
      ceph_snap(inode) != CEPH_SNAPDIR &&
      __ceph_dir_is_complete(ci) &&
      __ceph_caps_issued_mask(ci, CEPH_CAP_FILE_SHARED, 1)) {
+  u32 shared_gen = ci->i_shared_gen;
   spin_unlock(&ci->i_ceph_lock);
-  err = __dcache_readdir(filp, dirent, filldir);
+  err = __dcache_readdir(filp, dirent, filldir, shared_gen);
   if (err != -EAGAIN)
    return err;
  } else {
-- 
1.7.1