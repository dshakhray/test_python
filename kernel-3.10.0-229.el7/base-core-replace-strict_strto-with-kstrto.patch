From a44c0a5c80133fcbbbc0ea137cbd0fed3f1b57e4 Mon Sep 17 00:00:00 2001
From: Myron Stowe <myron.stowe@redhat.com>
Date: Thu, 10 Jul 2014 01:03:51 -0400
Subject: [base] core: replace strict_strto*() with kstrto*()

Message-id: <20140710010351.22146.14948.stgit@gir.stowe>
Patchwork-id: 85593
O-Subject: [RHEL7.1 PATCH 054/105] driver core: replace strict_strto*() with kstrto*()
Bugzilla: 1114228
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1114228
Upstream Status: 34da5e6770ac06df770a0355b417155e6e84e263

commit 34da5e6770ac06df770a0355b417155e6e84e263
Author: Jingoo Han <jg1.han@samsung.com>
Date:   Fri Jul 26 13:10:22 2013 +0900

    driver core: replace strict_strto*() with kstrto*()

    The usage of strict_strto*() is not preferred, because
    strict_strto*() is obsolete. Thus, kstrto*() should be
    used.

    Signed-off-by: Jingoo Han <jg1.han@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/base/core.c b/drivers/base/core.c
index c59ac6b..6320d69 100644
--- a/drivers/base/core.c
+++ b/drivers/base/core.c
@@ -38,7 +38,7 @@ long sysfs_deprecated = 0;
 #endif
 static __init int sysfs_deprecated_setup(char *arg)
 {
- return strict_strtol(arg, 10, &sysfs_deprecated);
+ return kstrtol(arg, 10, &sysfs_deprecated);
 }
 early_param("sysfs.deprecated", sysfs_deprecated_setup);
 #endif
diff --git a/drivers/base/memory.c b/drivers/base/memory.c
index ec386ee..cbcdf5d 100644
--- a/drivers/base/memory.c
+++ b/drivers/base/memory.c
@@ -471,7 +471,7 @@ store_soft_offline_page(struct device *dev,
  u64 pfn;
  if (!capable(CAP_SYS_ADMIN))
   return -EPERM;
- if (strict_strtoull(buf, 0, &pfn) < 0)
+ if (kstrtoull(buf, 0, &pfn) < 0)
   return -EINVAL;
  pfn >>= PAGE_SHIFT;
  if (!pfn_valid(pfn))
@@ -490,7 +490,7 @@ store_hard_offline_page(struct device *dev,
  u64 pfn;
  if (!capable(CAP_SYS_ADMIN))
   return -EPERM;
- if (strict_strtoull(buf, 0, &pfn) < 0)
+ if (kstrtoull(buf, 0, &pfn) < 0)
   return -EINVAL;
  pfn >>= PAGE_SHIFT;
  ret = memory_failure(pfn, 0, 0);
diff --git a/drivers/base/power/sysfs.c b/drivers/base/power/sysfs.c
index a53ebd2..03e089a 100644
--- a/drivers/base/power/sysfs.c
+++ b/drivers/base/power/sysfs.c
@@ -206,7 +206,7 @@ static ssize_t autosuspend_delay_ms_store(struct device *dev,
  if (!dev->power.use_autosuspend)
   return -EIO;
 
- if (strict_strtol(buf, 10, &delay) != 0 || delay != (int) delay)
+ if (kstrtol(buf, 10, &delay) != 0 || delay != (int) delay)
   return -EINVAL;
 
  device_lock(dev);
diff --git a/drivers/base/regmap/regmap-debugfs.c b/drivers/base/regmap/regmap-debugfs.c
index 975719b..9fafdfe 100644
--- a/drivers/base/regmap/regmap-debugfs.c
+++ b/drivers/base/regmap/regmap-debugfs.c
@@ -277,7 +277,7 @@ static ssize_t regmap_map_write_file(struct file *file,
  reg = simple_strtoul(start, &start, 16);
  while (*start == ' ')
   start++;
- if (strict_strtoul(start, 16, &value))
+ if (kstrtoul(start, 16, &value))
   return -EINVAL;
 
  /* Userspace has been fiddling around behind the kernel's back */
-- 
1.7.1