From 249f3f15b58a9c672b15165f051753b34b86c508 Mon Sep 17 00:00:00 2001
From: Sage Weil <sweil@redhat.com>
Date: Thu, 28 Aug 2014 16:25:10 -0400
Subject: [net] libceph: fix and clarify ceph_decode_need() sizes
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message-id: <1409243210-7988-204-git-send-email-sweil@redhat.com>
Patchwork-id: 89832
O-Subject: [PATCH 203/303] libceph: fix and clarify ceph_decode_need() sizes
Bugzilla: 1122174
RH-Acked-by: Ilya Dryomov <ilya.dryomov@inktank.com>
RH-Acked-by: Ã¤Â¸Â¥Ã¦Â­Â£ <zyan@redhat.com>
RH-Acked-by: Tony Camuso <tcamuso@redhat.com>

From: Ilya Dryomov <ilya.dryomov@inktank.com>

Sum up sizeof(...) results instead of (incorrectly) hard-coding the
number of bytes, expressed in ints and longs.

Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>
Reviewed-by: Alex Elder <elder@linaro.org>
(cherry picked from commit 53bbaba9d811f75acc20038bfd707a4cfdc4571f)
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/ceph/osdmap.c b/net/ceph/osdmap.c
index 07fa369..1164910 100644
--- a/net/ceph/osdmap.c
+++ b/net/ceph/osdmap.c
@@ -706,7 +706,9 @@ static int osdmap_decode(void **p, void *end, struct ceph_osdmap *map)
   goto e_inval;
  }
 
- ceph_decode_need(p, end, 2*sizeof(u64)+6*sizeof(u32), e_inval);
+ /* fsid, epoch, created, modified */
+ ceph_decode_need(p, end, sizeof(map->fsid) + sizeof(u32) +
+    sizeof(map->created) + sizeof(map->modified), e_inval);
  ceph_decode_copy(p, &map->fsid, sizeof(map->fsid));
  epoch = map->epoch = ceph_decode_32(p);
  ceph_decode_copy(p, &map->created, sizeof(map->created));
@@ -878,8 +880,9 @@ struct ceph_osdmap *osdmap_apply_incremental(void **p, void *end,
   goto e_inval;
  }
 
- ceph_decode_need(p, end, sizeof(fsid)+sizeof(modified)+2*sizeof(u32),
-    e_inval);
+ /* fsid, epoch, modified, new_pool_max, new_flags */
+ ceph_decode_need(p, end, sizeof(fsid) + sizeof(u32) + sizeof(modified) +
+    sizeof(u64) + sizeof(u32), e_inval);
  ceph_decode_copy(p, &fsid, sizeof(fsid));
  epoch = ceph_decode_32(p);
  BUG_ON(epoch != map->epoch+1);
@@ -913,10 +916,8 @@ struct ceph_osdmap *osdmap_apply_incremental(void **p, void *end,
  if (new_pool_max >= 0)
   map->pool_max = new_pool_max;
 
- ceph_decode_need(p, end, 5*sizeof(u32), e_inval);
-
  /* new max? */
- max = ceph_decode_32(p);
+ ceph_decode_32_safe(p, end, max, e_inval);
  if (max >= 0) {
   err = osdmap_set_max_osd(map, max);
   if (err)
-- 
1.7.1