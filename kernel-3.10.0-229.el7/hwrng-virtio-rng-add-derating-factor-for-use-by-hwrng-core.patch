From fcb19c7e91484d1cedab41ef99e805100a843b49 Mon Sep 17 00:00:00 2001
From: Amit Shah <amit.shah@redhat.com>
Date: Mon, 18 Aug 2014 10:00:29 -0400
Subject: [hwrng] virtio-rng: add derating factor for use by hwrng core

Message-id: <7ed5363adf9b5c90d38342f78c7c7464175a1175.1408347166.git.amit.shah@redhat.com>
Patchwork-id: 87843
O-Subject: [RHEL7.1 kernel PATCH 6/6] virtio: rng: add derating factor for use by hwrng core
Bugzilla: 1129195
RH-Acked-by: Amos Kong <akong@redhat.com>
RH-Acked-by: Neil Horman <nhorman@redhat.com>
RH-Acked-by: Herbert Xu <herbert.xu@redhat.com>

The khwrngd thread is started when a hwrng device of sufficient
quality is registered.  The virtio-rng device is backed by the
hypervisor, and we trust the hypervisor to provide real entropy.

A malicious or badly-implemented hypervisor is a scenario that's
irrelevant -- such a setup is bound to cause all sorts of badness, and a
compromised hwrng is the least of the user's worries.

Given this, we might as well assume that the quality of randomness we
receive is perfectly trustworthy.  Hence, we use 100% for the factor,
indicating maximum confidence in the source.

Signed-off-by: Amit Shah <amit.shah@redhat.com>
Reviewed-by: H. Peter Anvin <hpa@linux.intel.com>
Reviewed-by: Amos Kong <akong@redhat.com>
Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
(cherry picked from commit 34679ec7a0c45da8161507e1f2e1f72749dfd85c)
Signed-off-by: Amit Shah <amit.shah@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/char/hw_random/virtio-rng.c b/drivers/char/hw_random/virtio-rng.c
index 5bf8a55..4f13e61 100644
--- a/drivers/char/hw_random/virtio-rng.c
+++ b/drivers/char/hw_random/virtio-rng.c
@@ -117,6 +117,7 @@ static int probe_common(struct virtio_device *vdev)
   .cleanup = virtio_cleanup,
   .priv = (unsigned long)vi,
   .name = vi->name,
+  .quality = 1000,
  };
  vdev->priv = vi;
 
-- 
1.7.1