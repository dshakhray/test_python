From 4f4d0fbefafbbbf5c97d2d61625e191c34d6aadd Mon Sep 17 00:00:00 2001
From: David Gibson <dgibson@redhat.com>
Date: Mon, 15 Sep 2014 07:12:20 -0400
Subject: [virt] kvm/ppc: Unify kvmppc_get_last_inst and sc

Message-id: <1410765214-16377-5-git-send-email-dgibson@redhat.com>
Patchwork-id: 94703
O-Subject: [PATCH 04/78] KVM: PPC: Unify kvmppc_get_last_inst and sc
Bugzilla: 1123145 1123133 1123367
RH-Acked-by: Radim Krcmar <rkrcmar@redhat.com>
RH-Acked-by: Don Zickus <dzickus@redhat.com>
RH-Acked-by: Steve Best <sbest@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=1123145

Signed-off-by: David Gibson <dgibson@redhat.com>

commit 7a8ff56be68239bd36a2b639cb40bfbcfc58dad3
Author: Alexander Graf <agraf@suse.de>
Date:   Thu Jan 9 11:10:44 2014 +0100

    KVM: PPC: Unify kvmppc_get_last_inst and sc

    We had code duplication between the inline functions to get our last
    instruction on normal interrupts and system call interrupts. Unify
    both helper functions towards a single implementation.

    Signed-off-by: Alexander Graf <agraf@suse.de>

Signed-off-by: Jarod Wilson <jarod@redhat.com>

Conflicts:
 arch/powerpc/include/asm/kvm_book3s.h
---

diff --git a/arch/powerpc/include/asm/kvm_book3s.h b/arch/powerpc/include/asm/kvm_book3s.h
index 9591263..1e9c26f 100644
--- a/arch/powerpc/include/asm/kvm_book3s.h
+++ b/arch/powerpc/include/asm/kvm_book3s.h
@@ -269,10 +269,8 @@ static inline bool kvmppc_need_byteswap(struct kvm_vcpu *vcpu)
  return (vcpu->arch.shared->msr & MSR_LE) != (MSR_KERNEL & MSR_LE);
 }
 
-static inline u32 kvmppc_get_last_inst(struct kvm_vcpu *vcpu)
+static inline u32 kvmppc_get_last_inst_internal(struct kvm_vcpu *vcpu, ulong pc)
 {
- ulong pc = kvmppc_get_pc(vcpu);
-
  /* Load the instruction manually if it failed to do so in the
   * exit path */
  if (vcpu->arch.last_inst == KVM_INST_FETCH_FAILED)
@@ -282,6 +280,11 @@ static inline u32 kvmppc_get_last_inst(struct kvm_vcpu *vcpu)
   vcpu->arch.last_inst;
 }
 
+static inline u32 kvmppc_get_last_inst(struct kvm_vcpu *vcpu)
+{
+ return kvmppc_get_last_inst_internal(vcpu, kvmppc_get_pc(vcpu));
+}
+
 /*
  * Like kvmppc_get_last_inst(), but for fetching a sc instruction.
  * Because the sc instruction sets SRR0 to point to the following
@@ -289,14 +292,7 @@ static inline u32 kvmppc_get_last_inst(struct kvm_vcpu *vcpu)
  */
 static inline u32 kvmppc_get_last_sc(struct kvm_vcpu *vcpu)
 {
- ulong pc = kvmppc_get_pc(vcpu) - 4;
-
- /* Load the instruction manually if it failed to do so in the
-  * exit path */
- if (vcpu->arch.last_inst == KVM_INST_FETCH_FAILED)
-  kvmppc_ld(vcpu, &pc, sizeof(u32), &vcpu->arch.last_inst, false);
-
- return vcpu->arch.last_inst;
+ return kvmppc_get_last_inst_internal(vcpu, kvmppc_get_pc(vcpu) - 4);
 }
 
 static inline ulong kvmppc_get_fault_dar(struct kvm_vcpu *vcpu)
-- 
1.7.1