From 5831501d9d0b2c12689f66a92c8fa3d6ade2741c Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <jkysela@redhat.com>
Date: Wed, 3 Sep 2014 07:21:05 -0400
Subject: [alsa] hwdep: Allow to assign the given parent

Message-id: <140972823573-139-patchset-jkysela@redhat.com>
Patchwork-id: 90839
O-Subject: [RHEL 7.1 PATCH 138/442] ALSA: hwdep: Allow to assign the given parent
Bugzilla: 1112200
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>

Just like PCM, allow hwdep to be assigned to a different parent device
than the card.  It'll be used for the HD-audio codec device in the
later patches.

Signed-off-by: Takashi Iwai <tiwai@suse.de>

(picked from kernel: 71e2e1c147e653ee4e861b8b5dc0ae5c394870d2)
rhbz#1112200
Signed-off-by: Jaroslav Kysela <jkysela@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/include/sound/hwdep.h b/include/sound/hwdep.h
index 193a3c5..ae04a3e 100644
--- a/include/sound/hwdep.h
+++ b/include/sound/hwdep.h
@@ -68,6 +68,7 @@ struct snd_hwdep {
  wait_queue_head_t open_wait;
  void *private_data;
  void (*private_free) (struct snd_hwdep *hwdep);
+ struct device *dev;
  const struct attribute_group **groups;
 
  struct mutex open_mutex;
diff --git a/sound/core/hwdep.c b/sound/core/hwdep.c
index 825cd28..d6eb3ef 100644
--- a/sound/core/hwdep.c
+++ b/sound/core/hwdep.c
@@ -416,6 +416,7 @@ static int snd_hwdep_dev_register(struct snd_device *device)
 {
  struct snd_hwdep *hwdep = device->device_data;
  struct snd_card *card = hwdep->card;
+ struct device *dev;
  int err;
  char name[32];
 
@@ -426,10 +427,14 @@ static int snd_hwdep_dev_register(struct snd_device *device)
  }
  list_add_tail(&hwdep->list, &snd_hwdep_devices);
  sprintf(name, "hwC%iD%i", hwdep->card->number, hwdep->device);
- if ((err = snd_register_device(SNDRV_DEVICE_TYPE_HWDEP,
-           hwdep->card, hwdep->device,
-           &snd_hwdep_f_ops, hwdep, name)) < 0) {
-  dev_err(card->dev,
+ dev = hwdep->dev;
+ if (!dev)
+  dev = snd_card_get_device_link(hwdep->card);
+ err = snd_register_device_for_dev(SNDRV_DEVICE_TYPE_HWDEP,
+       hwdep->card, hwdep->device,
+       &snd_hwdep_f_ops, hwdep, name, dev);
+ if (err < 0) {
+  dev_err(dev,
    "unable to register hardware dependent device %i:%i\n",
    card->number, hwdep->device);
   list_del(&hwdep->list);
@@ -445,7 +450,7 @@ static int snd_hwdep_dev_register(struct snd_device *device)
     dev_set_drvdata(d, hwdep->private_data);
    err = sysfs_create_groups(&d->kobj, hwdep->groups);
    if (err < 0)
-    dev_warn(card->dev,
+    dev_warn(dev,
       "hwdep %d:%d: cannot create sysfs groups\n",
       card->number, hwdep->device);
    put_device(d);
@@ -456,13 +461,13 @@ static int snd_hwdep_dev_register(struct snd_device *device)
  hwdep->ossreg = 0;
  if (hwdep->oss_type >= 0) {
   if ((hwdep->oss_type == SNDRV_OSS_DEVICE_TYPE_DMFM) && (hwdep->device != 0)) {
-   dev_warn(card->dev,
+   dev_warn(dev,
      "only hwdep device 0 can be registered as OSS direct FM device!\n");
   } else {
    if (snd_register_oss_device(hwdep->oss_type,
           card, hwdep->device,
           &snd_hwdep_f_ops, hwdep) < 0) {
-    dev_err(card->dev,
+    dev_err(dev,
      "unable to register OSS compatibility device %i:%i\n",
      card->number, hwdep->device);
    } else
-- 
1.7.1