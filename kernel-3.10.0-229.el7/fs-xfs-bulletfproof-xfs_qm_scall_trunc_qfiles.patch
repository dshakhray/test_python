From 3c7997128c18ffd59bdc9650674101e8a1545315 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Thu, 9 Oct 2014 21:00:04 -0400
Subject: [fs] xfs: bulletfproof xfs_qm_scall_trunc_qfiles()

Message-id: <1412888441-4181-11-git-send-email-sandeen@redhat.com>
Patchwork-id: 97314
O-Subject: [RHEL7.1 PATCH 10/47] [fs] xfs: bulletfproof xfs_qm_scall_trunc_qfiles()
Bugzilla: 1145837
RH-Acked-by: Brian Foster <bfoster@redhat.com>
RH-Acked-by: Dave Chinner <dchinner@redhat.com>

Bugzilla: 1145837
Upstream Status: Committed upstream
Build Info: https://brewweb.devel.redhat.com/taskinfo?taskID=8082426
Tested: locally using xfstests

Thanks,
-Eric

    commit f58522c5a47a1862c6b3fad97ea9285c5d68199d
    Author: Eric Sandeen <sandeen@redhat.com>
    Date:   Mon May 5 17:27:06 2014 +1000

    xfs: bulletfproof xfs_qm_scall_trunc_qfiles()

    Coverity noticed that if we sent junk into
    xfs_qm_scall_trunc_qfiles(), we could get back an
    uninitialized error value.  So sanitize the flags we
    will accept, and initialize error anyway for good measure.

    (This bug may have been introduced via c61a9e39).

    Should resolve Coverity CID 1163872.

    Signed-off-by: Eric Sandeen <sandeen@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Jie Liu <jeff.liu@oracle.com>
    Signed-off-by: Dave Chinner <david@fromorbit.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/xfs/xfs_qm_syscalls.c b/fs/xfs/xfs_qm_syscalls.c
index 3daf5ea..f35f13b 100644
--- a/fs/xfs/xfs_qm_syscalls.c
+++ b/fs/xfs/xfs_qm_syscalls.c
@@ -278,9 +278,10 @@ xfs_qm_scall_trunc_qfiles(
  xfs_mount_t *mp,
  uint  flags)
 {
- int  error;
+ int  error = EINVAL;
 
- if (!xfs_sb_version_hasquota(&mp->m_sb) || flags == 0) {
+ if (!xfs_sb_version_hasquota(&mp->m_sb) || flags == 0 ||
+     (flags & ~XFS_DQ_ALLTYPES)) {
   xfs_debug(mp, "%s: flags=%x m_qflags=%x",
    __func__, flags, mp->m_qflags);
   return XFS_ERROR(EINVAL);
-- 
1.7.1