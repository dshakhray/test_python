From 75b0b4cc249932497cce1a7ccfb1cc105e59f829 Mon Sep 17 00:00:00 2001
From: Eric Sandeen <sandeen@redhat.com>
Date: Mon, 4 Aug 2014 18:59:15 -0400
Subject: [fs] btrfs: remove transaction from btrfs send

Message-id: <1407179109-13714-69-git-send-email-sandeen@redhat.com>
Patchwork-id: 87184
O-Subject: [RHEL7.1 PATCH 068/422] Btrfs: remove transaction from btrfs send
Bugzilla: 1071179
RH-Acked-by: Zach Brown <zab@redhat.com>

From: Wang Shilong <wangsl.fnst@cn.fujitsu.com>

commit 41ce9970a8a6a362ae8df145f7a03d789e9ef9d2
Author: Wang Shilong <wangsl.fnst@cn.fujitsu.com>
Date:   Tue Dec 17 19:57:21 2013 +0800

    Btrfs: remove transaction from btrfs send

    Since daivd did the work that force us to use readonly snapshot,
    we can safely remove transaction protection from btrfs send.

    Signed-off-by: Wang Shilong <wangsl.fnst@cn.fujitsu.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Chris Mason <clm@fb.com>
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/fs/btrfs/send.c b/fs/btrfs/send.c
index 572e8c7..78a43b2 100644
--- a/fs/btrfs/send.c
+++ b/fs/btrfs/send.c
@@ -4618,7 +4618,6 @@ out:
 static int full_send_tree(struct send_ctx *sctx)
 {
  int ret;
- struct btrfs_trans_handle *trans = NULL;
  struct btrfs_root *send_root = sctx->send_root;
  struct btrfs_key key;
  struct btrfs_key found_key;
@@ -4640,19 +4639,6 @@ static int full_send_tree(struct send_ctx *sctx)
  key.type = BTRFS_INODE_ITEM_KEY;
  key.offset = 0;
 
-join_trans:
- /*
-  * We need to make sure the transaction does not get committed
-  * while we do anything on commit roots. Join a transaction to prevent
-  * this.
-  */
- trans = btrfs_join_transaction(send_root);
- if (IS_ERR(trans)) {
-  ret = PTR_ERR(trans);
-  trans = NULL;
-  goto out;
- }
-
  /*
   * Make sure the tree has not changed after re-joining. We detect this
   * by comparing start_ctransid and ctransid. They should always match.
@@ -4676,19 +4662,6 @@ join_trans:
   goto out_finish;
 
  while (1) {
-  /*
-   * When someone want to commit while we iterate, end the
-   * joined transaction and rejoin.
-   */
-  if (btrfs_should_end_transaction(trans, send_root)) {
-   ret = btrfs_end_transaction(trans, send_root);
-   trans = NULL;
-   if (ret < 0)
-    goto out;
-   btrfs_release_path(path);
-   goto join_trans;
-  }
-
   eb = path->nodes[0];
   slot = path->slots[0];
   btrfs_item_key_to_cpu(eb, &found_key, slot);
@@ -4716,12 +4689,6 @@ out_finish:
 
 out:
  btrfs_free_path(path);
- if (trans) {
-  if (!ret)
-   ret = btrfs_end_transaction(trans, send_root);
-  else
-   btrfs_end_transaction(trans, send_root);
- }
  return ret;
 }
 
-- 
1.7.1