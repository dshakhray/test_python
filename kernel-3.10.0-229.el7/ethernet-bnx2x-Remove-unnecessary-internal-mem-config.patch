From 7a68d847c1608ba39cc12cf1bf4d67978685e65d Mon Sep 17 00:00:00 2001
From: Michal Schmidt <mschmidt@redhat.com>
Date: Fri, 5 Sep 2014 19:49:13 -0400
Subject: [ethernet] bnx2x: Remove unnecessary internal mem config

Message-id: <1409946615-5862-9-git-send-email-mschmidt@redhat.com>
Patchwork-id: 91558
O-Subject: [RHEL7.1 PATCH 08/70] bnx2x: Remove unnecessary internal mem config
Bugzilla: 1089402
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Nikolay Aleksandrov <nikolay@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>

BZ: https://bugzilla.redhat.com/show_bug.cgi?id=1089402

Upstream commit:
commit f96d8d8577f8b99125d576ddf0321fee996ed54b
Author: Ariel Elior <ariele@broadcom.com>
Date:   Wed Feb 12 18:19:51 2014 +0200

    bnx2x: Remove unnecessary internal mem config

    Latest FW performs this autonomously, makes this code surplus.

    Signed-off-by: Ariel Elior <ariele@broadcom.com>
    Signed-off-by: Yuval Mintz <yuvalmin@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_fw_defs.h b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_fw_defs.h
index 84aecdf..95dc365 100644
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_fw_defs.h
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_fw_defs.h
@@ -87,7 +87,6 @@
  (IRO[156].base + ((vfId) * IRO[156].m1))
 #define CSTORM_VF_TO_PF_OFFSET(funcId) \
  (IRO[150].base + ((funcId) * IRO[150].m1))
-#define TSTORM_ACCEPT_CLASSIFY_FAILED_OFFSET (IRO[204].base)
 #define TSTORM_APPROXIMATE_MATCH_MULTICAST_FILTERING_OFFSET(pfId) \
  (IRO[203].base + ((pfId) * IRO[203].m1))
 #define TSTORM_ASSERT_LIST_INDEX_OFFSET (IRO[102].base)
diff --git a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c
index 8ffaf1f..40feb37 100644
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c
@@ -6005,18 +6005,6 @@ static void bnx2x_init_internal_common(struct bnx2x *bp)
 {
  int i;
 
- if (IS_MF_SI(bp))
-  /*
-   * In switch independent mode, the TSTORM needs to accept
-   * packets that failed classification, since approximate match
-   * mac addresses aren't written to NIG LLH
-   */
-  REG_WR8(bp, BAR_TSTRORM_INTMEM +
-       TSTORM_ACCEPT_CLASSIFY_FAILED_OFFSET, 2);
- else if (!CHIP_IS_E1(bp)) /* 57710 doesn't support MF */
-  REG_WR8(bp, BAR_TSTRORM_INTMEM +
-       TSTORM_ACCEPT_CLASSIFY_FAILED_OFFSET, 0);
-
  /* Zero this manually as its initialization is
     currently missing in the initTool */
  for (i = 0; i < (USTORM_AGG_DATA_SIZE >> 2); i++)
-- 
1.7.1