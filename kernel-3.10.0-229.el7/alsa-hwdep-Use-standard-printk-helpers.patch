From 2ffb08294aa7953197e2bb171d76c0e573996595 Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <jkysela@redhat.com>
Date: Wed, 3 Sep 2014 07:19:17 -0400
Subject: [alsa] hwdep: Use standard printk helpers

Message-id: <140972823573-113-patchset-jkysela@redhat.com>
Patchwork-id: 90813
O-Subject: [RHEL 7.1 PATCH 112/442] ALSA: hwdep: Use standard printk helpers
Bugzilla: 1112200
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>

Use dev_err() & co as much as possible.  If not available (no device
assigned at the calling point), use pr_xxx() helpers instead.

Signed-off-by: Takashi Iwai <tiwai@suse.de>

(picked from kernel: 2ebef69fc5a69ff8ef04922020d8ceeb4f6c8fbb)
rhbz#1112200
Signed-off-by: Jaroslav Kysela <jkysela@redhat.com>
---

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/sound/core/hwdep.c b/sound/core/hwdep.c
index 0f73f69..8c77865 100644
--- a/sound/core/hwdep.c
+++ b/sound/core/hwdep.c
@@ -375,7 +375,7 @@ int snd_hwdep_new(struct snd_card *card, char *id, int device,
   *rhwdep = NULL;
  hwdep = kzalloc(sizeof(*hwdep), GFP_KERNEL);
  if (hwdep == NULL) {
-  snd_printk(KERN_ERR "hwdep: cannot allocate\n");
+  dev_err(card->dev, "hwdep: cannot allocate\n");
   return -ENOMEM;
  }
  hwdep->card = card;
@@ -415,11 +415,12 @@ static int snd_hwdep_dev_free(struct snd_device *device)
 static int snd_hwdep_dev_register(struct snd_device *device)
 {
  struct snd_hwdep *hwdep = device->device_data;
+ struct snd_card *card = hwdep->card;
  int err;
  char name[32];
 
  mutex_lock(&register_mutex);
- if (snd_hwdep_search(hwdep->card, hwdep->device)) {
+ if (snd_hwdep_search(card, hwdep->device)) {
   mutex_unlock(&register_mutex);
   return -EBUSY;
  }
@@ -428,8 +429,9 @@ static int snd_hwdep_dev_register(struct snd_device *device)
  if ((err = snd_register_device(SNDRV_DEVICE_TYPE_HWDEP,
            hwdep->card, hwdep->device,
            &snd_hwdep_f_ops, hwdep, name)) < 0) {
-  snd_printk(KERN_ERR "unable to register hardware dependent device %i:%i\n",
-      hwdep->card->number, hwdep->device);
+  dev_err(card->dev,
+   "unable to register hardware dependent device %i:%i\n",
+   card->number, hwdep->device);
   list_del(&hwdep->list);
   mutex_unlock(&register_mutex);
   return err;
@@ -438,13 +440,15 @@ static int snd_hwdep_dev_register(struct snd_device *device)
  hwdep->ossreg = 0;
  if (hwdep->oss_type >= 0) {
   if ((hwdep->oss_type == SNDRV_OSS_DEVICE_TYPE_DMFM) && (hwdep->device != 0)) {
-   snd_printk (KERN_WARNING "only hwdep device 0 can be registered as OSS direct FM device!\n");
+   dev_warn(card->dev,
+     "only hwdep device 0 can be registered as OSS direct FM device!\n");
   } else {
    if (snd_register_oss_device(hwdep->oss_type,
-          hwdep->card, hwdep->device,
+          card, hwdep->device,
           &snd_hwdep_f_ops, hwdep) < 0) {
-    snd_printk(KERN_ERR "unable to register OSS compatibility device %i:%i\n",
-        hwdep->card->number, hwdep->device);
+    dev_err(card->dev,
+     "unable to register OSS compatibility device %i:%i\n",
+     card->number, hwdep->device);
    } else
     hwdep->ossreg = 1;
   }
-- 
1.7.1