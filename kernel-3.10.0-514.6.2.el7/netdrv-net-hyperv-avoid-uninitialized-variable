From feda0a73c999cbcb43dce11bf33351500f3bc35a Mon Sep 17 00:00:00 2001
From: Vitaly Kuznetsov <vkuznets@redhat.com>
Date: Wed, 9 Nov 2016 15:29:30 -0500
Subject: [netdrv] net/hyperv: avoid uninitialized variable

Message-id: <1478705370-7589-6-git-send-email-vkuznets@redhat.com>
Patchwork-id: 160307
O-Subject: [RHEL7.4 KERNEL PATCH 5/5] net/hyperv: avoid uninitialized variable
Bugzilla: 1392220
Z-Bugzilla: 1395578
RH-Acked-by: Jonathan Toppins <jtoppins@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Neil Horman <nhorman@redhat.com>

Upstream commit 52ccd6318481a467d8ad54ea40f60c61e957d58f
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Oct 18 00:16:09 2016 +0200

    net/hyperv: avoid uninitialized variable

    The hdr_offset variable is only if we deal with a TCP or UDP packet,
    but as the check surrounding its usage tests for skb_is_gso()
    instead, the compiler has no idea if the variable is initialized
    or not at that point:

    drivers/net/hyperv/netvsc_drv.c: In function 'netvsc_start_xmit':
    drivers/net/hyperv/netvsc_drv.c:494:42: error: 'hdr_offset' may be used uninitialized in this function [-Werror=maybe-uninitialized]

    This adds an additional check for the transport type, which
    tells the compiler that this path cannot happen. Since the
    get_net_transport_info() function should always be inlined
    here, I don't expect this to result in additional runtime
    checks.

    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>

RHEL-only: GCC4.8 in RHEL is not smart enough to figure out that hdr_offset
 may only be uninitialized when net_trans_info == TRANSPORT_INFO_NOT_IP and
 keeps complaining, silence it by doing hdr_offset = 0;

Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
Signed-off-by: Frantisek Hrbata <fhrbata@hrbata.com>

diff --git a/drivers/net/hyperv/netvsc_drv.c b/drivers/net/hyperv/netvsc_drv.c
index e1fe7b7..8323e25 100644
--- a/drivers/net/hyperv/netvsc_drv.c
+++ b/drivers/net/hyperv/netvsc_drv.c
@@ -364,7 +364,7 @@ static int netvsc_start_xmit(struct sk_buff *skb, struct net_device *net)
  u32 rndis_msg_size;
  struct rndis_per_packet_info *ppi;
  struct ndis_tcp_ip_checksum_info *csum_info;
- int  hdr_offset;
+ int  hdr_offset = 0; /* silence GCC4.8 complains in RHEL7 */
  u32 net_trans_info;
  u32 hash;
  u32 skb_length;
@@ -453,7 +453,7 @@ static int netvsc_start_xmit(struct sk_buff *skb, struct net_device *net)
   * Setup the sendside checksum offload only if this is not a
   * GSO packet.
   */
- if (skb_is_gso(skb)) {
+ if ((net_trans_info & (INFO_TCP | INFO_UDP)) && skb_is_gso(skb)) {
   struct ndis_tcp_lso_info *lso_info;
 
   rndis_msg_size += NDIS_LSO_PPI_SIZE;
-- 
1.7.1