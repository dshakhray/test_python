From af4976caa4ae6106c3a65290c068b65cb0c96215 Mon Sep 17 00:00:00 2001
From: Tomas Henzl <thenzl@redhat.com>
Date: Tue, 8 Nov 2016 16:51:52 -0500
Subject: [scsi] megaraid-sas: request irqs later

Message-id: <1478623912-19558-1-git-send-email-thenzl@redhat.com>
Patchwork-id: 160294
O-Subject: [RHEL7.2 e-stor PATCH 1/1] megaraid-sas: request irqs later
Bugzilla: 1392978
Z-Bugzilla: 1394711
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Jarod Wilson <jarod@redhat.com>

It is not good when an irq arrives before
driver structures are allocated.

http://www.spinics.net/lists/linux-scsi/msg101438.html

Signed-off-by: Tomas Henzl <thenzl@redhat.com>
Signed-off-by: Frantisek Hrbata <fhrbata@hrbata.com>

diff --git a/drivers/scsi/megaraid/megaraid_sas_base.c b/drivers/scsi/megaraid/megaraid_sas_base.c
index 5cd015e..d0260ab 100644
--- a/drivers/scsi/megaraid/megaraid_sas_base.c
+++ b/drivers/scsi/megaraid/megaraid_sas_base.c
@@ -5188,11 +5188,6 @@ static int megasas_init_fw(struct megasas_instance *instance)
  tasklet_init(&instance->isr_tasklet, instance->instancet->tasklet,
   (unsigned long)instance);
 
- if (instance->msix_vectors ?
-  megasas_setup_irqs_msix(instance, 1) :
-  megasas_setup_irqs_ioapic(instance))
-  goto fail_setup_irqs;
-
  instance->ctrl_info = kzalloc(sizeof(struct megasas_ctrl_info),
     GFP_KERNEL);
  if (instance->ctrl_info == NULL)
@@ -5208,6 +5203,11 @@ static int megasas_init_fw(struct megasas_instance *instance)
  if (instance->instancet->init_adapter(instance))
   goto fail_init_adapter;
 
+ if (instance->msix_vectors ?
+  megasas_setup_irqs_msix(instance, 1) :
+  megasas_setup_irqs_ioapic(instance))
+  goto fail_init_adapter;
+
  instance->instancet->enable_intr(instance);
 
  dev_info(&instance->pdev->dev, "INIT adapter done\n");
@@ -5346,9 +5346,8 @@ static int megasas_init_fw(struct megasas_instance *instance)
 
 fail_get_pd_list:
  instance->instancet->disable_intr(instance);
-fail_init_adapter:
  megasas_destroy_irqs(instance);
-fail_setup_irqs:
+fail_init_adapter:
  if (instance->msix_vectors)
   pci_disable_msix(instance->pdev);
  instance->msix_vectors = 0;
-- 
1.7.1