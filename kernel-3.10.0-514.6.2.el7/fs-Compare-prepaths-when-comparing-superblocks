From e1fd0a1c129caa9cca4fabd5b2a68af12e64106d Mon Sep 17 00:00:00 2001
From: Sachin Prabhu <sprabhu@redhat.com>
Date: Mon, 24 Oct 2016 16:05:22 -0400
Subject: [fs] Compare prepaths when comparing superblocks

Message-id: <1477325124-19979-4-git-send-email-sprabhu@redhat.com>
Patchwork-id: 159556
O-Subject: [RHEL7 PATCH fs 3/5] [bz1302329]Compare prepaths when comparing superblocks
Bugzilla: 1302329
Z-Bugzilla: 1400055
RH-Acked-by: Benjamin Coddington <bcodding@redhat.com>
RH-Acked-by: J. Bruce Fields <bfields@redhat.com>

Fixes: bz 1302329

The patch
fs/cifs: make share unaccessible at root level mountable
makes use of prepaths when any component of the underlying path is
inaccessible.

When mounting 2 separate shares having different prepaths but are other
wise similar in other respects, we end up sharing superblocks when we
shouldn't be doing so.

Signed-off-by: Sachin Prabhu <sprabhu@redhat.com>
Tested-by: Aurelien Aptel <aaptel@suse.com>
Signed-off-by: Steve French <smfrench@gmail.com>
(cherry picked from commit c1d8b24d18192764fe82067ec6aa8d4c3bf094e0)

Signed-off-by: Sachin Prabhu <sprabhu@redhat.com>
Signed-off-by: Frantisek Hrbata <fhrbata@hrbata.com>

diff --git a/fs/cifs/connect.c b/fs/cifs/connect.c
index 9e0a29f..6927252 100644
--- a/fs/cifs/connect.c
+++ b/fs/cifs/connect.c
@@ -2835,6 +2835,24 @@ compare_mount_options(struct super_block *sb, struct cifs_mnt_data *mnt_data)
  return 1;
 }
 
+static int
+match_prepath(struct super_block *sb, struct cifs_mnt_data *mnt_data)
+{
+ struct cifs_sb_info *old = CIFS_SB(sb);
+ struct cifs_sb_info *new = mnt_data->cifs_sb;
+
+ if (old->mnt_cifs_flags & CIFS_MOUNT_USE_PREFIX_PATH) {
+  if (!(new->mnt_cifs_flags & CIFS_MOUNT_USE_PREFIX_PATH))
+   return 0;
+  /* The prepath should be null terminated strings */
+  if (strcmp(new->prepath, old->prepath))
+   return 0;
+
+  return 1;
+ }
+ return 0;
+}
+
 int
 cifs_match_super(struct super_block *sb, void *data)
 {
@@ -2862,7 +2880,8 @@ cifs_match_super(struct super_block *sb, void *data)
 
  if (!match_server(tcp_srv, volume_info) ||
      !match_session(ses, volume_info) ||
-     !match_tcon(tcon, volume_info->UNC)) {
+     !match_tcon(tcon, volume_info->UNC) ||
+     !match_prepath(sb, mnt_data)) {
   rc = 0;
   goto out;
  }
-- 
1.7.1