From 362fcee84112ef89bdea679670a892a3cf130a0c Mon Sep 17 00:00:00 2001
From: Frank Ramsay <framsay@redhat.com>
Date: Thu, 11 Aug 2016 19:38:46 -0400
Subject: [x86] smp: Fix __max_logical_packages value setup

Message-id: <1470944326-1868-1-git-send-email-framsay@redhat.com>
Patchwork-id: 156784
O-Subject: [RHEL 7.3 PATCH] x86/smp: Fix __max_logical_packages value setup
Bugzilla: 1358312
RH-Acked-by: Jarod Wilson <jarod@redhat.com>
RH-Acked-by: Jeremy McNicoll <jmcnicol@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1358312
Upstream Status: RH only.
Build Info: https://brewweb.engineering.redhat.com/brew/taskinfo?taskID=11544829
Tested: tested on SGI systems, PASS

commit: rhel only
Author: Frank Ramsay <framsay@sgi.com>
Date: Wed Aug 10 10:19:36 2016 -0400

If cores are disabled in BIOS then RHEL 7.3 can experience a
kernel panic.

The reason for the panic is wrong value of __max_logical_packages,
which lets logical_package_map uninitialized and the uncore code
relying on this map being properly initialized (maybe we should
add some safety checks there as well).

The __max_logical_packages is computed as:

  DIV_ROUND_UP(total_cpus, ncpus);
  - ncpus being number of cores

With above BIOS setup we get total_cpus == 16 which set
__max_logical_packages to 2 (ncpus is 12).

Once topology_update_package_map processes CPU with logical
pkg over 2 we display above messages and fail to initialize
the physical_to_logical_pkg map, which makes the uncore code
crash.

The fix is to set __max_logical_packages directly to total_cpus,
which should be the maximum possible logical ID of the pkg in
any case.

This is RH only because a final fix is still being developed
upstream; however UV systems require a fix for this at the
GA of RHEL 7.3.  And we do not believe a fix will be
available upstream in time.
So it was descided that this patch would be submitted now to
be sure there is a fix for UV systems, and when upstream has
a final patch it would be brought in.
This patch resolves the issue on UV systems and ensures
that non-UV systems are not exposed to the changed
__max_logical_packages calculation.

Signed-off-by: Rafael Aquini <aquini@redhat.com>

diff --git a/arch/x86/kernel/smpboot.c b/arch/x86/kernel/smpboot.c
index 1b44ddf..2fbf2db 100644
--- a/arch/x86/kernel/smpboot.c
+++ b/arch/x86/kernel/smpboot.c
@@ -316,7 +316,10 @@ static void __init smp_init_package_map(void)
   * primary cores.
   */
  ncpus = boot_cpu_data.x86_max_cores;
- __max_logical_packages = DIV_ROUND_UP(total_cpus, ncpus);
+ if (is_uv_system())
+  __max_logical_packages = total_cpus;
+ else
+  __max_logical_packages = DIV_ROUND_UP(total_cpus, ncpus);
 
  /*
   * Possibly larger than what we need as the number of apic ids per
-- 
1.7.1