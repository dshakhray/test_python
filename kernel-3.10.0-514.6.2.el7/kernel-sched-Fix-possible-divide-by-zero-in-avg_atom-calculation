From d88573caf3e71194387cb6ea1a9491e99c9087ce Mon Sep 17 00:00:00 2001
From: Mateusz Guzik <mguzik@redhat.com>
Date: Tue, 8 Nov 2016 04:55:44 -0500
Subject: [kernel] sched: Fix possible divide by zero in avg_atom() calculation

Message-id: <1478580944-7196-1-git-send-email-mguzik@redhat.com>
Patchwork-id: 160289
O-Subject: [RHEL7 PATCH] sched: Fix possible divide by zero in avg_atom() calculation
Bugzilla: 1392466
Z-Bugzilla: 1398361
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Rafael Aquini <aquini@redhat.com>
RH-Acked-by: Jarod Wilson <jarod@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1392466
Brew: https://brewweb.engineering.redhat.com/brew/taskinfo?taskID=12048532
Tested: by me

Upstream:
commit b0ab99e7736af88b8ac1b7ae50ea287fffa2badc
Author: Mateusz Guzik <mguzik@redhat.com>
Date:   Sat Jun 14 15:00:09 2014 +0200

    sched: Fix possible divide by zero in avg_atom() calculation

    proc_sched_show_task() does:

      if (nr_switches)
        do_div(avg_atom, nr_switches);

    nr_switches is unsigned long and do_div truncates it to 32 bits, which
    means it can test non-zero on e.g. x86-64 and be truncated to zero for
    division.

    Fix the problem by using div64_ul() instead.

    As a side effect calculations of avg_atom for big nr_switches are now correct.

    Signed-off-by: Mateusz Guzik <mguzik@redhat.com>
    Signed-off-by: Peter Zijlstra <peterz@infradead.org>
    Cc: stable@vger.kernel.org
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Link: http://lkml.kernel.org/r/1402750809-31991-1-git-send-email-mguzik@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

Signed-off-by: Mateusz Guzik <mguzik@redhat.com>
Signed-off-by: Frantisek Hrbata <fhrbata@hrbata.com>

diff --git a/kernel/sched/debug.c b/kernel/sched/debug.c
index fdebdb9..5d8e142 100644
--- a/kernel/sched/debug.c
+++ b/kernel/sched/debug.c
@@ -609,7 +609,7 @@ void proc_sched_show_task(struct task_struct *p, struct seq_file *m)
 
   avg_atom = p->se.sum_exec_runtime;
   if (nr_switches)
-   do_div(avg_atom, nr_switches);
+   avg_atom = div64_ul(avg_atom, nr_switches);
   else
    avg_atom = -1LL;
 
-- 
1.7.1